
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '0BA5750FF978E027A117700908447203'
    
_lr_action_items = {'RETURN':([0,6,9,17,18,22,25,33,44,90,91,95,118,120,170,173,177,189,194,196,198,227,228,238,240,246,279,302,322,323,324,336,338,339,346,],[1,-6,-8,1,-3,-5,-9,1,-7,-4,-74,1,-157,1,-10,-45,-49,1,1,-158,1,-75,-181,1,1,1,1,1,1,1,1,1,1,1,1,]),'MINUS':([1,2,7,11,12,14,28,29,31,32,36,40,43,48,49,50,51,53,54,55,56,58,60,61,66,67,68,69,70,71,72,73,74,75,76,77,79,80,81,83,99,100,101,103,105,106,107,109,111,112,113,116,122,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,144,145,146,148,180,181,187,205,208,209,211,212,213,214,216,218,221,222,230,233,234,235,236,237,243,244,245,248,251,252,254,255,269,297,307,309,],[47,47,-199,-136,-139,-200,100,47,-134,-140,-135,-137,-138,-65,-55,-124,-118,-67,-64,-139,-106,-57,-63,-58,-123,47,-68,-113,-66,-140,-61,47,-122,-62,-59,100,-60,-69,-56,47,47,-111,47,-84,-115,-110,-112,-116,-117,47,-143,47,47,47,47,-97,-104,-96,47,-98,-102,-100,-99,-95,-105,-103,-101,-133,-119,47,-109,-108,-212,47,-201,-85,-114,100,47,-73,-107,-213,47,47,47,47,47,47,-202,47,-144,-145,47,47,-142,-141,47,-70,-71,47,47,-140,47,47,47,]),'FALSE':([1,2,29,47,63,65,67,73,83,99,100,101,103,105,106,107,109,111,112,116,122,126,127,128,129,130,131,132,133,134,135,136,137,138,139,144,145,146,180,187,209,214,216,218,221,222,230,234,237,243,248,254,255,297,307,309,],[48,48,48,-120,48,-121,48,48,48,48,-111,48,-84,-115,-110,-112,-116,-117,48,48,48,48,48,-97,-104,-96,48,-98,-102,-100,-99,-95,-105,-103,-101,48,-109,-108,48,-85,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'SUCC':([0,1,2,6,9,17,18,22,25,29,33,44,47,62,63,65,67,73,83,90,91,95,99,100,101,103,105,106,107,109,111,112,116,118,120,122,126,127,128,129,130,131,132,133,134,135,136,137,138,139,144,145,146,170,173,177,180,187,189,194,196,198,209,214,216,218,221,222,227,228,230,234,237,238,240,243,246,248,254,255,279,297,302,307,309,322,323,324,336,338,339,346,],[35,35,35,-6,-8,35,-3,-5,-9,35,35,-7,-120,35,35,-121,35,35,35,-4,-74,35,35,-111,35,-84,-115,-110,-112,-116,-117,35,35,-157,35,35,35,35,-97,-104,-96,35,-98,-102,-100,-99,-95,-105,-103,-101,35,-109,-108,-10,-45,-49,35,-85,35,35,-158,35,35,35,35,35,35,35,-75,-181,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'$end':([0,6,9,17,18,22,25,38,39,44,90,91,170,173,177,227,228,],[-223,-6,-8,-1,-3,-5,-9,-2,0,-7,-4,-74,-10,-45,-49,-75,-181,]),'DCL':([0,6,9,17,18,22,25,44,90,91,170,173,177,227,228,302,322,323,324,336,338,339,346,],[4,-6,-8,4,-3,-5,-9,-7,-4,-74,-10,-45,-49,-75,-181,4,4,4,4,4,4,4,4,]),'REF':([84,85,97,152,171,217,271,298,320,],[152,-15,152,152,152,-16,152,152,152,]),'CHAR':([84,85,97,152,171,217,222,249,271,288,297,298,320,],[153,-15,153,153,153,-16,153,153,153,153,153,153,153,]),'OR':([7,11,14,31,36,40,43,48,49,50,51,53,54,55,56,58,59,60,61,66,68,69,70,71,72,74,75,76,77,79,80,81,113,140,141,148,181,205,208,211,212,213,233,235,236,244,245,251,252,269,],[-199,-136,-200,-134,-135,-137,-138,-65,-55,-124,-118,-67,-64,-139,-106,-57,135,-63,-58,-123,-68,-113,-66,-140,-61,-122,-62,-59,-93,-60,-69,-56,-143,-133,-119,-212,-201,-114,-94,-73,-107,-213,-202,-144,-145,-142,-141,-70,-71,-140,]),'EQUALS':([7,11,12,14,28,31,32,36,40,43,71,85,92,97,100,102,104,105,106,107,108,109,110,111,113,148,151,153,154,155,156,158,159,160,161,162,163,164,168,179,181,202,204,213,215,217,233,235,236,244,245,294,295,296,316,317,],[-199,-136,-139,-200,103,-134,-140,-135,-137,-138,-140,-15,171,180,-111,-88,-86,-115,-110,-112,-87,-116,187,-117,-143,-212,-24,-27,-20,-22,-23,-36,-19,-35,218,-21,-26,-25,-18,230,-201,-173,248,-213,-34,-16,-202,-144,-145,-142,-141,-29,-37,-28,-39,-44,]),'UPPER':([0,1,2,6,9,17,18,22,25,29,33,44,47,62,63,65,67,73,83,90,91,95,99,100,101,103,105,106,107,109,111,112,116,118,120,122,126,127,128,129,130,131,132,133,134,135,136,137,138,139,144,145,146,170,173,177,180,187,189,194,196,198,209,214,216,218,221,222,227,228,230,234,237,238,240,243,246,248,254,255,279,297,302,307,309,322,323,324,336,338,339,346,],[34,34,34,-6,-8,34,-3,-5,-9,34,34,-7,-120,34,34,-121,34,34,34,-4,-74,34,34,-111,34,-84,-115,-110,-112,-116,-117,34,34,-157,34,34,34,34,-97,-104,-96,34,-98,-102,-100,-99,-95,-105,-103,-101,34,-109,-108,-10,-45,-49,34,-85,34,34,-158,34,34,34,34,34,34,34,-75,-181,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'LBRACKET':([7,11,12,14,28,31,32,36,40,43,48,49,53,54,55,57,58,60,61,66,68,70,71,72,74,75,76,79,80,81,113,140,148,165,167,181,211,213,233,235,236,244,245,251,252,269,],[-199,-136,-139,-200,101,116,-140,-135,-137,-138,-65,-55,-67,-64,-139,127,-57,-63,-58,101,-68,-66,-140,-61,-72,-62,-59,-60,-69,-56,-143,101,-212,220,222,-201,-73,-213,-202,-144,-145,-142,-141,-70,-71,-140,]),'END':([6,9,18,22,25,44,90,91,170,173,177,227,228,302,322,324,338,339,346,],[-6,-8,-3,-5,-9,-7,-4,-74,-10,-45,-49,-75,-181,321,335,337,344,345,348,]),'NULL':([1,2,29,47,63,65,67,73,83,99,100,101,103,105,106,107,109,111,112,116,122,126,127,128,129,130,131,132,133,134,135,136,137,138,139,144,145,146,180,187,209,214,216,218,221,222,230,234,237,243,248,254,255,297,307,309,],[80,80,80,-120,80,-121,80,80,80,80,-111,80,-84,-115,-110,-112,-116,-117,80,80,80,80,80,-97,-104,-96,80,-98,-102,-100,-99,-95,-105,-103,-101,80,-109,-108,80,-85,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'NOTEQUAL':([7,11,14,31,36,40,43,48,49,50,51,53,54,55,56,58,59,60,61,66,68,69,70,71,72,74,75,76,77,79,80,81,113,140,141,148,181,205,208,211,212,213,233,235,236,244,245,251,252,269,],[-199,-136,-200,-134,-135,-137,-138,-65,-55,-124,-118,-67,-64,-139,-106,-57,139,-63,-58,-123,-68,-113,-66,-140,-61,-122,-62,-59,-93,-60,-69,-56,-143,-133,-119,-212,-201,-114,-94,-73,-107,-213,-202,-144,-145,-142,-141,-70,-71,-140,]),'GE':([7,11,14,31,36,40,43,48,49,50,51,53,54,55,56,58,59,60,61,66,68,69,70,71,72,74,75,76,77,79,80,81,113,140,141,148,181,205,208,211,212,213,233,235,236,244,245,251,252,269,],[-199,-136,-200,-134,-135,-137,-138,-65,-55,-124,-118,-67,-64,-139,-106,-57,138,-63,-58,-123,-68,-113,-66,-140,-61,-122,-62,-59,-93,-60,-69,-56,-143,-133,-119,-212,-201,-114,-94,-73,-107,-213,-202,-144,-145,-142,-141,-70,-71,-140,]),'PROC':([95,],[174,]),'BY':([7,11,14,31,36,40,43,48,49,50,51,52,53,54,55,56,58,59,60,61,66,68,69,70,71,72,74,75,76,77,79,80,81,113,140,141,148,181,205,208,211,212,213,233,235,236,244,245,251,252,283,284,285,291,314,],[-199,-136,-200,-134,-135,-137,-138,-65,-55,-124,-118,-92,-67,-64,-139,-106,-57,-91,-63,-58,-123,-68,-113,-66,-140,-61,-122,-62,-59,-93,-60,-69,-56,-143,-133,-119,-212,-201,-114,-94,-73,-107,-213,-202,-144,-145,-142,-141,-70,-71,-174,309,-177,-125,-126,]),'READ':([0,1,2,6,9,17,18,22,25,29,33,44,47,62,63,65,67,73,83,90,91,95,99,100,101,103,105,106,107,109,111,112,116,118,120,122,126,127,128,129,130,131,132,133,134,135,136,137,138,139,144,145,146,170,173,177,180,187,189,194,196,198,209,214,216,218,221,222,227,228,230,234,237,238,240,243,246,248,254,255,279,297,302,307,309,322,323,324,336,338,339,346,],[13,13,13,-6,-8,13,-3,-5,-9,13,13,-7,-120,13,13,-121,13,13,13,-4,-74,13,13,-111,13,-84,-115,-110,-112,-116,-117,13,13,-157,13,13,13,13,-97,-104,-96,13,-98,-102,-100,-99,-95,-105,-103,-101,13,-109,-108,-10,-45,-49,13,-85,13,13,-158,13,13,13,13,13,13,13,-75,-181,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'AND':([7,11,14,31,36,40,43,48,49,50,51,53,54,55,56,58,59,60,61,66,68,69,70,71,72,74,75,76,77,79,80,81,113,140,141,148,181,205,208,211,212,213,233,235,236,244,245,251,252,269,],[-199,-136,-200,-134,-135,-137,-138,-65,-55,-124,-118,-67,-64,-139,-106,-57,132,-63,-58,-123,-68,-113,-66,-140,-61,-122,-62,-59,-93,-60,-69,-56,-143,-133,-119,-212,-201,-114,-94,-73,-107,-213,-202,-144,-145,-142,-141,-70,-71,-140,]),'EXIT':([0,6,9,17,18,22,25,33,44,90,91,95,118,120,170,173,177,189,194,196,198,227,228,238,240,246,279,302,322,323,324,336,338,339,346,],[15,-6,-8,15,-3,-5,-9,15,-7,-4,-74,15,-157,15,-10,-45,-49,15,15,-158,15,-75,-181,15,15,15,15,15,15,15,15,15,15,15,15,]),'GT':([7,11,14,31,36,40,43,48,49,50,51,53,54,55,56,58,59,60,61,66,68,69,70,71,72,74,75,76,77,79,80,81,113,140,141,148,181,205,208,211,212,213,233,235,236,244,245,251,252,269,],[-199,-136,-200,-134,-135,-137,-138,-65,-55,-124,-118,-67,-64,-139,-106,-57,133,-63,-58,-123,-68,-113,-66,-140,-61,-122,-62,-59,-93,-60,-69,-56,-143,-133,-119,-212,-201,-114,-94,-73,-107,-213,-202,-144,-145,-142,-141,-70,-71,-140,]),'LPAREN':([1,2,3,5,13,16,26,29,32,34,35,37,42,45,47,63,65,67,71,73,83,99,100,101,103,105,106,107,109,111,112,116,122,126,127,128,129,130,131,132,133,134,135,136,137,138,139,144,145,146,153,155,156,163,164,166,174,180,187,209,214,216,218,221,222,230,234,237,243,248,254,255,269,287,297,301,307,309,],[73,73,83,-214,-220,-221,99,73,-206,-217,-216,-215,-219,-218,-120,73,-121,73,-206,73,73,73,-111,73,-84,-115,-110,-112,-116,-117,73,73,73,73,73,-97,-104,-96,73,-98,-102,-100,-99,-95,-105,-103,-101,73,-109,-108,-27,-30,216,-26,-25,221,226,73,-85,73,73,73,73,73,73,73,73,73,73,73,73,73,-30,-30,73,320,73,73,]),'PRINT':([0,1,2,6,9,17,18,22,25,29,33,44,47,62,63,65,67,73,83,90,91,95,99,100,101,103,105,106,107,109,111,112,116,118,120,122,126,127,128,129,130,131,132,133,134,135,136,137,138,139,144,145,146,170,173,177,180,187,189,194,196,198,209,214,216,218,221,222,227,228,230,234,237,238,240,243,246,248,254,255,279,297,302,307,309,322,323,324,336,338,339,346,],[16,16,16,-6,-8,16,-3,-5,-9,16,16,-7,-120,16,16,-121,16,16,16,-4,-74,16,16,-111,16,-84,-115,-110,-112,-116,-117,16,16,-157,16,16,16,16,-97,-104,-96,16,-98,-102,-100,-99,-95,-105,-103,-101,16,-109,-108,-10,-45,-49,16,-85,16,16,-158,16,16,16,16,16,16,16,-75,-181,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'BOOL':([84,85,97,152,171,217,222,249,271,288,297,298,320,],[163,-15,163,163,163,-16,163,163,163,163,163,163,163,]),'INT':([84,85,97,152,171,217,222,249,271,288,297,298,320,],[164,-15,164,164,164,-16,164,164,164,164,164,164,164,]),'CHARCONST':([1,2,29,47,63,65,67,73,83,99,100,101,103,105,106,107,109,111,112,116,122,126,127,128,129,130,131,132,133,134,135,136,137,138,139,144,145,146,180,187,209,214,216,218,221,222,230,234,237,243,248,254,255,297,307,309,],[53,53,53,-120,53,-121,53,53,53,53,-111,53,-84,-115,-110,-112,-116,-117,53,53,53,53,53,-97,-104,-96,53,-98,-102,-100,-99,-95,-105,-103,-101,53,-109,-108,53,-85,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'LOC':([151,153,154,155,156,158,159,160,162,163,164,168,215,294,295,296,299,316,317,334,],[-24,-27,-20,-22,-23,-36,-19,-35,-21,-26,-25,-18,-34,-29,-37,-28,319,-39,-44,341,]),'TYPE':([0,6,9,17,18,22,25,44,90,91,170,173,177,227,228,302,322,323,324,336,338,339,346,],[21,-6,-8,21,-3,-5,-9,-7,-4,-74,-10,-45,-49,-75,-181,21,21,21,21,21,21,21,21,]),'ISEQUAL':([7,11,14,31,36,40,43,48,49,50,51,53,54,55,56,58,59,60,61,66,68,69,70,71,72,74,75,76,77,79,80,81,113,140,141,148,181,205,208,211,212,213,233,235,236,244,245,251,252,269,],[-199,-136,-200,-134,-135,-137,-138,-65,-55,-124,-118,-67,-64,-139,-106,-57,134,-63,-58,-123,-68,-113,-66,-140,-61,-122,-62,-59,-93,-60,-69,-56,-143,-133,-119,-212,-201,-114,-94,-73,-107,-213,-202,-144,-145,-142,-141,-70,-71,-140,]),'NUM':([0,1,2,6,9,17,18,22,25,29,33,44,47,62,63,65,67,73,83,90,91,95,99,100,101,103,105,106,107,109,111,112,116,118,120,122,126,127,128,129,130,131,132,133,134,135,136,137,138,139,144,145,146,170,173,177,180,187,189,194,196,198,209,214,216,218,221,222,227,228,230,234,237,238,240,243,246,248,254,255,279,297,302,307,309,322,323,324,336,338,339,346,],[5,5,5,-6,-8,5,-3,-5,-9,5,5,-7,-120,5,5,-121,5,5,5,-4,-74,5,5,-111,5,-84,-115,-110,-112,-116,-117,5,5,-157,5,5,5,5,-97,-104,-96,5,-98,-102,-100,-99,-95,-105,-103,-101,5,-109,-108,-10,-45,-49,5,-85,5,5,-158,5,5,5,5,5,5,5,-75,-181,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'DOWN':([7,11,14,31,36,40,43,48,49,50,51,52,53,54,55,56,58,59,60,61,66,68,69,70,71,72,74,75,76,77,79,80,81,113,140,141,148,181,202,204,205,208,211,212,213,233,235,236,244,245,251,252,283,284,285,291,308,314,331,332,],[-199,-136,-200,-134,-135,-137,-138,-65,-55,-124,-118,-92,-67,-64,-139,-106,-57,-91,-63,-58,-123,-68,-113,-66,-140,-61,-122,-62,-59,-93,-60,-69,-56,-143,-133,-119,-212,-201,-173,250,-114,-94,-73,-107,-213,-202,-144,-145,-142,-141,-70,-71,-174,310,-177,-125,329,-126,-222,-175,]),'IN':([7,11,14,31,36,40,43,48,49,50,51,53,54,55,56,58,59,60,61,66,68,69,70,71,72,74,75,76,77,79,80,81,113,140,141,148,181,202,204,205,208,211,212,213,233,235,236,244,245,250,251,252,269,],[-199,-136,-200,-134,-135,-137,-138,-65,-55,-124,-118,-67,-64,-139,-106,-57,128,-63,-58,-123,-68,-113,-66,-140,-61,-122,-62,-59,-93,-60,-69,-56,-143,-133,-119,-212,-201,-173,249,-114,-94,-73,-107,-213,-202,-144,-145,-142,-141,288,-70,-71,-140,]),'SYN':([0,6,9,17,18,22,25,44,90,91,170,173,177,227,228,302,322,323,324,336,338,339,346,],[24,-6,-8,24,-3,-5,-9,-7,-4,-74,-10,-45,-49,-75,-181,24,24,24,24,24,24,24,24,]),'INTCONST':([1,2,29,47,63,65,67,73,83,99,100,101,103,105,106,107,109,111,112,116,122,126,127,128,129,130,131,132,133,134,135,136,137,138,139,144,145,146,180,187,209,214,216,218,220,221,222,230,234,237,243,248,254,255,297,307,309,],[54,54,54,-120,54,-121,54,54,54,54,-111,54,-84,-115,-110,-112,-116,-117,54,54,54,54,54,-97,-104,-96,54,-98,-102,-100,-99,-95,-105,-103,-101,54,-109,-108,54,-85,54,54,54,54,263,54,54,54,54,54,54,54,54,54,54,54,54,]),'RPAREN':([7,11,14,31,36,40,43,48,49,50,51,52,53,54,55,56,58,59,60,61,66,68,69,70,71,72,74,75,76,77,79,80,81,83,99,113,140,141,143,147,148,149,150,151,153,154,155,156,158,159,160,162,163,164,168,181,182,205,208,211,212,213,215,226,233,235,236,244,245,251,252,259,260,265,273,274,277,278,291,294,295,296,299,300,314,316,317,318,319,326,334,341,343,],[-199,-136,-200,-134,-135,-137,-138,-65,-55,-124,-118,-92,-67,-64,-139,-106,-57,-91,-63,-58,-123,-68,-113,-66,-140,-61,-122,-62,-59,-93,-60,-69,-56,148,181,-143,-133,-119,211,-205,-212,213,-203,-24,-27,-20,-22,-23,-36,-19,-35,-21,-26,-25,-18,-201,233,-114,-94,-73,-107,-213,-34,272,-202,-144,-145,-142,-141,-70,-71,-204,294,296,304,-190,-31,-33,-125,-29,-37,-28,-193,-192,-126,-39,-44,-194,-195,-191,342,-198,347,]),'DIV':([7,11,12,14,28,31,32,36,40,43,48,49,50,51,53,54,55,56,58,60,61,66,68,69,70,71,72,74,75,76,79,80,81,113,140,141,148,181,205,211,212,213,233,235,236,244,245,251,252,269,],[-199,-136,-139,-200,109,-134,-140,-135,-137,-138,-65,-55,-124,-118,-67,-64,-139,109,-57,-63,-58,-123,-68,-113,-66,-140,-61,-122,-62,-59,-60,-69,-56,-143,-133,-119,-212,-201,-114,-73,109,-213,-202,-144,-145,-142,-141,-70,-71,-140,]),'NOT':([1,2,29,67,73,83,99,100,101,103,105,106,107,109,111,112,116,122,126,127,128,129,130,131,132,133,134,135,136,137,138,139,144,145,146,180,187,209,214,216,218,221,222,230,234,237,243,248,254,255,297,307,309,],[65,65,65,65,65,65,65,-111,65,-84,-115,-110,-112,-116,-117,65,65,65,65,65,-97,-104,-96,65,-98,-102,-100,-99,-95,-105,-103,-101,65,-109,-108,65,-85,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'MOD':([7,11,12,14,28,31,32,36,40,43,48,49,50,51,53,54,55,56,58,60,61,66,68,69,70,71,72,74,75,76,79,80,81,113,140,141,148,181,205,211,212,213,233,235,236,244,245,251,252,269,],[-199,-136,-139,-200,111,-134,-140,-135,-137,-138,-65,-55,-124,-118,-67,-64,-139,111,-57,-63,-58,-123,-68,-113,-66,-140,-61,-122,-62,-59,-60,-69,-56,-143,-133,-119,-212,-201,-114,-73,111,-213,-202,-144,-145,-142,-141,-70,-71,-140,]),'IF':([0,1,2,6,9,17,18,22,25,29,33,44,67,73,83,90,91,95,99,101,103,112,116,118,120,122,127,170,173,177,180,187,189,194,196,198,209,214,216,218,221,222,227,228,230,234,237,238,240,243,246,248,254,255,279,297,302,307,309,322,323,324,336,338,339,346,],[29,67,67,-6,-8,29,-3,-5,-9,67,29,-7,67,67,67,-4,-74,29,67,67,-84,67,67,-157,29,67,67,-10,-45,-49,67,-85,29,29,-158,29,67,67,67,67,67,67,-75,-181,67,67,67,29,29,67,29,67,67,67,29,67,29,67,67,29,29,29,29,29,29,29,]),'WHILE':([7,11,14,31,33,36,40,43,48,49,50,51,52,53,54,55,56,58,59,60,61,66,68,69,70,71,72,74,75,76,77,79,80,81,113,119,140,141,148,151,153,156,163,164,181,200,201,203,205,208,211,212,213,233,235,236,244,245,251,252,285,286,291,294,296,311,312,314,328,330,333,340,],[-199,-136,-200,-134,122,-135,-137,-138,-65,-55,-124,-118,-92,-67,-64,-139,-106,-57,-91,-63,-58,-123,-68,-113,-66,-140,-61,-122,-62,-59,-93,-60,-69,-56,-143,122,-133,-119,-212,-24,-27,-23,-26,-25,-201,-166,-167,-168,-114,-94,-73,-107,-213,-202,-144,-145,-142,-141,-70,-71,-177,-178,-125,-29,-28,-169,-179,-126,-176,-170,-171,-172,]),'STRINGCONST':([1,2,29,47,63,65,67,73,83,99,100,101,103,105,106,107,109,111,112,116,122,126,127,128,129,130,131,132,133,134,135,136,137,138,139,144,145,146,180,187,209,214,216,218,221,222,230,234,237,243,248,254,255,297,307,309,],[68,68,68,-120,68,-121,68,68,68,68,-111,68,-84,-115,-110,-112,-116,-117,68,68,68,68,68,-97,-104,-96,68,-98,-102,-100,-99,-95,-105,-103,-101,68,-109,-108,68,-85,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'TIMES':([7,11,12,14,28,31,32,36,40,43,48,49,50,51,53,54,55,56,58,60,61,66,68,69,70,71,72,74,75,76,79,80,81,113,140,141,148,181,205,211,212,213,233,235,236,244,245,251,252,269,],[-199,-136,-139,-200,105,-134,-140,-135,-137,-138,-65,-55,-124,-118,-67,-64,-139,105,-57,-63,-58,-123,-68,-113,-66,-140,-61,-122,-62,-59,-60,-69,-56,-143,-133,-119,-212,-201,-114,-73,105,-213,-202,-144,-145,-142,-141,-70,-71,-140,]),'TO':([7,11,14,31,36,40,43,48,49,50,51,52,53,54,55,56,58,59,60,61,66,68,69,70,71,72,74,75,76,77,79,80,81,113,140,141,148,181,205,208,211,212,213,233,235,236,244,245,251,252,283,284,285,291,308,310,314,329,331,332,],[-199,-136,-200,-134,-135,-137,-138,-65,-55,-124,-118,-92,-67,-64,-139,-106,-57,-91,-63,-58,-123,-68,-113,-66,-140,-61,-122,-62,-59,-93,-60,-69,-56,-143,-133,-119,-212,-201,-114,-94,-73,-107,-213,-202,-144,-145,-142,-141,-70,-71,-174,307,-177,-125,307,307,-126,307,-222,-175,]),'TRUE':([1,2,29,47,63,65,67,73,83,99,100,101,103,105,106,107,109,111,112,116,122,126,127,128,129,130,131,132,133,134,135,136,137,138,139,144,145,146,180,187,209,214,216,218,221,222,230,234,237,243,248,254,255,297,307,309,],[70,70,70,-120,70,-121,70,70,70,70,-111,70,-84,-115,-110,-112,-116,-117,70,70,70,70,70,-97,-104,-96,70,-98,-102,-100,-99,-95,-105,-103,-101,70,-109,-108,70,-85,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'ID':([0,1,2,4,6,9,15,17,18,21,22,24,25,29,33,44,47,62,63,65,67,73,83,84,85,90,91,95,97,99,100,101,103,105,106,107,109,111,112,116,118,120,122,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,144,145,146,152,157,169,170,171,172,173,177,178,180,187,189,194,196,198,209,214,216,217,218,221,222,226,227,228,230,234,237,238,240,243,246,248,249,254,255,271,279,288,297,298,302,305,307,309,320,322,323,324,336,338,339,346,],[32,71,71,85,-6,-8,89,32,-3,85,-5,85,-9,71,32,-7,-120,71,71,-121,71,71,71,155,-15,-4,-74,71,155,71,-111,71,-84,-115,-110,-112,-116,-117,71,71,-157,32,71,202,71,71,-97,-104,-96,71,-98,-102,-100,-99,-95,-105,-103,-101,71,-109,-108,155,217,85,-10,155,85,-45,-49,85,71,-85,32,32,-158,71,71,71,71,-16,71,71,269,85,-75,-181,71,71,71,32,32,71,32,71,287,71,71,155,32,287,269,155,32,85,71,71,155,32,32,32,32,32,32,32,]),'OD':([33,91,118,120,194,196,227,246,],[123,-74,-157,197,247,-158,-75,282,]),'LT':([7,11,14,31,36,40,43,48,49,50,51,53,54,55,56,58,59,60,61,66,68,69,70,71,72,74,75,76,77,79,80,81,113,140,141,148,181,205,208,211,212,213,233,235,236,244,245,251,252,269,],[-199,-136,-200,-134,-135,-137,-138,-65,-55,-124,-118,-67,-64,-139,-106,-57,129,-63,-58,-123,-68,-113,-66,-140,-61,-122,-62,-59,-93,-60,-69,-56,-143,-133,-119,-212,-201,-114,-94,-73,-107,-213,-202,-144,-145,-142,-141,-70,-71,-140,]),'FOR':([33,],[124,]),'DO':([0,6,9,17,18,22,25,33,44,90,91,95,118,120,170,173,177,189,194,196,198,227,228,238,240,246,279,302,322,323,324,336,338,339,346,],[33,-6,-8,33,-3,-5,-9,33,-7,-4,-74,33,-157,33,-10,-45,-49,33,33,-158,33,-75,-181,33,33,33,33,33,33,33,33,33,33,33,33,]),'STRCONC':([7,11,12,14,28,31,32,36,40,43,48,49,50,51,53,54,55,56,58,60,61,66,68,69,70,71,72,74,75,76,77,79,80,81,113,140,141,148,181,205,208,211,212,213,233,235,236,244,245,251,252,269,],[-199,-136,-139,-200,107,-134,-140,-135,-137,-138,-65,-55,-124,-118,-67,-64,-139,-106,-57,-63,-58,-123,-68,-113,-66,-140,-61,-122,-62,-59,107,-60,-69,-56,-143,-133,-119,-212,-201,-114,107,-73,-107,-213,-202,-144,-145,-142,-141,-70,-71,-140,]),'LE':([7,11,14,31,36,40,43,48,49,50,51,53,54,55,56,58,59,60,61,66,68,69,70,71,72,74,75,76,77,79,80,81,113,140,141,148,181,205,208,211,212,213,233,235,236,244,245,251,252,269,],[-199,-136,-200,-134,-135,-137,-138,-65,-55,-124,-118,-67,-64,-139,-106,-57,137,-63,-58,-123,-68,-113,-66,-140,-61,-122,-62,-59,-93,-60,-69,-56,-143,-133,-119,-212,-201,-114,-94,-73,-107,-213,-202,-144,-145,-142,-141,-70,-71,-140,]),'COMMA':([7,11,14,31,36,40,43,48,49,50,51,52,53,54,55,56,58,59,60,61,66,68,69,70,71,72,74,75,76,77,79,80,81,84,85,86,87,92,93,94,96,97,98,113,140,141,147,148,150,151,153,154,155,156,158,159,160,161,162,163,164,168,181,183,185,205,206,208,211,212,213,215,217,219,223,224,225,229,231,232,233,235,236,244,245,251,252,262,266,267,268,270,271,274,275,276,277,278,291,294,295,296,299,300,314,315,316,317,318,319,],[-199,-136,-200,-134,-135,-137,-138,-65,-55,-124,-118,-92,-67,-64,-139,-106,-57,-91,-63,-58,-123,-68,-113,-66,-140,-61,-122,-62,-59,-93,-60,-69,-56,157,-15,169,-11,157,-46,172,178,157,-50,-143,-133,-119,-205,-212,214,-24,-27,-20,-22,-23,-36,-19,-35,-14,-21,-26,-25,-18,-201,234,-89,-114,234,-94,-73,-107,-213,-34,-16,-13,-12,-48,-47,-51,-52,-54,-202,-144,-145,-142,-141,-70,-71,-17,-40,-43,297,-42,157,305,-53,-90,-31,-33,-125,-29,-37,-28,-193,-192,-126,-41,-39,-44,-194,-195,]),'LOWER':([0,1,2,6,9,17,18,22,25,29,33,44,47,62,63,65,67,73,83,90,91,95,99,100,101,103,105,106,107,109,111,112,116,118,120,122,126,127,128,129,130,131,132,133,134,135,136,137,138,139,144,145,146,170,173,177,180,187,189,194,196,198,209,214,216,218,221,222,227,228,230,234,237,238,240,243,246,248,254,255,279,297,302,307,309,322,323,324,336,338,339,346,],[45,45,45,-6,-8,45,-3,-5,-9,45,45,-7,-120,45,45,-121,45,45,45,-4,-74,45,45,-111,45,-84,-115,-110,-112,-116,-117,45,45,-157,45,45,45,45,-97,-104,-96,45,-98,-102,-100,-99,-95,-105,-103,-101,45,-109,-108,-10,-45,-49,45,-85,45,45,-158,45,45,45,45,45,45,45,-75,-181,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'COLON':([7,11,14,23,31,32,36,40,43,48,49,50,51,52,53,54,55,56,58,59,60,61,66,68,69,70,71,72,74,75,76,77,79,80,81,113,121,140,141,148,181,185,186,192,205,208,211,212,213,233,235,236,244,245,251,252,261,269,291,314,],[-199,-136,-200,95,-134,-76,-135,-137,-138,-65,-55,-124,-118,-92,-67,-64,-139,-106,-57,-91,-63,-58,-123,-68,-113,-66,-140,-61,-122,-62,-59,-93,-60,-69,-56,-143,198,-133,-119,-212,-201,-32,237,-32,-114,-94,-73,-107,-213,-202,-144,-145,-142,-141,-70,-71,-32,-140,-125,-126,]),'PRED':([0,1,2,6,9,17,18,22,25,29,33,44,47,62,63,65,67,73,83,90,91,95,99,100,101,103,105,106,107,109,111,112,116,118,120,122,126,127,128,129,130,131,132,133,134,135,136,137,138,139,144,145,146,170,173,177,180,187,189,194,196,198,209,214,216,218,221,222,227,228,230,234,237,238,240,243,246,248,254,255,279,297,302,307,309,322,323,324,336,338,339,346,],[37,37,37,-6,-8,37,-3,-5,-9,37,37,-7,-120,37,37,-121,37,37,37,-4,-74,37,37,-111,37,-84,-115,-110,-112,-116,-117,37,37,-157,37,37,37,37,-97,-104,-96,37,-98,-102,-100,-99,-95,-105,-103,-101,37,-109,-108,-10,-45,-49,37,-85,37,37,-158,37,37,37,37,37,37,37,-75,-181,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'RETURNS':([272,304,],[301,301,]),'RESULT':([0,6,9,17,18,22,25,33,44,90,91,95,118,120,170,173,177,189,194,196,198,227,228,238,240,246,279,302,322,323,324,336,338,339,346,],[2,-6,-8,2,-3,-5,-9,2,-7,-4,-74,2,-157,2,-10,-45,-49,2,2,-158,2,-75,-181,2,2,2,2,2,2,2,2,2,2,2,2,]),'ELSE':([7,11,14,31,36,40,43,48,49,50,51,52,53,54,55,56,58,59,60,61,66,68,69,70,71,72,74,75,76,77,79,80,81,91,113,118,140,141,148,181,189,190,196,205,208,210,211,212,213,227,233,235,236,238,244,245,251,252,253,257,258,291,292,306,313,314,],[-199,-136,-200,-134,-135,-137,-138,-65,-55,-124,-118,-92,-67,-64,-139,-106,-57,-91,-63,-58,-123,-68,-113,-66,-140,-61,-122,-62,-59,-93,-60,-69,-56,-74,-143,-157,-133,-119,-212,-201,-150,240,-158,-114,-94,254,-73,-107,-213,-75,-202,-144,-145,-151,-142,-141,-70,-71,-128,254,-130,-125,-131,240,-132,-126,]),'FI':([7,11,14,31,36,40,43,48,49,50,51,52,53,54,55,56,58,59,60,61,66,68,69,70,71,72,74,75,76,77,79,80,81,91,113,118,140,141,148,181,189,190,196,205,208,211,212,213,227,233,235,236,238,240,241,242,244,245,251,252,256,279,289,291,293,306,314,327,],[-199,-136,-200,-134,-135,-137,-138,-65,-55,-124,-118,-92,-67,-64,-139,-106,-57,-91,-63,-58,-123,-68,-113,-66,-140,-61,-122,-62,-59,-93,-60,-69,-56,-74,-143,-157,-133,-119,-212,-201,-150,239,-158,-114,-94,-73,-107,-213,-75,-202,-144,-145,-151,-152,-154,280,-142,-141,-70,-71,291,-153,-129,-125,314,-155,-126,-156,]),'LENGTH':([0,1,2,6,9,17,18,22,25,29,33,44,47,62,63,65,67,73,83,90,91,95,99,100,101,103,105,106,107,109,111,112,116,118,120,122,126,127,128,129,130,131,132,133,134,135,136,137,138,139,144,145,146,170,173,177,180,187,189,194,196,198,209,214,216,218,221,222,227,228,230,234,237,238,240,243,246,248,254,255,279,297,302,307,309,322,323,324,336,338,339,346,],[42,42,42,-6,-8,42,-3,-5,-9,42,42,-7,-120,42,42,-121,42,42,42,-4,-74,42,42,-111,42,-84,-115,-110,-112,-116,-117,42,42,-157,42,42,42,42,-97,-104,-96,42,-98,-102,-100,-99,-95,-105,-103,-101,42,-109,-108,-10,-45,-49,42,-85,42,42,-158,42,42,42,42,42,42,42,-75,-181,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'SMC':([1,6,7,8,9,10,11,12,14,18,19,20,22,25,27,30,31,36,40,41,43,44,46,48,49,50,51,52,53,54,55,56,58,59,60,61,64,66,68,69,70,71,72,74,75,76,77,78,79,80,81,82,86,87,88,89,90,91,93,94,96,98,113,115,117,119,123,125,140,141,148,151,153,154,155,156,158,159,160,161,162,163,164,168,170,173,175,176,177,181,188,195,197,199,200,201,203,205,208,211,212,213,215,219,223,224,225,227,228,229,231,232,233,235,236,239,244,245,247,251,252,262,272,275,280,282,285,286,291,294,295,296,303,304,311,312,314,316,317,321,323,325,328,330,333,335,336,337,340,342,344,345,347,348,],[-208,-6,-199,-81,-8,-82,-136,-79,-200,-3,-77,91,-5,-9,-147,-80,-134,-135,-137,-146,-138,-7,-78,-65,-55,-124,-118,-92,-67,-64,-139,-106,-57,-91,-63,-58,-211,-123,-68,-113,-66,-140,-61,-122,-62,-59,-93,-209,-60,-69,-56,-210,170,-11,-207,-76,-4,-74,-46,173,177,-50,-143,-127,194,-163,-159,-164,-133,-119,-212,-24,-27,-20,-22,-23,-36,-19,-35,-14,-21,-26,-25,-18,-10,-45,227,228,-49,-201,-83,-165,-162,-180,-166,-167,-168,-114,-94,-73,-107,-213,-34,-13,-12,-48,-47,-75,-181,-51,-52,-54,-202,-144,-145,-148,-142,-141,-160,-70,-71,-17,302,-53,-149,-161,-177,-178,-125,-29,-37,-28,323,324,-169,-179,-126,-39,-44,-182,-189,339,-176,-170,-171,-184,-188,-185,-172,-196,-183,-186,-197,-187,]),'THEN':([7,11,14,31,36,40,43,48,49,50,51,52,53,54,55,56,58,59,60,61,66,68,69,70,71,72,74,75,76,77,79,80,81,113,114,115,140,141,142,148,181,205,208,211,212,213,233,235,236,244,245,251,252,281,290,291,314,],[-199,-136,-200,-134,-135,-137,-138,-65,-55,-124,-118,-92,-67,-64,-139,-106,-57,-91,-63,-58,-123,-68,-113,-66,-140,-61,-122,-62,-59,-93,-60,-69,-56,-143,189,-127,-133,-119,209,-212,-201,-114,-94,-73,-107,-213,-202,-144,-145,-142,-141,-70,-71,189,209,-125,-126,]),'ELSIF':([7,11,14,31,36,40,43,48,49,50,51,52,53,54,55,56,58,59,60,61,66,68,69,70,71,72,74,75,76,77,79,80,81,91,113,118,140,141,148,181,189,190,196,205,208,210,211,212,213,227,233,235,236,238,244,245,251,252,253,257,258,291,292,306,313,314,],[-199,-136,-200,-134,-135,-137,-138,-65,-55,-124,-118,-92,-67,-64,-139,-106,-57,-91,-63,-58,-123,-68,-113,-66,-140,-61,-122,-62,-59,-93,-60,-69,-56,-74,-143,-157,-133,-119,-212,-201,-150,243,-158,-114,-94,255,-73,-107,-213,-75,-202,-144,-145,-151,-142,-141,-70,-71,-128,255,-130,-125,-131,243,-132,-126,]),'CHARS':([84,85,97,152,171,217,271,298,320,],[165,-15,165,165,165,-16,165,165,165,]),'RBRACKET':([7,11,14,31,36,40,43,48,49,50,51,52,53,54,55,56,58,59,60,61,66,68,69,70,71,72,74,75,76,77,79,80,81,113,140,141,148,151,153,156,163,164,181,183,184,185,191,192,193,205,206,207,208,211,212,213,233,235,236,244,245,251,252,263,264,266,267,268,270,276,277,278,291,294,296,314,315,],[-199,-136,-200,-134,-135,-137,-138,-65,-55,-124,-118,-92,-67,-64,-139,-106,-57,-91,-63,-58,-123,-68,-113,-66,-140,-61,-122,-62,-59,-93,-60,-69,-56,-143,-133,-119,-212,-24,-27,-23,-26,-25,-201,235,236,-89,244,-222,245,-114,251,252,-94,-73,-107,-213,-202,-144,-145,-142,-141,-70,-71,-38,295,-40,-43,298,-42,-90,-31,-33,-125,-29,-28,-126,-41,]),'ARROW':([1,2,7,11,12,14,28,29,31,32,36,40,43,47,55,63,65,66,67,71,73,83,99,100,101,103,105,106,107,109,111,112,113,116,122,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,144,145,146,148,180,181,187,209,213,214,216,218,221,222,230,233,234,235,236,237,243,244,245,248,254,255,269,297,307,309,],[62,62,-199,-136,-139,-200,113,62,-134,-140,-135,-137,-138,-120,-139,62,-121,113,62,-140,62,62,62,-111,62,-84,-115,-110,-112,-116,-117,62,-143,62,62,62,62,-97,-104,-96,62,-98,-102,-100,-99,-95,-105,-103,-101,113,62,-109,-108,-212,62,-201,-85,62,-213,62,62,62,62,62,62,-202,62,-144,-145,62,62,-142,-141,62,62,62,-140,62,62,62,]),'PLUS':([7,11,12,14,28,31,32,36,40,43,48,49,50,51,53,54,55,56,58,60,61,66,68,69,70,71,72,74,75,76,77,79,80,81,113,140,141,148,181,205,208,211,212,213,233,235,236,244,245,251,252,269,],[-199,-136,-139,-200,106,-134,-140,-135,-137,-138,-65,-55,-124,-118,-67,-64,-139,-106,-57,-63,-58,-123,-68,-113,-66,-140,-61,-122,-62,-59,106,-60,-69,-56,-143,-133,-119,-212,-201,-114,106,-73,-107,-213,-202,-144,-145,-142,-141,-70,-71,-140,]),'ARRAY':([84,85,97,152,171,217,271,298,320,],[167,-15,167,167,167,-16,167,167,167,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'iteration':([124,],[200,]),'expression_list':([101,127,],[183,206,]),'syn_definition':([24,178,],[98,229,]),'control_part':([33,],[117,]),'referenced_location':([1,2,29,63,67,73,83,99,101,112,116,122,126,127,131,144,180,209,214,216,218,221,222,230,234,237,243,248,254,255,297,307,309,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'return_action':([0,17,33,95,120,189,194,198,238,240,246,279,302,322,323,324,336,338,339,346,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'operand4':([1,2,29,63,67,73,83,99,101,112,116,122,126,127,131,144,180,209,214,216,218,221,222,230,234,237,243,248,254,255,297,307,309,],[51,51,51,141,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'parameter_spec':([271,],[300,]),'action_statement':([0,17,33,120,189,194,238,240,246,279,302,322,323,324,336,338,339,346,],[9,9,118,196,118,118,196,118,196,196,9,9,9,9,9,9,9,9,]),'then_expression':([142,290,],[210,313,]),'composite_mode':([84,97,152,171,271,298,320,],[162,162,162,162,162,162,162,]),'string_concatenation_operator':([28,77,208,],[102,145,145,]),'operand2':([1,2,29,67,73,83,99,101,112,116,122,127,131,144,180,209,214,216,218,221,222,230,234,237,243,248,254,255,297,307,309,],[56,56,56,56,56,56,56,56,56,56,56,56,56,212,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'for_control':([33,],[119,]),'operator1':([59,],[131,]),'lower_bound':([101,116,127,216,221,222,297,],[186,186,186,186,186,186,186,]),'action_statement_list':([33,189,194,240,],[120,238,246,279,]),'statement_list':([0,302,323,324,339,],[17,322,336,338,346,]),'operand0':([1,2,29,67,73,83,99,101,112,116,122,127,180,209,214,216,218,221,222,230,234,237,243,248,254,255,297,307,309,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'closed_dyadic_operator':([28,],[110,]),'index_mode':([222,297,],[266,315,]),'literal_range':([101,116,127,216,221,222,297,],[184,191,207,260,265,267,267,]),'label':([0,15,17,33,120,189,194,238,240,246,279,302,322,323,324,336,338,339,346,],[23,88,23,121,121,121,121,121,121,121,121,23,23,23,23,23,23,23,23,]),'reference_mode':([84,97,152,171,271,298,320,],[154,154,154,154,154,154,154,]),'procedure_statement':([0,17,302,322,323,324,336,338,339,346,],[25,25,25,25,25,25,25,25,25,25,]),'step_enumeration':([124,],[201,]),'procedure_name':([0,1,2,17,29,33,62,63,67,73,83,95,99,101,112,116,120,122,126,127,131,144,180,189,194,198,209,214,216,218,221,222,230,234,237,238,240,243,246,248,254,255,279,297,302,307,309,322,323,324,336,338,339,346,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'do_action':([0,17,33,95,120,189,194,198,238,240,246,279,302,322,323,324,336,338,339,346,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'location':([0,1,2,17,29,33,62,63,67,73,83,95,99,101,112,116,120,122,126,127,131,144,180,189,194,198,209,214,216,218,221,222,230,234,237,238,240,243,246,248,254,255,279,297,302,307,309,322,323,324,336,338,339,346,],[28,66,66,28,66,28,140,66,66,66,66,28,66,66,66,66,28,66,66,66,66,66,66,28,28,28,66,66,66,66,66,66,66,66,66,28,28,66,28,66,66,66,28,66,28,66,66,28,28,28,28,28,28,28,]),'membership_operator':([59,],[130,]),'string_length':([220,],[264,]),'exit_action':([0,17,33,95,120,189,194,198,238,240,246,279,302,322,323,324,336,338,339,346,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'id_list':([4,21,24,169,172,178,226,305,],[84,92,97,84,92,97,271,271,]),'formal_parameter_list':([226,305,],[273,326,]),'mode_definition':([21,172,],[93,225,]),'initialization':([161,],[219,]),'char_literal':([1,2,29,63,67,73,83,99,101,112,116,122,126,127,131,144,180,209,214,216,218,221,222,230,234,237,243,248,254,255,297,307,309,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'formal_parameter':([226,305,],[274,274,]),'relational_operator':([59,],[136,]),'basic_mode':([84,97,152,171,222,249,271,288,297,298,320,],[156,156,156,156,156,156,156,156,156,156,156,]),'range_enumeration':([124,],[203,]),'empty_literal':([1,2,29,63,67,73,83,99,101,112,116,122,126,127,131,144,180,209,214,216,218,221,222,230,234,237,243,248,254,255,297,307,309,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'empty':([0,],[38,]),'string_reference':([0,1,2,17,29,33,62,63,67,73,83,95,99,101,112,116,120,122,126,127,131,144,180,189,194,198,209,214,216,218,221,222,230,234,237,238,240,243,246,248,254,255,279,297,302,307,309,322,323,324,336,338,339,346,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'parenthesized_expression':([1,2,29,63,67,73,83,99,101,112,116,122,126,127,131,144,180,209,214,216,218,221,222,230,234,237,243,248,254,255,297,307,309,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'result_attribute':([334,],[343,]),'array_element':([0,1,2,17,29,33,62,63,67,73,83,95,99,101,112,116,120,122,126,127,131,144,180,189,194,198,209,214,216,218,221,222,230,234,237,238,240,243,246,248,254,255,279,297,302,307,309,322,323,324,336,338,339,346,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'result':([1,2,],[78,82,]),'syn_list':([24,],[96,]),'array_slice':([0,1,2,17,29,33,62,63,67,73,83,95,99,101,112,116,120,122,126,127,131,144,180,189,194,198,209,214,216,218,221,222,230,234,237,238,240,243,246,248,254,255,279,297,302,307,309,322,323,324,336,338,339,346,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'synonym_statement':([0,17,302,322,323,324,336,338,339,346,],[44,44,44,44,44,44,44,44,44,44,]),'loop_counter':([124,],[204,]),'discrete_range_mode':([84,97,152,171,222,249,271,288,297,298,320,],[151,151,151,151,151,151,151,151,151,151,151,]),'discrete_mode':([84,97,152,171,222,249,271,288,297,298,320,],[159,159,159,159,270,286,159,312,270,159,159,]),'mode_name':([84,97,152,171,271,298,320,],[168,168,168,168,168,168,168,]),'boolean_expression':([29,67,122,243,255,],[114,142,199,281,290,]),'builtin_name':([0,1,2,17,29,33,62,63,67,73,83,95,99,101,112,116,120,122,126,127,131,144,180,189,194,198,209,214,216,218,221,222,230,234,237,238,240,243,246,248,254,255,279,297,302,307,309,322,323,324,336,338,339,346,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'parameter_attribute':([299,],[318,]),'operand1':([1,2,29,67,73,83,99,101,112,116,122,127,131,180,209,214,216,218,221,222,230,234,237,243,248,254,255,297,307,309,],[77,77,77,77,77,77,77,77,77,77,77,77,208,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'conditional_expression':([1,2,29,67,73,83,99,101,112,116,122,127,180,209,214,216,218,221,222,230,234,237,243,248,254,255,297,307,309,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'else_clause':([190,306,],[242,327,]),'step_value':([284,],[308,]),'upper_bound':([237,],[277,]),'procedure_call':([0,1,2,17,29,33,62,63,67,73,83,95,99,101,112,116,120,122,126,127,131,144,180,189,194,198,209,214,216,218,221,222,230,234,237,238,240,243,246,248,254,255,279,297,302,307,309,322,323,324,336,338,339,346,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'start_value':([248,],[284,]),'arithmetic_multiplicative_operator':([28,56,212,],[108,126,126,]),'literal':([1,2,29,63,67,73,83,99,101,112,116,122,126,127,131,144,180,209,214,216,218,221,222,230,234,237,243,248,254,255,297,307,309,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'else_expression':([210,257,],[256,293,]),'dereferenced_reference':([0,1,2,17,29,33,62,63,67,73,83,95,99,101,112,116,120,122,126,127,131,144,180,189,194,198,209,214,216,218,221,222,230,234,237,238,240,243,246,248,254,255,279,297,302,307,309,322,323,324,336,338,339,346,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'then_clause':([114,281,],[190,306,]),'end_value':([284,308,310,329,],[311,330,333,340,]),'constant_expression':([180,230,],[231,275,]),'call_action':([0,1,2,17,29,33,62,63,67,73,83,95,99,101,112,116,120,122,126,127,131,144,180,189,194,198,209,214,216,218,221,222,230,234,237,238,240,243,246,248,254,255,279,297,302,307,309,322,323,324,336,338,339,346,],[12,55,55,12,55,12,55,55,55,55,55,12,55,55,55,55,12,55,55,55,55,55,55,12,12,12,55,55,55,55,55,55,55,55,55,12,12,55,12,55,55,55,12,55,12,55,55,12,12,12,12,12,12,12,]),'array_mode':([84,97,152,171,271,298,320,],[158,158,158,158,158,158,158,]),'array_primitive_value':([1,2,29,63,67,73,83,99,101,112,116,122,126,127,131,144,180,209,214,216,218,221,222,230,234,237,243,248,254,255,297,307,309,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'builtin_call':([0,1,2,17,29,33,62,63,67,73,83,95,99,101,112,116,120,122,126,127,131,144,180,189,194,198,209,214,216,218,221,222,230,234,237,238,240,243,246,248,254,255,279,297,302,307,309,322,323,324,336,338,339,346,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'value_array_slice':([1,2,29,63,67,73,83,99,101,112,116,122,126,127,131,144,180,209,214,216,218,221,222,230,234,237,243,248,254,255,297,307,309,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'newmode_statement':([0,17,302,322,323,324,336,338,339,346,],[6,6,6,6,6,6,6,6,6,6,]),'mode':([84,97,152,171,271,298,320,],[161,179,215,224,299,317,334,]),'declaration':([4,169,],[87,223,]),'statement':([0,17,302,322,323,324,336,338,339,346,],[18,90,18,90,18,18,90,90,18,90,]),'assignment_action':([0,17,33,95,120,189,194,198,238,240,246,279,302,322,323,324,336,338,339,346,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'integer_expression':([116,309,],[193,332,]),'action':([0,17,33,95,120,189,194,198,238,240,246,279,302,322,323,324,336,338,339,346,],[20,20,20,175,20,20,20,175,20,20,20,20,20,20,20,20,20,20,20,20,]),'string_literal':([1,2,29,63,67,73,83,99,101,112,116,122,126,127,131,144,180,209,214,216,218,221,222,230,234,237,243,248,254,255,297,307,309,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'declaration_statement':([0,17,302,322,323,324,336,338,339,346,],[22,22,22,22,22,22,22,22,22,22,]),'monadic_operator':([1,2,29,67,73,83,99,101,112,116,122,126,127,131,144,180,209,214,216,218,221,222,230,234,237,243,248,254,255,297,307,309,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'discrete_expression':([248,307,],[283,328,]),'result_action':([0,17,33,95,120,189,194,198,238,240,246,279,302,322,323,324,336,338,339,346,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'expression':([1,2,29,67,73,83,99,101,112,116,122,127,180,209,214,216,218,221,222,230,234,237,243,248,254,255,297,307,309,],[64,64,115,115,143,147,147,185,188,192,115,185,232,253,147,261,262,261,261,232,276,278,115,285,289,115,261,285,331,]),'arithmetic_additive_operator':([28,77,208,],[104,146,146,]),'element_node':([298,],[316,]),'result_spec':([272,304,],[303,325,]),'parameter_list':([83,99,214,],[149,182,259,]),'operand3':([1,2,29,67,73,83,99,101,112,116,122,126,127,131,144,180,209,214,216,218,221,222,230,234,237,243,248,254,255,297,307,309,],[69,69,69,69,69,69,69,69,69,69,69,205,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'location_name':([0,1,2,17,29,33,62,63,67,73,83,95,99,101,112,116,120,122,126,127,131,144,180,189,194,198,209,214,216,218,221,222,230,234,237,238,240,243,246,248,254,255,279,297,302,307,309,322,323,324,336,338,339,346,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'procedure_definition':([95,],[176,]),'elseif_expression':([210,257,],[258,292,]),'newmode_list':([21,],[94,]),'elseif_clause':([190,306,],[241,241,]),'index_mode_list':([222,],[268,]),'elseif_expression_list':([210,],[257,]),'parameter':([83,99,214,],[150,150,150,]),'primitive_value':([1,2,29,63,67,73,83,99,101,112,116,122,126,127,131,144,180,209,214,216,218,221,222,230,234,237,243,248,254,255,297,307,309,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'integer_literal':([1,2,29,63,67,73,83,99,101,112,116,122,126,127,131,144,180,209,214,216,218,221,222,230,234,237,243,248,254,255,297,307,309,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'while_control':([33,119,],[125,195,]),'discrete_mode_name':([84,97,152,171,222,249,271,288,297,298,320,],[166,166,166,166,166,166,166,166,166,166,166,]),'program':([0,],[39,]),'declaration_list':([4,],[86,]),'value_array_element':([1,2,29,63,67,73,83,99,101,112,116,122,126,127,131,144,180,209,214,216,218,221,222,230,234,237,243,248,254,255,297,307,309,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'if_action':([0,17,33,95,120,189,194,198,238,240,246,279,302,322,323,324,336,338,339,346,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'operator2':([77,208,],[144,144,]),'boolean_literal':([1,2,29,63,67,73,83,99,101,112,116,122,126,127,131,144,180,209,214,216,218,221,222,230,234,237,243,248,254,255,297,307,309,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'assigning_operator':([28,],[112,]),'string_mode':([84,97,152,171,271,298,320,],[160,160,160,160,160,160,160,]),'bracketed_action':([0,17,33,95,120,189,194,198,238,240,246,279,302,322,323,324,336,338,339,346,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','lyaParser.py',65),
  ('program -> empty','program',1,'p_program','lyaParser.py',66),
  ('statement_list -> statement','statement_list',1,'p_statement_list1','lyaParser.py',73),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list1','lyaParser.py',74),
  ('statement -> declaration_statement','statement',1,'p_statement','lyaParser.py',81),
  ('statement -> newmode_statement','statement',1,'p_statement','lyaParser.py',82),
  ('statement -> synonym_statement','statement',1,'p_statement','lyaParser.py',83),
  ('statement -> action_statement','statement',1,'p_statement','lyaParser.py',84),
  ('statement -> procedure_statement','statement',1,'p_statement','lyaParser.py',85),
  ('declaration_statement -> DCL declaration_list SMC','declaration_statement',3,'p_declaration_statement','lyaParser.py',93),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','lyaParser.py',97),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','lyaParser.py',98),
  ('declaration -> id_list mode initialization','declaration',3,'p_declaration1','lyaParser.py',105),
  ('declaration -> id_list mode','declaration',2,'p_declaration2','lyaParser.py',109),
  ('id_list -> ID','id_list',1,'p_id_list','lyaParser.py',113),
  ('id_list -> id_list COMMA ID','id_list',3,'p_id_list','lyaParser.py',114),
  ('initialization -> EQUALS expression','initialization',2,'p_initialization','lyaParser.py',121),
  ('mode -> mode_name','mode',1,'p_mode','lyaParser.py',129),
  ('mode -> discrete_mode','mode',1,'p_mode','lyaParser.py',130),
  ('mode -> reference_mode','mode',1,'p_mode','lyaParser.py',131),
  ('mode -> composite_mode','mode',1,'p_mode','lyaParser.py',132),
  ('mode_name -> ID','mode_name',1,'p_mode_name','lyaParser.py',136),
  ('discrete_mode -> basic_mode','discrete_mode',1,'p_discrete_mode','lyaParser.py',140),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','lyaParser.py',141),
  ('basic_mode -> INT','basic_mode',1,'p_basic_mode','lyaParser.py',145),
  ('basic_mode -> BOOL','basic_mode',1,'p_basic_mode','lyaParser.py',146),
  ('basic_mode -> CHAR','basic_mode',1,'p_basic_mode','lyaParser.py',147),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaParser.py',151),
  ('discrete_range_mode -> basic_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaParser.py',152),
  ('discrete_mode_name -> ID','discrete_mode_name',1,'p_discrete_mode_name','lyaParser.py',156),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_litereal_range','lyaParser.py',160),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','lyaParser.py',164),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','lyaParser.py',168),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','lyaParser.py',172),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','lyaParser.py',176),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','lyaParser.py',177),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','lyaParser.py',181),
  ('string_length -> INTCONST','string_length',1,'p_string_length','lyaParser.py',185),
  ('array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_node','array_mode',5,'p_array_mode','lyaParser.py',189),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','lyaParser.py',194),
  ('index_mode_list -> index_mode_list COMMA index_mode','index_mode_list',3,'p_index_mode_list','lyaParser.py',195),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','lyaParser.py',202),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','lyaParser.py',203),
  ('element_node -> mode','element_node',1,'p_element_node','lyaParser.py',207),
  ('newmode_statement -> TYPE newmode_list SMC','newmode_statement',3,'p_newmode_statement','lyaParser.py',215),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','lyaParser.py',219),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','lyaParser.py',220),
  ('mode_definition -> id_list EQUALS mode','mode_definition',3,'p_mode_definition','lyaParser.py',227),
  ('synonym_statement -> SYN syn_list SMC','synonym_statement',3,'p_synonym_statement','lyaParser.py',231),
  ('syn_list -> syn_definition','syn_list',1,'p_syn_list','lyaParser.py',239),
  ('syn_list -> syn_list COMMA syn_definition','syn_list',3,'p_syn_list','lyaParser.py',240),
  ('syn_definition -> id_list EQUALS constant_expression','syn_definition',3,'p_syn_definition','lyaParser.py',247),
  ('syn_definition -> id_list mode EQUALS constant_expression','syn_definition',4,'p_syn_definition2','lyaParser.py',251),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','lyaParser.py',255),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','lyaParser.py',263),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','lyaParser.py',264),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','lyaParser.py',265),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','lyaParser.py',266),
  ('literal -> integer_literal','literal',1,'p_literal','lyaParser.py',270),
  ('literal -> boolean_literal','literal',1,'p_literal','lyaParser.py',271),
  ('literal -> char_literal','literal',1,'p_literal','lyaParser.py',272),
  ('literal -> empty_literal','literal',1,'p_literal','lyaParser.py',273),
  ('literal -> string_literal','literal',1,'p_literal','lyaParser.py',274),
  ('integer_literal -> INTCONST','integer_literal',1,'p_integer_literal','lyaParser.py',278),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','lyaParser.py',282),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','lyaParser.py',283),
  ('char_literal -> CHARCONST','char_literal',1,'p_char_literal','lyaParser.py',287),
  ('string_literal -> STRINGCONST','string_literal',1,'p_string_literal','lyaParser.py',291),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','lyaParser.py',295),
  ('value_array_element -> array_primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','lyaParser.py',299),
  ('value_array_slice -> array_primitive_value LBRACKET literal_range RBRACKET','value_array_slice',4,'p_value_array_slice','lyaParser.py',303),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','lyaParser.py',307),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','lyaParser.py',311),
  ('action_statement -> action SMC','action_statement',2,'p_action_statement','lyaParser.py',319),
  ('action_statement -> label COLON action SMC','action_statement',4,'p_action_statement','lyaParser.py',320),
  ('label -> ID','label',1,'p_label','lyaParser.py',327),
  ('action -> assignment_action','action',1,'p_action','lyaParser.py',331),
  ('action -> bracketed_action','action',1,'p_action','lyaParser.py',332),
  ('action -> call_action','action',1,'p_action','lyaParser.py',333),
  ('action -> exit_action','action',1,'p_action','lyaParser.py',334),
  ('action -> return_action','action',1,'p_action','lyaParser.py',335),
  ('action -> result_action','action',1,'p_action','lyaParser.py',336),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','lyaParser.py',344),
  ('assigning_operator -> EQUALS','assigning_operator',1,'p_assigning_operator','lyaParser.py',348),
  ('assigning_operator -> closed_dyadic_operator EQUALS','assigning_operator',2,'p_assigning_operator','lyaParser.py',349),
  ('closed_dyadic_operator -> arithmetic_additive_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','lyaParser.py',356),
  ('closed_dyadic_operator -> arithmetic_multiplicative_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','lyaParser.py',357),
  ('closed_dyadic_operator -> string_concatenation_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','lyaParser.py',358),
  ('expression_list -> expression','expression_list',1,'p_expression_list','lyaParser.py',362),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','lyaParser.py',363),
  ('expression -> operand0','expression',1,'p_expression','lyaParser.py',370),
  ('expression -> conditional_expression','expression',1,'p_expression','lyaParser.py',371),
  ('operand0 -> operand1','operand0',1,'p_operand0','lyaParser.py',375),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','lyaParser.py',376),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','lyaParser.py',383),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','lyaParser.py',384),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','lyaParser.py',388),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','lyaParser.py',392),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','lyaParser.py',393),
  ('relational_operator -> ISEQUAL','relational_operator',1,'p_relational_operator','lyaParser.py',394),
  ('relational_operator -> NOTEQUAL','relational_operator',1,'p_relational_operator','lyaParser.py',395),
  ('relational_operator -> GT','relational_operator',1,'p_relational_operator','lyaParser.py',396),
  ('relational_operator -> GE','relational_operator',1,'p_relational_operator','lyaParser.py',397),
  ('relational_operator -> LT','relational_operator',1,'p_relational_operator','lyaParser.py',398),
  ('relational_operator -> LE','relational_operator',1,'p_relational_operator','lyaParser.py',399),
  ('operand1 -> operand2','operand1',1,'p_operand1','lyaParser.py',403),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1','lyaParser.py',404),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','lyaParser.py',411),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','lyaParser.py',412),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','lyaParser.py',416),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','lyaParser.py',417),
  ('string_concatenation_operator -> STRCONC','string_concatenation_operator',1,'p_string_concatenation_operator','lyaParser.py',421),
  ('operand2 -> operand3','operand2',1,'p_operand2','lyaParser.py',425),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','lyaParser.py',426),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaParser.py',433),
  ('arithmetic_multiplicative_operator -> DIV','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaParser.py',434),
  ('arithmetic_multiplicative_operator -> MOD','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaParser.py',435),
  ('operand3 -> operand4','operand3',1,'p_operand3','lyaParser.py',439),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','lyaParser.py',440),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','lyaParser.py',447),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','lyaParser.py',448),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','lyaParser.py',452),
  ('operand4 -> location','operand4',1,'p_operand4','lyaParser.py',453),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','lyaParser.py',454),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','lyaParser.py',460),
  ('conditional_expression -> IF boolean_expression then_expression elseif_expression_list else_expression FI','conditional_expression',6,'p_conditional_expression2','lyaParser.py',464),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','lyaParser.py',468),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','lyaParser.py',472),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','lyaParser.py',476),
  ('elseif_expression_list -> elseif_expression','elseif_expression_list',1,'p_elseif_expression_list','lyaParser.py',480),
  ('elseif_expression_list -> elseif_expression_list elseif_expression','elseif_expression_list',2,'p_elseif_expression_list','lyaParser.py',481),
  ('elseif_expression -> ELSIF boolean_expression then_expression','elseif_expression',3,'p_elseif_expression','lyaParser.py',488),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','lyaParser.py',496),
  ('location -> location_name','location',1,'p_location','lyaParser.py',500),
  ('location -> string_reference','location',1,'p_location','lyaParser.py',501),
  ('location -> dereferenced_reference','location',1,'p_location','lyaParser.py',502),
  ('location -> array_element','location',1,'p_location','lyaParser.py',503),
  ('location -> array_slice','location',1,'p_location','lyaParser.py',504),
  ('location -> call_action','location',1,'p_location','lyaParser.py',505),
  ('location_name -> ID','location_name',1,'p_location_name','lyaParser.py',509),
  ('string_reference -> location_name LBRACKET integer_expression RBRACKET','string_reference',4,'p_string_reference','lyaParser.py',513),
  ('string_reference -> location_name LBRACKET literal_range RBRACKET','string_reference',4,'p_string_reference2','lyaParser.py',517),
  ('dereferenced_reference -> location ARROW','dereferenced_reference',2,'p_dereferenced_reference','lyaParser.py',521),
  ('array_element -> location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','lyaParser.py',525),
  ('array_slice -> location LBRACKET literal_range RBRACKET','array_slice',4,'p_array_slice','lyaParser.py',529),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','lyaParser.py',537),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','lyaParser.py',538),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','lyaParser.py',546),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action2','lyaParser.py',550),
  ('then_clause -> THEN','then_clause',1,'p_then_clause','lyaParser.py',554),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','lyaParser.py',555),
  ('else_clause -> ELSE','else_clause',1,'p_else_clause','lyaParser.py',562),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','lyaParser.py',563),
  ('else_clause -> elseif_clause','else_clause',1,'p_else_clause2','lyaParser.py',570),
  ('elseif_clause -> ELSIF boolean_expression then_clause','elseif_clause',3,'p_elseif_clause','lyaParser.py',574),
  ('elseif_clause -> ELSIF boolean_expression then_clause else_clause','elseif_clause',4,'p_elseif_clause2','lyaParser.py',578),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','lyaParser.py',583),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','lyaParser.py',584),
  ('do_action -> DO OD','do_action',2,'p_do_action','lyaParser.py',595),
  ('do_action -> DO control_part SMC OD','do_action',4,'p_do_action2','lyaParser.py',599),
  ('do_action -> DO control_part SMC action_statement_list OD','do_action',5,'p_do_action3','lyaParser.py',603),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action4','lyaParser.py',607),
  ('control_part -> for_control','control_part',1,'p_control_part','lyaParser.py',611),
  ('control_part -> while_control','control_part',1,'p_control_part','lyaParser.py',612),
  ('control_part -> for_control while_control','control_part',2,'p_control_part2','lyaParser.py',616),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','lyaParser.py',620),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','lyaParser.py',624),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','lyaParser.py',625),
  ('step_enumeration -> loop_counter EQUALS start_value end_value','step_enumeration',4,'p_step_enumeration','lyaParser.py',629),
  ('step_enumeration -> loop_counter EQUALS start_value step_value end_value','step_enumeration',5,'p_step_enumeration2','lyaParser.py',633),
  ('step_enumeration -> loop_counter EQUALS start_value DOWN end_value','step_enumeration',5,'p_step_enumeration3','lyaParser.py',637),
  ('step_enumeration -> loop_counter EQUALS start_value step_value DOWN end_value','step_enumeration',6,'p_step_enumeration4','lyaParser.py',641),
  ('loop_counter -> ID','loop_counter',1,'p_loop_counter','lyaParser.py',645),
  ('start_value -> discrete_expression','start_value',1,'p_start_value','lyaParser.py',649),
  ('step_value -> BY integer_expression','step_value',2,'p_step_value','lyaParser.py',653),
  ('end_value -> TO discrete_expression','end_value',2,'p_end_value','lyaParser.py',657),
  ('discrete_expression -> expression','discrete_expression',1,'p_discrete_expression','lyaParser.py',661),
  ('range_enumeration -> loop_counter IN discrete_mode','range_enumeration',3,'p_range_enumeration','lyaParser.py',665),
  ('range_enumeration -> loop_counter DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration2','lyaParser.py',669),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','lyaParser.py',673),
  ('procedure_statement -> label COLON procedure_definition SMC','procedure_statement',4,'p_procedure_statement','lyaParser.py',681),
  ('procedure_definition -> PROC LPAREN RPAREN SMC END','procedure_definition',5,'p_procedure_definition1','lyaParser.py',685),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SMC statement_list END','procedure_definition',7,'p_procedure_definition1','lyaParser.py',686),
  ('procedure_definition -> PROC LPAREN RPAREN SMC statement_list END','procedure_definition',6,'p_procedure_definition1','lyaParser.py',687),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SMC END','procedure_definition',6,'p_procedure_definition2','lyaParser.py',696),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SMC END','procedure_definition',7,'p_procedure_definition2','lyaParser.py',697),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SMC statement_list END','procedure_definition',8,'p_procedure_definition2','lyaParser.py',698),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SMC statement_list','procedure_definition',6,'p_procedure_definition3','lyaParser.py',707),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SMC','procedure_definition',5,'p_procedure_definition3','lyaParser.py',708),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','lyaParser.py',715),
  ('formal_parameter_list -> formal_parameter COMMA formal_parameter_list','formal_parameter_list',3,'p_formal_parameter_list','lyaParser.py',716),
  ('formal_parameter -> id_list parameter_spec','formal_parameter',2,'p_formal_parameter','lyaParser.py',723),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','lyaParser.py',727),
  ('parameter_spec -> mode parameter_attribute','parameter_spec',2,'p_parameter_spec','lyaParser.py',728),
  ('parameter_attribute -> LOC','parameter_attribute',1,'p_parameter_attribute','lyaParser.py',735),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','lyaParser.py',739),
  ('result_spec -> RETURNS LPAREN mode result_attribute RPAREN','result_spec',5,'p_result_spec','lyaParser.py',740),
  ('result_attribute -> LOC','result_attribute',1,'p_result_attribute','lyaParser.py',747),
  ('call_action -> procedure_call','call_action',1,'p_call_action','lyaParser.py',755),
  ('call_action -> builtin_call','call_action',1,'p_call_action','lyaParser.py',756),
  ('procedure_call -> procedure_name LPAREN RPAREN','procedure_call',3,'p_procedure_call','lyaParser.py',760),
  ('procedure_call -> procedure_name LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','lyaParser.py',761),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','lyaParser.py',768),
  ('parameter_list -> parameter COMMA parameter_list','parameter_list',3,'p_parameter_list','lyaParser.py',769),
  ('parameter -> expression','parameter',1,'p_parameter','lyaParser.py',776),
  ('procedure_name -> ID','procedure_name',1,'p_procedure_name','lyaParser.py',780),
  ('exit_action -> EXIT label','exit_action',2,'p_exit_action','lyaParser.py',784),
  ('return_action -> RETURN','return_action',1,'p_return_action','lyaParser.py',788),
  ('return_action -> RETURN result','return_action',2,'p_return_action','lyaParser.py',789),
  ('result_action -> RESULT result','result_action',2,'p_result_action','lyaParser.py',796),
  ('result -> expression','result',1,'p_result','lyaParser.py',800),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','lyaParser.py',804),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','lyaParser.py',805),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','lyaParser.py',812),
  ('builtin_name -> PRED','builtin_name',1,'p_builtin_name','lyaParser.py',813),
  ('builtin_name -> SUCC','builtin_name',1,'p_builtin_name','lyaParser.py',814),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','lyaParser.py',815),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','lyaParser.py',816),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','lyaParser.py',817),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','lyaParser.py',818),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','lyaParser.py',819),
  ('integer_expression -> expression','integer_expression',1,'p_integer_expression','lyaParser.py',828),
  ('empty -> <empty>','empty',0,'p_empty','lyaParser.py',835),
]
