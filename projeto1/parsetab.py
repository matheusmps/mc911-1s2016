
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '4873CD68673E6279C4CBA7F661F166A7'
    
_lr_action_items = {'STRINGCONST':([2,18,30,48,53,57,61,81,86,91,96,98,108,109,110,113,114,115,116,117,121,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,198,201,205,217,218,222,223,225,227,231,242,247,250,252,254,297,298,301,],[47,47,47,47,-120,-121,47,47,47,47,47,47,-116,-115,47,-84,-110,-112,-117,-111,47,47,-97,-95,-96,47,-104,-100,-105,-99,-98,-101,-103,-102,47,-108,47,-109,47,-85,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'BOOL':([94,95,106,170,191,216,221,222,260,280,300,301,331,],[164,-15,164,164,164,164,-16,164,164,164,164,164,164,]),'CHAR':([94,95,106,170,191,216,221,222,260,280,300,301,331,],[174,-15,174,174,174,174,-16,174,174,174,174,174,174,]),'TIMES':([1,7,9,12,14,22,29,31,32,35,47,49,50,51,54,55,56,58,59,60,64,66,68,69,70,71,73,74,75,76,78,79,80,118,126,127,158,189,210,211,212,219,229,230,235,248,249,257,258,269,],[-139,-134,-200,-135,-138,-199,-136,-137,109,-140,-68,-139,-56,-58,-69,-63,-124,-113,-60,-64,-57,-66,109,-122,-55,-59,-123,-61,-140,-67,-65,-62,-118,-143,-119,-133,-212,-201,-114,109,-73,-213,-141,-142,-202,-145,-144,-71,-70,-140,]),'RETURN':([0,4,17,19,34,36,38,43,45,88,89,97,122,123,147,149,156,162,192,194,196,213,232,234,238,240,285,309,327,328,330,335,336,338,341,],[2,2,-3,-9,2,-7,-5,-8,-6,2,-157,2,-4,-74,2,2,-158,-10,-45,2,-49,2,-181,-75,2,2,2,2,2,2,2,2,2,2,2,]),'PLUS':([1,7,9,12,14,22,29,31,32,35,47,49,50,51,54,55,56,58,59,60,64,66,68,69,70,71,73,74,75,76,77,78,79,80,118,126,127,158,189,209,210,211,212,219,229,230,235,248,249,257,258,269,],[-139,-134,-200,-135,-138,-199,-136,-137,114,-140,-68,-139,-56,-58,-69,-63,-124,-113,-60,-64,-57,-66,-106,-122,-55,-59,-123,-61,-140,-67,114,-65,-62,-118,-143,-119,-133,-212,-201,114,-114,-107,-73,-213,-141,-142,-202,-145,-144,-71,-70,-140,]),'EQUALS':([1,7,9,12,14,22,29,31,32,35,75,95,99,106,108,109,111,112,114,115,116,117,118,119,120,152,153,158,164,165,168,169,172,173,174,175,177,178,179,180,181,189,199,219,221,224,229,230,235,248,249,302,303,304,321,322,],[-139,-134,-200,-135,-138,-199,-136,-137,113,-140,-140,-15,191,198,-116,-115,-86,201,-110,-112,-117,-111,-143,-88,-87,217,-173,-212,-26,-24,-23,-25,-36,-20,-27,-22,-35,227,-19,-21,-18,-201,247,-213,-16,-34,-141,-142,-202,-145,-144,-29,-28,-37,-39,-44,]),'ELSIF':([7,9,12,14,22,29,31,47,49,50,51,54,55,56,58,59,60,62,64,66,67,68,69,70,71,73,74,75,76,77,78,79,80,89,118,123,126,127,156,158,189,194,195,206,209,210,211,212,219,229,230,234,235,238,248,249,251,253,255,257,258,290,293,312,313,314,],[-134,-200,-135,-138,-199,-136,-137,-68,-139,-56,-58,-69,-63,-124,-113,-60,-64,-92,-57,-66,-91,-106,-122,-55,-59,-123,-61,-140,-67,-93,-65,-62,-118,-157,-143,-74,-119,-133,-158,-212,-201,-150,242,254,-94,-114,-107,-73,-213,-141,-142,-75,-202,-151,-145,-144,-128,254,-130,-71,-70,-131,-125,242,-126,-132,]),'GE':([7,9,12,14,22,29,31,47,49,50,51,54,55,56,58,59,60,64,66,67,68,69,70,71,73,74,75,76,77,78,79,80,118,126,127,158,189,209,210,211,212,219,229,230,235,248,249,257,258,269,],[-134,-200,-135,-138,-199,-136,-137,-68,-139,-56,-58,-69,-63,-124,-113,-60,-64,-57,-66,140,-106,-122,-55,-59,-123,-61,-140,-67,-93,-65,-62,-118,-143,-119,-133,-212,-201,-94,-114,-107,-73,-213,-141,-142,-202,-145,-144,-71,-70,-140,]),'ISEQUAL':([7,9,12,14,22,29,31,47,49,50,51,54,55,56,58,59,60,64,66,67,68,69,70,71,73,74,75,76,77,78,79,80,118,126,127,158,189,209,210,211,212,219,229,230,235,248,249,257,258,269,],[-134,-200,-135,-138,-199,-136,-137,-68,-139,-56,-58,-69,-63,-124,-113,-60,-64,-57,-66,135,-106,-122,-55,-59,-123,-61,-140,-67,-93,-65,-62,-118,-143,-119,-133,-212,-201,-94,-114,-107,-73,-213,-141,-142,-202,-145,-144,-71,-70,-140,]),'DOWN':([7,9,12,14,22,29,31,47,49,50,51,54,55,56,58,59,60,62,64,66,67,68,69,70,71,73,74,75,76,77,78,79,80,118,126,127,152,153,158,189,209,210,211,212,219,229,230,235,248,249,257,258,263,264,265,293,299,313,316,317,],[-134,-200,-135,-138,-199,-136,-137,-68,-139,-56,-58,-69,-63,-124,-113,-60,-64,-92,-57,-66,-91,-106,-122,-55,-59,-123,-61,-140,-67,-93,-65,-62,-118,-143,-119,-133,215,-173,-212,-201,-94,-114,-107,-73,-213,-141,-142,-202,-145,-144,-71,-70,-174,-177,295,-125,319,-126,-175,-222,]),'LE':([7,9,12,14,22,29,31,47,49,50,51,54,55,56,58,59,60,64,66,67,68,69,70,71,73,74,75,76,77,78,79,80,118,126,127,158,189,209,210,211,212,219,229,230,235,248,249,257,258,269,],[-134,-200,-135,-138,-199,-136,-137,-68,-139,-56,-58,-69,-63,-124,-113,-60,-64,-57,-66,136,-106,-122,-55,-59,-123,-61,-140,-67,-93,-65,-62,-118,-143,-119,-133,-212,-201,-94,-114,-107,-73,-213,-141,-142,-202,-145,-144,-71,-70,-140,]),'DO':([0,4,17,19,34,36,38,43,45,88,89,97,122,123,147,149,156,162,192,194,196,213,232,234,238,240,285,309,327,328,330,335,336,338,341,],[4,4,-3,-9,4,-7,-5,-8,-6,4,-157,4,-4,-74,4,4,-158,-10,-45,4,-49,4,-181,-75,4,4,4,4,4,4,4,4,4,4,4,]),'ARROW':([1,2,7,9,12,14,18,22,29,30,31,32,35,48,49,53,57,61,73,75,81,86,91,96,98,108,109,110,113,114,115,116,117,118,121,127,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,158,189,198,201,205,217,218,219,222,223,225,227,229,230,231,235,242,247,248,249,250,252,254,269,297,298,301,],[-139,52,-134,-200,-135,-138,52,-199,-136,52,-137,118,-140,52,-139,-120,-121,52,118,-140,52,52,52,52,52,-116,-115,52,-84,-110,-112,-117,-111,-143,52,118,52,-97,-95,-96,52,-104,-100,-105,-99,-98,-101,-103,-102,52,-108,52,-109,-212,-201,52,-85,52,52,52,-213,52,52,52,52,-141,-142,52,-202,52,52,-145,-144,52,52,52,-140,52,52,52,]),'DCL':([0,17,19,34,36,38,43,45,122,123,162,192,196,232,234,309,327,328,330,335,336,338,341,],[6,-3,-9,6,-7,-5,-8,-6,-4,-74,-10,-45,-49,-181,-75,6,6,6,6,6,6,6,6,]),'TO':([7,9,12,14,22,29,31,47,49,50,51,54,55,56,58,59,60,62,64,66,67,68,69,70,71,73,74,75,76,77,78,79,80,118,126,127,158,189,209,210,211,212,219,229,230,235,248,249,257,258,263,264,265,293,295,299,313,316,317,319,],[-134,-200,-135,-138,-199,-136,-137,-68,-139,-56,-58,-69,-63,-124,-113,-60,-64,-92,-57,-66,-91,-106,-122,-55,-59,-123,-61,-140,-67,-93,-65,-62,-118,-143,-119,-133,-212,-201,-94,-114,-107,-73,-213,-141,-142,-202,-145,-144,-71,-70,-174,-177,298,-125,298,298,-126,-175,-222,298,]),'MINUS':([1,2,7,9,12,14,18,22,29,30,31,32,35,47,49,50,51,54,55,56,58,59,60,61,64,66,68,69,70,71,73,74,75,76,77,78,79,80,81,86,91,96,98,108,109,110,113,114,115,116,117,118,121,126,127,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,158,189,198,201,205,209,210,211,212,217,218,219,222,223,225,227,229,230,231,235,242,247,248,249,250,252,254,257,258,269,297,298,301,],[-139,53,-134,-200,-135,-138,53,-199,-136,53,-137,117,-140,-68,-139,-56,-58,-69,-63,-124,-113,-60,-64,53,-57,-66,-106,-122,-55,-59,-123,-61,-140,-67,117,-65,-62,-118,53,53,53,53,53,-116,-115,53,-84,-110,-112,-117,-111,-143,53,-119,-133,53,-97,-95,-96,53,-104,-100,-105,-99,-98,-101,-103,-102,53,-108,53,-109,-212,-201,53,-85,53,117,-114,-107,-73,53,53,-213,53,53,53,53,-141,-142,53,-202,53,53,-145,-144,53,53,53,-71,-70,-140,53,53,53,]),'NULL':([2,18,30,48,53,57,61,81,86,91,96,98,108,109,110,113,114,115,116,117,121,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,198,201,205,217,218,222,223,225,227,231,242,247,250,252,254,297,298,301,],[54,54,54,54,-120,-121,54,54,54,54,54,54,-116,-115,54,-84,-110,-112,-117,-111,54,54,-97,-95,-96,54,-104,-100,-105,-99,-98,-101,-103,-102,54,-108,54,-109,54,-85,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'AND':([7,9,12,14,22,29,31,47,49,50,51,54,55,56,58,59,60,64,66,67,68,69,70,71,73,74,75,76,77,78,79,80,118,126,127,158,189,209,210,211,212,219,229,230,235,248,249,257,258,269,],[-134,-200,-135,-138,-199,-136,-137,-68,-139,-56,-58,-69,-63,-124,-113,-60,-64,-57,-66,138,-106,-122,-55,-59,-123,-61,-140,-67,-93,-65,-62,-118,-143,-119,-133,-212,-201,-94,-114,-107,-73,-213,-141,-142,-202,-145,-144,-71,-70,-140,]),'RBRACKET':([7,9,12,14,22,29,31,47,49,50,51,54,55,56,58,59,60,62,64,66,67,68,69,70,71,73,74,75,76,77,78,79,80,118,126,127,158,164,165,168,169,174,182,183,184,189,202,203,204,207,208,209,210,211,212,219,229,230,235,248,249,257,258,267,268,271,272,275,276,278,279,288,293,302,303,313,323,],[-134,-200,-135,-138,-199,-136,-137,-68,-139,-56,-58,-69,-63,-124,-113,-60,-64,-92,-57,-66,-91,-106,-122,-55,-59,-123,-61,-140,-67,-93,-65,-62,-118,-143,-119,-133,-212,-26,-24,-23,-25,-27,229,230,-222,-201,248,249,-89,257,258,-94,-114,-107,-73,-213,-141,-142,-202,-145,-144,-71,-70,-43,-42,300,-40,304,-38,-31,-33,-90,-125,-29,-28,-126,-41,]),'LBRACKET':([1,7,9,12,14,22,29,31,32,35,47,49,50,51,54,55,59,60,63,64,66,69,70,71,73,74,75,76,78,79,118,127,158,167,176,189,212,219,229,230,235,248,249,257,258,269,],[-139,96,-200,-135,-138,-199,-136,-137,121,-140,-68,-139,-56,-58,-69,-63,-60,-64,129,-57,-66,-72,-55,-59,121,-61,-140,-67,-65,-62,-143,121,-212,222,226,-201,-73,-213,-141,-142,-202,-145,-144,-71,-70,-140,]),'NOT':([2,18,30,61,81,86,91,96,98,108,109,110,113,114,115,116,117,121,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,198,201,205,217,218,222,223,225,227,231,242,247,250,252,254,297,298,301,],[57,57,57,57,57,57,57,57,57,-116,-115,57,-84,-110,-112,-117,-111,57,57,-97,-95,-96,57,-104,-100,-105,-99,-98,-101,-103,-102,57,-108,57,-109,57,-85,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'ELSE':([7,9,12,14,22,29,31,47,49,50,51,54,55,56,58,59,60,62,64,66,67,68,69,70,71,73,74,75,76,77,78,79,80,89,118,123,126,127,156,158,189,194,195,206,209,210,211,212,219,229,230,234,235,238,248,249,251,253,255,257,258,290,293,312,313,314,],[-134,-200,-135,-138,-199,-136,-137,-68,-139,-56,-58,-69,-63,-124,-113,-60,-64,-92,-57,-66,-91,-106,-122,-55,-59,-123,-61,-140,-67,-93,-65,-62,-118,-157,-143,-74,-119,-133,-158,-212,-201,-150,240,252,-94,-114,-107,-73,-213,-141,-142,-75,-202,-151,-145,-144,-128,252,-130,-71,-70,-131,-125,240,-126,-132,]),'THEN':([7,9,12,14,22,29,31,47,49,50,51,54,55,56,58,59,60,62,64,66,67,68,69,70,71,73,74,75,76,77,78,79,80,102,103,118,126,127,128,158,189,209,210,211,212,219,229,230,235,248,249,257,258,286,292,293,313,],[-134,-200,-135,-138,-199,-136,-137,-68,-139,-56,-58,-69,-63,-124,-113,-60,-64,-92,-57,-66,-91,-106,-122,-55,-59,-123,-61,-140,-67,-93,-65,-62,-118,194,-127,-143,-119,-133,205,-212,-201,-94,-114,-107,-73,-213,-141,-142,-202,-145,-144,-71,-70,194,205,-125,-126,]),'TYPE':([0,17,19,34,36,38,43,45,122,123,162,192,196,232,234,309,327,328,330,335,336,338,341,],[16,-3,-9,16,-7,-5,-8,-6,-4,-74,-10,-45,-49,-181,-75,16,16,16,16,16,16,16,16,]),'EXIT':([0,4,17,19,34,36,38,43,45,88,89,97,122,123,147,149,156,162,192,194,196,213,232,234,238,240,285,309,327,328,330,335,336,338,341,],[44,44,-3,-9,44,-7,-5,-8,-6,44,-157,44,-4,-74,44,44,-158,-10,-45,44,-49,44,-181,-75,44,44,44,44,44,44,44,44,44,44,44,]),'IF':([0,2,4,17,18,19,30,34,36,38,43,45,61,81,86,88,89,91,96,97,98,110,113,121,122,123,129,147,149,156,162,192,194,196,198,201,205,213,217,218,222,223,225,227,231,232,234,238,240,242,247,250,252,254,285,297,298,301,309,327,328,330,335,336,338,341,],[18,61,18,-3,61,-9,61,18,-7,-5,-8,-6,61,61,61,18,-157,61,61,18,61,61,-84,61,-4,-74,61,18,18,-158,-10,-45,18,-49,61,-85,61,18,61,61,61,61,61,61,61,-181,-75,18,18,61,61,61,61,61,18,61,61,61,18,18,18,18,18,18,18,18,]),'PROC':([97,],[187,]),'PRINT':([0,2,4,17,18,19,30,34,36,38,43,45,48,52,53,57,61,81,86,88,89,91,96,97,98,108,109,110,113,114,115,116,117,121,122,123,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,149,156,162,192,194,196,198,201,205,213,217,218,222,223,225,227,231,232,234,238,240,242,247,250,252,254,285,297,298,301,309,327,328,330,335,336,338,341,],[28,28,28,-3,28,-9,28,28,-7,-5,-8,-6,28,28,-120,-121,28,28,28,28,-157,28,28,28,28,-116,-115,28,-84,-110,-112,-117,-111,28,-4,-74,28,-97,-95,-96,28,-104,-100,-105,-99,-98,-101,-103,-102,28,-108,28,-109,28,28,-158,-10,-45,28,-49,28,-85,28,28,28,28,28,28,28,28,28,-181,-75,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'BY':([7,9,12,14,22,29,31,47,49,50,51,54,55,56,58,59,60,62,64,66,67,68,69,70,71,73,74,75,76,77,78,79,80,118,126,127,158,189,209,210,211,212,219,229,230,235,248,249,257,258,263,264,265,293,313,],[-134,-200,-135,-138,-199,-136,-137,-68,-139,-56,-58,-69,-63,-124,-113,-60,-64,-92,-57,-66,-91,-106,-122,-55,-59,-123,-61,-140,-67,-93,-65,-62,-118,-143,-119,-133,-212,-201,-94,-114,-107,-73,-213,-141,-142,-202,-145,-144,-71,-70,-174,-177,297,-125,-126,]),'UPPER':([0,2,4,17,18,19,30,34,36,38,43,45,48,52,53,57,61,81,86,88,89,91,96,97,98,108,109,110,113,114,115,116,117,121,122,123,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,149,156,162,192,194,196,198,201,205,213,217,218,222,223,225,227,231,232,234,238,240,242,247,250,252,254,285,297,298,301,309,327,328,330,335,336,338,341,],[13,13,13,-3,13,-9,13,13,-7,-5,-8,-6,13,13,-120,-121,13,13,13,13,-157,13,13,13,13,-116,-115,13,-84,-110,-112,-117,-111,13,-4,-74,13,-97,-95,-96,13,-104,-100,-105,-99,-98,-101,-103,-102,13,-108,13,-109,13,13,-158,-10,-45,13,-49,13,-85,13,13,13,13,13,13,13,13,13,-181,-75,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'CHARS':([94,95,106,170,191,221,280,300,331,],[176,-15,176,176,176,-16,176,176,176,]),'RETURNS':([282,307,],[310,310,]),'IN':([7,9,12,14,22,29,31,47,49,50,51,54,55,56,58,59,60,64,66,67,68,69,70,71,73,74,75,76,77,78,79,80,118,126,127,152,153,158,189,209,210,211,212,215,219,229,230,235,248,249,257,258,269,],[-134,-200,-135,-138,-199,-136,-137,-68,-139,-56,-58,-69,-63,-124,-113,-60,-64,-57,-66,130,-106,-122,-55,-59,-123,-61,-140,-67,-93,-65,-62,-118,-143,-119,-133,216,-173,-212,-201,-94,-114,-107,-73,260,-213,-141,-142,-202,-145,-144,-71,-70,-140,]),'TRUE':([2,18,30,48,53,57,61,81,86,91,96,98,108,109,110,113,114,115,116,117,121,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,198,201,205,217,218,222,223,225,227,231,242,247,250,252,254,297,298,301,],[66,66,66,66,-120,-121,66,66,66,66,66,66,-116,-115,66,-84,-110,-112,-117,-111,66,66,-97,-95,-96,66,-104,-100,-105,-99,-98,-101,-103,-102,66,-108,66,-109,66,-85,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'SYN':([0,17,19,34,36,38,43,45,122,123,162,192,196,232,234,309,327,328,330,335,336,338,341,],[26,-3,-9,26,-7,-5,-8,-6,-4,-74,-10,-45,-49,-181,-75,26,26,26,26,26,26,26,26,]),'COMMA':([7,9,12,14,22,29,31,47,49,50,51,54,55,56,58,59,60,62,64,66,67,68,69,70,71,73,74,75,76,77,78,79,80,92,93,94,95,99,100,101,104,105,106,118,126,127,158,159,161,164,165,168,169,172,173,174,175,177,178,179,180,181,189,203,204,208,209,210,211,212,219,220,221,224,228,229,230,235,236,237,244,245,246,248,249,257,258,267,268,271,272,277,278,279,280,283,287,288,293,302,303,304,305,306,313,321,322,323,324,325,],[-134,-200,-135,-138,-199,-136,-137,-68,-139,-56,-58,-69,-63,-124,-113,-60,-64,-92,-57,-66,-91,-106,-122,-55,-59,-123,-61,-140,-67,-93,-65,-62,-118,-11,163,166,-15,166,-46,193,197,-50,166,-143,-119,-133,-212,218,-205,-26,-24,-23,-25,-36,-20,-27,-22,-35,-14,-19,-21,-18,-201,250,-89,250,-94,-114,-107,-73,-213,-12,-16,-34,-13,-141,-142,-202,-48,-47,-51,-54,-52,-145,-144,-71,-70,-43,-42,301,-40,-17,-31,-33,166,311,-53,-90,-125,-29,-28,-37,-193,-192,-126,-39,-44,-41,-194,-195,]),'INT':([94,95,106,170,191,216,221,222,260,280,300,301,331,],[169,-15,169,169,169,169,-16,169,169,169,169,169,169,]),'ARRAY':([94,95,106,170,191,221,280,300,331,],[167,-15,167,167,167,-16,167,167,167,]),'RESULT':([0,4,17,19,34,36,38,43,45,88,89,97,122,123,147,149,156,162,192,194,196,213,232,234,238,240,285,309,327,328,330,335,336,338,341,],[30,30,-3,-9,30,-7,-5,-8,-6,30,-157,30,-4,-74,30,30,-158,-10,-45,30,-49,30,-181,-75,30,30,30,30,30,30,30,30,30,30,30,]),'REF':([94,95,106,170,191,221,280,300,331,],[170,-15,170,170,170,-16,170,170,170,]),'WHILE':([4,7,9,12,14,22,29,31,47,49,50,51,54,55,56,58,59,60,62,64,66,67,68,69,70,71,73,74,75,76,77,78,79,80,83,118,126,127,151,154,155,158,164,165,168,169,174,189,209,210,211,212,219,229,230,235,248,249,257,258,261,264,293,294,296,302,303,313,315,318,320,334,],[86,-134,-200,-135,-138,-199,-136,-137,-68,-139,-56,-58,-69,-63,-124,-113,-60,-64,-92,-57,-66,-91,-106,-122,-55,-59,-123,-61,-140,-67,-93,-65,-62,-118,86,-143,-119,-133,-167,-168,-166,-212,-26,-24,-23,-25,-27,-201,-94,-114,-107,-73,-213,-141,-142,-202,-145,-144,-71,-70,-178,-177,-125,-179,-169,-29,-28,-126,-171,-176,-170,-172,]),'ID':([0,2,4,6,16,17,18,19,26,30,34,36,38,43,44,45,48,52,53,57,61,81,86,87,88,89,91,94,95,96,97,98,106,108,109,110,113,114,115,116,117,121,122,123,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,149,156,162,163,166,170,191,192,193,194,196,197,198,201,205,213,216,217,218,221,222,223,225,227,231,232,233,234,238,240,242,247,250,252,254,260,280,285,297,298,300,301,309,311,327,328,330,331,335,336,338,341,],[35,75,35,95,95,-3,75,-9,95,75,35,-7,-5,-8,125,-6,75,75,-120,-121,75,75,75,153,35,-157,75,175,-15,75,75,75,175,-116,-115,75,-84,-110,-112,-117,-111,75,-4,-74,75,-97,-95,-96,75,-104,-100,-105,-99,-98,-101,-103,-102,75,-108,75,-109,35,75,-158,-10,95,221,175,175,-45,95,35,-49,95,75,-85,75,35,262,75,75,-16,269,75,75,75,75,-181,95,-75,35,35,75,75,75,75,75,262,175,35,75,75,175,269,35,95,35,35,35,175,35,35,35,35,]),'OR':([7,9,12,14,22,29,31,47,49,50,51,54,55,56,58,59,60,64,66,67,68,69,70,71,73,74,75,76,77,78,79,80,118,126,127,158,189,209,210,211,212,219,229,230,235,248,249,257,258,269,],[-134,-200,-135,-138,-199,-136,-137,-68,-139,-56,-58,-69,-63,-124,-113,-60,-64,-57,-66,137,-106,-122,-55,-59,-123,-61,-140,-67,-93,-65,-62,-118,-143,-119,-133,-212,-201,-94,-114,-107,-73,-213,-141,-142,-202,-145,-144,-71,-70,-140,]),'STRCONC':([1,7,9,12,14,22,29,31,32,35,47,49,50,51,54,55,56,58,59,60,64,66,68,69,70,71,73,74,75,76,77,78,79,80,118,126,127,158,189,209,210,211,212,219,229,230,235,248,249,257,258,269,],[-139,-134,-200,-135,-138,-199,-136,-137,115,-140,-68,-139,-56,-58,-69,-63,-124,-113,-60,-64,-57,-66,-106,-122,-55,-59,-123,-61,-140,-67,115,-65,-62,-118,-143,-119,-133,-212,-201,115,-114,-107,-73,-213,-141,-142,-202,-145,-144,-71,-70,-140,]),'LOWER':([0,2,4,17,18,19,30,34,36,38,43,45,48,52,53,57,61,81,86,88,89,91,96,97,98,108,109,110,113,114,115,116,117,121,122,123,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,149,156,162,192,194,196,198,201,205,213,217,218,222,223,225,227,231,232,234,238,240,242,247,250,252,254,285,297,298,301,309,327,328,330,335,336,338,341,],[11,11,11,-3,11,-9,11,11,-7,-5,-8,-6,11,11,-120,-121,11,11,11,11,-157,11,11,11,11,-116,-115,11,-84,-110,-112,-117,-111,11,-4,-74,11,-97,-95,-96,11,-104,-100,-105,-99,-98,-101,-103,-102,11,-108,11,-109,11,11,-158,-10,-45,11,-49,11,-85,11,11,11,11,11,11,11,11,11,-181,-75,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'PRED':([0,2,4,17,18,19,30,34,36,38,43,45,48,52,53,57,61,81,86,88,89,91,96,97,98,108,109,110,113,114,115,116,117,121,122,123,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,149,156,162,192,194,196,198,201,205,213,217,218,222,223,225,227,231,232,234,238,240,242,247,250,252,254,285,297,298,301,309,327,328,330,335,336,338,341,],[33,33,33,-3,33,-9,33,33,-7,-5,-8,-6,33,33,-120,-121,33,33,33,33,-157,33,33,33,33,-116,-115,33,-84,-110,-112,-117,-111,33,-4,-74,33,-97,-95,-96,33,-104,-100,-105,-99,-98,-101,-103,-102,33,-108,33,-109,33,33,-158,-10,-45,33,-49,33,-85,33,33,33,33,33,33,33,33,33,-181,-75,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'FOR':([4,],[87,]),'LOC':([164,165,168,169,172,173,174,175,177,179,180,181,224,302,303,304,305,321,322,340,],[-26,-24,-23,-25,-36,-20,-27,-22,-35,-19,-21,-18,-34,-29,-28,-37,325,-39,-44,345,]),'SMC':([1,2,7,9,12,14,15,17,19,20,22,23,25,27,29,31,36,38,40,42,43,45,46,47,49,50,51,54,55,56,58,59,60,62,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,85,90,92,93,100,101,103,104,105,107,118,122,123,124,125,126,127,148,150,151,154,155,157,158,162,164,165,168,169,172,173,174,175,177,178,179,180,181,186,188,189,192,196,200,209,210,211,212,214,219,220,224,228,229,230,232,234,235,236,237,241,244,245,246,248,249,257,258,259,261,264,277,282,284,287,293,294,296,302,303,304,307,308,313,315,318,320,321,322,326,328,329,334,337,338,339,342,343,344,347,348,],[-79,-208,-134,-200,-135,-138,-81,-3,-9,-78,-199,-146,-80,-147,-136,-137,-7,-5,-82,123,-8,-6,-77,-68,-139,-56,-58,-69,-63,-124,-113,-60,-64,-92,-57,-209,-66,-91,-106,-122,-55,-59,-211,-123,-61,-140,-67,-93,-65,-62,-118,147,-163,-164,-159,-11,162,-46,192,-127,196,-50,-210,-143,-4,-74,-207,-76,-119,-133,-165,-180,-167,-168,-166,-162,-212,-10,-26,-24,-23,-25,-36,-20,-27,-22,-35,-14,-19,-21,-18,232,234,-201,-45,-49,-83,-94,-114,-107,-73,-160,-213,-12,-34,-13,-141,-142,-181,-75,-202,-48,-47,-148,-51,-54,-52,-145,-144,-71,-70,-161,-178,-177,-17,309,-149,-53,-125,-179,-169,-29,-28,-37,327,328,-126,-171,-176,-170,-39,-44,335,-189,-182,-172,-185,-188,-184,-186,-183,-196,-187,-197,]),'RPAREN':([7,9,12,14,22,29,31,47,49,50,51,54,55,56,58,59,60,62,64,66,67,68,69,70,71,73,74,75,76,77,78,79,80,91,98,118,126,127,146,158,159,160,161,164,165,168,169,172,173,174,175,177,179,180,181,189,190,209,210,211,212,219,224,229,230,233,235,248,249,257,258,266,273,274,278,279,281,283,293,302,303,304,305,306,313,321,322,324,325,332,340,345,346,],[-134,-200,-135,-138,-199,-136,-137,-68,-139,-56,-58,-69,-63,-124,-113,-60,-64,-92,-57,-66,-91,-106,-122,-55,-59,-123,-61,-140,-67,-93,-65,-62,-118,158,189,-143,-119,-133,212,-212,-203,219,-205,-26,-24,-23,-25,-36,-20,-27,-22,-35,-19,-21,-18,-201,235,-94,-114,-107,-73,-213,-34,-141,-142,282,-202,-145,-144,-71,-70,-204,302,303,-31,-33,307,-190,-125,-29,-28,-37,-193,-192,-126,-39,-44,-194,-195,-191,344,-198,348,]),'LT':([7,9,12,14,22,29,31,47,49,50,51,54,55,56,58,59,60,64,66,67,68,69,70,71,73,74,75,76,77,78,79,80,118,126,127,158,189,209,210,211,212,219,229,230,235,248,249,257,258,269,],[-134,-200,-135,-138,-199,-136,-137,-68,-139,-56,-58,-69,-63,-124,-113,-60,-64,-57,-66,134,-106,-122,-55,-59,-123,-61,-140,-67,-93,-65,-62,-118,-143,-119,-133,-212,-201,-94,-114,-107,-73,-213,-141,-142,-202,-145,-144,-71,-70,-140,]),'$end':([0,17,19,21,24,34,36,38,43,45,122,123,162,192,196,232,234,],[-223,-3,-9,-2,0,-1,-7,-5,-8,-6,-4,-74,-10,-45,-49,-181,-75,]),'READ':([0,2,4,17,18,19,30,34,36,38,43,45,48,52,53,57,61,81,86,88,89,91,96,97,98,108,109,110,113,114,115,116,117,121,122,123,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,149,156,162,192,194,196,198,201,205,213,217,218,222,223,225,227,231,232,234,238,240,242,247,250,252,254,285,297,298,301,309,327,328,330,335,336,338,341,],[39,39,39,-3,39,-9,39,39,-7,-5,-8,-6,39,39,-120,-121,39,39,39,39,-157,39,39,39,39,-116,-115,39,-84,-110,-112,-117,-111,39,-4,-74,39,-97,-95,-96,39,-104,-100,-105,-99,-98,-101,-103,-102,39,-108,39,-109,39,39,-158,-10,-45,39,-49,39,-85,39,39,39,39,39,39,39,39,39,-181,-75,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'CHARCONST':([2,18,30,48,53,57,61,81,86,91,96,98,108,109,110,113,114,115,116,117,121,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,198,201,205,217,218,222,223,225,227,231,242,247,250,252,254,297,298,301,],[76,76,76,76,-120,-121,76,76,76,76,76,76,-116,-115,76,-84,-110,-112,-117,-111,76,76,-97,-95,-96,76,-104,-100,-105,-99,-98,-101,-103,-102,76,-108,76,-109,76,-85,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'DIV':([1,7,9,12,14,22,29,31,32,35,47,49,50,51,54,55,56,58,59,60,64,66,68,69,70,71,73,74,75,76,78,79,80,118,126,127,158,189,210,211,212,219,229,230,235,248,249,257,258,269,],[-139,-134,-200,-135,-138,-199,-136,-137,108,-140,-68,-139,-56,-58,-69,-63,-124,-113,-60,-64,-57,-66,108,-122,-55,-59,-123,-61,-140,-67,-65,-62,-118,-143,-119,-133,-212,-201,-114,108,-73,-213,-141,-142,-202,-145,-144,-71,-70,-140,]),'LENGTH':([0,2,4,17,18,19,30,34,36,38,43,45,48,52,53,57,61,81,86,88,89,91,96,97,98,108,109,110,113,114,115,116,117,121,122,123,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,149,156,162,192,194,196,198,201,205,213,217,218,222,223,225,227,231,232,234,238,240,242,247,250,252,254,285,297,298,301,309,327,328,330,335,336,338,341,],[41,41,41,-3,41,-9,41,41,-7,-5,-8,-6,41,41,-120,-121,41,41,41,41,-157,41,41,41,41,-116,-115,41,-84,-110,-112,-117,-111,41,-4,-74,41,-97,-95,-96,41,-104,-100,-105,-99,-98,-101,-103,-102,41,-108,41,-109,41,41,-158,-10,-45,41,-49,41,-85,41,41,41,41,41,41,41,41,41,-181,-75,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'COLON':([7,8,9,12,14,22,29,31,35,47,49,50,51,54,55,56,58,59,60,62,64,66,67,68,69,70,71,73,74,75,76,77,78,79,80,84,118,126,127,158,184,185,189,204,209,210,211,212,219,229,230,235,248,249,257,258,269,270,293,313,],[-134,97,-200,-135,-138,-199,-136,-137,-76,-68,-139,-56,-58,-69,-63,-124,-113,-60,-64,-92,-57,-66,-91,-106,-122,-55,-59,-123,-61,-140,-67,-93,-65,-62,-118,149,-143,-119,-133,-212,-32,231,-201,-32,-94,-114,-107,-73,-213,-141,-142,-202,-145,-144,-71,-70,-140,-32,-125,-126,]),'END':([17,19,36,38,43,45,122,123,162,192,196,232,234,309,327,330,335,336,341,],[-3,-9,-7,-5,-8,-6,-4,-74,-10,-45,-49,-181,-75,329,337,339,342,343,347,]),'INTCONST':([2,18,30,48,53,57,61,81,86,91,96,98,108,109,110,113,114,115,116,117,121,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,198,201,205,217,218,222,223,225,226,227,231,242,247,250,252,254,297,298,301,],[60,60,60,60,-120,-121,60,60,60,60,60,60,-116,-115,60,-84,-110,-112,-117,-111,60,60,-97,-95,-96,60,-104,-100,-105,-99,-98,-101,-103,-102,60,-108,60,-109,60,-85,60,60,60,60,60,60,276,60,60,60,60,60,60,60,60,60,60,]),'NUM':([0,2,4,17,18,19,30,34,36,38,43,45,48,52,53,57,61,81,86,88,89,91,96,97,98,108,109,110,113,114,115,116,117,121,122,123,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,149,156,162,192,194,196,198,201,205,213,217,218,222,223,225,227,231,232,234,238,240,242,247,250,252,254,285,297,298,301,309,327,328,330,335,336,338,341,],[3,3,3,-3,3,-9,3,3,-7,-5,-8,-6,3,3,-120,-121,3,3,3,3,-157,3,3,3,3,-116,-115,3,-84,-110,-112,-117,-111,3,-4,-74,3,-97,-95,-96,3,-104,-100,-105,-99,-98,-101,-103,-102,3,-108,3,-109,3,3,-158,-10,-45,3,-49,3,-85,3,3,3,3,3,3,3,3,3,-181,-75,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'OD':([4,88,89,123,147,156,213,234,],[90,157,-157,-74,214,-158,259,-75,]),'FALSE':([2,18,30,48,53,57,61,81,86,91,96,98,108,109,110,113,114,115,116,117,121,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,198,201,205,217,218,222,223,225,227,231,242,247,250,252,254,297,298,301,],[78,78,78,78,-120,-121,78,78,78,78,78,78,-116,-115,78,-84,-110,-112,-117,-111,78,78,-97,-95,-96,78,-104,-100,-105,-99,-98,-101,-103,-102,78,-108,78,-109,78,-85,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'MOD':([1,7,9,12,14,22,29,31,32,35,47,49,50,51,54,55,56,58,59,60,64,66,68,69,70,71,73,74,75,76,78,79,80,118,126,127,158,189,210,211,212,219,229,230,235,248,249,257,258,269,],[-139,-134,-200,-135,-138,-199,-136,-137,116,-140,-68,-139,-56,-58,-69,-63,-124,-113,-60,-64,-57,-66,116,-122,-55,-59,-123,-61,-140,-67,-65,-62,-118,-143,-119,-133,-212,-201,-114,116,-73,-213,-141,-142,-202,-145,-144,-71,-70,-140,]),'SUCC':([0,2,4,17,18,19,30,34,36,38,43,45,48,52,53,57,61,81,86,88,89,91,96,97,98,108,109,110,113,114,115,116,117,121,122,123,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,149,156,162,192,194,196,198,201,205,213,217,218,222,223,225,227,231,232,234,238,240,242,247,250,252,254,285,297,298,301,309,327,328,330,335,336,338,341,],[37,37,37,-3,37,-9,37,37,-7,-5,-8,-6,37,37,-120,-121,37,37,37,37,-157,37,37,37,37,-116,-115,37,-84,-110,-112,-117,-111,37,-4,-74,37,-97,-95,-96,37,-104,-100,-105,-99,-98,-101,-103,-102,37,-108,37,-109,37,37,-158,-10,-45,37,-49,37,-85,37,37,37,37,37,37,37,37,37,-181,-75,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'NOTEQUAL':([7,9,12,14,22,29,31,47,49,50,51,54,55,56,58,59,60,64,66,67,68,69,70,71,73,74,75,76,77,78,79,80,118,126,127,158,189,209,210,211,212,219,229,230,235,248,249,257,258,269,],[-134,-200,-135,-138,-199,-136,-137,-68,-139,-56,-58,-69,-63,-124,-113,-60,-64,-57,-66,139,-106,-122,-55,-59,-123,-61,-140,-67,-93,-65,-62,-118,-143,-119,-133,-212,-201,-94,-114,-107,-73,-213,-141,-142,-202,-145,-144,-71,-70,-140,]),'LPAREN':([2,3,5,10,11,13,18,28,30,33,35,37,39,41,48,53,57,61,75,81,86,91,96,98,108,109,110,113,114,115,116,117,121,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,164,168,169,171,174,175,187,198,201,205,217,218,222,223,225,227,231,242,247,250,252,254,262,269,297,298,301,310,],[81,-214,91,98,-218,-217,81,-221,81,-215,-206,-216,-220,-219,81,-120,-121,81,-206,81,81,81,81,81,-116,-115,81,-84,-110,-112,-117,-111,81,81,-97,-95,-96,81,-104,-100,-105,-99,-98,-101,-103,-102,81,-108,81,-109,-26,223,-25,225,-27,-30,233,81,-85,81,81,81,81,81,81,81,81,81,81,81,81,81,-30,-30,81,81,81,331,]),'FI':([7,9,12,14,22,29,31,47,49,50,51,54,55,56,58,59,60,62,64,66,67,68,69,70,71,73,74,75,76,77,78,79,80,89,118,123,126,127,156,158,189,194,195,209,210,211,212,219,229,230,234,235,238,239,240,243,248,249,256,257,258,285,289,291,293,312,313,333,],[-134,-200,-135,-138,-199,-136,-137,-68,-139,-56,-58,-69,-63,-124,-113,-60,-64,-92,-57,-66,-91,-106,-122,-55,-59,-123,-61,-140,-67,-93,-65,-62,-118,-157,-143,-74,-119,-133,-158,-212,-201,-150,241,-94,-114,-107,-73,-213,-141,-142,-75,-202,-151,284,-152,-154,-145,-144,293,-71,-70,-153,-129,313,-125,-155,-126,-156,]),'GT':([7,9,12,14,22,29,31,47,49,50,51,54,55,56,58,59,60,64,66,67,68,69,70,71,73,74,75,76,77,78,79,80,118,126,127,158,189,209,210,211,212,219,229,230,235,248,249,257,258,269,],[-134,-200,-135,-138,-199,-136,-137,-68,-139,-56,-58,-69,-63,-124,-113,-60,-64,-57,-66,141,-106,-122,-55,-59,-123,-61,-140,-67,-93,-65,-62,-118,-143,-119,-133,-212,-201,-94,-114,-107,-73,-213,-141,-142,-202,-145,-144,-71,-70,-140,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'builtin_name':([0,2,4,18,30,34,48,52,61,81,86,88,91,96,97,98,110,121,129,133,142,144,147,149,194,198,205,213,217,218,222,223,225,227,231,238,240,242,247,250,252,254,285,297,298,301,309,327,328,330,335,336,338,341,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'relational_operator':([67,],[131,]),'boolean_literal':([2,18,30,48,61,81,86,91,96,98,110,121,129,133,142,144,198,205,217,218,222,223,225,227,231,242,247,250,252,254,297,298,301,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'call_action':([0,2,4,18,30,34,48,52,61,81,86,88,91,96,97,98,110,121,129,133,142,144,147,149,194,198,205,213,217,218,222,223,225,227,231,238,240,242,247,250,252,254,285,297,298,301,309,327,328,330,335,336,338,341,],[1,49,1,49,49,1,49,49,49,49,49,1,49,49,1,49,49,49,49,49,49,49,1,1,1,49,49,1,49,49,49,49,49,49,49,1,1,49,49,49,49,49,1,49,49,49,1,1,1,1,1,1,1,1,]),'operand0':([2,18,30,61,81,86,91,96,98,110,121,129,198,205,217,218,222,223,225,227,231,242,247,250,252,254,297,298,301,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'value_array_element':([2,18,30,48,61,81,86,91,96,98,110,121,129,133,142,144,198,205,217,218,222,223,225,227,231,242,247,250,252,254,297,298,301,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'monadic_operator':([2,18,30,61,81,86,91,96,98,110,121,129,133,142,144,198,205,217,218,222,223,225,227,231,242,247,250,252,254,297,298,301,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'id_list':([6,16,26,163,193,197,233,311,],[94,99,106,94,99,106,280,280,]),'procedure_definition':([97,],[186,]),'array_mode':([94,106,170,191,280,300,331,],[172,172,172,172,172,172,172,]),'location_name':([0,2,4,18,30,34,48,52,61,81,86,88,91,96,97,98,110,121,129,133,142,144,147,149,194,198,205,213,217,218,222,223,225,227,231,238,240,242,247,250,252,254,285,297,298,301,309,327,328,330,335,336,338,341,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'label':([0,4,34,44,88,147,194,213,238,240,285,309,327,328,330,335,336,338,341,],[8,84,8,124,84,84,84,84,84,84,84,8,8,8,8,8,8,8,8,]),'syn_list':([26,],[104,]),'result_spec':([282,307,],[308,326,]),'builtin_call':([0,2,4,18,30,34,48,52,61,81,86,88,91,96,97,98,110,121,129,133,142,144,147,149,194,198,205,213,217,218,222,223,225,227,231,238,240,242,247,250,252,254,285,297,298,301,309,327,328,330,335,336,338,341,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'string_literal':([2,18,30,48,61,81,86,91,96,98,110,121,129,133,142,144,198,205,217,218,222,223,225,227,231,242,247,250,252,254,297,298,301,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'end_value':([265,295,299,319,],[296,315,320,334,]),'result_attribute':([340,],[346,]),'array_slice':([0,2,4,18,30,34,48,52,61,81,86,88,91,96,97,98,110,121,129,133,142,144,147,149,194,198,205,213,217,218,222,223,225,227,231,238,240,242,247,250,252,254,285,297,298,301,309,327,328,330,335,336,338,341,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'return_action':([0,4,34,88,97,147,149,194,213,238,240,285,309,327,328,330,335,336,338,341,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'statement':([0,34,309,327,328,330,335,336,338,341,],[17,122,17,17,17,122,17,122,122,122,]),'discrete_mode':([94,106,170,191,216,222,260,280,300,301,331,],[179,179,179,179,261,268,294,179,179,268,179,]),'boolean_expression':([18,61,86,242,254,],[102,128,150,286,292,]),'procedure_statement':([0,34,309,327,328,330,335,336,338,341,],[19,19,19,19,19,19,19,19,19,19,]),'empty':([0,],[21,]),'array_primitive_value':([2,18,30,48,61,81,86,91,96,98,110,121,129,133,142,144,198,205,217,218,222,223,225,227,231,242,247,250,252,254,297,298,301,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'value_array_slice':([2,18,30,48,61,81,86,91,96,98,110,121,129,133,142,144,198,205,217,218,222,223,225,227,231,242,247,250,252,254,297,298,301,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'exit_action':([0,4,34,88,97,147,149,194,213,238,240,285,309,327,328,330,335,336,338,341,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'bracketed_action':([0,4,34,88,97,147,149,194,213,238,240,285,309,327,328,330,335,336,338,341,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'do_action':([0,4,34,88,97,147,149,194,213,238,240,285,309,327,328,330,335,336,338,341,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'membership_operator':([67,],[132,]),'operand2':([2,18,30,61,81,86,91,96,98,110,121,129,133,144,198,205,217,218,222,223,225,227,231,242,247,250,252,254,297,298,301,],[68,68,68,68,68,68,68,68,68,68,68,68,68,211,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'operator1':([67,],[133,]),'program':([0,],[24,]),'primitive_value':([2,18,30,48,61,81,86,91,96,98,110,121,129,133,142,144,198,205,217,218,222,223,225,227,231,242,247,250,252,254,297,298,301,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'literal':([2,18,30,48,61,81,86,91,96,98,110,121,129,133,142,144,198,205,217,218,222,223,225,227,231,242,247,250,252,254,297,298,301,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'string_concatenation_operator':([32,77,209,],[119,145,145,]),'integer_literal':([2,18,30,48,61,81,86,91,96,98,110,121,129,133,142,144,198,205,217,218,222,223,225,227,231,242,247,250,252,254,297,298,301,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'expression':([2,18,30,61,81,86,91,96,98,110,121,129,198,205,217,218,222,223,225,227,231,242,247,250,252,254,297,298,301,],[72,103,72,103,146,103,161,184,161,200,204,204,245,251,264,161,270,270,270,277,279,103,245,288,289,103,317,264,270,]),'location':([0,2,4,18,30,34,48,52,61,81,86,88,91,96,97,98,110,121,129,133,142,144,147,149,194,198,205,213,217,218,222,223,225,227,231,238,240,242,247,250,252,254,285,297,298,301,309,327,328,330,335,336,338,341,],[32,73,32,73,73,32,73,127,73,73,73,32,73,73,32,73,73,73,73,73,73,73,32,32,32,73,73,32,73,73,73,73,73,73,73,32,32,73,73,73,73,73,32,73,73,73,32,32,32,32,32,32,32,32,]),'reference_mode':([94,106,170,191,280,300,331,],[173,173,173,173,173,173,173,]),'result_action':([0,4,34,88,97,147,149,194,213,238,240,285,309,327,328,330,335,336,338,341,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'declaration_statement':([0,34,309,327,328,330,335,336,338,341,],[38,38,38,38,38,38,38,38,38,38,]),'arithmetic_additive_operator':([32,77,209,],[111,143,143,]),'action_statement_list':([4,147,194,240,],[88,213,238,285,]),'mode':([94,106,170,191,280,300,331,],[178,199,224,236,305,322,340,]),'arithmetic_multiplicative_operator':([32,68,211,],[120,142,142,]),'action':([0,4,34,88,97,147,149,194,213,238,240,285,309,327,328,330,335,336,338,341,],[42,42,42,42,188,42,188,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'upper_bound':([231,],[278,]),'operand1':([2,18,30,61,81,86,91,96,98,110,121,129,133,198,205,217,218,222,223,225,227,231,242,247,250,252,254,297,298,301,],[77,77,77,77,77,77,77,77,77,77,77,77,209,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'newmode_list':([16,],[101,]),'closed_dyadic_operator':([32,],[112,]),'newmode_statement':([0,34,309,327,328,330,335,336,338,341,],[45,45,45,45,45,45,45,45,45,45,]),'iteration':([87,],[155,]),'char_literal':([2,18,30,48,61,81,86,91,96,98,110,121,129,133,142,144,198,205,217,218,222,223,225,227,231,242,247,250,252,254,297,298,301,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'range_enumeration':([87,],[154,]),'parameter_list':([91,98,218,],[160,190,266,]),'assignment_action':([0,4,34,88,97,147,149,194,213,238,240,285,309,327,328,330,335,336,338,341,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'step_enumeration':([87,],[151,]),'else_clause':([195,312,],[239,333,]),'integer_expression':([96,297,],[182,316,]),'control_part':([4,],[82,]),'elseif_expression':([206,253,],[255,290,]),'literal_range':([96,121,129,222,223,225,301,],[183,202,207,267,273,274,267,]),'discrete_mode_name':([94,106,170,191,216,222,260,280,300,301,331,],[171,171,171,171,171,171,171,171,171,171,171,]),'else_expression':([206,253,],[256,291,]),'parenthesized_expression':([2,18,30,48,61,81,86,91,96,98,110,121,129,133,142,144,198,205,217,218,222,223,225,227,231,242,247,250,252,254,297,298,301,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'discrete_range_mode':([94,106,170,191,216,222,260,280,300,301,331,],[165,165,165,165,165,165,165,165,165,165,165,]),'then_clause':([102,286,],[195,312,]),'syn_definition':([26,197,],[105,244,]),'assigning_operator':([32,],[110,]),'expression_list':([121,129,],[203,208,]),'referenced_location':([2,18,30,48,61,81,86,91,96,98,110,121,129,133,142,144,198,205,217,218,222,223,225,227,231,242,247,250,252,254,297,298,301,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'declaration_list':([6,],[93,]),'then_expression':([128,292,],[206,314,]),'operand3':([2,18,30,61,81,86,91,96,98,110,121,129,133,142,144,198,205,217,218,222,223,225,227,231,242,247,250,252,254,297,298,301,],[58,58,58,58,58,58,58,58,58,58,58,58,58,210,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'while_control':([4,83,],[85,148,]),'for_control':([4,],[83,]),'basic_mode':([94,106,170,191,216,222,260,280,300,301,331,],[168,168,168,168,168,168,168,168,168,168,168,]),'conditional_expression':([2,18,30,61,81,86,91,96,98,110,121,129,198,205,217,218,222,223,225,227,231,242,247,250,252,254,297,298,301,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'if_action':([0,4,34,88,97,147,149,194,213,238,240,285,309,327,328,330,335,336,338,341,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'index_mode':([222,301,],[272,323,]),'result':([2,30,],[65,107,]),'string_reference':([0,2,4,18,30,34,48,52,61,81,86,88,91,96,97,98,110,121,129,133,142,144,147,149,194,198,205,213,217,218,222,223,225,227,231,238,240,242,247,250,252,254,285,297,298,301,309,327,328,330,335,336,338,341,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'discrete_expression':([217,298,],[263,318,]),'step_value':([265,],[299,]),'operator2':([77,209,],[144,144,]),'element_node':([300,],[321,]),'array_element':([0,2,4,18,30,34,48,52,61,81,86,88,91,96,97,98,110,121,129,133,142,144,147,149,194,198,205,213,217,218,222,223,225,227,231,238,240,242,247,250,252,254,285,297,298,301,309,327,328,330,335,336,338,341,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'formal_parameter_list':([233,311,],[281,332,]),'initialization':([178,],[228,]),'dereferenced_reference':([0,2,4,18,30,34,48,52,61,81,86,88,91,96,97,98,110,121,129,133,142,144,147,149,194,198,205,213,217,218,222,223,225,227,231,238,240,242,247,250,252,254,285,297,298,301,309,327,328,330,335,336,338,341,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'elseif_clause':([195,312,],[243,243,]),'statement_list':([0,309,327,328,335,],[34,330,336,338,341,]),'procedure_name':([0,2,4,18,30,34,48,52,61,81,86,88,91,96,97,98,110,121,129,133,142,144,147,149,194,198,205,213,217,218,222,223,225,227,231,238,240,242,247,250,252,254,285,297,298,301,309,327,328,330,335,336,338,341,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'synonym_statement':([0,34,309,327,328,330,335,336,338,341,],[36,36,36,36,36,36,36,36,36,36,]),'mode_definition':([16,193,],[100,237,]),'parameter_attribute':([305,],[324,]),'start_value':([217,],[265,]),'elseif_expression_list':([206,],[253,]),'string_mode':([94,106,170,191,280,300,331,],[177,177,177,177,177,177,177,]),'loop_counter':([87,],[152,]),'declaration':([6,163,],[92,220,]),'mode_name':([94,106,170,191,280,300,331,],[181,181,181,181,181,181,181,]),'constant_expression':([198,247,],[246,287,]),'parameter_spec':([280,],[306,]),'lower_bound':([96,121,129,222,223,225,301,],[185,185,185,185,185,185,185,]),'action_statement':([0,4,34,88,147,194,213,238,240,285,309,327,328,330,335,336,338,341,],[43,89,43,156,89,89,156,156,89,156,43,43,43,43,43,43,43,43,]),'index_mode_list':([222,],[271,]),'composite_mode':([94,106,170,191,280,300,331,],[180,180,180,180,180,180,180,]),'parameter':([91,98,218,],[159,159,159,]),'procedure_call':([0,2,4,18,30,34,48,52,61,81,86,88,91,96,97,98,110,121,129,133,142,144,147,149,194,198,205,213,217,218,222,223,225,227,231,238,240,242,247,250,252,254,285,297,298,301,309,327,328,330,335,336,338,341,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'string_length':([226,],[275,]),'empty_literal':([2,18,30,48,61,81,86,91,96,98,110,121,129,133,142,144,198,205,217,218,222,223,225,227,231,242,247,250,252,254,297,298,301,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'operand4':([2,18,30,48,61,81,86,91,96,98,110,121,129,133,142,144,198,205,217,218,222,223,225,227,231,242,247,250,252,254,297,298,301,],[80,80,80,126,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'formal_parameter':([233,311,],[283,283,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','maraLyaParser.py',86),
  ('program -> empty','program',1,'p_program','maraLyaParser.py',87),
  ('statement_list -> statement','statement_list',1,'p_statement_list1','maraLyaParser.py',94),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list1','maraLyaParser.py',95),
  ('statement -> declaration_statement','statement',1,'p_statement','maraLyaParser.py',102),
  ('statement -> newmode_statement','statement',1,'p_statement','maraLyaParser.py',103),
  ('statement -> synonym_statement','statement',1,'p_statement','maraLyaParser.py',104),
  ('statement -> action_statement','statement',1,'p_statement','maraLyaParser.py',105),
  ('statement -> procedure_statement','statement',1,'p_statement','maraLyaParser.py',106),
  ('declaration_statement -> DCL declaration_list SMC','declaration_statement',3,'p_declaration_statement','maraLyaParser.py',114),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','maraLyaParser.py',118),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','maraLyaParser.py',119),
  ('declaration -> id_list mode initialization','declaration',3,'p_declaration1','maraLyaParser.py',126),
  ('declaration -> id_list mode','declaration',2,'p_declaration2','maraLyaParser.py',130),
  ('id_list -> ID','id_list',1,'p_id_list','maraLyaParser.py',134),
  ('id_list -> id_list COMMA ID','id_list',3,'p_id_list','maraLyaParser.py',135),
  ('initialization -> EQUALS expression','initialization',2,'p_initialization','maraLyaParser.py',142),
  ('mode -> mode_name','mode',1,'p_mode','maraLyaParser.py',150),
  ('mode -> discrete_mode','mode',1,'p_mode','maraLyaParser.py',151),
  ('mode -> reference_mode','mode',1,'p_mode','maraLyaParser.py',152),
  ('mode -> composite_mode','mode',1,'p_mode','maraLyaParser.py',153),
  ('mode_name -> ID','mode_name',1,'p_mode_name','maraLyaParser.py',157),
  ('discrete_mode -> basic_mode','discrete_mode',1,'p_discrete_mode','maraLyaParser.py',161),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','maraLyaParser.py',162),
  ('basic_mode -> INT','basic_mode',1,'p_basic_mode','maraLyaParser.py',166),
  ('basic_mode -> BOOL','basic_mode',1,'p_basic_mode','maraLyaParser.py',167),
  ('basic_mode -> CHAR','basic_mode',1,'p_basic_mode','maraLyaParser.py',168),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','maraLyaParser.py',172),
  ('discrete_range_mode -> basic_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','maraLyaParser.py',173),
  ('discrete_mode_name -> ID','discrete_mode_name',1,'p_discrete_mode_name','maraLyaParser.py',177),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_litereal_range','maraLyaParser.py',181),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','maraLyaParser.py',185),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','maraLyaParser.py',189),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','maraLyaParser.py',193),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','maraLyaParser.py',197),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','maraLyaParser.py',198),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','maraLyaParser.py',202),
  ('string_length -> INTCONST','string_length',1,'p_string_length','maraLyaParser.py',206),
  ('array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_node','array_mode',5,'p_array_mode','maraLyaParser.py',210),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','maraLyaParser.py',215),
  ('index_mode_list -> index_mode_list COMMA index_mode','index_mode_list',3,'p_index_mode_list','maraLyaParser.py',216),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','maraLyaParser.py',223),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','maraLyaParser.py',224),
  ('element_node -> mode','element_node',1,'p_element_node','maraLyaParser.py',228),
  ('newmode_statement -> TYPE newmode_list SMC','newmode_statement',3,'p_newmode_statement','maraLyaParser.py',236),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','maraLyaParser.py',240),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','maraLyaParser.py',241),
  ('mode_definition -> id_list EQUALS mode','mode_definition',3,'p_mode_definition','maraLyaParser.py',248),
  ('synonym_statement -> SYN syn_list SMC','synonym_statement',3,'p_synonym_statement','maraLyaParser.py',252),
  ('syn_list -> syn_definition','syn_list',1,'p_syn_list','maraLyaParser.py',260),
  ('syn_list -> syn_list COMMA syn_definition','syn_list',3,'p_syn_list','maraLyaParser.py',261),
  ('syn_definition -> id_list EQUALS constant_expression','syn_definition',3,'p_syn_definition','maraLyaParser.py',268),
  ('syn_definition -> id_list mode EQUALS constant_expression','syn_definition',4,'p_syn_definition2','maraLyaParser.py',272),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','maraLyaParser.py',276),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','maraLyaParser.py',284),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','maraLyaParser.py',285),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','maraLyaParser.py',286),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','maraLyaParser.py',287),
  ('literal -> integer_literal','literal',1,'p_literal','maraLyaParser.py',291),
  ('literal -> boolean_literal','literal',1,'p_literal','maraLyaParser.py',292),
  ('literal -> char_literal','literal',1,'p_literal','maraLyaParser.py',293),
  ('literal -> empty_literal','literal',1,'p_literal','maraLyaParser.py',294),
  ('literal -> string_literal','literal',1,'p_literal','maraLyaParser.py',295),
  ('integer_literal -> INTCONST','integer_literal',1,'p_integer_literal','maraLyaParser.py',299),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','maraLyaParser.py',303),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','maraLyaParser.py',304),
  ('char_literal -> CHARCONST','char_literal',1,'p_char_literal','maraLyaParser.py',308),
  ('string_literal -> STRINGCONST','string_literal',1,'p_string_literal','maraLyaParser.py',312),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','maraLyaParser.py',316),
  ('value_array_element -> array_primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','maraLyaParser.py',320),
  ('value_array_slice -> array_primitive_value LBRACKET literal_range RBRACKET','value_array_slice',4,'p_value_array_slice','maraLyaParser.py',324),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','maraLyaParser.py',328),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','maraLyaParser.py',332),
  ('action_statement -> action SMC','action_statement',2,'p_action_statement','maraLyaParser.py',340),
  ('action_statement -> label COLON action SMC','action_statement',4,'p_action_statement','maraLyaParser.py',341),
  ('label -> ID','label',1,'p_label','maraLyaParser.py',348),
  ('action -> assignment_action','action',1,'p_action','maraLyaParser.py',352),
  ('action -> bracketed_action','action',1,'p_action','maraLyaParser.py',353),
  ('action -> call_action','action',1,'p_action','maraLyaParser.py',354),
  ('action -> exit_action','action',1,'p_action','maraLyaParser.py',355),
  ('action -> return_action','action',1,'p_action','maraLyaParser.py',356),
  ('action -> result_action','action',1,'p_action','maraLyaParser.py',357),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','maraLyaParser.py',365),
  ('assigning_operator -> EQUALS','assigning_operator',1,'p_assigning_operator','maraLyaParser.py',369),
  ('assigning_operator -> closed_dyadic_operator EQUALS','assigning_operator',2,'p_assigning_operator','maraLyaParser.py',370),
  ('closed_dyadic_operator -> arithmetic_additive_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','maraLyaParser.py',377),
  ('closed_dyadic_operator -> arithmetic_multiplicative_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','maraLyaParser.py',378),
  ('closed_dyadic_operator -> string_concatenation_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','maraLyaParser.py',379),
  ('expression_list -> expression','expression_list',1,'p_expression_list','maraLyaParser.py',383),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','maraLyaParser.py',384),
  ('expression -> operand0','expression',1,'p_expression','maraLyaParser.py',391),
  ('expression -> conditional_expression','expression',1,'p_expression','maraLyaParser.py',392),
  ('operand0 -> operand1','operand0',1,'p_operand0','maraLyaParser.py',396),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','maraLyaParser.py',397),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','maraLyaParser.py',404),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','maraLyaParser.py',405),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','maraLyaParser.py',409),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','maraLyaParser.py',413),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','maraLyaParser.py',414),
  ('relational_operator -> ISEQUAL','relational_operator',1,'p_relational_operator','maraLyaParser.py',415),
  ('relational_operator -> NOTEQUAL','relational_operator',1,'p_relational_operator','maraLyaParser.py',416),
  ('relational_operator -> GT','relational_operator',1,'p_relational_operator','maraLyaParser.py',417),
  ('relational_operator -> GE','relational_operator',1,'p_relational_operator','maraLyaParser.py',418),
  ('relational_operator -> LT','relational_operator',1,'p_relational_operator','maraLyaParser.py',419),
  ('relational_operator -> LE','relational_operator',1,'p_relational_operator','maraLyaParser.py',420),
  ('operand1 -> operand2','operand1',1,'p_operand1','maraLyaParser.py',424),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1','maraLyaParser.py',425),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','maraLyaParser.py',432),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','maraLyaParser.py',433),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','maraLyaParser.py',437),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','maraLyaParser.py',438),
  ('string_concatenation_operator -> STRCONC','string_concatenation_operator',1,'p_string_concatenation_operator','maraLyaParser.py',442),
  ('operand2 -> operand3','operand2',1,'p_operand2','maraLyaParser.py',446),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','maraLyaParser.py',447),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','maraLyaParser.py',454),
  ('arithmetic_multiplicative_operator -> DIV','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','maraLyaParser.py',455),
  ('arithmetic_multiplicative_operator -> MOD','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','maraLyaParser.py',456),
  ('operand3 -> operand4','operand3',1,'p_operand3','maraLyaParser.py',460),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','maraLyaParser.py',461),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','maraLyaParser.py',468),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','maraLyaParser.py',469),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','maraLyaParser.py',473),
  ('operand4 -> location','operand4',1,'p_operand4','maraLyaParser.py',474),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','maraLyaParser.py',475),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','maraLyaParser.py',481),
  ('conditional_expression -> IF boolean_expression then_expression elseif_expression_list else_expression FI','conditional_expression',6,'p_conditional_expression2','maraLyaParser.py',485),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','maraLyaParser.py',489),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','maraLyaParser.py',493),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','maraLyaParser.py',497),
  ('elseif_expression_list -> elseif_expression','elseif_expression_list',1,'p_elseif_expression_list','maraLyaParser.py',501),
  ('elseif_expression_list -> elseif_expression_list elseif_expression','elseif_expression_list',2,'p_elseif_expression_list','maraLyaParser.py',502),
  ('elseif_expression -> ELSIF boolean_expression then_expression','elseif_expression',3,'p_elseif_expression','maraLyaParser.py',509),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','maraLyaParser.py',517),
  ('location -> location_name','location',1,'p_location','maraLyaParser.py',521),
  ('location -> string_reference','location',1,'p_location','maraLyaParser.py',522),
  ('location -> dereferenced_reference','location',1,'p_location','maraLyaParser.py',523),
  ('location -> array_element','location',1,'p_location','maraLyaParser.py',524),
  ('location -> array_slice','location',1,'p_location','maraLyaParser.py',525),
  ('location -> call_action','location',1,'p_location','maraLyaParser.py',526),
  ('location_name -> ID','location_name',1,'p_location_name','maraLyaParser.py',530),
  ('string_reference -> location_name LBRACKET integer_expression RBRACKET','string_reference',4,'p_string_reference','maraLyaParser.py',534),
  ('string_reference -> location_name LBRACKET literal_range RBRACKET','string_reference',4,'p_string_reference2','maraLyaParser.py',538),
  ('dereferenced_reference -> location ARROW','dereferenced_reference',2,'p_dereferenced_reference','maraLyaParser.py',542),
  ('array_element -> location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','maraLyaParser.py',546),
  ('array_slice -> location LBRACKET literal_range RBRACKET','array_slice',4,'p_array_slice','maraLyaParser.py',550),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','maraLyaParser.py',558),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','maraLyaParser.py',559),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','maraLyaParser.py',567),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action2','maraLyaParser.py',571),
  ('then_clause -> THEN','then_clause',1,'p_then_clause','maraLyaParser.py',575),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','maraLyaParser.py',576),
  ('else_clause -> ELSE','else_clause',1,'p_else_clause','maraLyaParser.py',583),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','maraLyaParser.py',584),
  ('else_clause -> elseif_clause','else_clause',1,'p_else_clause2','maraLyaParser.py',591),
  ('elseif_clause -> ELSIF boolean_expression then_clause','elseif_clause',3,'p_elseif_clause','maraLyaParser.py',595),
  ('elseif_clause -> ELSIF boolean_expression then_clause else_clause','elseif_clause',4,'p_elseif_clause2','maraLyaParser.py',599),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','maraLyaParser.py',604),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','maraLyaParser.py',605),
  ('do_action -> DO OD','do_action',2,'p_do_action','maraLyaParser.py',616),
  ('do_action -> DO control_part SMC OD','do_action',4,'p_do_action2','maraLyaParser.py',620),
  ('do_action -> DO control_part SMC action_statement_list OD','do_action',5,'p_do_action3','maraLyaParser.py',624),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action4','maraLyaParser.py',628),
  ('control_part -> for_control','control_part',1,'p_control_part','maraLyaParser.py',632),
  ('control_part -> while_control','control_part',1,'p_control_part','maraLyaParser.py',633),
  ('control_part -> for_control while_control','control_part',2,'p_control_part2','maraLyaParser.py',637),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','maraLyaParser.py',641),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','maraLyaParser.py',645),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','maraLyaParser.py',646),
  ('step_enumeration -> loop_counter EQUALS start_value end_value','step_enumeration',4,'p_step_enumeration','maraLyaParser.py',650),
  ('step_enumeration -> loop_counter EQUALS start_value step_value end_value','step_enumeration',5,'p_step_enumeration2','maraLyaParser.py',654),
  ('step_enumeration -> loop_counter EQUALS start_value DOWN end_value','step_enumeration',5,'p_step_enumeration3','maraLyaParser.py',658),
  ('step_enumeration -> loop_counter EQUALS start_value step_value DOWN end_value','step_enumeration',6,'p_step_enumeration4','maraLyaParser.py',662),
  ('loop_counter -> ID','loop_counter',1,'p_loop_counter','maraLyaParser.py',666),
  ('start_value -> discrete_expression','start_value',1,'p_start_value','maraLyaParser.py',670),
  ('step_value -> BY integer_expression','step_value',2,'p_step_value','maraLyaParser.py',674),
  ('end_value -> TO discrete_expression','end_value',2,'p_end_value','maraLyaParser.py',678),
  ('discrete_expression -> expression','discrete_expression',1,'p_discrete_expression','maraLyaParser.py',682),
  ('range_enumeration -> loop_counter IN discrete_mode','range_enumeration',3,'p_range_enumeration','maraLyaParser.py',686),
  ('range_enumeration -> loop_counter DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration2','maraLyaParser.py',690),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','maraLyaParser.py',694),
  ('procedure_statement -> label COLON procedure_definition SMC','procedure_statement',4,'p_procedure_statement','maraLyaParser.py',702),
  ('procedure_definition -> PROC LPAREN RPAREN SMC END','procedure_definition',5,'p_procedure_definition1','maraLyaParser.py',706),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SMC statement_list END','procedure_definition',7,'p_procedure_definition1','maraLyaParser.py',707),
  ('procedure_definition -> PROC LPAREN RPAREN SMC statement_list END','procedure_definition',6,'p_procedure_definition1','maraLyaParser.py',708),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SMC END','procedure_definition',6,'p_procedure_definition2','maraLyaParser.py',717),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SMC END','procedure_definition',7,'p_procedure_definition2','maraLyaParser.py',718),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SMC statement_list END','procedure_definition',8,'p_procedure_definition2','maraLyaParser.py',719),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SMC statement_list','procedure_definition',6,'p_procedure_definition3','maraLyaParser.py',728),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SMC','procedure_definition',5,'p_procedure_definition3','maraLyaParser.py',729),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','maraLyaParser.py',736),
  ('formal_parameter_list -> formal_parameter COMMA formal_parameter_list','formal_parameter_list',3,'p_formal_parameter_list','maraLyaParser.py',737),
  ('formal_parameter -> id_list parameter_spec','formal_parameter',2,'p_formal_parameter','maraLyaParser.py',744),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','maraLyaParser.py',748),
  ('parameter_spec -> mode parameter_attribute','parameter_spec',2,'p_parameter_spec','maraLyaParser.py',749),
  ('parameter_attribute -> LOC','parameter_attribute',1,'p_parameter_attribute','maraLyaParser.py',756),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','maraLyaParser.py',760),
  ('result_spec -> RETURNS LPAREN mode result_attribute RPAREN','result_spec',5,'p_result_spec','maraLyaParser.py',761),
  ('result_attribute -> LOC','result_attribute',1,'p_result_attribute','maraLyaParser.py',768),
  ('call_action -> procedure_call','call_action',1,'p_call_action','maraLyaParser.py',776),
  ('call_action -> builtin_call','call_action',1,'p_call_action','maraLyaParser.py',777),
  ('procedure_call -> procedure_name LPAREN RPAREN','procedure_call',3,'p_procedure_call','maraLyaParser.py',781),
  ('procedure_call -> procedure_name LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','maraLyaParser.py',782),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','maraLyaParser.py',789),
  ('parameter_list -> parameter COMMA parameter_list','parameter_list',3,'p_parameter_list','maraLyaParser.py',790),
  ('parameter -> expression','parameter',1,'p_parameter','maraLyaParser.py',797),
  ('procedure_name -> ID','procedure_name',1,'p_procedure_name','maraLyaParser.py',801),
  ('exit_action -> EXIT label','exit_action',2,'p_exit_action','maraLyaParser.py',805),
  ('return_action -> RETURN','return_action',1,'p_return_action','maraLyaParser.py',809),
  ('return_action -> RETURN result','return_action',2,'p_return_action','maraLyaParser.py',810),
  ('result_action -> RESULT result','result_action',2,'p_result_action','maraLyaParser.py',817),
  ('result -> expression','result',1,'p_result','maraLyaParser.py',821),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','maraLyaParser.py',825),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','maraLyaParser.py',826),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','maraLyaParser.py',833),
  ('builtin_name -> PRED','builtin_name',1,'p_builtin_name','maraLyaParser.py',834),
  ('builtin_name -> SUCC','builtin_name',1,'p_builtin_name','maraLyaParser.py',835),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','maraLyaParser.py',836),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','maraLyaParser.py',837),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','maraLyaParser.py',838),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','maraLyaParser.py',839),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','maraLyaParser.py',840),
  ('integer_expression -> expression','integer_expression',1,'p_integer_expression','maraLyaParser.py',849),
  ('empty -> <empty>','empty',0,'p_empty','maraLyaParser.py',856),
]
