
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '503766C8206E2C6313BCE55A42A47881'
    
_lr_action_items = {'CHAR':([47,50,122,136,183,205,207,232,277,286,290,291,327,],[138,-15,138,138,138,-16,138,138,138,138,138,138,138,]),'$end':([0,1,6,8,12,23,32,36,38,41,46,118,143,184,203,241,242,],[-222,-2,0,-8,-9,-1,-3,-7,-6,-5,-74,-4,-10,-45,-49,-75,-181,]),'PLUS':([13,16,19,22,25,27,28,30,33,42,52,55,57,58,59,60,61,63,64,65,66,67,70,72,74,76,78,79,80,81,82,83,84,85,107,145,161,169,195,197,222,223,224,227,228,238,240,244,245,246,256,271,272,],[-139,109,-200,-137,-136,-140,-135,-138,-134,-199,-113,-124,-57,-69,-60,-56,-139,-55,-61,-123,-66,-68,-140,-118,-64,109,-58,-62,-106,-65,-63,-59,-122,-67,-143,-119,-133,-211,-140,-201,109,-73,-107,-114,-212,-144,-145,-202,-142,-141,-140,-70,-71,]),'DO':([0,8,11,12,23,32,36,38,41,46,90,91,118,119,143,146,174,176,177,184,203,214,217,230,241,242,263,308,325,328,330,335,337,340,343,],[11,-8,11,-9,11,-3,-7,-6,-5,-74,-157,11,-4,11,-10,11,-158,11,11,-45,-49,11,11,11,-75,-181,11,11,11,11,11,11,11,11,11,]),'COLON':([19,22,24,25,27,28,30,33,42,52,55,56,57,58,59,60,61,62,63,64,65,66,67,70,72,74,76,78,79,80,81,82,83,84,85,94,107,145,161,169,188,189,197,198,222,223,224,227,228,238,240,244,245,246,251,256,271,272,299,317,],[-200,-137,119,-136,-76,-135,-138,-134,-199,-113,-124,-91,-57,-69,-60,-56,-139,-92,-55,-61,-123,-66,-68,-140,-118,-64,-93,-58,-62,-106,-65,-63,-59,-122,-67,176,-143,-119,-133,-211,239,-32,-201,-32,-94,-73,-107,-114,-212,-144,-145,-202,-142,-141,-32,-140,-70,-71,-125,-126,]),'COMMA':([19,22,25,28,30,33,42,47,48,49,50,52,55,56,57,58,59,60,61,62,63,64,65,66,67,70,72,74,76,78,79,80,81,82,83,84,85,98,99,100,107,122,123,124,125,126,128,130,131,132,133,134,137,138,139,140,141,145,161,169,170,171,187,189,197,205,209,211,213,222,223,224,225,227,228,235,236,238,240,244,245,246,247,248,250,253,254,255,257,259,271,272,281,282,283,286,287,288,289,292,293,299,310,311,313,314,315,317,331,332,],[-200,-137,-136,-135,-138,-134,-199,127,144,-11,-15,-113,-124,-91,-57,-69,-60,-56,-139,-92,-55,-61,-123,-66,-68,-140,-118,-64,-93,-58,-62,-106,-65,-63,-59,-122,-67,127,185,-46,-143,127,204,-50,-36,-20,-23,-18,-19,-24,-35,-26,-25,-27,-14,-21,-22,-119,-133,-211,-205,229,237,-89,-201,-16,-34,-13,-12,-94,-73,-107,237,-114,-212,-48,-47,-144,-145,-202,-142,-141,-54,-52,-51,-40,-42,290,-43,-17,-70,-71,-90,-31,-33,127,312,-53,-29,-28,-37,-125,-192,-193,-41,-44,-39,-126,-195,-194,]),'DCL':([0,8,12,23,32,36,38,41,46,118,143,184,203,241,242,308,325,328,330,335,337,340,343,],[3,-8,-9,3,-3,-7,-6,-5,-74,-4,-10,-45,-49,-75,-181,3,3,3,3,3,3,3,3,]),'THEN':([19,22,25,28,30,33,42,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,70,72,73,74,76,78,79,80,81,82,83,84,85,107,145,148,161,169,197,222,223,224,227,228,238,240,244,245,246,262,271,272,297,299,317,],[-200,-137,-136,-135,-138,-134,-199,-113,146,-124,-91,-57,-69,-60,-56,-139,-92,-55,-61,-123,-66,-68,-140,-118,-127,-64,-93,-58,-62,-106,-65,-63,-59,-122,-67,-143,-119,220,-133,-211,-201,-94,-73,-107,-114,-212,-144,-145,-202,-142,-141,146,-70,-71,220,-125,-126,]),'ELSIF':([19,22,25,28,30,33,42,46,52,55,56,57,58,59,60,61,62,63,64,65,66,67,70,72,74,76,78,79,80,81,82,83,84,85,90,107,145,146,147,161,169,174,197,214,221,222,223,224,227,228,238,240,241,244,245,246,265,266,268,271,272,294,295,299,317,318,],[-200,-137,-136,-135,-138,-134,-199,-74,-113,-124,-91,-57,-69,-60,-56,-139,-92,-55,-61,-123,-66,-68,-140,-118,-64,-93,-58,-62,-106,-65,-63,-59,-122,-67,-157,-143,-119,-150,216,-133,-211,-158,-201,-151,267,-94,-73,-107,-114,-212,-144,-145,-75,-202,-142,-141,-128,267,-130,-70,-71,216,-131,-125,-126,-132,]),'IF':([0,4,8,10,11,12,20,23,32,36,38,41,46,54,69,86,90,91,92,102,103,106,118,119,120,121,143,146,166,174,176,177,184,186,201,203,206,207,208,210,214,216,217,220,229,230,234,237,239,241,242,249,263,267,269,290,302,303,308,325,328,330,335,337,340,343,],[4,54,-8,54,4,-9,54,4,-3,-7,-6,-5,-74,54,54,54,-157,4,54,54,54,-84,-4,4,54,54,-10,4,54,-158,4,4,-45,-85,54,-49,54,54,54,54,4,54,4,54,54,4,54,54,54,-75,-181,54,4,54,54,54,54,54,4,4,4,4,4,4,4,4,]),'ARROW':([4,10,13,16,19,20,22,25,27,28,30,33,42,51,54,61,65,69,70,71,75,86,92,102,103,105,106,107,108,109,110,111,112,120,121,149,150,151,152,153,154,155,156,157,158,159,160,161,163,164,165,166,167,169,186,195,197,201,206,207,208,210,216,220,228,229,234,237,238,239,240,244,245,246,249,256,267,269,290,302,303,],[68,68,-139,107,-200,68,-137,-136,-140,-135,-138,-134,-199,68,68,-139,107,68,-140,-121,-120,68,68,68,68,-116,-84,-143,-111,-110,-112,-117,-115,68,68,68,-105,-101,-97,-104,-95,-99,-103,-100,-96,-98,-102,107,-108,68,-109,68,68,-211,-85,-140,-201,68,68,68,68,68,68,68,-212,68,68,68,-144,68,-145,-202,-142,-141,68,-140,68,68,68,68,68,]),'OR':([19,22,25,28,30,33,42,52,55,56,57,58,59,60,61,63,64,65,66,67,70,72,74,76,78,79,80,81,82,83,84,85,107,145,161,169,197,222,223,224,227,228,238,240,244,245,246,256,271,272,],[-200,-137,-136,-135,-138,-134,-199,-113,-124,155,-57,-69,-60,-56,-139,-55,-61,-123,-66,-68,-140,-118,-64,-93,-58,-62,-106,-65,-63,-59,-122,-67,-143,-119,-133,-211,-201,-94,-73,-107,-114,-212,-144,-145,-202,-142,-141,-140,-70,-71,]),'TO':([19,22,25,28,30,33,42,52,55,56,57,58,59,60,61,62,63,64,65,66,67,70,72,74,76,78,79,80,81,82,83,84,85,107,145,161,169,197,222,223,224,227,228,238,240,244,245,246,271,272,278,279,280,299,304,305,317,320,321,324,],[-200,-137,-136,-135,-138,-134,-199,-113,-124,-91,-57,-69,-60,-56,-139,-92,-55,-61,-123,-66,-68,-140,-118,-64,-93,-58,-62,-106,-65,-63,-59,-122,-67,-143,-119,-133,-211,-201,-94,-73,-107,-114,-212,-144,-145,-202,-142,-141,-70,-71,302,-174,-177,-125,302,302,-126,-221,-175,302,]),'LOWER':([0,4,8,10,11,12,20,23,32,36,38,41,46,51,54,68,69,71,75,86,90,91,92,102,103,105,106,108,109,110,111,112,118,119,120,121,143,146,149,150,151,152,153,154,155,156,157,158,159,160,163,164,165,166,167,174,176,177,184,186,201,203,206,207,208,210,214,216,217,220,229,230,234,237,239,241,242,249,263,267,269,290,302,303,308,325,328,330,335,337,340,343,],[43,43,-8,43,43,-9,43,43,-3,-7,-6,-5,-74,43,43,43,43,-121,-120,43,-157,43,43,43,43,-116,-84,-111,-110,-112,-117,-115,-4,43,43,43,-10,43,43,-105,-101,-97,-104,-95,-99,-103,-100,-96,-98,-102,-108,43,-109,43,43,-158,43,43,-45,-85,43,-49,43,43,43,43,43,43,43,43,43,43,43,43,43,-75,-181,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'NULL':([4,10,20,51,54,69,71,75,86,92,102,103,105,106,108,109,110,111,112,120,121,149,150,151,152,153,154,155,156,157,158,159,160,163,164,165,166,167,186,201,206,207,208,210,216,220,229,234,237,239,249,267,269,290,302,303,],[58,58,58,58,58,58,-121,-120,58,58,58,58,-116,-84,-111,-110,-112,-117,-115,58,58,58,-105,-101,-97,-104,-95,-99,-103,-100,-96,-98,-102,-108,58,-109,58,58,-85,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'PRED':([0,4,8,10,11,12,20,23,32,36,38,41,46,51,54,68,69,71,75,86,90,91,92,102,103,105,106,108,109,110,111,112,118,119,120,121,143,146,149,150,151,152,153,154,155,156,157,158,159,160,163,164,165,166,167,174,176,177,184,186,201,203,206,207,208,210,214,216,217,220,229,230,234,237,239,241,242,249,263,267,269,290,302,303,308,325,328,330,335,337,340,343,],[9,9,-8,9,9,-9,9,9,-3,-7,-6,-5,-74,9,9,9,9,-121,-120,9,-157,9,9,9,9,-116,-84,-111,-110,-112,-117,-115,-4,9,9,9,-10,9,9,-105,-101,-97,-104,-95,-99,-103,-100,-96,-98,-102,-108,9,-109,9,9,-158,9,9,-45,-85,9,-49,9,9,9,9,9,9,9,9,9,9,9,9,9,-75,-181,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'RETURN':([0,8,11,12,23,32,36,38,41,46,90,91,118,119,143,146,174,176,177,184,203,214,217,230,241,242,263,308,325,328,330,335,337,340,343,],[10,-8,10,-9,10,-3,-7,-6,-5,-74,-157,10,-4,10,-10,10,-158,10,10,-45,-49,10,10,10,-75,-181,10,10,10,10,10,10,10,10,10,]),'TIMES':([13,16,19,22,25,27,28,30,33,42,52,55,57,58,59,60,61,63,64,65,66,67,70,72,74,78,79,80,81,82,83,84,85,107,145,161,169,195,197,223,224,227,228,238,240,244,245,246,256,271,272,],[-139,112,-200,-137,-136,-140,-135,-138,-134,-199,-113,-124,-57,-69,-60,-56,-139,-55,-61,-123,-66,-68,-140,-118,-64,-58,-62,112,-65,-63,-59,-122,-67,-143,-119,-133,-211,-140,-201,-73,112,-114,-212,-144,-145,-202,-142,-141,-140,-70,-71,]),'GT':([19,22,25,28,30,33,42,52,55,56,57,58,59,60,61,63,64,65,66,67,70,72,74,76,78,79,80,81,82,83,84,85,107,145,161,169,197,222,223,224,227,228,238,240,244,245,246,256,271,272,],[-200,-137,-136,-135,-138,-134,-199,-113,-124,160,-57,-69,-60,-56,-139,-55,-61,-123,-66,-68,-140,-118,-64,-93,-58,-62,-106,-65,-63,-59,-122,-67,-143,-119,-133,-211,-201,-94,-73,-107,-114,-212,-144,-145,-202,-142,-141,-140,-70,-71,]),'WHILE':([11,19,22,25,28,30,33,42,52,55,56,57,58,59,60,61,62,63,64,65,66,67,70,72,74,76,78,79,80,81,82,83,84,85,89,107,128,132,134,137,138,145,161,169,178,179,180,197,222,223,224,227,228,238,240,244,245,246,271,272,275,280,289,292,299,300,301,317,319,322,323,334,],[92,-200,-137,-136,-135,-138,-134,-199,-113,-124,-91,-57,-69,-60,-56,-139,-92,-55,-61,-123,-66,-68,-140,-118,-64,-93,-58,-62,-106,-65,-63,-59,-122,-67,92,-143,-23,-24,-26,-25,-27,-119,-133,-211,-167,-168,-166,-201,-94,-73,-107,-114,-212,-144,-145,-202,-142,-141,-70,-71,-178,-177,-29,-28,-125,-179,-169,-126,-176,-171,-170,-172,]),'ELSE':([19,22,25,28,30,33,42,46,52,55,56,57,58,59,60,61,62,63,64,65,66,67,70,72,74,76,78,79,80,81,82,83,84,85,90,107,145,146,147,161,169,174,197,214,221,222,223,224,227,228,238,240,241,244,245,246,265,266,268,271,272,294,295,299,317,318,],[-200,-137,-136,-135,-138,-134,-199,-74,-113,-124,-91,-57,-69,-60,-56,-139,-92,-55,-61,-123,-66,-68,-140,-118,-64,-93,-58,-62,-106,-65,-63,-59,-122,-67,-157,-143,-119,-150,217,-133,-211,-158,-201,-151,269,-94,-73,-107,-114,-212,-144,-145,-75,-202,-142,-141,-128,269,-130,-70,-71,217,-131,-125,-126,-132,]),'SUCC':([0,4,8,10,11,12,20,23,32,36,38,41,46,51,54,68,69,71,75,86,90,91,92,102,103,105,106,108,109,110,111,112,118,119,120,121,143,146,149,150,151,152,153,154,155,156,157,158,159,160,163,164,165,166,167,174,176,177,184,186,201,203,206,207,208,210,214,216,217,220,229,230,234,237,239,241,242,249,263,267,269,290,302,303,308,325,328,330,335,337,340,343,],[44,44,-8,44,44,-9,44,44,-3,-7,-6,-5,-74,44,44,44,44,-121,-120,44,-157,44,44,44,44,-116,-84,-111,-110,-112,-117,-115,-4,44,44,44,-10,44,44,-105,-101,-97,-104,-95,-99,-103,-100,-96,-98,-102,-108,44,-109,44,44,-158,44,44,-45,-85,44,-49,44,44,44,44,44,44,44,44,44,44,44,44,44,-75,-181,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'BOOL':([47,50,122,136,183,205,207,232,277,286,290,291,327,],[134,-15,134,134,134,-16,134,134,134,134,134,134,134,]),'NUM':([0,4,8,10,11,12,20,23,32,36,38,41,46,51,54,68,69,71,75,86,90,91,92,102,103,105,106,108,109,110,111,112,118,119,120,121,143,146,149,150,151,152,153,154,155,156,157,158,159,160,163,164,165,166,167,174,176,177,184,186,201,203,206,207,208,210,214,216,217,220,229,230,234,237,239,241,242,249,263,267,269,290,302,303,308,325,328,330,335,337,340,343,],[18,18,-8,18,18,-9,18,18,-3,-7,-6,-5,-74,18,18,18,18,-121,-120,18,-157,18,18,18,18,-116,-84,-111,-110,-112,-117,-115,-4,18,18,18,-10,18,18,-105,-101,-97,-104,-95,-99,-103,-100,-96,-98,-102,-108,18,-109,18,18,-158,18,18,-45,-85,18,-49,18,18,18,18,18,18,18,18,18,18,18,18,18,-75,-181,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'TRUE':([4,10,20,51,54,69,71,75,86,92,102,103,105,106,108,109,110,111,112,120,121,149,150,151,152,153,154,155,156,157,158,159,160,163,164,165,166,167,186,201,206,207,208,210,216,220,229,234,237,239,249,267,269,290,302,303,],[66,66,66,66,66,66,-121,-120,66,66,66,66,-116,-84,-111,-110,-112,-117,-115,66,66,66,-105,-101,-97,-104,-95,-99,-103,-100,-96,-98,-102,-108,66,-109,66,66,-85,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'DIV':([13,16,19,22,25,27,28,30,33,42,52,55,57,58,59,60,61,63,64,65,66,67,70,72,74,78,79,80,81,82,83,84,85,107,145,161,169,195,197,223,224,227,228,238,240,244,245,246,256,271,272,],[-139,105,-200,-137,-136,-140,-135,-138,-134,-199,-113,-124,-57,-69,-60,-56,-139,-55,-61,-123,-66,-68,-140,-118,-64,-58,-62,105,-65,-63,-59,-122,-67,-143,-119,-133,-211,-140,-201,-73,105,-114,-212,-144,-145,-202,-142,-141,-140,-70,-71,]),'RESULT':([0,8,11,12,23,32,36,38,41,46,90,91,118,119,143,146,174,176,177,184,203,214,217,230,241,242,263,308,325,328,330,335,337,340,343,],[20,-8,20,-9,20,-3,-7,-6,-5,-74,-157,20,-4,20,-10,20,-158,20,20,-45,-49,20,20,20,-75,-181,20,20,20,20,20,20,20,20,20,]),'EXIT':([0,8,11,12,23,32,36,38,41,46,90,91,118,119,143,146,174,176,177,184,203,214,217,230,241,242,263,308,325,328,330,335,337,340,343,],[21,-8,21,-9,21,-3,-7,-6,-5,-74,-157,21,-4,21,-10,21,-158,21,21,-45,-49,21,21,21,-75,-181,21,21,21,21,21,21,21,21,21,]),'INT':([47,50,122,136,183,205,207,232,277,286,290,291,327,],[137,-15,137,137,137,-16,137,137,137,137,137,137,137,]),'PROC':([119,],[194,]),'NOTEQUAL':([19,22,25,28,30,33,42,52,55,56,57,58,59,60,61,63,64,65,66,67,70,72,74,76,78,79,80,81,82,83,84,85,107,145,161,169,197,222,223,224,227,228,238,240,244,245,246,256,271,272,],[-200,-137,-136,-135,-138,-134,-199,-113,-124,151,-57,-69,-60,-56,-139,-55,-61,-123,-66,-68,-140,-118,-64,-93,-58,-62,-106,-65,-63,-59,-122,-67,-143,-119,-133,-211,-201,-94,-73,-107,-114,-212,-144,-145,-202,-142,-141,-140,-70,-71,]),'IN':([19,22,25,28,30,33,42,52,55,56,57,58,59,60,61,63,64,65,66,67,70,72,74,76,78,79,80,81,82,83,84,85,107,145,161,169,181,182,197,222,223,224,227,228,233,238,240,244,245,246,256,271,272,],[-200,-137,-136,-135,-138,-134,-199,-113,-124,152,-57,-69,-60,-56,-139,-55,-61,-123,-66,-68,-140,-118,-64,-93,-58,-62,-106,-65,-63,-59,-122,-67,-143,-119,-133,-211,232,-173,-201,-94,-73,-107,-114,-212,277,-144,-145,-202,-142,-141,-140,-70,-71,]),'RPAREN':([19,22,25,28,30,33,42,52,55,56,57,58,59,60,61,62,63,64,65,66,67,70,72,74,76,78,79,80,81,82,83,84,85,86,107,120,125,126,128,130,131,132,133,134,137,138,140,141,145,161,162,168,169,170,171,196,197,209,222,223,224,227,228,238,240,243,244,245,246,252,258,271,272,273,282,283,284,287,289,292,293,299,310,311,314,315,317,331,332,333,338,346,347,],[-200,-137,-136,-135,-138,-134,-199,-113,-124,-91,-57,-69,-60,-56,-139,-92,-55,-61,-123,-66,-68,-140,-118,-64,-93,-58,-62,-106,-65,-63,-59,-122,-67,169,-143,197,-36,-20,-23,-18,-19,-24,-35,-26,-25,-27,-21,-22,-119,-133,223,228,-211,-205,-203,244,-201,-34,-94,-73,-107,-114,-212,-144,-145,285,-202,-142,-141,289,292,-70,-71,-204,-31,-33,306,-190,-29,-28,-37,-125,-192,-193,-44,-39,-126,-195,-194,-191,345,350,-198,]),'ISEQUAL':([19,22,25,28,30,33,42,52,55,56,57,58,59,60,61,63,64,65,66,67,70,72,74,76,78,79,80,81,82,83,84,85,107,145,161,169,197,222,223,224,227,228,238,240,244,245,246,256,271,272,],[-200,-137,-136,-135,-138,-134,-199,-113,-124,157,-57,-69,-60,-56,-139,-55,-61,-123,-66,-68,-140,-118,-64,-93,-58,-62,-106,-65,-63,-59,-122,-67,-143,-119,-133,-211,-201,-94,-73,-107,-114,-212,-144,-145,-202,-142,-141,-140,-70,-71,]),'BY':([19,22,25,28,30,33,42,52,55,56,57,58,59,60,61,62,63,64,65,66,67,70,72,74,76,78,79,80,81,82,83,84,85,107,145,161,169,197,222,223,224,227,228,238,240,244,245,246,271,272,278,279,280,299,317,],[-200,-137,-136,-135,-138,-134,-199,-113,-124,-91,-57,-69,-60,-56,-139,-92,-55,-61,-123,-66,-68,-140,-118,-64,-93,-58,-62,-106,-65,-63,-59,-122,-67,-143,-119,-133,-211,-201,-94,-73,-107,-114,-212,-144,-145,-202,-142,-141,-70,-71,303,-174,-177,-125,-126,]),'AND':([19,22,25,28,30,33,42,52,55,56,57,58,59,60,61,63,64,65,66,67,70,72,74,76,78,79,80,81,82,83,84,85,107,145,161,169,197,222,223,224,227,228,238,240,244,245,246,256,271,272,],[-200,-137,-136,-135,-138,-134,-199,-113,-124,159,-57,-69,-60,-56,-139,-55,-61,-123,-66,-68,-140,-118,-64,-93,-58,-62,-106,-65,-63,-59,-122,-67,-143,-119,-133,-211,-201,-94,-73,-107,-114,-212,-144,-145,-202,-142,-141,-140,-70,-71,]),'LPAREN':([4,5,9,10,18,20,27,31,34,39,43,44,45,51,54,69,70,71,75,86,92,102,103,105,106,108,109,110,111,112,120,121,128,134,135,137,138,141,149,150,151,152,153,154,155,156,157,158,159,160,163,164,165,166,167,186,194,195,201,206,207,208,210,216,220,229,234,237,239,249,256,267,269,276,290,302,303,307,],[69,86,-214,69,-213,69,120,-218,-219,-220,-217,-215,-216,69,69,69,120,-121,-120,69,69,69,69,-116,-84,-111,-110,-112,-117,-115,69,69,206,-26,208,-25,-27,-30,69,-105,-101,-97,-104,-95,-99,-103,-100,-96,-98,-102,-108,69,-109,69,69,-85,243,120,69,69,69,69,69,69,69,69,69,69,69,69,120,69,69,-30,69,69,69,327,]),'TYPE':([0,8,12,23,32,36,38,41,46,118,143,184,203,241,242,308,325,328,330,335,337,340,343,],[15,-8,-9,15,-3,-7,-6,-5,-74,-4,-10,-45,-49,-75,-181,15,15,15,15,15,15,15,15,]),'LE':([19,22,25,28,30,33,42,52,55,56,57,58,59,60,61,63,64,65,66,67,70,72,74,76,78,79,80,81,82,83,84,85,107,145,161,169,197,222,223,224,227,228,238,240,244,245,246,256,271,272,],[-200,-137,-136,-135,-138,-134,-199,-113,-124,150,-57,-69,-60,-56,-139,-55,-61,-123,-66,-68,-140,-118,-64,-93,-58,-62,-106,-65,-63,-59,-122,-67,-143,-119,-133,-211,-201,-94,-73,-107,-114,-212,-144,-145,-202,-142,-141,-140,-70,-71,]),'NOT':([4,10,20,54,69,86,92,102,103,105,106,108,109,110,111,112,120,121,149,150,151,152,153,154,155,156,157,158,159,160,163,164,165,166,167,186,201,206,207,208,210,216,220,229,234,237,239,249,267,269,290,302,303,],[71,71,71,71,71,71,71,71,71,-116,-84,-111,-110,-112,-117,-115,71,71,71,-105,-101,-97,-104,-95,-99,-103,-100,-96,-98,-102,-108,71,-109,71,71,-85,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'LT':([19,22,25,28,30,33,42,52,55,56,57,58,59,60,61,63,64,65,66,67,70,72,74,76,78,79,80,81,82,83,84,85,107,145,161,169,197,222,223,224,227,228,238,240,244,245,246,256,271,272,],[-200,-137,-136,-135,-138,-134,-199,-113,-124,153,-57,-69,-60,-56,-139,-55,-61,-123,-66,-68,-140,-118,-64,-93,-58,-62,-106,-65,-63,-59,-122,-67,-143,-119,-133,-211,-201,-94,-73,-107,-114,-212,-144,-145,-202,-142,-141,-140,-70,-71,]),'INTCONST':([4,10,20,51,54,69,71,75,86,92,102,103,105,106,108,109,110,111,112,120,121,149,150,151,152,153,154,155,156,157,158,159,160,163,164,165,166,167,186,201,206,207,208,210,212,216,220,229,234,237,239,249,267,269,290,302,303,],[74,74,74,74,74,74,-121,-120,74,74,74,74,-116,-84,-111,-110,-112,-117,-115,74,74,74,-105,-101,-97,-104,-95,-99,-103,-100,-96,-98,-102,-108,74,-109,74,74,-85,74,74,74,74,74,261,74,74,74,74,74,74,74,74,74,74,74,74,]),'STRCONC':([13,16,19,22,25,27,28,30,33,42,52,55,57,58,59,60,61,63,64,65,66,67,70,72,74,76,78,79,80,81,82,83,84,85,107,145,161,169,195,197,222,223,224,227,228,238,240,244,245,246,256,271,272,],[-139,110,-200,-137,-136,-140,-135,-138,-134,-199,-113,-124,-57,-69,-60,-56,-139,-55,-61,-123,-66,-68,-140,-118,-64,110,-58,-62,-106,-65,-63,-59,-122,-67,-143,-119,-133,-211,-140,-201,110,-73,-107,-114,-212,-144,-145,-202,-142,-141,-140,-70,-71,]),'REF':([47,50,122,136,183,205,286,291,327,],[136,-15,136,136,136,-16,136,136,136,]),'LENGTH':([0,4,8,10,11,12,20,23,32,36,38,41,46,51,54,68,69,71,75,86,90,91,92,102,103,105,106,108,109,110,111,112,118,119,120,121,143,146,149,150,151,152,153,154,155,156,157,158,159,160,163,164,165,166,167,174,176,177,184,186,201,203,206,207,208,210,214,216,217,220,229,230,234,237,239,241,242,249,263,267,269,290,302,303,308,325,328,330,335,337,340,343,],[31,31,-8,31,31,-9,31,31,-3,-7,-6,-5,-74,31,31,31,31,-121,-120,31,-157,31,31,31,31,-116,-84,-111,-110,-112,-117,-115,-4,31,31,31,-10,31,31,-105,-101,-97,-104,-95,-99,-103,-100,-96,-98,-102,-108,31,-109,31,31,-158,31,31,-45,-85,31,-49,31,31,31,31,31,31,31,31,31,31,31,31,31,-75,-181,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'OD':([11,46,90,91,174,177,230,241,],[93,-74,-157,173,-158,231,274,-75,]),'MINUS':([4,10,13,16,19,20,22,25,27,28,30,33,42,52,54,55,57,58,59,60,61,63,64,65,66,67,69,70,72,74,76,78,79,80,81,82,83,84,85,86,92,102,103,105,106,107,108,109,110,111,112,120,121,145,149,150,151,152,153,154,155,156,157,158,159,160,161,163,164,165,166,167,169,186,195,197,201,206,207,208,210,216,220,222,223,224,227,228,229,234,237,238,239,240,244,245,246,249,256,267,269,271,272,290,302,303,],[75,75,-139,108,-200,75,-137,-136,-140,-135,-138,-134,-199,-113,75,-124,-57,-69,-60,-56,-139,-55,-61,-123,-66,-68,75,-140,-118,-64,108,-58,-62,-106,-65,-63,-59,-122,-67,75,75,75,75,-116,-84,-143,-111,-110,-112,-117,-115,75,75,-119,75,-105,-101,-97,-104,-95,-99,-103,-100,-96,-98,-102,-133,-108,75,-109,75,75,-211,-85,-140,-201,75,75,75,75,75,75,75,108,-73,-107,-114,-212,75,75,75,-144,75,-145,-202,-142,-141,75,-140,75,75,-70,-71,75,75,75,]),'RETURNS':([285,306,],[307,307,]),'LBRACKET':([13,16,19,22,25,27,28,30,33,42,57,58,59,60,61,63,64,65,66,67,70,74,77,78,79,81,82,83,84,85,107,129,142,161,169,195,197,223,228,238,240,244,245,246,256,271,272,],[-139,102,-200,-137,-136,-140,-135,-138,121,-199,-57,-69,-60,-56,-139,-55,-61,102,-66,-68,-140,-64,166,-58,-62,-65,-63,-59,-72,-67,-143,207,212,102,-211,-140,-201,-73,-212,-144,-145,-202,-142,-141,-140,-70,-71,]),'MOD':([13,16,19,22,25,27,28,30,33,42,52,55,57,58,59,60,61,63,64,65,66,67,70,72,74,78,79,80,81,82,83,84,85,107,145,161,169,195,197,223,224,227,228,238,240,244,245,246,256,271,272,],[-139,111,-200,-137,-136,-140,-135,-138,-134,-199,-113,-124,-57,-69,-60,-56,-139,-55,-61,-123,-66,-68,-140,-118,-64,-58,-62,111,-65,-63,-59,-122,-67,-143,-119,-133,-211,-140,-201,-73,111,-114,-212,-144,-145,-202,-142,-141,-140,-70,-71,]),'LOC':([125,126,128,130,131,132,133,134,137,138,140,141,209,289,292,293,311,314,315,338,],[-36,-20,-23,-18,-19,-24,-35,-26,-25,-27,-21,-22,-34,-29,-28,-37,331,-44,-39,347,]),'DOWN':([19,22,25,28,30,33,42,52,55,56,57,58,59,60,61,62,63,64,65,66,67,70,72,74,76,78,79,80,81,82,83,84,85,107,145,161,169,181,182,197,222,223,224,227,228,238,240,244,245,246,271,272,278,279,280,299,305,317,320,321,],[-200,-137,-136,-135,-138,-134,-199,-113,-124,-91,-57,-69,-60,-56,-139,-92,-55,-61,-123,-66,-68,-140,-118,-64,-93,-58,-62,-106,-65,-63,-59,-122,-67,-143,-119,-133,-211,233,-173,-201,-94,-73,-107,-114,-212,-144,-145,-202,-142,-141,-70,-71,304,-174,-177,-125,324,-126,-221,-175,]),'END':([8,12,32,36,38,41,46,118,143,184,203,241,242,308,325,328,330,335,337,340,343,],[-8,-9,-3,-7,-6,-5,-74,-4,-10,-45,-49,-75,-181,329,336,339,341,342,344,348,349,]),'SMC':([2,7,10,13,14,17,19,22,25,26,28,29,30,33,35,37,42,48,49,52,55,56,57,58,59,60,61,62,63,64,65,66,67,70,72,73,74,76,78,79,80,81,82,83,84,85,87,88,89,93,95,97,99,100,107,115,116,117,123,124,125,126,128,130,131,132,133,134,137,138,139,140,141,145,161,169,172,173,175,178,179,180,191,192,193,197,209,211,213,219,222,223,224,227,228,231,235,236,238,240,244,245,246,247,248,250,259,264,271,272,274,275,280,285,288,289,292,293,299,300,301,306,309,314,315,317,319,322,323,326,329,334,336,339,341,342,344,345,348,349,350,],[46,-78,-207,-79,-77,-81,-200,-137,-136,-146,-135,-80,-138,-134,-82,-147,-199,143,-11,-113,-124,-91,-57,-69,-60,-56,-139,-92,-55,-61,-123,-66,-68,-140,-118,-127,-64,-93,-58,-62,-106,-65,-63,-59,-122,-67,-210,-208,-163,-159,177,-164,184,-46,-143,-209,-206,-76,203,-50,-36,-20,-23,-18,-19,-24,-35,-26,-25,-27,-14,-21,-22,-119,-133,-211,-165,-162,-180,-167,-168,-166,-83,241,242,-201,-34,-13,-12,-148,-94,-73,-107,-114,-212,-160,-48,-47,-144,-145,-202,-142,-141,-54,-52,-51,-17,-149,-70,-71,-161,-178,-177,308,-53,-29,-28,-37,-125,-179,-169,325,330,-44,-39,-126,-176,-171,-170,337,-182,-172,-185,-184,-189,-183,-186,-196,-188,-187,-197,]),'READ':([0,4,8,10,11,12,20,23,32,36,38,41,46,51,54,68,69,71,75,86,90,91,92,102,103,105,106,108,109,110,111,112,118,119,120,121,143,146,149,150,151,152,153,154,155,156,157,158,159,160,163,164,165,166,167,174,176,177,184,186,201,203,206,207,208,210,214,216,217,220,229,230,234,237,239,241,242,249,263,267,269,290,302,303,308,325,328,330,335,337,340,343,],[34,34,-8,34,34,-9,34,34,-3,-7,-6,-5,-74,34,34,34,34,-121,-120,34,-157,34,34,34,34,-116,-84,-111,-110,-112,-117,-115,-4,34,34,34,-10,34,34,-105,-101,-97,-104,-95,-99,-103,-100,-96,-98,-102,-108,34,-109,34,34,-158,34,34,-45,-85,34,-49,34,34,34,34,34,34,34,34,34,34,34,34,34,-75,-181,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'STRINGCONST':([4,10,20,51,54,69,71,75,86,92,102,103,105,106,108,109,110,111,112,120,121,149,150,151,152,153,154,155,156,157,158,159,160,163,164,165,166,167,186,201,206,207,208,210,216,220,229,234,237,239,249,267,269,290,302,303,],[67,67,67,67,67,67,-121,-120,67,67,67,67,-116,-84,-111,-110,-112,-117,-115,67,67,67,-105,-101,-97,-104,-95,-99,-103,-100,-96,-98,-102,-108,67,-109,67,67,-85,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'EQUALS':([13,16,19,22,25,27,28,30,33,42,50,98,101,104,105,107,108,109,110,111,112,113,114,122,125,126,128,130,131,132,133,134,137,138,139,140,141,169,181,182,195,197,202,205,209,228,238,240,244,245,246,289,292,293,314,315,],[-139,106,-200,-137,-136,-140,-135,-138,-134,-199,-15,183,186,-86,-116,-143,-111,-110,-112,-117,-115,-87,-88,201,-36,-20,-23,-18,-19,-24,-35,-26,-25,-27,210,-21,-22,-211,234,-173,-140,-201,249,-16,-34,-212,-144,-145,-202,-142,-141,-29,-28,-37,-44,-39,]),'FALSE':([4,10,20,51,54,69,71,75,86,92,102,103,105,106,108,109,110,111,112,120,121,149,150,151,152,153,154,155,156,157,158,159,160,163,164,165,166,167,186,201,206,207,208,210,216,220,229,234,237,239,249,267,269,290,302,303,],[81,81,81,81,81,81,-121,-120,81,81,81,81,-116,-84,-111,-110,-112,-117,-115,81,81,81,-105,-101,-97,-104,-95,-99,-103,-100,-96,-98,-102,-108,81,-109,81,81,-85,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'ARRAY':([47,50,122,136,183,205,286,291,327,],[129,-15,129,129,129,-16,129,129,129,]),'ID':([0,3,4,8,10,11,12,15,20,21,23,32,36,38,40,41,46,47,50,51,54,68,69,71,75,86,90,91,92,96,102,103,105,106,108,109,110,111,112,118,119,120,121,122,127,136,143,144,146,149,150,151,152,153,154,155,156,157,158,159,160,163,164,165,166,167,174,176,177,183,184,185,186,201,203,204,205,206,207,208,210,214,216,217,220,229,230,232,234,237,239,241,242,243,249,263,267,269,277,286,290,291,302,303,308,312,325,327,328,330,335,337,340,343,],[27,50,70,-8,70,27,-9,50,70,117,27,-3,-7,-6,50,-5,-74,141,-15,70,70,70,70,-121,-120,70,-157,27,70,182,70,70,-116,-84,-111,-110,-112,-117,-115,-4,195,70,70,141,205,141,-10,50,27,70,-105,-101,-97,-104,-95,-99,-103,-100,-96,-98,-102,-108,70,-109,70,70,-158,195,27,141,-45,50,-85,70,-49,50,-16,70,256,70,70,27,70,27,70,70,27,276,70,70,70,-75,-181,50,70,27,70,70,276,141,256,141,70,70,27,50,27,141,27,27,27,27,27,27,]),'PRINT':([0,4,8,10,11,12,20,23,32,36,38,41,46,51,54,68,69,71,75,86,90,91,92,102,103,105,106,108,109,110,111,112,118,119,120,121,143,146,149,150,151,152,153,154,155,156,157,158,159,160,163,164,165,166,167,174,176,177,184,186,201,203,206,207,208,210,214,216,217,220,229,230,234,237,239,241,242,249,263,267,269,290,302,303,308,325,328,330,335,337,340,343,],[39,39,-8,39,39,-9,39,39,-3,-7,-6,-5,-74,39,39,39,39,-121,-120,39,-157,39,39,39,39,-116,-84,-111,-110,-112,-117,-115,-4,39,39,39,-10,39,39,-105,-101,-97,-104,-95,-99,-103,-100,-96,-98,-102,-108,39,-109,39,39,-158,39,39,-45,-85,39,-49,39,39,39,39,39,39,39,39,39,39,39,39,39,-75,-181,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'SYN':([0,8,12,23,32,36,38,41,46,118,143,184,203,241,242,308,325,328,330,335,337,340,343,],[40,-8,-9,40,-3,-7,-6,-5,-74,-4,-10,-45,-49,-75,-181,40,40,40,40,40,40,40,40,]),'GE':([19,22,25,28,30,33,42,52,55,56,57,58,59,60,61,63,64,65,66,67,70,72,74,76,78,79,80,81,82,83,84,85,107,145,161,169,197,222,223,224,227,228,238,240,244,245,246,256,271,272,],[-200,-137,-136,-135,-138,-134,-199,-113,-124,156,-57,-69,-60,-56,-139,-55,-61,-123,-66,-68,-140,-118,-64,-93,-58,-62,-106,-65,-63,-59,-122,-67,-143,-119,-133,-211,-201,-94,-73,-107,-114,-212,-144,-145,-202,-142,-141,-140,-70,-71,]),'FOR':([11,],[96,]),'UPPER':([0,4,8,10,11,12,20,23,32,36,38,41,46,51,54,68,69,71,75,86,90,91,92,102,103,105,106,108,109,110,111,112,118,119,120,121,143,146,149,150,151,152,153,154,155,156,157,158,159,160,163,164,165,166,167,174,176,177,184,186,201,203,206,207,208,210,214,216,217,220,229,230,234,237,239,241,242,249,263,267,269,290,302,303,308,325,328,330,335,337,340,343,],[45,45,-8,45,45,-9,45,45,-3,-7,-6,-5,-74,45,45,45,45,-121,-120,45,-157,45,45,45,45,-116,-84,-111,-110,-112,-117,-115,-4,45,45,45,-10,45,45,-105,-101,-97,-104,-95,-99,-103,-100,-96,-98,-102,-108,45,-109,45,45,-158,45,45,-45,-85,45,-49,45,45,45,45,45,45,45,45,45,45,45,45,45,-75,-181,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'RBRACKET':([19,22,25,28,30,33,42,52,55,56,57,58,59,60,61,62,63,64,65,66,67,70,72,74,76,78,79,80,81,82,83,84,85,107,128,132,134,137,138,145,161,169,187,189,190,197,198,199,200,222,223,224,225,226,227,228,238,240,244,245,246,253,254,255,257,260,261,271,272,281,282,283,289,292,299,313,317,],[-200,-137,-136,-135,-138,-134,-199,-113,-124,-91,-57,-69,-60,-56,-139,-92,-55,-61,-123,-66,-68,-140,-118,-64,-93,-58,-62,-106,-65,-63,-59,-122,-67,-143,-23,-24,-26,-25,-27,-119,-133,-211,238,-89,240,-201,-221,245,246,-94,-73,-107,271,272,-114,-212,-144,-145,-202,-142,-141,-40,-42,291,-43,293,-38,-70,-71,-90,-31,-33,-29,-28,-125,-41,-126,]),'CHARCONST':([4,10,20,51,54,69,71,75,86,92,102,103,105,106,108,109,110,111,112,120,121,149,150,151,152,153,154,155,156,157,158,159,160,163,164,165,166,167,186,201,206,207,208,210,216,220,229,234,237,239,249,267,269,290,302,303,],[85,85,85,85,85,85,-121,-120,85,85,85,85,-116,-84,-111,-110,-112,-117,-115,85,85,85,-105,-101,-97,-104,-95,-99,-103,-100,-96,-98,-102,-108,85,-109,85,85,-85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'CHARS':([47,50,122,136,183,205,286,291,327,],[142,-15,142,142,142,-16,142,142,142,]),'FI':([19,22,25,28,30,33,42,46,52,55,56,57,58,59,60,61,62,63,64,65,66,67,70,72,74,76,78,79,80,81,82,83,84,85,90,107,145,146,147,161,169,174,197,214,215,217,218,222,223,224,227,228,238,240,241,244,245,246,263,270,271,272,294,296,298,299,316,317,],[-200,-137,-136,-135,-138,-134,-199,-74,-113,-124,-91,-57,-69,-60,-56,-139,-92,-55,-61,-123,-66,-68,-140,-118,-64,-93,-58,-62,-106,-65,-63,-59,-122,-67,-157,-143,-119,-150,219,-133,-211,-158,-201,-151,-154,-152,264,-94,-73,-107,-114,-212,-144,-145,-75,-202,-142,-141,-153,299,-70,-71,-155,317,-129,-125,-156,-126,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'end_value':([278,304,305,324,],[301,322,323,334,]),'for_control':([11,],[89,]),'upper_bound':([239,],[282,]),'elseif_clause':([147,294,],[215,215,]),'action':([0,11,23,91,119,146,176,177,214,217,230,263,308,325,328,330,335,337,340,343,],[2,2,2,2,192,2,192,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'boolean_expression':([4,54,92,216,267,],[53,148,175,262,297,]),'basic_mode':([47,122,136,183,207,232,277,286,290,291,327,],[128,128,128,128,128,128,128,128,128,128,128,]),'builtin_name':([0,4,10,11,20,23,51,54,68,69,86,91,92,102,103,119,120,121,146,149,164,166,167,176,177,201,206,207,208,210,214,216,217,220,229,230,234,237,239,249,263,267,269,290,302,303,308,325,328,330,335,337,340,343,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'referenced_location':([4,10,20,51,54,69,86,92,102,103,120,121,149,164,166,167,201,206,207,208,210,216,220,229,234,237,239,249,267,269,290,302,303,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'iteration':([96,],[180,]),'bracketed_action':([0,11,23,91,119,146,176,177,214,217,230,263,308,325,328,330,335,337,340,343,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'parameter_list':([86,120,229,],[168,196,273,]),'action_statement_list':([11,146,177,217,],[91,214,230,263,]),'boolean_literal':([4,10,20,51,54,69,86,92,102,103,120,121,149,164,166,167,201,206,207,208,210,216,220,229,234,237,239,249,267,269,290,302,303,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'procedure_statement':([0,23,308,325,328,330,335,337,340,343,],[12,12,12,12,12,12,12,12,12,12,]),'call_action':([0,4,10,11,20,23,51,54,68,69,86,91,92,102,103,119,120,121,146,149,164,166,167,176,177,201,206,207,208,210,214,216,217,220,229,230,234,237,239,249,263,267,269,290,302,303,308,325,328,330,335,337,340,343,],[13,61,61,13,61,13,61,61,61,61,61,13,61,61,61,13,61,61,13,61,61,61,61,13,13,61,61,61,61,61,13,61,13,61,61,13,61,61,61,61,13,61,61,61,61,61,13,13,13,13,13,13,13,13,]),'string_mode':([47,122,136,183,286,291,327,],[133,133,133,133,133,133,133,]),'syn_definition':([40,204,],[124,250,]),'assignment_action':([0,11,23,91,119,146,176,177,214,217,230,263,308,325,328,330,335,337,340,343,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'string_length':([212,],[260,]),'char_literal':([4,10,20,51,54,69,86,92,102,103,120,121,149,164,166,167,201,206,207,208,210,216,220,229,234,237,239,249,267,269,290,302,303,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'operand1':([4,10,20,54,69,86,92,102,103,120,121,149,166,201,206,207,208,210,216,220,229,234,237,239,249,267,269,290,302,303,],[76,76,76,76,76,76,76,76,76,76,76,222,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'newmode_list':([15,],[99,]),'builtin_call':([0,4,10,11,20,23,51,54,68,69,86,91,92,102,103,119,120,121,146,149,164,166,167,176,177,201,206,207,208,210,214,216,217,220,229,230,234,237,239,249,263,267,269,290,302,303,308,325,328,330,335,337,340,343,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'else_clause':([147,294,],[218,316,]),'arithmetic_multiplicative_operator':([16,80,224,],[113,167,167,]),'empty':([0,],[1,]),'array_element':([0,4,10,11,20,23,51,54,68,69,86,91,92,102,103,119,120,121,146,149,164,166,167,176,177,201,206,207,208,210,214,216,217,220,229,230,234,237,239,249,263,267,269,290,302,303,308,325,328,330,335,337,340,343,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'statement_list':([0,308,325,330,337,],[23,328,335,340,343,]),'operand2':([4,10,20,54,69,86,92,102,103,120,121,149,164,166,201,206,207,208,210,216,220,229,234,237,239,249,267,269,290,302,303,],[80,80,80,80,80,80,80,80,80,80,80,80,224,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'procedure_call':([0,4,10,11,20,23,51,54,68,69,86,91,92,102,103,119,120,121,146,149,164,166,167,176,177,201,206,207,208,210,214,216,217,220,229,230,234,237,239,249,263,267,269,290,302,303,308,325,328,330,335,337,340,343,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'expression_list':([102,166,],[187,225,]),'location_name':([0,4,10,11,20,23,51,54,68,69,86,91,92,102,103,119,120,121,146,149,164,166,167,176,177,201,206,207,208,210,214,216,217,220,229,230,234,237,239,249,263,267,269,290,302,303,308,325,328,330,335,337,340,343,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'elseif_expression':([221,266,],[268,295,]),'primitive_value':([4,10,20,51,54,69,86,92,102,103,120,121,149,164,166,167,201,206,207,208,210,216,220,229,234,237,239,249,267,269,290,302,303,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'operator1':([56,],[149,]),'array_mode':([47,122,136,183,286,291,327,],[125,125,125,125,125,125,125,]),'closed_dyadic_operator':([16,],[101,]),'control_part':([11,],[95,]),'relational_operator':([56,],[154,]),'literal_range':([102,121,166,206,207,208,290,],[190,199,226,252,257,258,257,]),'while_control':([11,89,],[97,172,]),'array_slice':([0,4,10,11,20,23,51,54,68,69,86,91,92,102,103,119,120,121,146,149,164,166,167,176,177,201,206,207,208,210,214,216,217,220,229,230,234,237,239,249,263,267,269,290,302,303,308,325,328,330,335,337,340,343,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'mode_name':([47,122,136,183,286,291,327,],[130,130,130,130,130,130,130,]),'declaration_statement':([0,23,308,325,328,330,335,337,340,343,],[41,41,41,41,41,41,41,41,41,41,]),'parameter_attribute':([311,],[332,]),'procedure_definition':([119,],[193,]),'element_node':([291,],[315,]),'discrete_mode':([47,122,136,183,207,232,277,286,290,291,327,],[131,131,131,131,254,275,300,131,254,131,131,]),'membership_operator':([56,],[158,]),'discrete_range_mode':([47,122,136,183,207,232,277,286,290,291,327,],[132,132,132,132,132,132,132,132,132,132,132,]),'integer_expression':([121,303,],[200,321,]),'result_action':([0,11,23,91,119,146,176,177,214,217,230,263,308,325,328,330,335,337,340,343,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'parameter_spec':([286,],[310,]),'do_action':([0,11,23,91,119,146,176,177,214,217,230,263,308,325,328,330,335,337,340,343,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'newmode_statement':([0,23,308,325,328,330,335,337,340,343,],[38,38,38,38,38,38,38,38,38,38,]),'operand3':([4,10,20,54,69,86,92,102,103,120,121,149,164,166,167,201,206,207,208,210,216,220,229,234,237,239,249,267,269,290,302,303,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,227,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'index_mode':([207,290,],[253,313,]),'loop_counter':([96,],[181,]),'integer_literal':([4,10,20,51,54,69,86,92,102,103,120,121,149,164,166,167,201,206,207,208,210,216,220,229,234,237,239,249,267,269,290,302,303,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'mode':([47,122,136,183,286,291,327,],[139,202,209,235,311,314,338,]),'composite_mode':([47,122,136,183,286,291,327,],[140,140,140,140,140,140,140,]),'discrete_mode_name':([47,122,136,183,207,232,277,286,290,291,327,],[135,135,135,135,135,135,135,135,135,135,135,]),'formal_parameter':([243,312,],[287,287,]),'parameter':([86,120,229,],[171,171,171,]),'monadic_operator':([4,10,20,54,69,86,92,102,103,120,121,149,164,166,167,201,206,207,208,210,216,220,229,234,237,239,249,267,269,290,302,303,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'conditional_expression':([4,10,20,54,69,86,92,102,103,120,121,166,201,206,207,208,210,216,220,229,234,237,239,249,267,269,290,302,303,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'formal_parameter_list':([243,312,],[284,333,]),'program':([0,],[6,]),'operand0':([4,10,20,54,69,86,92,102,103,120,121,166,201,206,207,208,210,216,220,229,234,237,239,249,267,269,290,302,303,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'action_statement':([0,11,23,91,146,177,214,217,230,263,308,325,328,330,335,337,340,343,],[8,90,8,174,90,90,174,90,174,174,8,8,8,8,8,8,8,8,]),'value_array_slice':([4,10,20,51,54,69,86,92,102,103,120,121,149,164,166,167,201,206,207,208,210,216,220,229,234,237,239,249,267,269,290,302,303,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'value_array_element':([4,10,20,51,54,69,86,92,102,103,120,121,149,164,166,167,201,206,207,208,210,216,220,229,234,237,239,249,267,269,290,302,303,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'else_expression':([221,266,],[270,296,]),'declaration':([3,144,],[49,213,]),'result_spec':([285,306,],[309,326,]),'mode_definition':([15,185,],[100,236,]),'location':([0,4,10,11,20,23,51,54,68,69,86,91,92,102,103,119,120,121,146,149,164,166,167,176,177,201,206,207,208,210,214,216,217,220,229,230,234,237,239,249,263,267,269,290,302,303,308,325,328,330,335,337,340,343,],[16,65,65,16,65,16,65,65,161,65,65,16,65,65,65,16,65,65,16,65,65,65,65,16,16,65,65,65,65,65,16,65,16,65,65,16,65,65,65,65,16,65,65,65,65,65,16,16,16,16,16,16,16,16,]),'return_action':([0,11,23,91,119,146,176,177,214,217,230,263,308,325,328,330,335,337,340,343,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'arithmetic_additive_operator':([16,76,222,],[104,163,163,]),'then_expression':([148,297,],[221,318,]),'step_value':([278,],[305,]),'reference_mode':([47,122,136,183,286,291,327,],[126,126,126,126,126,126,126,]),'label':([0,11,21,23,91,146,177,214,217,230,263,308,325,328,330,335,337,340,343,],[24,94,116,24,94,94,94,94,94,94,94,24,24,24,24,24,24,24,24,]),'dereferenced_reference':([0,4,10,11,20,23,51,54,68,69,86,91,92,102,103,119,120,121,146,149,164,166,167,176,177,201,206,207,208,210,214,216,217,220,229,230,234,237,239,249,263,267,269,290,302,303,308,325,328,330,335,337,340,343,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'id_list':([3,15,40,144,185,204,243,312,],[47,98,122,47,98,122,286,286,]),'index_mode_list':([207,],[255,]),'start_value':([234,],[278,]),'if_action':([0,11,23,91,119,146,176,177,214,217,230,263,308,325,328,330,335,337,340,343,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'discrete_expression':([234,302,],[279,319,]),'string_concatenation_operator':([16,76,222,],[114,165,165,]),'operand4':([4,10,20,51,54,69,86,92,102,103,120,121,149,164,166,167,201,206,207,208,210,216,220,229,234,237,239,249,267,269,290,302,303,],[72,72,72,145,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'result_attribute':([338,],[346,]),'string_reference':([0,4,10,11,20,23,51,54,68,69,86,91,92,102,103,119,120,121,146,149,164,166,167,176,177,201,206,207,208,210,214,216,217,220,229,230,234,237,239,249,263,267,269,290,302,303,308,325,328,330,335,337,340,343,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'assigning_operator':([16,],[103,]),'elseif_expression_list':([221,],[266,]),'range_enumeration':([96,],[179,]),'expression':([4,10,20,54,69,86,92,102,103,120,121,166,201,206,207,208,210,216,220,229,234,237,239,249,267,269,290,302,303,],[73,87,87,73,162,170,73,189,191,170,198,189,247,251,251,251,259,73,265,170,280,281,283,247,73,298,251,280,320,]),'constant_expression':([201,249,],[248,288,]),'exit_action':([0,11,23,91,119,146,176,177,214,217,230,263,308,325,328,330,335,337,340,343,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'literal':([4,10,20,51,54,69,86,92,102,103,120,121,149,164,166,167,201,206,207,208,210,216,220,229,234,237,239,249,267,269,290,302,303,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'initialization':([139,],[211,]),'declaration_list':([3,],[48,]),'step_enumeration':([96,],[178,]),'array_primitive_value':([4,10,20,51,54,69,86,92,102,103,120,121,149,164,166,167,201,206,207,208,210,216,220,229,234,237,239,249,267,269,290,302,303,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'then_clause':([53,262,],[147,294,]),'result':([10,20,],[88,115,]),'parenthesized_expression':([4,10,20,51,54,69,86,92,102,103,120,121,149,164,166,167,201,206,207,208,210,216,220,229,234,237,239,249,267,269,290,302,303,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'synonym_statement':([0,23,308,325,328,330,335,337,340,343,],[36,36,36,36,36,36,36,36,36,36,]),'empty_literal':([4,10,20,51,54,69,86,92,102,103,120,121,149,164,166,167,201,206,207,208,210,216,220,229,234,237,239,249,267,269,290,302,303,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'lower_bound':([102,121,166,206,207,208,290,],[188,188,188,188,188,188,188,]),'string_literal':([4,10,20,51,54,69,86,92,102,103,120,121,149,164,166,167,201,206,207,208,210,216,220,229,234,237,239,249,267,269,290,302,303,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'statement':([0,23,308,325,328,330,335,337,340,343,],[32,118,32,32,118,32,118,32,118,118,]),'syn_list':([40,],[123,]),'operator2':([76,222,],[164,164,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','lyaParser.py',65),
  ('program -> empty','program',1,'p_program','lyaParser.py',66),
  ('statement_list -> statement','statement_list',1,'p_statement_list1','lyaParser.py',73),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list1','lyaParser.py',74),
  ('statement -> declaration_statement','statement',1,'p_statement','lyaParser.py',81),
  ('statement -> newmode_statement','statement',1,'p_statement','lyaParser.py',82),
  ('statement -> synonym_statement','statement',1,'p_statement','lyaParser.py',83),
  ('statement -> action_statement','statement',1,'p_statement','lyaParser.py',84),
  ('statement -> procedure_statement','statement',1,'p_statement','lyaParser.py',85),
  ('declaration_statement -> DCL declaration_list SMC','declaration_statement',3,'p_declaration_statement','lyaParser.py',93),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','lyaParser.py',97),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','lyaParser.py',98),
  ('declaration -> id_list mode initialization','declaration',3,'p_declaration1','lyaParser.py',105),
  ('declaration -> id_list mode','declaration',2,'p_declaration2','lyaParser.py',109),
  ('id_list -> ID','id_list',1,'p_id_list','lyaParser.py',113),
  ('id_list -> id_list COMMA ID','id_list',3,'p_id_list','lyaParser.py',114),
  ('initialization -> EQUALS expression','initialization',2,'p_initialization','lyaParser.py',121),
  ('mode -> mode_name','mode',1,'p_mode','lyaParser.py',129),
  ('mode -> discrete_mode','mode',1,'p_mode','lyaParser.py',130),
  ('mode -> reference_mode','mode',1,'p_mode','lyaParser.py',131),
  ('mode -> composite_mode','mode',1,'p_mode','lyaParser.py',132),
  ('mode_name -> ID','mode_name',1,'p_mode_name','lyaParser.py',136),
  ('discrete_mode -> basic_mode','discrete_mode',1,'p_discrete_mode','lyaParser.py',140),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','lyaParser.py',141),
  ('basic_mode -> INT','basic_mode',1,'p_basic_mode','lyaParser.py',145),
  ('basic_mode -> BOOL','basic_mode',1,'p_basic_mode','lyaParser.py',146),
  ('basic_mode -> CHAR','basic_mode',1,'p_basic_mode','lyaParser.py',147),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaParser.py',151),
  ('discrete_range_mode -> basic_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaParser.py',152),
  ('discrete_mode_name -> ID','discrete_mode_name',1,'p_discrete_mode_name','lyaParser.py',156),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_litereal_range','lyaParser.py',160),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','lyaParser.py',164),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','lyaParser.py',168),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','lyaParser.py',172),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','lyaParser.py',176),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','lyaParser.py',177),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','lyaParser.py',181),
  ('string_length -> INTCONST','string_length',1,'p_string_length','lyaParser.py',185),
  ('array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_node','array_mode',5,'p_array_mode','lyaParser.py',189),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','lyaParser.py',194),
  ('index_mode_list -> index_mode_list COMMA index_mode','index_mode_list',3,'p_index_mode_list','lyaParser.py',195),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','lyaParser.py',202),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','lyaParser.py',203),
  ('element_node -> mode','element_node',1,'p_element_node','lyaParser.py',207),
  ('newmode_statement -> TYPE newmode_list SMC','newmode_statement',3,'p_newmode_statement','lyaParser.py',215),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','lyaParser.py',219),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','lyaParser.py',220),
  ('mode_definition -> id_list EQUALS mode','mode_definition',3,'p_mode_definition','lyaParser.py',227),
  ('synonym_statement -> SYN syn_list SMC','synonym_statement',3,'p_synonym_statement','lyaParser.py',231),
  ('syn_list -> syn_definition','syn_list',1,'p_syn_list','lyaParser.py',239),
  ('syn_list -> syn_list COMMA syn_definition','syn_list',3,'p_syn_list','lyaParser.py',240),
  ('syn_definition -> id_list EQUALS constant_expression','syn_definition',3,'p_syn_definition','lyaParser.py',247),
  ('syn_definition -> id_list mode EQUALS constant_expression','syn_definition',4,'p_syn_definition2','lyaParser.py',251),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','lyaParser.py',255),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','lyaParser.py',263),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','lyaParser.py',264),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','lyaParser.py',265),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','lyaParser.py',266),
  ('literal -> integer_literal','literal',1,'p_literal','lyaParser.py',270),
  ('literal -> boolean_literal','literal',1,'p_literal','lyaParser.py',271),
  ('literal -> char_literal','literal',1,'p_literal','lyaParser.py',272),
  ('literal -> empty_literal','literal',1,'p_literal','lyaParser.py',273),
  ('literal -> string_literal','literal',1,'p_literal','lyaParser.py',274),
  ('integer_literal -> INTCONST','integer_literal',1,'p_integer_literal','lyaParser.py',278),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','lyaParser.py',282),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','lyaParser.py',283),
  ('char_literal -> CHARCONST','char_literal',1,'p_char_literal','lyaParser.py',287),
  ('string_literal -> STRINGCONST','string_literal',1,'p_string_literal','lyaParser.py',291),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','lyaParser.py',295),
  ('value_array_element -> array_primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','lyaParser.py',299),
  ('value_array_slice -> array_primitive_value LBRACKET literal_range RBRACKET','value_array_slice',4,'p_value_array_slice','lyaParser.py',303),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','lyaParser.py',307),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','lyaParser.py',311),
  ('action_statement -> action SMC','action_statement',2,'p_action_statement','lyaParser.py',319),
  ('action_statement -> label COLON action SMC','action_statement',4,'p_action_statement','lyaParser.py',320),
  ('label -> ID','label',1,'p_label','lyaParser.py',327),
  ('action -> assignment_action','action',1,'p_action','lyaParser.py',331),
  ('action -> bracketed_action','action',1,'p_action','lyaParser.py',332),
  ('action -> call_action','action',1,'p_action','lyaParser.py',333),
  ('action -> exit_action','action',1,'p_action','lyaParser.py',334),
  ('action -> return_action','action',1,'p_action','lyaParser.py',335),
  ('action -> result_action','action',1,'p_action','lyaParser.py',336),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','lyaParser.py',344),
  ('assigning_operator -> EQUALS','assigning_operator',1,'p_assigning_operator','lyaParser.py',348),
  ('assigning_operator -> closed_dyadic_operator EQUALS','assigning_operator',2,'p_assigning_operator','lyaParser.py',349),
  ('closed_dyadic_operator -> arithmetic_additive_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','lyaParser.py',356),
  ('closed_dyadic_operator -> arithmetic_multiplicative_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','lyaParser.py',357),
  ('closed_dyadic_operator -> string_concatenation_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','lyaParser.py',358),
  ('expression_list -> expression','expression_list',1,'p_expression_list','lyaParser.py',362),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','lyaParser.py',363),
  ('expression -> operand0','expression',1,'p_expression','lyaParser.py',370),
  ('expression -> conditional_expression','expression',1,'p_expression','lyaParser.py',371),
  ('operand0 -> operand1','operand0',1,'p_operand0','lyaParser.py',375),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','lyaParser.py',376),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','lyaParser.py',383),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','lyaParser.py',384),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','lyaParser.py',388),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','lyaParser.py',392),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','lyaParser.py',393),
  ('relational_operator -> ISEQUAL','relational_operator',1,'p_relational_operator','lyaParser.py',394),
  ('relational_operator -> NOTEQUAL','relational_operator',1,'p_relational_operator','lyaParser.py',395),
  ('relational_operator -> GT','relational_operator',1,'p_relational_operator','lyaParser.py',396),
  ('relational_operator -> GE','relational_operator',1,'p_relational_operator','lyaParser.py',397),
  ('relational_operator -> LT','relational_operator',1,'p_relational_operator','lyaParser.py',398),
  ('relational_operator -> LE','relational_operator',1,'p_relational_operator','lyaParser.py',399),
  ('operand1 -> operand2','operand1',1,'p_operand1','lyaParser.py',403),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1','lyaParser.py',404),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','lyaParser.py',411),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','lyaParser.py',412),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','lyaParser.py',416),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','lyaParser.py',417),
  ('string_concatenation_operator -> STRCONC','string_concatenation_operator',1,'p_string_concatenation_operator','lyaParser.py',421),
  ('operand2 -> operand3','operand2',1,'p_operand2','lyaParser.py',425),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','lyaParser.py',426),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaParser.py',433),
  ('arithmetic_multiplicative_operator -> DIV','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaParser.py',434),
  ('arithmetic_multiplicative_operator -> MOD','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaParser.py',435),
  ('operand3 -> operand4','operand3',1,'p_operand3','lyaParser.py',439),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','lyaParser.py',440),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','lyaParser.py',447),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','lyaParser.py',448),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','lyaParser.py',452),
  ('operand4 -> location','operand4',1,'p_operand4','lyaParser.py',453),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','lyaParser.py',454),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','lyaParser.py',460),
  ('conditional_expression -> IF boolean_expression then_expression elseif_expression_list else_expression FI','conditional_expression',6,'p_conditional_expression2','lyaParser.py',464),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','lyaParser.py',468),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','lyaParser.py',472),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','lyaParser.py',476),
  ('elseif_expression_list -> elseif_expression','elseif_expression_list',1,'p_elseif_expression_list','lyaParser.py',480),
  ('elseif_expression_list -> elseif_expression_list elseif_expression','elseif_expression_list',2,'p_elseif_expression_list','lyaParser.py',481),
  ('elseif_expression -> ELSIF boolean_expression then_expression','elseif_expression',3,'p_elseif_expression','lyaParser.py',488),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','lyaParser.py',496),
  ('location -> location_name','location',1,'p_location','lyaParser.py',500),
  ('location -> string_reference','location',1,'p_location','lyaParser.py',501),
  ('location -> dereferenced_reference','location',1,'p_location','lyaParser.py',502),
  ('location -> array_element','location',1,'p_location','lyaParser.py',503),
  ('location -> array_slice','location',1,'p_location','lyaParser.py',504),
  ('location -> call_action','location',1,'p_location','lyaParser.py',505),
  ('location_name -> ID','location_name',1,'p_location_name','lyaParser.py',509),
  ('string_reference -> location_name LBRACKET integer_expression RBRACKET','string_reference',4,'p_string_reference','lyaParser.py',513),
  ('string_reference -> location_name LBRACKET literal_range RBRACKET','string_reference',4,'p_string_reference2','lyaParser.py',517),
  ('dereferenced_reference -> location ARROW','dereferenced_reference',2,'p_dereferenced_reference','lyaParser.py',521),
  ('array_element -> location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','lyaParser.py',525),
  ('array_slice -> location LBRACKET literal_range RBRACKET','array_slice',4,'p_array_slice','lyaParser.py',529),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','lyaParser.py',537),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','lyaParser.py',538),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','lyaParser.py',546),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action2','lyaParser.py',550),
  ('then_clause -> THEN','then_clause',1,'p_then_clause','lyaParser.py',554),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','lyaParser.py',555),
  ('else_clause -> ELSE','else_clause',1,'p_else_clause','lyaParser.py',562),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','lyaParser.py',563),
  ('else_clause -> elseif_clause','else_clause',1,'p_else_clause2','lyaParser.py',570),
  ('elseif_clause -> ELSIF boolean_expression then_clause','elseif_clause',3,'p_elseif_clause','lyaParser.py',574),
  ('elseif_clause -> ELSIF boolean_expression then_clause else_clause','elseif_clause',4,'p_elseif_clause2','lyaParser.py',578),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','lyaParser.py',583),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','lyaParser.py',584),
  ('do_action -> DO OD','do_action',2,'p_do_action','lyaParser.py',595),
  ('do_action -> DO control_part SMC OD','do_action',4,'p_do_action2','lyaParser.py',599),
  ('do_action -> DO control_part SMC action_statement_list OD','do_action',5,'p_do_action3','lyaParser.py',603),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action4','lyaParser.py',607),
  ('control_part -> for_control','control_part',1,'p_control_part','lyaParser.py',611),
  ('control_part -> while_control','control_part',1,'p_control_part','lyaParser.py',612),
  ('control_part -> for_control while_control','control_part',2,'p_control_part2','lyaParser.py',616),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','lyaParser.py',620),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','lyaParser.py',624),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','lyaParser.py',625),
  ('step_enumeration -> loop_counter EQUALS start_value end_value','step_enumeration',4,'p_step_enumeration','lyaParser.py',629),
  ('step_enumeration -> loop_counter EQUALS start_value step_value end_value','step_enumeration',5,'p_step_enumeration2','lyaParser.py',633),
  ('step_enumeration -> loop_counter EQUALS start_value DOWN end_value','step_enumeration',5,'p_step_enumeration3','lyaParser.py',637),
  ('step_enumeration -> loop_counter EQUALS start_value step_value DOWN end_value','step_enumeration',6,'p_step_enumeration4','lyaParser.py',641),
  ('loop_counter -> ID','loop_counter',1,'p_loop_counter','lyaParser.py',645),
  ('start_value -> discrete_expression','start_value',1,'p_start_value','lyaParser.py',649),
  ('step_value -> BY integer_expression','step_value',2,'p_step_value','lyaParser.py',653),
  ('end_value -> TO discrete_expression','end_value',2,'p_end_value','lyaParser.py',657),
  ('discrete_expression -> expression','discrete_expression',1,'p_discrete_expression','lyaParser.py',661),
  ('range_enumeration -> loop_counter IN discrete_mode','range_enumeration',3,'p_range_enumeration','lyaParser.py',665),
  ('range_enumeration -> loop_counter DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration2','lyaParser.py',669),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','lyaParser.py',673),
  ('procedure_statement -> label COLON procedure_definition SMC','procedure_statement',4,'p_procedure_statement','lyaParser.py',681),
  ('procedure_definition -> PROC LPAREN RPAREN SMC END','procedure_definition',5,'p_procedure_definition1','lyaParser.py',685),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SMC statement_list END','procedure_definition',7,'p_procedure_definition1','lyaParser.py',686),
  ('procedure_definition -> PROC LPAREN RPAREN SMC statement_list END','procedure_definition',6,'p_procedure_definition1','lyaParser.py',687),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SMC END','procedure_definition',6,'p_procedure_definition2','lyaParser.py',696),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SMC END','procedure_definition',7,'p_procedure_definition2','lyaParser.py',697),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SMC statement_list END','procedure_definition',8,'p_procedure_definition2','lyaParser.py',698),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SMC statement_list END','procedure_definition',7,'p_procedure_definition3','lyaParser.py',707),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SMC END','procedure_definition',6,'p_procedure_definition3','lyaParser.py',708),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','lyaParser.py',715),
  ('formal_parameter_list -> formal_parameter COMMA formal_parameter_list','formal_parameter_list',3,'p_formal_parameter_list','lyaParser.py',716),
  ('formal_parameter -> id_list parameter_spec','formal_parameter',2,'p_formal_parameter','lyaParser.py',723),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','lyaParser.py',727),
  ('parameter_spec -> mode parameter_attribute','parameter_spec',2,'p_parameter_spec','lyaParser.py',728),
  ('parameter_attribute -> LOC','parameter_attribute',1,'p_parameter_attribute','lyaParser.py',735),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','lyaParser.py',739),
  ('result_spec -> RETURNS LPAREN mode result_attribute RPAREN','result_spec',5,'p_result_spec','lyaParser.py',740),
  ('result_attribute -> LOC','result_attribute',1,'p_result_attribute','lyaParser.py',747),
  ('call_action -> procedure_call','call_action',1,'p_call_action','lyaParser.py',755),
  ('call_action -> builtin_call','call_action',1,'p_call_action','lyaParser.py',756),
  ('procedure_call -> ID LPAREN RPAREN','procedure_call',3,'p_procedure_call','lyaParser.py',760),
  ('procedure_call -> ID LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','lyaParser.py',761),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','lyaParser.py',768),
  ('parameter_list -> parameter COMMA parameter_list','parameter_list',3,'p_parameter_list','lyaParser.py',769),
  ('parameter -> expression','parameter',1,'p_parameter','lyaParser.py',776),
  ('exit_action -> EXIT label','exit_action',2,'p_exit_action','lyaParser.py',784),
  ('return_action -> RETURN','return_action',1,'p_return_action','lyaParser.py',788),
  ('return_action -> RETURN result','return_action',2,'p_return_action','lyaParser.py',789),
  ('result_action -> RESULT result','result_action',2,'p_result_action','lyaParser.py',796),
  ('result -> expression','result',1,'p_result','lyaParser.py',800),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','lyaParser.py',804),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','lyaParser.py',805),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','lyaParser.py',812),
  ('builtin_name -> PRED','builtin_name',1,'p_builtin_name','lyaParser.py',813),
  ('builtin_name -> SUCC','builtin_name',1,'p_builtin_name','lyaParser.py',814),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','lyaParser.py',815),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','lyaParser.py',816),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','lyaParser.py',817),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','lyaParser.py',818),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','lyaParser.py',819),
  ('integer_expression -> expression','integer_expression',1,'p_integer_expression','lyaParser.py',828),
  ('empty -> <empty>','empty',0,'p_empty','lyaParser.py',835),
]
