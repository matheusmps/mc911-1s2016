
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '6A512D6923547A2B5AE09605C449836D'
    
_lr_action_items = {'READ':([0,2,3,5,9,13,16,20,24,32,43,44,46,47,48,55,56,67,71,77,78,84,91,92,93,94,95,96,98,99,101,104,105,107,110,120,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,147,154,155,164,168,170,177,197,198,204,206,211,216,217,220,223,225,227,229,230,233,236,238,240,242,247,254,255,273,297,304,306,309,316,317,319,334,335,337,342,],[26,-5,-7,26,-3,26,26,-9,26,-6,-8,26,26,-4,-74,-120,26,26,-121,26,26,26,26,26,-157,-116,-115,-117,-110,26,-84,26,-111,-112,26,26,26,-109,-108,-98,-97,-103,-100,-105,-96,-104,-99,-95,-102,-101,26,26,26,26,26,-158,-85,26,-10,-49,26,-45,26,26,-75,-181,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'AND':([1,4,15,17,27,30,38,49,51,52,53,54,58,59,60,61,62,63,64,65,66,68,69,70,72,73,75,76,79,80,81,83,97,144,149,174,201,205,207,208,209,210,215,224,226,234,248,259,260,281,],[-137,-134,-136,-135,-138,-200,-199,-93,-58,-68,-59,132,-57,-122,-124,-69,-106,-123,-113,-60,-139,-140,-118,-66,-65,-56,-61,-67,-55,-64,-63,-62,-143,-119,-133,-201,-211,-142,-141,-107,-94,-114,-73,-145,-144,-202,-212,-71,-70,-140,]),'ISEQUAL':([1,4,15,17,27,30,38,49,51,52,53,54,58,59,60,61,62,63,64,65,66,68,69,70,72,73,75,76,79,80,81,83,97,144,149,174,201,205,207,208,209,210,215,224,226,234,248,259,260,281,],[-137,-134,-136,-135,-138,-200,-199,-93,-58,-68,-59,135,-57,-122,-124,-69,-106,-123,-113,-60,-139,-140,-118,-66,-65,-56,-61,-67,-55,-64,-63,-62,-143,-119,-133,-201,-211,-142,-141,-107,-94,-114,-73,-145,-144,-202,-212,-71,-70,-140,]),'THEN':([1,4,15,17,27,30,38,49,50,51,52,53,54,58,59,60,61,62,63,64,65,66,68,69,70,72,73,75,76,79,80,81,83,97,108,109,144,146,149,174,201,205,207,208,209,210,215,224,226,234,248,259,260,274,290,291,314,],[-137,-134,-136,-135,-138,-200,-199,-93,-92,-58,-68,-59,-91,-57,-122,-124,-69,-106,-123,-113,-60,-139,-140,-118,-66,-65,-56,-61,-67,-55,-64,-63,-62,-143,170,-127,-119,211,-133,-201,-211,-142,-141,-107,-94,-114,-73,-145,-144,-202,-212,-71,-70,170,211,-125,-126,]),'ARRAY':([111,114,117,192,202,237,264,310,318,],[-15,187,187,187,187,-16,187,187,187,]),'PRED':([0,2,3,5,9,13,16,20,24,32,43,44,46,47,48,55,56,67,71,77,78,84,91,92,93,94,95,96,98,99,101,104,105,107,110,120,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,147,154,155,164,168,170,177,197,198,204,206,211,216,217,220,223,225,227,229,230,233,236,238,240,242,247,254,255,273,297,304,306,309,316,317,319,334,335,337,342,],[7,-5,-7,7,-3,7,7,-9,7,-6,-8,7,7,-4,-74,-120,7,7,-121,7,7,7,7,7,-157,-116,-115,-117,-110,7,-84,7,-111,-112,7,7,7,-109,-108,-98,-97,-103,-100,-105,-96,-104,-99,-95,-102,-101,7,7,7,7,7,-158,-85,7,-10,-49,7,-45,7,7,-75,-181,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'STRINGCONST':([13,24,44,46,55,56,67,71,77,91,94,95,96,98,99,101,104,105,107,110,120,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,147,168,198,206,211,223,225,230,233,236,238,240,242,247,254,255,304,306,309,],[52,52,52,52,-120,52,52,-121,52,52,-116,-115,-117,-110,52,-84,52,-111,-112,52,52,52,-109,-108,-98,-97,-103,-100,-105,-96,-104,-99,-95,-102,-101,52,52,52,-85,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'LOWER':([0,2,3,5,9,13,16,20,24,32,43,44,46,47,48,55,56,67,71,77,78,84,91,92,93,94,95,96,98,99,101,104,105,107,110,120,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,147,154,155,164,168,170,177,197,198,204,206,211,216,217,220,223,225,227,229,230,233,236,238,240,242,247,254,255,273,297,304,306,309,316,317,319,334,335,337,342,],[18,-5,-7,18,-3,18,18,-9,18,-6,-8,18,18,-4,-74,-120,18,18,-121,18,18,18,18,18,-157,-116,-115,-117,-110,18,-84,18,-111,-112,18,18,18,-109,-108,-98,-97,-103,-100,-105,-96,-104,-99,-95,-102,-101,18,18,18,18,18,-158,-85,18,-10,-49,18,-45,18,18,-75,-181,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'LENGTH':([0,2,3,5,9,13,16,20,24,32,43,44,46,47,48,55,56,67,71,77,78,84,91,92,93,94,95,96,98,99,101,104,105,107,110,120,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,147,154,155,164,168,170,177,197,198,204,206,211,216,217,220,223,225,227,229,230,233,236,238,240,242,247,254,255,273,297,304,306,309,316,317,319,334,335,337,342,],[33,-5,-7,33,-3,33,33,-9,33,-6,-8,33,33,-4,-74,-120,33,33,-121,33,33,33,33,33,-157,-116,-115,-117,-110,33,-84,33,-111,-112,33,33,33,-109,-108,-98,-97,-103,-100,-105,-96,-104,-99,-95,-102,-101,33,33,33,33,33,-158,-85,33,-10,-49,33,-45,33,33,-75,-181,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'FOR':([16,],[90,]),'MINUS':([1,4,13,15,17,21,22,24,25,27,30,38,44,46,49,51,52,53,58,59,60,61,62,63,64,65,66,67,68,69,70,72,73,75,76,77,79,80,81,83,91,94,95,96,97,98,99,101,104,105,107,110,120,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,149,152,168,174,198,201,205,206,207,208,209,210,211,215,223,224,225,226,230,233,234,236,238,240,242,247,248,254,255,259,260,281,304,306,309,],[-137,-134,55,-136,-135,105,-139,55,-140,-138,-200,-199,55,55,105,-58,-68,-59,-57,-122,-124,-69,-106,-123,-113,-60,-139,55,-140,-118,-66,-65,-56,-61,-67,55,-55,-64,-63,-62,55,-116,-115,-117,-143,-110,55,-84,55,-111,-112,55,55,55,-109,-108,-98,-97,-103,-100,-105,-96,-104,-99,-95,-102,-101,55,-119,55,55,-133,-140,-85,-201,55,-211,-142,55,-141,-107,105,-114,55,-73,55,-145,55,-144,55,55,-202,55,55,55,55,55,-212,55,55,-71,-70,-140,55,55,55,]),'RESULT':([0,2,3,5,9,16,20,32,43,47,48,84,92,93,154,155,164,170,177,197,204,216,217,220,227,229,273,297,316,317,319,334,335,337,342,],[13,-5,-7,13,-3,13,-9,-6,-8,-4,-74,13,13,-157,13,13,-158,13,-10,-49,-45,-75,-181,13,13,13,13,13,13,13,13,13,13,13,13,]),'SMC':([1,4,6,8,12,15,17,19,22,27,29,30,31,37,38,39,44,49,50,51,52,53,54,57,58,59,60,61,62,63,64,65,66,68,69,70,72,73,75,76,79,80,81,82,83,85,87,88,89,97,109,112,113,115,116,118,119,121,123,124,144,149,150,151,156,158,160,161,162,163,169,174,178,179,180,181,182,183,185,186,189,190,193,194,195,201,205,207,208,209,210,215,219,224,226,231,234,235,241,243,244,245,246,248,249,250,259,260,262,265,268,271,275,287,288,291,294,295,301,303,308,311,312,314,315,320,324,325,327,332,333,336,338,340,341,343,344,345,347,349,350,],[-137,-134,48,-78,-77,-136,-135,-81,-79,-138,-82,-200,-146,-147,-199,-80,-207,-93,-92,-58,-68,-59,-91,-209,-57,-122,-124,-69,-106,-123,-113,-60,-139,-140,-118,-66,-65,-56,-61,-67,-55,-64,-63,-210,-62,154,-159,-164,-163,-143,-127,177,-11,-50,197,-76,-206,-46,204,-208,-119,-133,216,217,-165,-168,-167,-166,-180,-162,-83,-201,-35,-22,-25,-23,-21,-20,-24,-36,-26,-27,-14,-18,-19,-211,-142,-141,-107,-94,-114,-73,-160,-145,-144,-148,-202,-12,-34,-13,-51,-52,-54,-212,-48,-47,-71,-70,297,-161,-178,-177,-149,-17,-53,-125,316,317,-179,-169,-29,-37,-28,-126,334,-182,-171,-176,-170,-39,-44,-185,-189,-184,-172,-186,-183,-188,-196,-187,-197,]),'LE':([1,4,15,17,27,30,38,49,51,52,53,54,58,59,60,61,62,63,64,65,66,68,69,70,72,73,75,76,79,80,81,83,97,144,149,174,201,205,207,208,209,210,215,224,226,234,248,259,260,281,],[-137,-134,-136,-135,-138,-200,-199,-93,-58,-68,-59,136,-57,-122,-124,-69,-106,-123,-113,-60,-139,-140,-118,-66,-65,-56,-61,-67,-55,-64,-63,-62,-143,-119,-133,-201,-211,-142,-141,-107,-94,-114,-73,-145,-144,-202,-212,-71,-70,-140,]),'NULL':([13,24,44,46,55,56,67,71,77,91,94,95,96,98,99,101,104,105,107,110,120,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,147,168,198,206,211,223,225,230,233,236,238,240,242,247,254,255,304,306,309,],[61,61,61,61,-120,61,61,-121,61,61,-116,-115,-117,-110,61,-84,61,-111,-112,61,61,61,-109,-108,-98,-97,-103,-100,-105,-96,-104,-99,-95,-102,-101,61,61,61,-85,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'STRCONC':([1,4,15,17,21,22,25,27,30,38,49,51,52,53,58,59,60,61,62,63,64,65,66,68,69,70,72,73,75,76,79,80,81,83,97,144,149,152,174,201,205,207,208,209,210,215,224,226,234,248,259,260,281,],[-137,-134,-136,-135,107,-139,-140,-138,-200,-199,107,-58,-68,-59,-57,-122,-124,-69,-106,-123,-113,-60,-139,-140,-118,-66,-65,-56,-61,-67,-55,-64,-63,-62,-143,-119,-133,-140,-201,-211,-142,-141,-107,107,-114,-73,-145,-144,-202,-212,-71,-70,-140,]),'IN':([1,4,15,17,27,30,38,49,51,52,53,54,58,59,60,61,62,63,64,65,66,68,69,70,72,73,75,76,79,80,81,83,97,144,149,157,159,174,201,205,207,208,209,210,215,221,224,226,234,248,259,260,281,],[-137,-134,-136,-135,-138,-200,-199,-93,-58,-68,-59,133,-57,-122,-124,-69,-106,-123,-113,-60,-139,-140,-118,-66,-65,-56,-61,-67,-55,-64,-63,-62,-143,-119,-133,-173,222,-201,-211,-142,-141,-107,-94,-114,-73,266,-145,-144,-202,-212,-71,-70,-140,]),'ELSE':([1,4,15,17,27,30,38,48,49,50,51,52,53,54,58,59,60,61,62,63,64,65,66,68,69,70,72,73,75,76,79,80,81,83,93,97,144,149,164,170,171,174,201,205,207,208,209,210,212,215,216,224,226,227,234,248,253,257,258,259,260,291,293,307,313,314,],[-137,-134,-136,-135,-138,-200,-199,-74,-93,-92,-58,-68,-59,-91,-57,-122,-124,-69,-106,-123,-113,-60,-139,-140,-118,-66,-65,-56,-61,-67,-55,-64,-63,-62,-157,-143,-119,-133,-158,-150,229,-201,-211,-142,-141,-107,-94,-114,254,-73,-75,-145,-144,-151,-202,-212,-128,254,-130,-71,-70,-125,-131,229,-132,-126,]),'OD':([16,48,92,93,154,164,216,220,],[87,-74,163,-157,219,-158,-75,265,]),'BOOL':([111,114,117,192,202,222,237,238,264,266,309,310,318,],[-15,189,189,189,189,189,-16,189,189,189,189,189,189,]),'COLON':([1,4,14,15,17,25,27,30,38,49,50,51,52,53,54,58,59,60,61,62,63,64,65,66,68,69,70,72,73,75,76,79,80,81,83,86,97,126,127,144,149,167,174,201,205,207,208,209,210,215,224,226,234,248,259,260,278,281,291,314,],[-137,-134,84,-136,-135,-76,-138,-200,-199,-93,-92,-58,-68,-59,-91,-57,-122,-124,-69,-106,-123,-113,-60,-139,-140,-118,-66,-65,-56,-61,-67,-55,-64,-63,-62,155,-143,206,-32,-119,-133,-32,-201,-211,-142,-141,-107,-94,-114,-73,-145,-144,-202,-212,-71,-70,-32,-140,-125,-126,]),'LBRACKET':([1,4,15,17,21,22,25,27,30,38,51,52,53,58,59,61,63,65,66,68,70,72,73,74,75,76,79,80,81,83,97,149,152,174,187,188,201,205,207,215,224,226,234,248,259,260,281,],[-137,46,-136,-135,99,-139,-140,-138,-200,-199,-58,-68,-59,-57,-72,-69,99,-60,-139,-140,-66,-65,-56,147,-61,-67,-55,-64,-63,-62,-143,99,-140,-201,238,239,-211,-142,-141,-73,-145,-144,-202,-212,-71,-70,-140,]),'BY':([1,4,15,17,27,30,38,49,50,51,52,53,54,58,59,60,61,62,63,64,65,66,68,69,70,72,73,75,76,79,80,81,83,97,144,149,174,201,205,207,208,209,210,215,224,226,234,248,259,260,269,270,271,291,314,],[-137,-134,-136,-135,-138,-200,-199,-93,-92,-58,-68,-59,-91,-57,-122,-124,-69,-106,-123,-113,-60,-139,-140,-118,-66,-65,-56,-61,-67,-55,-64,-63,-62,-143,-119,-133,-201,-211,-142,-141,-107,-94,-114,-73,-145,-144,-202,-212,-71,-70,306,-174,-177,-125,-126,]),'UPPER':([0,2,3,5,9,13,16,20,24,32,43,44,46,47,48,55,56,67,71,77,78,84,91,92,93,94,95,96,98,99,101,104,105,107,110,120,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,147,154,155,164,168,170,177,197,198,204,206,211,216,217,220,223,225,227,229,230,233,236,238,240,242,247,254,255,273,297,304,306,309,316,317,319,334,335,337,342,],[11,-5,-7,11,-3,11,11,-9,11,-6,-8,11,11,-4,-74,-120,11,11,-121,11,11,11,11,11,-157,-116,-115,-117,-110,11,-84,11,-111,-112,11,11,11,-109,-108,-98,-97,-103,-100,-105,-96,-104,-99,-95,-102,-101,11,11,11,11,11,-158,-85,11,-10,-49,11,-45,11,11,-75,-181,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'OR':([1,4,15,17,27,30,38,49,51,52,53,54,58,59,60,61,62,63,64,65,66,68,69,70,72,73,75,76,79,80,81,83,97,144,149,174,201,205,207,208,209,210,215,224,226,234,248,259,260,281,],[-137,-134,-136,-135,-138,-200,-199,-93,-58,-68,-59,139,-57,-122,-124,-69,-106,-123,-113,-60,-139,-140,-118,-66,-65,-56,-61,-67,-55,-64,-63,-62,-143,-119,-133,-201,-211,-142,-141,-107,-94,-114,-73,-145,-144,-202,-212,-71,-70,-140,]),'TO':([1,4,15,17,27,30,38,49,50,51,52,53,54,58,59,60,61,62,63,64,65,66,68,69,70,72,73,75,76,79,80,81,83,97,144,149,174,201,205,207,208,209,210,215,224,226,234,248,259,260,269,270,271,291,302,305,314,326,328,329,],[-137,-134,-136,-135,-138,-200,-199,-93,-92,-58,-68,-59,-91,-57,-122,-124,-69,-106,-123,-113,-60,-139,-140,-118,-66,-65,-56,-61,-67,-55,-64,-63,-62,-143,-119,-133,-201,-211,-142,-141,-107,-94,-114,-73,-145,-144,-202,-212,-71,-70,304,-174,-177,-125,304,304,-126,304,-221,-175,]),'TIMES':([1,4,15,17,21,22,25,27,30,38,51,52,53,58,59,60,61,62,63,64,65,66,68,69,70,72,73,75,76,79,80,81,83,97,144,149,152,174,201,205,207,208,210,215,224,226,234,248,259,260,281,],[-137,-134,-136,-135,95,-139,-140,-138,-200,-199,-58,-68,-59,-57,-122,-124,-69,95,-123,-113,-60,-139,-140,-118,-66,-65,-56,-61,-67,-55,-64,-63,-62,-143,-119,-133,-140,-201,-211,-142,-141,95,-114,-73,-145,-144,-202,-212,-71,-70,-140,]),'LOC':([178,179,180,181,182,183,185,186,189,190,194,195,241,300,308,311,312,332,333,339,],[-35,-22,-25,-23,-21,-20,-24,-36,-26,-27,-18,-19,-34,323,-29,-37,-28,-39,-44,348,]),'EQUALS':([1,4,15,17,21,22,25,27,30,38,94,95,96,97,98,100,102,103,105,106,107,111,117,122,152,157,159,174,178,179,180,181,182,183,185,186,189,190,193,194,195,199,201,205,207,224,226,234,237,241,248,308,311,312,332,333,],[-137,-134,-136,-135,101,-139,-140,-138,-200,-199,-116,-115,-117,-143,-110,-86,-87,168,-111,-88,-112,-15,198,202,-140,-173,223,-201,-35,-22,-25,-23,-21,-20,-24,-36,-26,-27,242,-18,-19,247,-211,-142,-141,-145,-144,-202,-16,-34,-212,-29,-37,-28,-39,-44,]),'IF':([0,2,3,5,9,13,16,20,24,32,43,44,46,47,48,67,77,84,91,92,93,99,101,104,110,120,147,154,155,164,168,170,177,197,198,204,206,211,216,217,220,223,225,227,229,230,233,236,238,240,242,247,254,255,273,297,304,306,309,316,317,319,334,335,337,342,],[24,-5,-7,24,-3,67,24,-9,67,-6,-8,67,67,-4,-74,67,67,24,67,24,-157,67,-84,67,67,67,67,24,24,-158,-85,24,-10,-49,67,-45,67,67,-75,-181,24,67,67,24,24,67,67,67,67,67,67,67,67,67,24,24,67,67,67,24,24,24,24,24,24,24,]),'MOD':([1,4,15,17,21,22,25,27,30,38,51,52,53,58,59,60,61,62,63,64,65,66,68,69,70,72,73,75,76,79,80,81,83,97,144,149,152,174,201,205,207,208,210,215,224,226,234,248,259,260,281,],[-137,-134,-136,-135,96,-139,-140,-138,-200,-199,-58,-68,-59,-57,-122,-124,-69,96,-123,-113,-60,-139,-140,-118,-66,-65,-56,-61,-67,-55,-64,-63,-62,-143,-119,-133,-140,-201,-211,-142,-141,96,-114,-73,-145,-144,-202,-212,-71,-70,-140,]),'ID':([0,2,3,5,9,13,16,20,24,28,32,35,36,42,43,44,46,47,48,55,56,67,71,77,78,84,90,91,92,93,94,95,96,98,99,101,104,105,107,110,111,114,117,120,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,147,154,155,164,168,170,176,177,184,192,196,197,198,202,203,204,206,211,216,217,218,220,222,223,225,227,229,230,233,236,237,238,240,242,247,254,255,264,266,273,297,298,304,306,309,310,316,317,318,319,334,335,337,342,],[25,-5,-7,25,-3,68,25,-9,68,111,-6,111,118,111,-8,68,68,-4,-74,-120,68,68,-121,68,68,152,157,68,25,-157,-116,-115,-117,-110,68,-84,68,-111,-112,68,-15,179,179,68,68,-109,-108,-98,-97,-103,-100,-105,-96,-104,-99,-95,-102,-101,68,68,68,25,152,-158,-85,25,111,-10,237,179,111,-49,68,179,111,-45,68,68,-75,-181,111,25,267,68,68,25,25,68,68,68,-16,281,68,68,68,68,68,179,267,25,25,111,68,68,281,179,25,25,179,25,25,25,25,25,]),'INT':([111,114,117,192,202,222,237,238,264,266,309,310,318,],[-15,180,180,180,180,180,-16,180,180,180,180,180,180,]),'GE':([1,4,15,17,27,30,38,49,51,52,53,54,58,59,60,61,62,63,64,65,66,68,69,70,72,73,75,76,79,80,81,83,97,144,149,174,201,205,207,208,209,210,215,224,226,234,248,259,260,281,],[-137,-134,-136,-135,-138,-200,-199,-93,-58,-68,-59,134,-57,-122,-124,-69,-106,-123,-113,-60,-139,-140,-118,-66,-65,-56,-61,-67,-55,-64,-63,-62,-143,-119,-133,-201,-211,-142,-141,-107,-94,-114,-73,-145,-144,-202,-212,-71,-70,-140,]),'LT':([1,4,15,17,27,30,38,49,51,52,53,54,58,59,60,61,62,63,64,65,66,68,69,70,72,73,75,76,79,80,81,83,97,144,149,174,201,205,207,208,209,210,215,224,226,234,248,259,260,281,],[-137,-134,-136,-135,-138,-200,-199,-93,-58,-68,-59,138,-57,-122,-124,-69,-106,-123,-113,-60,-139,-140,-118,-66,-65,-56,-61,-67,-55,-64,-63,-62,-143,-119,-133,-201,-211,-142,-141,-107,-94,-114,-73,-145,-144,-202,-212,-71,-70,-140,]),'DO':([0,2,3,5,9,16,20,32,43,47,48,84,92,93,154,155,164,170,177,197,204,216,217,220,227,229,273,297,316,317,319,334,335,337,342,],[16,-5,-7,16,-3,16,-9,-6,-8,-4,-74,16,16,-157,16,16,-158,16,-10,-49,-45,-75,-181,16,16,16,16,16,16,16,16,16,16,16,16,]),'TRUE':([13,24,44,46,55,56,67,71,77,91,94,95,96,98,99,101,104,105,107,110,120,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,147,168,198,206,211,223,225,230,233,236,238,240,242,247,254,255,304,306,309,],[70,70,70,70,-120,70,70,-121,70,70,-116,-115,-117,-110,70,-84,70,-111,-112,70,70,70,-109,-108,-98,-97,-103,-100,-105,-96,-104,-99,-95,-102,-101,70,70,70,-85,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'NOT':([13,24,44,46,67,77,91,94,95,96,98,99,101,104,105,107,110,120,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,147,168,198,206,211,223,225,230,233,236,238,240,242,247,254,255,304,306,309,],[71,71,71,71,71,71,71,-116,-115,-117,-110,71,-84,71,-111,-112,71,71,71,-109,-108,-98,-97,-103,-100,-105,-96,-104,-99,-95,-102,-101,71,71,71,-85,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'FALSE':([13,24,44,46,55,56,67,71,77,91,94,95,96,98,99,101,104,105,107,110,120,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,147,168,198,206,211,223,225,230,233,236,238,240,242,247,254,255,304,306,309,],[72,72,72,72,-120,72,72,-121,72,72,-116,-115,-117,-110,72,-84,72,-111,-112,72,72,72,-109,-108,-98,-97,-103,-100,-105,-96,-104,-99,-95,-102,-101,72,72,72,-85,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'$end':([0,2,3,5,9,20,32,34,43,45,47,48,177,197,204,216,217,],[-222,-5,-7,-1,-3,-9,-6,-2,-8,0,-4,-74,-10,-49,-45,-75,-181,]),'DCL':([0,2,3,5,9,20,32,43,47,48,177,197,204,216,217,297,316,317,319,334,335,337,342,],[28,-5,-7,28,-3,-9,-6,-8,-4,-74,-10,-49,-45,-75,-181,28,28,28,28,28,28,28,28,]),'COMMA':([1,4,15,17,27,30,38,49,50,51,52,53,54,58,59,60,61,62,63,64,65,66,68,69,70,72,73,75,76,79,80,81,83,97,111,112,113,114,115,116,117,121,122,123,144,149,166,167,172,174,175,178,179,180,181,182,183,185,186,189,190,193,194,195,201,205,207,208,209,210,214,215,224,226,234,235,237,241,243,244,245,246,248,249,250,251,252,259,260,263,264,272,279,280,282,283,287,288,291,299,300,308,311,312,314,322,323,331,332,333,],[-137,-134,-136,-135,-138,-200,-199,-93,-92,-58,-68,-59,-91,-57,-122,-124,-69,-106,-123,-113,-60,-139,-140,-118,-66,-65,-56,-61,-67,-55,-64,-63,-62,-143,-15,176,-11,184,-50,196,184,-46,184,203,-119,-133,225,-89,233,-201,-205,-35,-22,-25,-23,-21,-20,-24,-36,-26,-27,-14,-18,-19,-211,-142,-141,-107,-94,-114,225,-73,-145,-144,-202,-12,-16,-34,-13,-51,-52,-54,-212,-48,-47,-31,-33,-71,-70,298,184,-90,-43,-40,309,-42,-17,-53,-125,-192,-193,-29,-37,-28,-126,-194,-195,-41,-39,-44,]),'PROC':([84,],[153,]),'WHILE':([1,4,15,16,17,27,30,38,49,50,51,52,53,54,58,59,60,61,62,63,64,65,66,68,69,70,72,73,75,76,79,80,81,83,89,97,144,149,158,160,161,174,180,181,185,189,190,201,205,207,208,209,210,215,224,226,234,248,259,260,268,271,291,301,303,308,312,314,324,325,327,341,],[-137,-134,-136,91,-135,-138,-200,-199,-93,-92,-58,-68,-59,-91,-57,-122,-124,-69,-106,-123,-113,-60,-139,-140,-118,-66,-65,-56,-61,-67,-55,-64,-63,-62,91,-143,-119,-133,-168,-167,-166,-201,-25,-23,-24,-26,-27,-211,-142,-141,-107,-94,-114,-73,-145,-144,-202,-212,-71,-70,-178,-177,-125,-179,-169,-29,-28,-126,-171,-176,-170,-172,]),'RPAREN':([1,4,15,17,27,30,38,49,50,51,52,53,54,58,59,60,61,62,63,64,65,66,68,69,70,72,73,75,76,79,80,81,83,97,110,120,144,148,149,172,173,174,175,178,179,180,181,182,183,185,186,189,190,194,195,200,201,205,207,208,209,210,215,218,224,226,234,241,248,251,252,259,260,261,263,276,277,286,291,299,300,308,311,312,314,321,322,323,332,333,339,346,348,],[-137,-134,-136,-135,-138,-200,-199,-93,-92,-58,-68,-59,-91,-57,-122,-124,-69,-106,-123,-113,-60,-139,-140,-118,-66,-65,-56,-61,-67,-55,-64,-63,-62,-143,174,201,-119,215,-133,-203,234,-201,-205,-35,-22,-25,-23,-21,-20,-24,-36,-26,-27,-18,-19,248,-211,-142,-141,-107,-94,-114,-73,262,-145,-144,-202,-34,-212,-31,-33,-71,-70,294,-190,-204,308,312,-125,-192,-193,-29,-37,-28,-126,-191,-194,-195,-39,-44,347,350,-198,]),'SYN':([0,2,3,5,9,20,32,43,47,48,177,197,204,216,217,297,316,317,319,334,335,337,342,],[35,-5,-7,35,-3,-9,-6,-8,-4,-74,-10,-49,-45,-75,-181,35,35,35,35,35,35,35,35,]),'PLUS':([1,4,15,17,21,22,25,27,30,38,49,51,52,53,58,59,60,61,62,63,64,65,66,68,69,70,72,73,75,76,79,80,81,83,97,144,149,152,174,201,205,207,208,209,210,215,224,226,234,248,259,260,281,],[-137,-134,-136,-135,98,-139,-140,-138,-200,-199,98,-58,-68,-59,-57,-122,-124,-69,-106,-123,-113,-60,-139,-140,-118,-66,-65,-56,-61,-67,-55,-64,-63,-62,-143,-119,-133,-140,-201,-211,-142,-141,-107,98,-114,-73,-145,-144,-202,-212,-71,-70,-140,]),'CHAR':([111,114,117,192,202,222,237,238,264,266,309,310,318,],[-15,190,190,190,190,190,-16,190,190,190,190,190,190,]),'CHARCONST':([13,24,44,46,55,56,67,71,77,91,94,95,96,98,99,101,104,105,107,110,120,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,147,168,198,206,211,223,225,230,233,236,238,240,242,247,254,255,304,306,309,],[76,76,76,76,-120,76,76,-121,76,76,-116,-115,-117,-110,76,-84,76,-111,-112,76,76,76,-109,-108,-98,-97,-103,-100,-105,-96,-104,-99,-95,-102,-101,76,76,76,-85,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'NOTEQUAL':([1,4,15,17,27,30,38,49,51,52,53,54,58,59,60,61,62,63,64,65,66,68,69,70,72,73,75,76,79,80,81,83,97,144,149,174,201,205,207,208,209,210,215,224,226,234,248,259,260,281,],[-137,-134,-136,-135,-138,-200,-199,-93,-58,-68,-59,142,-57,-122,-124,-69,-106,-123,-113,-60,-139,-140,-118,-66,-65,-56,-61,-67,-55,-64,-63,-62,-143,-119,-133,-201,-211,-142,-141,-107,-94,-114,-73,-145,-144,-202,-212,-71,-70,-140,]),'NUM':([0,2,3,5,9,13,16,20,24,32,43,44,46,47,48,55,56,67,71,77,78,84,91,92,93,94,95,96,98,99,101,104,105,107,110,120,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,147,154,155,164,168,170,177,197,198,204,206,211,216,217,220,223,225,227,229,230,233,236,238,240,242,247,254,255,273,297,304,306,309,316,317,319,334,335,337,342,],[10,-5,-7,10,-3,10,10,-9,10,-6,-8,10,10,-4,-74,-120,10,10,-121,10,10,10,10,10,-157,-116,-115,-117,-110,10,-84,10,-111,-112,10,10,10,-109,-108,-98,-97,-103,-100,-105,-96,-104,-99,-95,-102,-101,10,10,10,10,10,-158,-85,10,-10,-49,10,-45,10,10,-75,-181,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'ELSIF':([1,4,15,17,27,30,38,48,49,50,51,52,53,54,58,59,60,61,62,63,64,65,66,68,69,70,72,73,75,76,79,80,81,83,93,97,144,149,164,170,171,174,201,205,207,208,209,210,212,215,216,224,226,227,234,248,253,257,258,259,260,291,293,307,313,314,],[-137,-134,-136,-135,-138,-200,-199,-74,-93,-92,-58,-68,-59,-91,-57,-122,-124,-69,-106,-123,-113,-60,-139,-140,-118,-66,-65,-56,-61,-67,-55,-64,-63,-62,-157,-143,-119,-133,-158,-150,230,-201,-211,-142,-141,-107,-94,-114,255,-73,-75,-145,-144,-151,-202,-212,-128,255,-130,-71,-70,-125,-131,230,-132,-126,]),'CHARS':([111,114,117,192,202,237,264,310,318,],[-15,188,188,188,188,-16,188,188,188,]),'LPAREN':([7,10,11,13,18,23,24,25,26,33,40,41,44,46,55,56,67,68,71,77,91,94,95,96,98,99,101,104,105,107,110,120,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,147,152,153,168,179,180,181,189,190,191,198,206,211,223,225,230,233,236,238,240,242,247,254,255,267,281,296,304,306,309,],[-214,-213,-216,77,-217,-220,77,110,-219,-218,-215,120,77,77,-120,77,77,110,-121,77,77,-116,-115,-117,-110,77,-84,77,-111,-112,77,77,77,-109,-108,-98,-97,-103,-100,-105,-96,-104,-99,-95,-102,-101,77,77,77,110,218,-85,-30,-25,236,-26,-27,240,77,77,77,77,77,77,77,77,77,77,77,77,77,77,-30,110,318,77,77,77,]),'EXIT':([0,2,3,5,9,16,20,32,43,47,48,84,92,93,154,155,164,170,177,197,204,216,217,220,227,229,273,297,316,317,319,334,335,337,342,],[36,-5,-7,36,-3,36,-9,-6,-8,-4,-74,36,36,-157,36,36,-158,36,-10,-49,-45,-75,-181,36,36,36,36,36,36,36,36,36,36,36,36,]),'ARROW':([1,4,13,15,17,21,22,24,25,27,30,38,44,46,55,56,63,66,67,68,71,77,91,94,95,96,97,98,99,101,104,105,107,110,120,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,147,149,152,168,174,198,201,205,206,207,211,223,224,225,226,230,233,234,236,238,240,242,247,248,254,255,281,304,306,309,],[-137,-134,78,-136,-135,97,-139,78,-140,-138,-200,-199,78,78,-120,78,97,-139,78,-140,-121,78,78,-116,-115,-117,-143,-110,78,-84,78,-111,-112,78,78,78,-109,-108,-98,-97,-103,-100,-105,-96,-104,-99,-95,-102,-101,78,78,78,97,-140,-85,-201,78,-211,-142,78,-141,78,78,-145,78,-144,78,78,-202,78,78,78,78,78,-212,78,78,-140,78,78,78,]),'FI':([1,4,15,17,27,30,38,48,49,50,51,52,53,54,58,59,60,61,62,63,64,65,66,68,69,70,72,73,75,76,79,80,81,83,93,97,144,149,164,170,171,174,201,205,207,208,209,210,215,216,224,226,227,228,229,232,234,248,256,259,260,273,289,291,292,307,314,330,],[-137,-134,-136,-135,-138,-200,-199,-74,-93,-92,-58,-68,-59,-91,-57,-122,-124,-69,-106,-123,-113,-60,-139,-140,-118,-66,-65,-56,-61,-67,-55,-64,-63,-62,-157,-143,-119,-133,-158,-150,231,-201,-211,-142,-141,-107,-94,-114,-73,-75,-145,-144,-151,-154,-152,275,-202,-212,291,-71,-70,-153,-129,-125,314,-155,-126,-156,]),'DIV':([1,4,15,17,21,22,25,27,30,38,51,52,53,58,59,60,61,62,63,64,65,66,68,69,70,72,73,75,76,79,80,81,83,97,144,149,152,174,201,205,207,208,210,215,224,226,234,248,259,260,281,],[-137,-134,-136,-135,94,-139,-140,-138,-200,-199,-58,-68,-59,-57,-122,-124,-69,94,-123,-113,-60,-139,-140,-118,-66,-65,-56,-61,-67,-55,-64,-63,-62,-143,-119,-133,-140,-201,-211,-142,-141,94,-114,-73,-145,-144,-202,-212,-71,-70,-140,]),'SUCC':([0,2,3,5,9,13,16,20,24,32,43,44,46,47,48,55,56,67,71,77,78,84,91,92,93,94,95,96,98,99,101,104,105,107,110,120,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,147,154,155,164,168,170,177,197,198,204,206,211,216,217,220,223,225,227,229,230,233,236,238,240,242,247,254,255,273,297,304,306,309,316,317,319,334,335,337,342,],[40,-5,-7,40,-3,40,40,-9,40,-6,-8,40,40,-4,-74,-120,40,40,-121,40,40,40,40,40,-157,-116,-115,-117,-110,40,-84,40,-111,-112,40,40,40,-109,-108,-98,-97,-103,-100,-105,-96,-104,-99,-95,-102,-101,40,40,40,40,40,-158,-85,40,-10,-49,40,-45,40,40,-75,-181,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'RBRACKET':([1,4,15,17,27,30,38,49,50,51,52,53,54,58,59,60,61,62,63,64,65,66,68,69,70,72,73,75,76,79,80,81,83,97,125,127,128,144,149,165,166,167,174,180,181,185,189,190,201,205,207,208,209,210,213,214,215,224,226,234,248,251,252,259,260,272,279,280,282,283,284,285,291,308,312,314,331,],[-137,-134,-136,-135,-138,-200,-199,-93,-92,-58,-68,-59,-91,-57,-122,-124,-69,-106,-123,-113,-60,-139,-140,-118,-66,-65,-56,-61,-67,-55,-64,-63,-62,-143,205,-221,207,-119,-133,224,226,-89,-201,-25,-23,-24,-26,-27,-211,-142,-141,-107,-94,-114,259,260,-73,-145,-144,-202,-212,-31,-33,-71,-70,-90,-43,-40,310,-42,311,-38,-125,-29,-28,-126,-41,]),'END':([2,3,9,20,32,43,47,48,177,197,204,216,217,297,316,317,319,334,335,337,342,],[-5,-7,-3,-9,-6,-8,-4,-74,-10,-49,-45,-75,-181,320,336,338,340,343,344,345,349,]),'INTCONST':([13,24,44,46,55,56,67,71,77,91,94,95,96,98,99,101,104,105,107,110,120,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,147,168,198,206,211,223,225,230,233,236,238,239,240,242,247,254,255,304,306,309,],[80,80,80,80,-120,80,80,-121,80,80,-116,-115,-117,-110,80,-84,80,-111,-112,80,80,80,-109,-108,-98,-97,-103,-100,-105,-96,-104,-99,-95,-102,-101,80,80,80,-85,80,80,80,80,80,80,80,80,80,285,80,80,80,80,80,80,80,80,]),'REF':([111,114,117,192,202,237,264,310,318,],[-15,192,192,192,192,-16,192,192,192,]),'GT':([1,4,15,17,27,30,38,49,51,52,53,54,58,59,60,61,62,63,64,65,66,68,69,70,72,73,75,76,79,80,81,83,97,144,149,174,201,205,207,208,209,210,215,224,226,234,248,259,260,281,],[-137,-134,-136,-135,-138,-200,-199,-93,-58,-68,-59,141,-57,-122,-124,-69,-106,-123,-113,-60,-139,-140,-118,-66,-65,-56,-61,-67,-55,-64,-63,-62,-143,-119,-133,-201,-211,-142,-141,-107,-94,-114,-73,-145,-144,-202,-212,-71,-70,-140,]),'PRINT':([0,2,3,5,9,13,16,20,24,32,43,44,46,47,48,55,56,67,71,77,78,84,91,92,93,94,95,96,98,99,101,104,105,107,110,120,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,147,154,155,164,168,170,177,197,198,204,206,211,216,217,220,223,225,227,229,230,233,236,238,240,242,247,254,255,273,297,304,306,309,316,317,319,334,335,337,342,],[23,-5,-7,23,-3,23,23,-9,23,-6,-8,23,23,-4,-74,-120,23,23,-121,23,23,23,23,23,-157,-116,-115,-117,-110,23,-84,23,-111,-112,23,23,23,-109,-108,-98,-97,-103,-100,-105,-96,-104,-99,-95,-102,-101,23,23,23,23,23,-158,-85,23,-10,-49,23,-45,23,23,-75,-181,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'TYPE':([0,2,3,5,9,20,32,43,47,48,177,197,204,216,217,297,316,317,319,334,335,337,342,],[42,-5,-7,42,-3,-9,-6,-8,-4,-74,-10,-49,-45,-75,-181,42,42,42,42,42,42,42,42,]),'RETURNS':([262,294,],[296,296,]),'RETURN':([0,2,3,5,9,16,20,32,43,47,48,84,92,93,154,155,164,170,177,197,204,216,217,220,227,229,273,297,316,317,319,334,335,337,342,],[44,-5,-7,44,-3,44,-9,-6,-8,-4,-74,44,44,-157,44,44,-158,44,-10,-49,-45,-75,-181,44,44,44,44,44,44,44,44,44,44,44,44,]),'DOWN':([1,4,15,17,27,30,38,49,50,51,52,53,54,58,59,60,61,62,63,64,65,66,68,69,70,72,73,75,76,79,80,81,83,97,144,149,157,159,174,201,205,207,208,209,210,215,224,226,234,248,259,260,269,270,271,291,305,314,328,329,],[-137,-134,-136,-135,-138,-200,-199,-93,-92,-58,-68,-59,-91,-57,-122,-124,-69,-106,-123,-113,-60,-139,-140,-118,-66,-65,-56,-61,-67,-55,-64,-63,-62,-143,-119,-133,-173,221,-201,-211,-142,-141,-107,-94,-114,-73,-145,-144,-202,-212,-71,-70,302,-174,-177,-125,326,-126,-221,-175,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'literal_range':([46,99,147,236,238,240,309,],[125,165,213,277,279,286,279,]),'array_element':([0,5,13,16,24,44,46,56,67,77,78,84,91,92,99,104,110,120,129,143,145,147,154,155,170,198,206,211,220,223,225,227,229,230,233,236,238,240,242,247,254,255,273,297,304,306,309,316,317,319,334,335,337,342,],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'declaration_statement':([0,5,297,316,317,319,334,335,337,342,],[2,2,2,2,2,2,2,2,2,2,]),'initialization':([193,],[243,]),'conditional_expression':([13,24,44,46,67,77,91,99,104,110,120,147,198,206,211,223,225,230,233,236,238,240,242,247,254,255,304,306,309,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'statement_list':([0,297,316,317,334,],[5,319,335,337,342,]),'elseif_expression_list':([212,],[257,]),'formal_parameter_list':([218,298,],[261,321,]),'statement':([0,5,297,316,317,319,334,335,337,342,],[9,47,9,9,9,47,9,47,47,47,]),'arithmetic_multiplicative_operator':([21,62,208,],[102,145,145,]),'end_value':([269,302,305,326,],[303,324,327,341,]),'parameter_attribute':([300,],[322,]),'boolean_expression':([24,67,91,230,255,],[108,146,162,274,290,]),'operand0':([13,24,44,46,67,77,91,99,104,110,120,147,198,206,211,223,225,230,233,236,238,240,242,247,254,255,304,306,309,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'operand1':([13,24,44,46,67,77,91,99,104,110,120,143,147,198,206,211,223,225,230,233,236,238,240,242,247,254,255,304,306,309,],[49,49,49,49,49,49,49,49,49,49,49,209,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'dereferenced_reference':([0,5,13,16,24,44,46,56,67,77,78,84,91,92,99,104,110,120,129,143,145,147,154,155,170,198,206,211,220,223,225,227,229,230,233,236,238,240,242,247,254,255,273,297,304,306,309,316,317,319,334,335,337,342,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'label':([0,5,16,36,92,154,170,220,227,229,273,297,316,317,319,334,335,337,342,],[14,14,86,119,86,86,86,86,86,86,86,14,14,14,14,14,14,14,14,]),'id_list':([28,35,42,176,196,203,218,298,],[114,117,122,114,117,122,264,264,]),'mode_definition':([42,203,],[121,250,]),'string_reference':([0,5,13,16,24,44,46,56,67,77,78,84,91,92,99,104,110,120,129,143,145,147,154,155,170,198,206,211,220,223,225,227,229,230,233,236,238,240,242,247,254,255,273,297,304,306,309,316,317,319,334,335,337,342,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'then_expression':([146,290,],[212,313,]),'return_action':([0,5,16,84,92,154,155,170,220,227,229,273,297,316,317,319,334,335,337,342,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'procedure_statement':([0,5,297,316,317,319,334,335,337,342,],[20,20,20,20,20,20,20,20,20,20,]),'parameter_spec':([264,],[299,]),'start_value':([223,],[269,]),'newmode_list':([42,],[123,]),'closed_dyadic_operator':([21,],[103,]),'lower_bound':([46,99,147,236,238,240,309,],[126,126,126,126,126,126,126,]),'call_action':([0,5,13,16,24,44,46,56,67,77,78,84,91,92,99,104,110,120,129,143,145,147,154,155,170,198,206,211,220,223,225,227,229,230,233,236,238,240,242,247,254,255,273,297,304,306,309,316,317,319,334,335,337,342,],[22,22,66,22,66,66,66,66,66,66,66,22,66,22,66,66,66,66,66,66,66,66,22,22,22,66,66,66,22,66,66,22,22,66,66,66,66,66,66,66,66,66,22,22,66,66,66,22,22,22,22,22,22,22,]),'for_control':([16,],[89,]),'parameter_list':([110,120,233,],[173,200,276,]),'primitive_value':([13,24,44,46,56,67,77,91,99,104,110,120,129,143,145,147,198,206,211,223,225,230,233,236,238,240,242,247,254,255,304,306,309,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'procedure_definition':([84,],[151,]),'expression_list':([99,147,],[166,214,]),'operand4':([13,24,44,46,56,67,77,91,99,104,110,120,129,143,145,147,198,206,211,223,225,230,233,236,238,240,242,247,254,255,304,306,309,],[69,69,69,69,144,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'array_slice':([0,5,13,16,24,44,46,56,67,77,78,84,91,92,99,104,110,120,129,143,145,147,154,155,170,198,206,211,220,223,225,227,229,230,233,236,238,240,242,247,254,255,273,297,304,306,309,316,317,319,334,335,337,342,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'constant_expression':([198,247,],[245,288,]),'basic_mode':([114,117,192,202,222,238,264,266,309,310,318,],[181,181,181,181,181,181,181,181,181,181,181,]),'upper_bound':([206,],[251,]),'procedure_call':([0,5,13,16,24,44,46,56,67,77,78,84,91,92,99,104,110,120,129,143,145,147,154,155,170,198,206,211,220,223,225,227,229,230,233,236,238,240,242,247,254,255,273,297,304,306,309,316,317,319,334,335,337,342,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'builtin_call':([0,5,13,16,24,44,46,56,67,77,78,84,91,92,99,104,110,120,129,143,145,147,154,155,170,198,206,211,220,223,225,227,229,230,233,236,238,240,242,247,254,255,273,297,304,306,309,316,317,319,334,335,337,342,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'value_array_element':([13,24,44,46,56,67,77,91,99,104,110,120,129,143,145,147,198,206,211,223,225,230,233,236,238,240,242,247,254,255,304,306,309,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'array_primitive_value':([13,24,44,46,56,67,77,91,99,104,110,120,129,143,145,147,198,206,211,223,225,230,233,236,238,240,242,247,254,255,304,306,309,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'array_mode':([114,117,192,202,264,310,318,],[186,186,186,186,186,186,186,]),'formal_parameter':([218,298,],[263,263,]),'discrete_mode_name':([114,117,192,202,222,238,264,266,309,310,318,],[191,191,191,191,191,191,191,191,191,191,191,]),'syn_list':([35,],[116,]),'arithmetic_additive_operator':([21,49,209,],[100,131,131,]),'then_clause':([108,274,],[171,307,]),'result_spec':([262,294,],[295,315,]),'string_literal':([13,24,44,46,56,67,77,91,99,104,110,120,129,143,145,147,198,206,211,223,225,230,233,236,238,240,242,247,254,255,304,306,309,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'operator2':([49,209,],[129,129,]),'action_statement_list':([16,154,170,229,],[92,220,227,273,]),'relational_operator':([54,],[140,]),'newmode_statement':([0,5,297,316,317,319,334,335,337,342,],[32,32,32,32,32,32,32,32,32,32,]),'iteration':([90,],[161,]),'program':([0,],[45,]),'elseif_clause':([171,307,],[228,228,]),'synonym_statement':([0,5,297,316,317,319,334,335,337,342,],[3,3,3,3,3,3,3,3,3,3,]),'location_name':([0,5,13,16,24,44,46,56,67,77,78,84,91,92,99,104,110,120,129,143,145,147,154,155,170,198,206,211,220,223,225,227,229,230,233,236,238,240,242,247,254,255,273,297,304,306,309,316,317,319,334,335,337,342,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'value_array_slice':([13,24,44,46,56,67,77,91,99,104,110,120,129,143,145,147,198,206,211,223,225,230,233,236,238,240,242,247,254,255,304,306,309,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'parenthesized_expression':([13,24,44,46,56,67,77,91,99,104,110,120,129,143,145,147,198,206,211,223,225,230,233,236,238,240,242,247,254,255,304,306,309,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'action':([0,5,16,84,92,154,155,170,220,227,229,273,297,316,317,319,334,335,337,342,],[6,6,6,150,6,6,150,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'syn_definition':([35,196,],[115,244,]),'empty_literal':([13,24,44,46,56,67,77,91,99,104,110,120,129,143,145,147,198,206,211,223,225,230,233,236,238,240,242,247,254,255,304,306,309,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'bracketed_action':([0,5,16,84,92,154,155,170,220,227,229,273,297,316,317,319,334,335,337,342,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'exit_action':([0,5,16,84,92,154,155,170,220,227,229,273,297,316,317,319,334,335,337,342,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'assignment_action':([0,5,16,84,92,154,155,170,220,227,229,273,297,316,317,319,334,335,337,342,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'assigning_operator':([21,],[104,]),'index_mode':([238,309,],[280,331,]),'step_enumeration':([90,],[160,]),'monadic_operator':([13,24,44,46,67,77,91,99,104,110,120,129,143,145,147,198,206,211,223,225,230,233,236,238,240,242,247,254,255,304,306,309,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'elseif_expression':([212,257,],[258,293,]),'mode':([114,117,192,202,264,310,318,],[193,199,241,249,300,333,339,]),'step_value':([269,],[305,]),'result':([13,44,],[57,124,]),'parameter':([110,120,233,],[172,172,172,]),'result_action':([0,5,16,84,92,154,155,170,220,227,229,273,297,316,317,319,334,335,337,342,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'while_control':([16,89,],[88,156,]),'operand2':([13,24,44,46,67,77,91,99,104,110,120,129,143,147,198,206,211,223,225,230,233,236,238,240,242,247,254,255,304,306,309,],[62,62,62,62,62,62,62,62,62,62,62,208,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'location':([0,5,13,16,24,44,46,56,67,77,78,84,91,92,99,104,110,120,129,143,145,147,154,155,170,198,206,211,220,223,225,227,229,230,233,236,238,240,242,247,254,255,273,297,304,306,309,316,317,319,334,335,337,342,],[21,21,63,21,63,63,63,63,63,63,149,21,63,21,63,63,63,63,63,63,63,63,21,21,21,63,63,63,21,63,63,21,21,63,63,63,63,63,63,63,63,63,21,21,63,63,63,21,21,21,21,21,21,21,]),'operand3':([13,24,44,46,67,77,91,99,104,110,120,129,143,145,147,198,206,211,223,225,230,233,236,238,240,242,247,254,255,304,306,309,],[64,64,64,64,64,64,64,64,64,64,64,64,64,210,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'declaration_list':([28,],[112,]),'boolean_literal':([13,24,44,46,56,67,77,91,99,104,110,120,129,143,145,147,198,206,211,223,225,230,233,236,238,240,242,247,254,255,304,306,309,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'control_part':([16,],[85,]),'string_length':([239,],[284,]),'operator1':([54,],[143,]),'string_mode':([114,117,192,202,264,310,318,],[178,178,178,178,178,178,178,]),'discrete_expression':([223,304,],[270,325,]),'element_node':([310,],[332,]),'index_mode_list':([238,],[282,]),'result_attribute':([339,],[346,]),'declaration':([28,176,],[113,235,]),'composite_mode':([114,117,192,202,264,310,318,],[182,182,182,182,182,182,182,]),'integer_literal':([13,24,44,46,56,67,77,91,99,104,110,120,129,143,145,147,198,206,211,223,225,230,233,236,238,240,242,247,254,255,304,306,309,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'action_statement':([0,5,16,92,154,170,220,227,229,273,297,316,317,319,334,335,337,342,],[43,43,93,164,93,93,164,164,93,164,43,43,43,43,43,43,43,43,]),'if_action':([0,5,16,84,92,154,155,170,220,227,229,273,297,316,317,319,334,335,337,342,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'discrete_range_mode':([114,117,192,202,222,238,264,266,309,310,318,],[185,185,185,185,185,185,185,185,185,185,185,]),'reference_mode':([114,117,192,202,264,310,318,],[183,183,183,183,183,183,183,]),'char_literal':([13,24,44,46,56,67,77,91,99,104,110,120,129,143,145,147,198,206,211,223,225,230,233,236,238,240,242,247,254,255,304,306,309,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'empty':([0,],[34,]),'else_expression':([212,257,],[256,292,]),'do_action':([0,5,16,84,92,154,155,170,220,227,229,273,297,316,317,319,334,335,337,342,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'literal':([13,24,44,46,56,67,77,91,99,104,110,120,129,143,145,147,198,206,211,223,225,230,233,236,238,240,242,247,254,255,304,306,309,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'loop_counter':([90,],[159,]),'membership_operator':([54,],[137,]),'range_enumeration':([90,],[158,]),'builtin_name':([0,5,13,16,24,44,46,56,67,77,78,84,91,92,99,104,110,120,129,143,145,147,154,155,170,198,206,211,220,223,225,227,229,230,233,236,238,240,242,247,254,255,273,297,304,306,309,316,317,319,334,335,337,342,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'mode_name':([114,117,192,202,264,310,318,],[194,194,194,194,194,194,194,]),'referenced_location':([13,24,44,46,56,67,77,91,99,104,110,120,129,143,145,147,198,206,211,223,225,230,233,236,238,240,242,247,254,255,304,306,309,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'discrete_mode':([114,117,192,202,222,238,264,266,309,310,318,],[195,195,195,195,268,283,195,301,283,195,195,]),'expression':([13,24,44,46,67,77,91,99,104,110,120,147,198,206,211,223,225,230,233,236,238,240,242,247,254,255,304,306,309,],[82,109,82,127,109,148,109,167,169,175,175,167,246,252,253,271,272,109,175,278,278,278,287,246,289,109,271,328,278,]),'string_concatenation_operator':([21,49,209,],[106,130,130,]),'integer_expression':([46,306,],[128,329,]),'else_clause':([171,307,],[232,330,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','lyaParser.py',65),
  ('program -> empty','program',1,'p_program','lyaParser.py',66),
  ('statement_list -> statement','statement_list',1,'p_statement_list1','lyaParser.py',73),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list1','lyaParser.py',74),
  ('statement -> declaration_statement','statement',1,'p_statement','lyaParser.py',81),
  ('statement -> newmode_statement','statement',1,'p_statement','lyaParser.py',82),
  ('statement -> synonym_statement','statement',1,'p_statement','lyaParser.py',83),
  ('statement -> action_statement','statement',1,'p_statement','lyaParser.py',84),
  ('statement -> procedure_statement','statement',1,'p_statement','lyaParser.py',85),
  ('declaration_statement -> DCL declaration_list SMC','declaration_statement',3,'p_declaration_statement','lyaParser.py',93),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','lyaParser.py',97),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','lyaParser.py',98),
  ('declaration -> id_list mode initialization','declaration',3,'p_declaration1','lyaParser.py',105),
  ('declaration -> id_list mode','declaration',2,'p_declaration2','lyaParser.py',109),
  ('id_list -> ID','id_list',1,'p_id_list','lyaParser.py',113),
  ('id_list -> id_list COMMA ID','id_list',3,'p_id_list','lyaParser.py',114),
  ('initialization -> EQUALS expression','initialization',2,'p_initialization','lyaParser.py',121),
  ('mode -> mode_name','mode',1,'p_mode','lyaParser.py',129),
  ('mode -> discrete_mode','mode',1,'p_mode','lyaParser.py',130),
  ('mode -> reference_mode','mode',1,'p_mode','lyaParser.py',131),
  ('mode -> composite_mode','mode',1,'p_mode','lyaParser.py',132),
  ('mode_name -> ID','mode_name',1,'p_mode_name','lyaParser.py',136),
  ('discrete_mode -> basic_mode','discrete_mode',1,'p_discrete_mode','lyaParser.py',140),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','lyaParser.py',141),
  ('basic_mode -> INT','basic_mode',1,'p_basic_mode','lyaParser.py',145),
  ('basic_mode -> BOOL','basic_mode',1,'p_basic_mode','lyaParser.py',146),
  ('basic_mode -> CHAR','basic_mode',1,'p_basic_mode','lyaParser.py',147),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaParser.py',151),
  ('discrete_range_mode -> basic_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaParser.py',152),
  ('discrete_mode_name -> ID','discrete_mode_name',1,'p_discrete_mode_name','lyaParser.py',156),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_litereal_range','lyaParser.py',160),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','lyaParser.py',164),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','lyaParser.py',168),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','lyaParser.py',172),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','lyaParser.py',176),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','lyaParser.py',177),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','lyaParser.py',181),
  ('string_length -> INTCONST','string_length',1,'p_string_length','lyaParser.py',185),
  ('array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_node','array_mode',5,'p_array_mode','lyaParser.py',189),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','lyaParser.py',194),
  ('index_mode_list -> index_mode_list COMMA index_mode','index_mode_list',3,'p_index_mode_list','lyaParser.py',195),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','lyaParser.py',202),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','lyaParser.py',203),
  ('element_node -> mode','element_node',1,'p_element_node','lyaParser.py',207),
  ('newmode_statement -> TYPE newmode_list SMC','newmode_statement',3,'p_newmode_statement','lyaParser.py',215),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','lyaParser.py',219),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','lyaParser.py',220),
  ('mode_definition -> id_list EQUALS mode','mode_definition',3,'p_mode_definition','lyaParser.py',227),
  ('synonym_statement -> SYN syn_list SMC','synonym_statement',3,'p_synonym_statement','lyaParser.py',231),
  ('syn_list -> syn_definition','syn_list',1,'p_syn_list','lyaParser.py',239),
  ('syn_list -> syn_list COMMA syn_definition','syn_list',3,'p_syn_list','lyaParser.py',240),
  ('syn_definition -> id_list EQUALS constant_expression','syn_definition',3,'p_syn_definition','lyaParser.py',247),
  ('syn_definition -> id_list mode EQUALS constant_expression','syn_definition',4,'p_syn_definition2','lyaParser.py',251),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','lyaParser.py',255),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','lyaParser.py',263),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','lyaParser.py',264),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','lyaParser.py',265),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','lyaParser.py',266),
  ('literal -> integer_literal','literal',1,'p_literal','lyaParser.py',270),
  ('literal -> boolean_literal','literal',1,'p_literal','lyaParser.py',271),
  ('literal -> char_literal','literal',1,'p_literal','lyaParser.py',272),
  ('literal -> empty_literal','literal',1,'p_literal','lyaParser.py',273),
  ('literal -> string_literal','literal',1,'p_literal','lyaParser.py',274),
  ('integer_literal -> INTCONST','integer_literal',1,'p_integer_literal','lyaParser.py',278),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','lyaParser.py',282),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','lyaParser.py',283),
  ('char_literal -> CHARCONST','char_literal',1,'p_char_literal','lyaParser.py',287),
  ('string_literal -> STRINGCONST','string_literal',1,'p_string_literal','lyaParser.py',291),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','lyaParser.py',295),
  ('value_array_element -> array_primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','lyaParser.py',299),
  ('value_array_slice -> array_primitive_value LBRACKET literal_range RBRACKET','value_array_slice',4,'p_value_array_slice','lyaParser.py',303),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','lyaParser.py',307),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','lyaParser.py',311),
  ('action_statement -> action SMC','action_statement',2,'p_action_statement','lyaParser.py',319),
  ('action_statement -> label COLON action SMC','action_statement',4,'p_action_statement','lyaParser.py',320),
  ('label -> ID','label',1,'p_label','lyaParser.py',327),
  ('action -> assignment_action','action',1,'p_action','lyaParser.py',331),
  ('action -> bracketed_action','action',1,'p_action','lyaParser.py',332),
  ('action -> call_action','action',1,'p_action','lyaParser.py',333),
  ('action -> exit_action','action',1,'p_action','lyaParser.py',334),
  ('action -> return_action','action',1,'p_action','lyaParser.py',335),
  ('action -> result_action','action',1,'p_action','lyaParser.py',336),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','lyaParser.py',344),
  ('assigning_operator -> EQUALS','assigning_operator',1,'p_assigning_operator','lyaParser.py',348),
  ('assigning_operator -> closed_dyadic_operator EQUALS','assigning_operator',2,'p_assigning_operator','lyaParser.py',349),
  ('closed_dyadic_operator -> arithmetic_additive_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','lyaParser.py',356),
  ('closed_dyadic_operator -> arithmetic_multiplicative_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','lyaParser.py',357),
  ('closed_dyadic_operator -> string_concatenation_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','lyaParser.py',358),
  ('expression_list -> expression','expression_list',1,'p_expression_list','lyaParser.py',362),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','lyaParser.py',363),
  ('expression -> operand0','expression',1,'p_expression','lyaParser.py',370),
  ('expression -> conditional_expression','expression',1,'p_expression','lyaParser.py',371),
  ('operand0 -> operand1','operand0',1,'p_operand0','lyaParser.py',375),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','lyaParser.py',376),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','lyaParser.py',383),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','lyaParser.py',384),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','lyaParser.py',388),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','lyaParser.py',392),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','lyaParser.py',393),
  ('relational_operator -> ISEQUAL','relational_operator',1,'p_relational_operator','lyaParser.py',394),
  ('relational_operator -> NOTEQUAL','relational_operator',1,'p_relational_operator','lyaParser.py',395),
  ('relational_operator -> GT','relational_operator',1,'p_relational_operator','lyaParser.py',396),
  ('relational_operator -> GE','relational_operator',1,'p_relational_operator','lyaParser.py',397),
  ('relational_operator -> LT','relational_operator',1,'p_relational_operator','lyaParser.py',398),
  ('relational_operator -> LE','relational_operator',1,'p_relational_operator','lyaParser.py',399),
  ('operand1 -> operand2','operand1',1,'p_operand1','lyaParser.py',403),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1','lyaParser.py',404),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','lyaParser.py',411),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','lyaParser.py',412),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','lyaParser.py',416),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','lyaParser.py',417),
  ('string_concatenation_operator -> STRCONC','string_concatenation_operator',1,'p_string_concatenation_operator','lyaParser.py',421),
  ('operand2 -> operand3','operand2',1,'p_operand2','lyaParser.py',425),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','lyaParser.py',426),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaParser.py',433),
  ('arithmetic_multiplicative_operator -> DIV','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaParser.py',434),
  ('arithmetic_multiplicative_operator -> MOD','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaParser.py',435),
  ('operand3 -> operand4','operand3',1,'p_operand3','lyaParser.py',439),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','lyaParser.py',440),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','lyaParser.py',447),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','lyaParser.py',448),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','lyaParser.py',452),
  ('operand4 -> location','operand4',1,'p_operand4','lyaParser.py',453),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','lyaParser.py',454),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','lyaParser.py',460),
  ('conditional_expression -> IF boolean_expression then_expression elseif_expression_list else_expression FI','conditional_expression',6,'p_conditional_expression2','lyaParser.py',464),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','lyaParser.py',468),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','lyaParser.py',472),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','lyaParser.py',476),
  ('elseif_expression_list -> elseif_expression','elseif_expression_list',1,'p_elseif_expression_list','lyaParser.py',480),
  ('elseif_expression_list -> elseif_expression_list elseif_expression','elseif_expression_list',2,'p_elseif_expression_list','lyaParser.py',481),
  ('elseif_expression -> ELSIF boolean_expression then_expression','elseif_expression',3,'p_elseif_expression','lyaParser.py',488),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','lyaParser.py',496),
  ('location -> location_name','location',1,'p_location','lyaParser.py',500),
  ('location -> string_reference','location',1,'p_location','lyaParser.py',501),
  ('location -> dereferenced_reference','location',1,'p_location','lyaParser.py',502),
  ('location -> array_element','location',1,'p_location','lyaParser.py',503),
  ('location -> array_slice','location',1,'p_location','lyaParser.py',504),
  ('location -> call_action','location',1,'p_location','lyaParser.py',505),
  ('location_name -> ID','location_name',1,'p_location_name','lyaParser.py',509),
  ('string_reference -> location_name LBRACKET integer_expression RBRACKET','string_reference',4,'p_string_reference','lyaParser.py',513),
  ('string_reference -> location_name LBRACKET literal_range RBRACKET','string_reference',4,'p_string_reference2','lyaParser.py',517),
  ('dereferenced_reference -> location ARROW','dereferenced_reference',2,'p_dereferenced_reference','lyaParser.py',521),
  ('array_element -> location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','lyaParser.py',525),
  ('array_slice -> location LBRACKET literal_range RBRACKET','array_slice',4,'p_array_slice','lyaParser.py',529),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','lyaParser.py',537),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','lyaParser.py',538),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','lyaParser.py',546),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action2','lyaParser.py',550),
  ('then_clause -> THEN','then_clause',1,'p_then_clause','lyaParser.py',554),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','lyaParser.py',555),
  ('else_clause -> ELSE','else_clause',1,'p_else_clause','lyaParser.py',562),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','lyaParser.py',563),
  ('else_clause -> elseif_clause','else_clause',1,'p_else_clause2','lyaParser.py',570),
  ('elseif_clause -> ELSIF boolean_expression then_clause','elseif_clause',3,'p_elseif_clause','lyaParser.py',574),
  ('elseif_clause -> ELSIF boolean_expression then_clause else_clause','elseif_clause',4,'p_elseif_clause2','lyaParser.py',578),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','lyaParser.py',583),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','lyaParser.py',584),
  ('do_action -> DO OD','do_action',2,'p_do_action','lyaParser.py',595),
  ('do_action -> DO control_part SMC OD','do_action',4,'p_do_action2','lyaParser.py',599),
  ('do_action -> DO control_part SMC action_statement_list OD','do_action',5,'p_do_action3','lyaParser.py',603),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action4','lyaParser.py',607),
  ('control_part -> for_control','control_part',1,'p_control_part','lyaParser.py',611),
  ('control_part -> while_control','control_part',1,'p_control_part','lyaParser.py',612),
  ('control_part -> for_control while_control','control_part',2,'p_control_part2','lyaParser.py',616),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','lyaParser.py',620),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','lyaParser.py',624),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','lyaParser.py',625),
  ('step_enumeration -> loop_counter EQUALS start_value end_value','step_enumeration',4,'p_step_enumeration','lyaParser.py',629),
  ('step_enumeration -> loop_counter EQUALS start_value step_value end_value','step_enumeration',5,'p_step_enumeration2','lyaParser.py',633),
  ('step_enumeration -> loop_counter EQUALS start_value DOWN end_value','step_enumeration',5,'p_step_enumeration3','lyaParser.py',637),
  ('step_enumeration -> loop_counter EQUALS start_value step_value DOWN end_value','step_enumeration',6,'p_step_enumeration4','lyaParser.py',641),
  ('loop_counter -> ID','loop_counter',1,'p_loop_counter','lyaParser.py',645),
  ('start_value -> discrete_expression','start_value',1,'p_start_value','lyaParser.py',649),
  ('step_value -> BY integer_expression','step_value',2,'p_step_value','lyaParser.py',653),
  ('end_value -> TO discrete_expression','end_value',2,'p_end_value','lyaParser.py',657),
  ('discrete_expression -> expression','discrete_expression',1,'p_discrete_expression','lyaParser.py',661),
  ('range_enumeration -> loop_counter IN discrete_mode','range_enumeration',3,'p_range_enumeration','lyaParser.py',665),
  ('range_enumeration -> loop_counter DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration2','lyaParser.py',669),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','lyaParser.py',673),
  ('procedure_statement -> label COLON procedure_definition SMC','procedure_statement',4,'p_procedure_statement','lyaParser.py',681),
  ('procedure_definition -> PROC LPAREN RPAREN SMC END','procedure_definition',5,'p_procedure_definition1','lyaParser.py',685),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SMC statement_list END','procedure_definition',7,'p_procedure_definition1','lyaParser.py',686),
  ('procedure_definition -> PROC LPAREN RPAREN SMC statement_list END','procedure_definition',6,'p_procedure_definition1','lyaParser.py',687),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SMC END','procedure_definition',6,'p_procedure_definition2','lyaParser.py',696),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SMC END','procedure_definition',7,'p_procedure_definition2','lyaParser.py',697),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SMC statement_list END','procedure_definition',8,'p_procedure_definition2','lyaParser.py',698),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SMC statement_list END','procedure_definition',7,'p_procedure_definition3','lyaParser.py',707),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SMC END','procedure_definition',6,'p_procedure_definition3','lyaParser.py',708),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','lyaParser.py',715),
  ('formal_parameter_list -> formal_parameter COMMA formal_parameter_list','formal_parameter_list',3,'p_formal_parameter_list','lyaParser.py',716),
  ('formal_parameter -> id_list parameter_spec','formal_parameter',2,'p_formal_parameter','lyaParser.py',723),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','lyaParser.py',727),
  ('parameter_spec -> mode parameter_attribute','parameter_spec',2,'p_parameter_spec','lyaParser.py',728),
  ('parameter_attribute -> LOC','parameter_attribute',1,'p_parameter_attribute','lyaParser.py',735),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','lyaParser.py',739),
  ('result_spec -> RETURNS LPAREN mode result_attribute RPAREN','result_spec',5,'p_result_spec','lyaParser.py',740),
  ('result_attribute -> LOC','result_attribute',1,'p_result_attribute','lyaParser.py',747),
  ('call_action -> procedure_call','call_action',1,'p_call_action','lyaParser.py',755),
  ('call_action -> builtin_call','call_action',1,'p_call_action','lyaParser.py',756),
  ('procedure_call -> ID LPAREN RPAREN','procedure_call',3,'p_procedure_call','lyaParser.py',760),
  ('procedure_call -> ID LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','lyaParser.py',761),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','lyaParser.py',768),
  ('parameter_list -> parameter COMMA parameter_list','parameter_list',3,'p_parameter_list','lyaParser.py',769),
  ('parameter -> expression','parameter',1,'p_parameter','lyaParser.py',776),
  ('exit_action -> EXIT label','exit_action',2,'p_exit_action','lyaParser.py',784),
  ('return_action -> RETURN','return_action',1,'p_return_action','lyaParser.py',788),
  ('return_action -> RETURN result','return_action',2,'p_return_action','lyaParser.py',789),
  ('result_action -> RESULT result','result_action',2,'p_result_action','lyaParser.py',796),
  ('result -> expression','result',1,'p_result','lyaParser.py',800),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','lyaParser.py',804),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','lyaParser.py',805),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','lyaParser.py',812),
  ('builtin_name -> PRED','builtin_name',1,'p_builtin_name','lyaParser.py',813),
  ('builtin_name -> SUCC','builtin_name',1,'p_builtin_name','lyaParser.py',814),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','lyaParser.py',815),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','lyaParser.py',816),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','lyaParser.py',817),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','lyaParser.py',818),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','lyaParser.py',819),
  ('integer_expression -> expression','integer_expression',1,'p_integer_expression','lyaParser.py',828),
  ('empty -> <empty>','empty',0,'p_empty','lyaParser.py',835),
]
