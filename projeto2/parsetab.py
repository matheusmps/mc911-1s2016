
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'AF899C9359A39EBF911504573F0E1C80'
    
_lr_action_items = {'LOWER':([0,5,8,12,15,20,25,30,35,36,39,44,46,51,59,67,74,78,80,82,83,84,86,88,89,90,92,94,96,97,104,111,115,116,117,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,144,151,156,180,181,186,188,194,202,203,210,214,215,216,221,223,225,227,231,233,235,242,243,244,246,249,253,254,276,295,301,309,310,319,320,327,334,338,339,346,],[4,4,-8,4,-9,-6,-7,-5,-3,4,4,4,-4,-120,-121,4,4,4,4,4,-74,-111,-112,4,-117,-116,-84,4,-115,-110,4,4,4,-157,4,4,4,-100,-96,-103,-99,-104,-98,-95,4,-105,-97,-101,-102,-109,4,-108,4,-85,-10,4,-45,-49,4,-158,4,4,4,4,4,4,4,4,4,4,4,4,4,4,-75,-181,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'ELSE':([1,11,14,16,27,31,45,47,48,49,50,52,53,54,55,56,57,58,60,61,62,63,64,65,66,69,70,71,72,73,75,77,81,83,91,116,143,145,147,179,180,184,194,205,206,207,208,209,213,217,218,228,229,235,238,243,251,252,256,257,258,290,293,299,313,314,],[-136,-200,-137,-138,-135,-134,-199,-106,-91,-62,-139,-63,-66,-59,-65,-113,-140,-118,-61,-55,-56,-93,-92,-58,-123,-60,-64,-57,-69,-67,-68,-122,-124,-74,-143,-157,-133,-119,-201,233,-150,-211,-158,-114,-94,-107,-73,254,-202,-144,-145,-142,-141,-151,-212,-75,254,-130,-128,-70,-71,-131,-125,233,-126,-132,]),'PRINT':([0,5,8,12,15,20,25,30,35,36,39,44,46,51,59,67,74,78,80,82,83,84,86,88,89,90,92,94,96,97,104,111,115,116,117,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,144,151,156,180,181,186,188,194,202,203,210,214,215,216,221,223,225,227,231,233,235,242,243,244,246,249,253,254,276,295,301,309,310,319,320,327,334,338,339,346,],[10,10,-8,10,-9,-6,-7,-5,-3,10,10,10,-4,-120,-121,10,10,10,10,10,-74,-111,-112,10,-117,-116,-84,10,-115,-110,10,10,10,-157,10,10,10,-100,-96,-103,-99,-104,-98,-95,10,-105,-97,-101,-102,-109,10,-108,10,-85,-10,10,-45,-49,10,-158,10,10,10,10,10,10,10,10,10,10,10,10,10,10,-75,-181,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'MINUS':([1,2,11,12,13,14,16,26,27,31,36,39,45,47,49,50,52,53,54,55,56,57,58,60,61,62,63,65,66,67,69,70,71,72,73,74,75,77,81,82,84,86,88,89,90,91,92,94,96,97,104,111,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,143,144,145,147,151,184,188,190,205,206,207,208,210,213,214,215,216,217,218,221,223,225,227,228,229,231,238,242,246,253,254,257,258,263,295,309,310,],[-136,-139,-200,51,-140,-137,-138,84,-135,-134,51,51,-199,-106,-62,-139,-63,-66,-59,-65,-113,-140,-118,-61,-55,-56,84,-58,-123,51,-60,-64,-57,-69,-67,51,-68,-122,-124,51,-111,-112,51,-117,-116,-143,-84,51,-115,-110,51,51,51,51,-100,-96,-103,-99,-104,-98,-95,51,-105,-97,-101,-102,-109,51,-108,-133,51,-119,-201,-85,-211,51,-140,-114,84,-107,-73,51,-202,51,51,51,-144,-145,51,51,51,51,-142,-141,51,-212,51,51,51,51,-70,-71,-140,51,51,51,]),'GE':([1,11,14,16,27,31,45,47,48,49,50,52,53,54,55,56,57,58,60,61,62,63,65,66,69,70,71,72,73,75,77,81,91,143,145,147,184,205,206,207,208,213,217,218,228,229,238,257,258,263,],[-136,-200,-137,-138,-135,-134,-199,-106,128,-62,-139,-63,-66,-59,-65,-113,-140,-118,-61,-55,-56,-93,-58,-123,-60,-64,-57,-69,-67,-68,-122,-124,-143,-133,-119,-201,-211,-114,-94,-107,-73,-202,-144,-145,-142,-141,-212,-70,-71,-140,]),'CHARS':([99,101,114,168,183,220,280,294,322,],[-15,164,164,164,164,-16,164,164,164,]),'ARRAY':([99,101,114,168,183,220,280,294,322,],[-15,161,161,161,161,-16,161,161,161,]),'AND':([1,11,14,16,27,31,45,47,48,49,50,52,53,54,55,56,57,58,60,61,62,63,65,66,69,70,71,72,73,75,77,81,91,143,145,147,184,205,206,207,208,213,217,218,228,229,238,257,258,263,],[-136,-200,-137,-138,-135,-134,-199,-106,131,-62,-139,-63,-66,-59,-65,-113,-140,-118,-61,-55,-56,-93,-58,-123,-60,-64,-57,-69,-67,-68,-122,-124,-143,-133,-119,-201,-211,-114,-94,-107,-73,-202,-144,-145,-142,-141,-212,-70,-71,-140,]),'LENGTH':([0,5,8,12,15,20,25,30,35,36,39,44,46,51,59,67,74,78,80,82,83,84,86,88,89,90,92,94,96,97,104,111,115,116,117,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,144,151,156,180,181,186,188,194,202,203,210,214,215,216,221,223,225,227,231,233,235,242,243,244,246,249,253,254,276,295,301,309,310,319,320,327,334,338,339,346,],[22,22,-8,22,-9,-6,-7,-5,-3,22,22,22,-4,-120,-121,22,22,22,22,22,-74,-111,-112,22,-117,-116,-84,22,-115,-110,22,22,22,-157,22,22,22,-100,-96,-103,-99,-104,-98,-95,22,-105,-97,-101,-102,-109,22,-108,22,-85,-10,22,-45,-49,22,-158,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-75,-181,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'BY':([1,11,14,16,27,31,45,47,48,49,50,52,53,54,55,56,57,58,60,61,62,63,64,65,66,69,70,71,72,73,75,77,81,91,143,145,147,184,205,206,207,208,213,217,218,228,229,238,257,258,282,283,284,293,313,],[-136,-200,-137,-138,-135,-134,-199,-106,-91,-62,-139,-63,-66,-59,-65,-113,-140,-118,-61,-55,-56,-93,-92,-58,-123,-60,-64,-57,-69,-67,-68,-122,-124,-143,-133,-119,-201,-211,-114,-94,-107,-73,-202,-144,-145,-142,-141,-212,-70,-71,-177,309,-174,-125,-126,]),'NUM':([0,5,8,12,15,20,25,30,35,36,39,44,46,51,59,67,74,78,80,82,83,84,86,88,89,90,92,94,96,97,104,111,115,116,117,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,144,151,156,180,181,186,188,194,202,203,210,214,215,216,221,223,225,227,231,233,235,242,243,244,246,249,253,254,276,295,301,309,310,319,320,327,334,338,339,346,],[6,6,-8,6,-9,-6,-7,-5,-3,6,6,6,-4,-120,-121,6,6,6,6,6,-74,-111,-112,6,-117,-116,-84,6,-115,-110,6,6,6,-157,6,6,6,-100,-96,-103,-99,-104,-98,-95,6,-105,-97,-101,-102,-109,6,-108,6,-85,-10,6,-45,-49,6,-158,6,6,6,6,6,6,6,6,6,6,6,6,6,6,-75,-181,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'RESULT':([0,5,8,15,20,25,30,35,44,46,83,115,116,117,156,180,181,186,194,202,203,233,235,243,244,249,276,301,319,320,327,334,338,339,346,],[39,39,-8,-9,-6,-7,-5,-3,39,-4,-74,39,-157,39,-10,39,-45,-49,-158,39,39,39,39,-75,-181,39,39,39,39,39,39,39,39,39,39,]),'FALSE':([12,36,39,51,59,67,74,80,82,84,86,88,89,90,92,94,96,97,104,111,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,144,151,188,210,214,215,216,221,223,225,227,231,242,246,253,254,295,309,310,],[55,55,55,-120,-121,55,55,55,55,-111,-112,55,-117,-116,-84,55,-115,-110,55,55,55,55,-100,-96,-103,-99,-104,-98,-95,55,-105,-97,-101,-102,-109,55,-108,55,-85,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'REF':([99,101,114,168,183,220,280,294,322,],[-15,168,168,168,168,-16,168,168,168,]),'COMMA':([1,11,14,16,27,31,45,47,48,49,50,52,53,54,55,56,57,58,60,61,62,63,64,65,66,69,70,71,72,73,75,77,81,91,98,99,100,101,107,108,109,112,113,114,143,145,147,148,149,153,154,159,160,162,163,165,166,167,170,171,172,173,174,175,184,205,206,207,208,211,213,217,218,219,220,224,226,228,229,236,237,238,239,240,241,257,258,260,261,262,264,266,267,268,271,277,279,280,293,296,297,298,304,305,313,315,316,317,324,325,],[-136,-200,-137,-138,-135,-134,-199,-106,-91,-62,-139,-63,-66,-59,-65,-113,-140,-118,-61,-55,-56,-93,-92,-58,-123,-60,-64,-57,-69,-67,-68,-122,-124,-143,157,-15,-11,158,182,158,-46,187,-50,158,-133,-119,-201,-205,214,216,-89,-24,-21,-26,-20,-18,-14,-23,-22,-35,-19,-27,-36,-25,-211,-114,-94,-107,-73,216,-202,-144,-145,-12,-16,-13,-34,-142,-141,-47,-48,-212,-51,-52,-54,-70,-71,-33,-31,-90,-40,-43,295,-42,-17,-53,303,158,-125,-37,-29,-28,-192,-193,-126,-44,-39,-41,-194,-195,]),'RPAREN':([1,11,14,16,27,31,45,47,48,49,50,52,53,54,55,56,57,58,60,61,62,63,64,65,66,69,70,71,72,73,75,77,81,82,91,111,141,143,145,146,147,148,149,159,160,162,163,165,167,170,171,172,173,174,175,184,185,205,206,207,208,213,217,218,226,228,229,238,245,257,258,259,260,261,272,273,279,281,293,296,297,298,304,305,313,315,316,323,324,325,337,344,345,],[-136,-200,-137,-138,-135,-134,-199,-106,-91,-62,-139,-63,-66,-59,-65,-113,-140,-118,-61,-55,-56,-93,-92,-58,-123,-60,-64,-57,-69,-67,-68,-122,-124,147,-143,184,208,-133,-119,213,-201,-205,-203,-24,-21,-26,-20,-18,-23,-22,-35,-19,-27,-36,-25,-211,238,-114,-94,-107,-73,-202,-144,-145,-34,-142,-141,-212,278,-70,-71,-204,-33,-31,297,298,-190,306,-125,-37,-29,-28,-192,-193,-126,-44,-39,-191,-194,-195,343,349,-198,]),'STRCONC':([1,2,11,13,14,16,26,27,31,45,47,49,50,52,53,54,55,56,57,58,60,61,62,63,65,66,69,70,71,72,73,75,77,81,91,143,145,147,184,190,205,206,207,208,213,217,218,228,229,238,257,258,263,],[-136,-139,-200,-140,-137,-138,86,-135,-134,-199,-106,-62,-139,-63,-66,-59,-65,-113,-140,-118,-61,-55,-56,86,-58,-123,-60,-64,-57,-69,-67,-68,-122,-124,-143,-133,-119,-201,-211,-140,-114,86,-107,-73,-202,-144,-145,-142,-141,-212,-70,-71,-140,]),'ISEQUAL':([1,11,14,16,27,31,45,47,48,49,50,52,53,54,55,56,57,58,60,61,62,63,65,66,69,70,71,72,73,75,77,81,91,143,145,147,184,205,206,207,208,213,217,218,228,229,238,257,258,263,],[-136,-200,-137,-138,-135,-134,-199,-106,126,-62,-139,-63,-66,-59,-65,-113,-140,-118,-61,-55,-56,-93,-58,-123,-60,-64,-57,-69,-67,-68,-122,-124,-143,-133,-119,-201,-211,-114,-94,-107,-73,-202,-144,-145,-142,-141,-212,-70,-71,-140,]),'RETURN':([0,5,8,15,20,25,30,35,44,46,83,115,116,117,156,180,181,186,194,202,203,233,235,243,244,249,276,301,319,320,327,334,338,339,346,],[12,12,-8,-9,-6,-7,-5,-3,12,-4,-74,12,-157,12,-10,12,-45,-49,-158,12,12,12,12,-75,-181,12,12,12,12,12,12,12,12,12,12,]),'MOD':([1,2,11,13,14,16,26,27,31,45,47,49,50,52,53,54,55,56,57,58,60,61,62,65,66,69,70,71,72,73,75,77,81,91,143,145,147,184,190,205,207,208,213,217,218,228,229,238,257,258,263,],[-136,-139,-200,-140,-137,-138,89,-135,-134,-199,89,-62,-139,-63,-66,-59,-65,-113,-140,-118,-61,-55,-56,-58,-123,-60,-64,-57,-69,-67,-68,-122,-124,-143,-133,-119,-201,-211,-140,-114,89,-73,-202,-144,-145,-142,-141,-212,-70,-71,-140,]),'OR':([1,11,14,16,27,31,45,47,48,49,50,52,53,54,55,56,57,58,60,61,62,63,65,66,69,70,71,72,73,75,77,81,91,143,145,147,184,205,206,207,208,213,217,218,228,229,238,257,258,263,],[-136,-200,-137,-138,-135,-134,-199,-106,129,-62,-139,-63,-66,-59,-65,-113,-140,-118,-61,-55,-56,-93,-58,-123,-60,-64,-57,-69,-67,-68,-122,-124,-143,-133,-119,-201,-211,-114,-94,-107,-73,-202,-144,-145,-142,-141,-212,-70,-71,-140,]),'OD':([44,83,116,117,194,202,243,249,],[119,-74,-157,195,-158,250,-75,288,]),'ID':([0,5,8,12,15,20,25,28,29,30,35,36,37,39,41,44,46,51,59,67,74,78,80,82,83,84,86,88,89,90,92,94,96,97,99,101,104,111,114,115,116,117,118,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,144,151,156,157,158,168,180,181,182,183,186,187,188,194,202,203,210,214,215,216,220,221,223,225,227,231,233,235,242,243,244,245,246,247,249,253,254,276,280,287,294,295,301,303,309,310,319,320,322,327,334,338,339,346,],[13,13,-8,57,-9,-6,-7,99,102,-5,-3,57,99,57,99,13,-4,-120,-121,57,57,57,57,57,-74,-111,-112,57,-117,-116,-84,57,-115,-110,-15,170,57,57,170,190,-157,13,197,57,57,-100,-96,-103,-99,-104,-98,-95,57,-105,-97,-101,-102,-109,57,-108,57,-85,-10,99,220,170,13,-45,99,170,-49,99,57,-158,13,190,57,57,57,57,-16,263,57,57,57,57,13,13,57,-75,-181,99,57,285,13,57,57,13,170,285,170,263,13,99,57,57,13,13,170,13,13,13,13,13,]),'LT':([1,11,14,16,27,31,45,47,48,49,50,52,53,54,55,56,57,58,60,61,62,63,65,66,69,70,71,72,73,75,77,81,91,143,145,147,184,205,206,207,208,213,217,218,228,229,238,257,258,263,],[-136,-200,-137,-138,-135,-134,-199,-106,130,-62,-139,-63,-66,-59,-65,-113,-140,-118,-61,-55,-56,-93,-58,-123,-60,-64,-57,-69,-67,-68,-122,-124,-143,-133,-119,-201,-211,-114,-94,-107,-73,-202,-144,-145,-142,-141,-212,-70,-71,-140,]),'NOT':([12,36,39,67,74,82,84,86,88,89,90,92,94,96,97,104,111,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,144,151,188,210,214,215,216,221,223,225,227,231,242,246,253,254,295,309,310,],[59,59,59,59,59,59,-111,-112,59,-117,-116,-84,59,-115,-110,59,59,59,59,-100,-96,-103,-99,-104,-98,-95,59,-105,-97,-101,-102,-109,59,-108,59,-85,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'LOC':([159,160,162,163,165,167,170,171,172,173,174,175,226,296,297,298,305,315,316,337,],[-24,-21,-26,-20,-18,-23,-22,-35,-19,-27,-36,-25,-34,-37,-29,-28,325,-44,-39,345,]),'UPPER':([0,5,8,12,15,20,25,30,35,36,39,44,46,51,59,67,74,78,80,82,83,84,86,88,89,90,92,94,96,97,104,111,115,116,117,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,144,151,156,180,181,186,188,194,202,203,210,214,215,216,221,223,225,227,231,233,235,242,243,244,246,249,253,254,276,295,301,309,310,319,320,327,334,338,339,346,],[18,18,-8,18,-9,-6,-7,-5,-3,18,18,18,-4,-120,-121,18,18,18,18,18,-74,-111,-112,18,-117,-116,-84,18,-115,-110,18,18,18,-157,18,18,18,-100,-96,-103,-99,-104,-98,-95,18,-105,-97,-101,-102,-109,18,-108,18,-85,-10,18,-45,-49,18,-158,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-75,-181,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'IN':([1,11,14,16,27,31,45,47,48,49,50,52,53,54,55,56,57,58,60,61,62,63,65,66,69,70,71,72,73,75,77,81,91,143,145,147,184,196,197,205,206,207,208,213,217,218,228,229,238,248,257,258,263,],[-136,-200,-137,-138,-135,-134,-199,-106,135,-62,-139,-63,-66,-59,-65,-113,-140,-118,-61,-55,-56,-93,-58,-123,-60,-64,-57,-69,-67,-68,-122,-124,-143,-133,-119,-201,-211,247,-173,-114,-94,-107,-73,-202,-144,-145,-142,-141,-212,287,-70,-71,-140,]),'TO':([1,11,14,16,27,31,45,47,48,49,50,52,53,54,55,56,57,58,60,61,62,63,64,65,66,69,70,71,72,73,75,77,81,91,143,145,147,184,205,206,207,208,213,217,218,228,229,238,257,258,282,283,284,293,307,308,313,328,331,332,],[-136,-200,-137,-138,-135,-134,-199,-106,-91,-62,-139,-63,-66,-59,-65,-113,-140,-118,-61,-55,-56,-93,-92,-58,-123,-60,-64,-57,-69,-67,-68,-122,-124,-143,-133,-119,-201,-211,-114,-94,-107,-73,-202,-144,-145,-142,-141,-212,-70,-71,-177,310,-174,-125,310,310,-126,310,-221,-175,]),'GT':([1,11,14,16,27,31,45,47,48,49,50,52,53,54,55,56,57,58,60,61,62,63,65,66,69,70,71,72,73,75,77,81,91,143,145,147,184,205,206,207,208,213,217,218,228,229,238,257,258,263,],[-136,-200,-137,-138,-135,-134,-199,-106,137,-62,-139,-63,-66,-59,-65,-113,-140,-118,-61,-55,-56,-93,-58,-123,-60,-64,-57,-69,-67,-68,-122,-124,-143,-133,-119,-201,-211,-114,-94,-107,-73,-202,-144,-145,-142,-141,-212,-70,-71,-140,]),'RETURNS':([278,306,],[302,302,]),'THEN':([1,11,14,16,27,31,45,47,48,49,50,52,53,54,55,56,57,58,60,61,62,63,64,65,66,69,70,71,72,73,75,77,81,91,105,106,142,143,145,147,184,205,206,207,208,213,217,218,228,229,238,257,258,274,291,293,313,],[-136,-200,-137,-138,-135,-134,-199,-106,-91,-62,-139,-63,-66,-59,-65,-113,-140,-118,-61,-55,-56,-93,-92,-58,-123,-60,-64,-57,-69,-67,-68,-122,-124,-143,180,-127,210,-133,-119,-201,-211,-114,-94,-107,-73,-202,-144,-145,-142,-141,-212,-70,-71,180,210,-125,-126,]),'DO':([0,5,8,15,20,25,30,35,44,46,83,115,116,117,156,180,181,186,194,202,203,233,235,243,244,249,276,301,319,320,327,334,338,339,346,],[44,44,-8,-9,-6,-7,-5,-3,44,-4,-74,44,-157,44,-10,44,-45,-49,-158,44,44,44,44,-75,-181,44,44,44,44,44,44,44,44,44,44,]),'FOR':([44,],[118,]),'DOWN':([1,11,14,16,27,31,45,47,48,49,50,52,53,54,55,56,57,58,60,61,62,63,64,65,66,69,70,71,72,73,75,77,81,91,143,145,147,184,196,197,205,206,207,208,213,217,218,228,229,238,257,258,282,283,284,293,307,313,331,332,],[-136,-200,-137,-138,-135,-134,-199,-106,-91,-62,-139,-63,-66,-59,-65,-113,-140,-118,-61,-55,-56,-93,-92,-58,-123,-60,-64,-57,-69,-67,-68,-122,-124,-143,-133,-119,-201,-211,248,-173,-114,-94,-107,-73,-202,-144,-145,-142,-141,-212,-70,-71,-177,308,-174,-125,328,-126,-221,-175,]),'SUCC':([0,5,8,12,15,20,25,30,35,36,39,44,46,51,59,67,74,78,80,82,83,84,86,88,89,90,92,94,96,97,104,111,115,116,117,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,144,151,156,180,181,186,188,194,202,203,210,214,215,216,221,223,225,227,231,233,235,242,243,244,246,249,253,254,276,295,301,309,310,319,320,327,334,338,339,346,],[23,23,-8,23,-9,-6,-7,-5,-3,23,23,23,-4,-120,-121,23,23,23,23,23,-74,-111,-112,23,-117,-116,-84,23,-115,-110,23,23,23,-157,23,23,23,-100,-96,-103,-99,-104,-98,-95,23,-105,-97,-101,-102,-109,23,-108,23,-85,-10,23,-45,-49,23,-158,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-75,-181,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'BOOL':([99,101,114,168,183,220,221,247,280,287,294,295,322,],[-15,162,162,162,162,-16,162,162,162,162,162,162,162,]),'CHAR':([99,101,114,168,183,220,221,247,280,287,294,295,322,],[-15,173,173,173,173,-16,173,173,173,173,173,173,173,]),'TRUE':([12,36,39,51,59,67,74,80,82,84,86,88,89,90,92,94,96,97,104,111,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,144,151,188,210,214,215,216,221,223,225,227,231,242,246,253,254,295,309,310,],[53,53,53,-120,-121,53,53,53,53,-111,-112,53,-117,-116,-84,53,-115,-110,53,53,53,53,-100,-96,-103,-99,-104,-98,-95,53,-105,-97,-101,-102,-109,53,-108,53,-85,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'PRED':([0,5,8,12,15,20,25,30,35,36,39,44,46,51,59,67,74,78,80,82,83,84,86,88,89,90,92,94,96,97,104,111,115,116,117,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,144,151,156,180,181,186,188,194,202,203,210,214,215,216,221,223,225,227,231,233,235,242,243,244,246,249,253,254,276,295,301,309,310,319,320,327,334,338,339,346,],[34,34,-8,34,-9,-6,-7,-5,-3,34,34,34,-4,-120,-121,34,34,34,34,34,-74,-111,-112,34,-117,-116,-84,34,-115,-110,34,34,34,-157,34,34,34,-100,-96,-103,-99,-104,-98,-95,34,-105,-97,-101,-102,-109,34,-108,34,-85,-10,34,-45,-49,34,-158,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-75,-181,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'EQUALS':([1,2,11,13,14,16,26,27,31,45,84,85,86,87,89,90,91,93,95,96,97,99,108,114,147,159,160,162,163,165,166,167,170,171,172,173,174,175,184,189,190,196,197,213,217,218,220,226,228,229,238,296,297,298,315,316,],[-136,-139,-200,-140,-137,-138,92,-135,-134,-199,-111,-88,-112,-87,-117,-116,-143,151,-86,-115,-110,-15,183,188,-201,-24,-21,-26,-20,-18,223,-23,-22,-35,-19,-27,-36,-25,-211,242,-140,246,-173,-202,-144,-145,-16,-34,-142,-141,-212,-37,-29,-28,-44,-39,]),'DCL':([0,5,8,15,20,25,30,35,46,83,156,181,186,243,244,301,319,320,327,334,338,339,346,],[28,28,-8,-9,-6,-7,-5,-3,-4,-74,-10,-45,-49,-75,-181,28,28,28,28,28,28,28,28,]),'EXIT':([0,5,8,15,20,25,30,35,44,46,83,115,116,117,156,180,181,186,194,202,203,233,235,243,244,249,276,301,319,320,327,334,338,339,346,],[29,29,-8,-9,-6,-7,-5,-3,29,-4,-74,29,-157,29,-10,29,-45,-49,-158,29,29,29,29,-75,-181,29,29,29,29,29,29,29,29,29,29,]),'NULL':([12,36,39,51,59,67,74,80,82,84,86,88,89,90,92,94,96,97,104,111,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,144,151,188,210,214,215,216,221,223,225,227,231,242,246,253,254,295,309,310,],[72,72,72,-120,-121,72,72,72,72,-111,-112,72,-117,-116,-84,72,-115,-110,72,72,72,72,-100,-96,-103,-99,-104,-98,-95,72,-105,-97,-101,-102,-109,72,-108,72,-85,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'TYPE':([0,5,8,15,20,25,30,35,46,83,156,181,186,243,244,301,319,320,327,334,338,339,346,],[37,37,-8,-9,-6,-7,-5,-3,-4,-74,-10,-45,-49,-75,-181,37,37,37,37,37,37,37,37,]),'INTCONST':([12,36,39,51,59,67,74,80,82,84,86,88,89,90,92,94,96,97,104,111,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,144,151,188,210,214,215,216,221,222,223,225,227,231,242,246,253,254,295,309,310,],[70,70,70,-120,-121,70,70,70,70,-111,-112,70,-117,-116,-84,70,-115,-110,70,70,70,70,-100,-96,-103,-99,-104,-98,-95,70,-105,-97,-101,-102,-109,70,-108,70,-85,70,70,70,70,70,70,270,70,70,70,70,70,70,70,70,70,70,70,]),'NOTEQUAL':([1,11,14,16,27,31,45,47,48,49,50,52,53,54,55,56,57,58,60,61,62,63,65,66,69,70,71,72,73,75,77,81,91,143,145,147,184,205,206,207,208,213,217,218,228,229,238,257,258,263,],[-136,-200,-137,-138,-135,-134,-199,-106,136,-62,-139,-63,-66,-59,-65,-113,-140,-118,-61,-55,-56,-93,-58,-123,-60,-64,-57,-69,-67,-68,-122,-124,-143,-133,-119,-201,-211,-114,-94,-107,-73,-202,-144,-145,-142,-141,-212,-70,-71,-140,]),'READ':([0,5,8,12,15,20,25,30,35,36,39,44,46,51,59,67,74,78,80,82,83,84,86,88,89,90,92,94,96,97,104,111,115,116,117,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,144,151,156,180,181,186,188,194,202,203,210,214,215,216,221,223,225,227,231,233,235,242,243,244,246,249,253,254,276,295,301,309,310,319,320,327,334,338,339,346,],[33,33,-8,33,-9,-6,-7,-5,-3,33,33,33,-4,-120,-121,33,33,33,33,33,-74,-111,-112,33,-117,-116,-84,33,-115,-110,33,33,33,-157,33,33,33,-100,-96,-103,-99,-104,-98,-95,33,-105,-97,-101,-102,-109,33,-108,33,-85,-10,33,-45,-49,33,-158,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-75,-181,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'TIMES':([1,2,11,13,14,16,26,27,31,45,47,49,50,52,53,54,55,56,57,58,60,61,62,65,66,69,70,71,72,73,75,77,81,91,143,145,147,184,190,205,207,208,213,217,218,228,229,238,257,258,263,],[-136,-139,-200,-140,-137,-138,96,-135,-134,-199,96,-62,-139,-63,-66,-59,-65,-113,-140,-118,-61,-55,-56,-58,-123,-60,-64,-57,-69,-67,-68,-122,-124,-143,-133,-119,-201,-211,-140,-114,96,-73,-202,-144,-145,-142,-141,-212,-70,-71,-140,]),'PLUS':([1,2,11,13,14,16,26,27,31,45,47,49,50,52,53,54,55,56,57,58,60,61,62,63,65,66,69,70,71,72,73,75,77,81,91,143,145,147,184,190,205,206,207,208,213,217,218,228,229,238,257,258,263,],[-136,-139,-200,-140,-137,-138,97,-135,-134,-199,-106,-62,-139,-63,-66,-59,-65,-113,-140,-118,-61,-55,-56,97,-58,-123,-60,-64,-57,-69,-67,-68,-122,-124,-143,-133,-119,-201,-211,-140,-114,97,-107,-73,-202,-144,-145,-142,-141,-212,-70,-71,-140,]),'CHARCONST':([12,36,39,51,59,67,74,80,82,84,86,88,89,90,92,94,96,97,104,111,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,144,151,188,210,214,215,216,221,223,225,227,231,242,246,253,254,295,309,310,],[73,73,73,-120,-121,73,73,73,73,-111,-112,73,-117,-116,-84,73,-115,-110,73,73,73,73,-100,-96,-103,-99,-104,-98,-95,73,-105,-97,-101,-102,-109,73,-108,73,-85,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'IF':([0,5,8,12,15,20,25,30,35,36,39,44,46,67,74,82,83,88,92,94,104,111,115,116,117,124,144,151,156,180,181,186,188,194,202,203,210,214,215,216,221,223,225,227,231,233,235,242,243,244,246,249,253,254,276,295,301,309,310,319,320,327,334,338,339,346,],[36,36,-8,74,-9,-6,-7,-5,-3,74,74,36,-4,74,74,74,-74,74,-84,74,74,74,36,-157,36,74,74,-85,-10,36,-45,-49,74,-158,36,36,74,74,74,74,74,74,74,74,74,36,36,74,-75,-181,74,36,74,74,36,74,36,74,74,36,36,36,36,36,36,36,]),'END':([8,15,20,25,30,35,46,83,156,181,186,243,244,301,319,320,327,334,338,339,346,],[-8,-9,-6,-7,-5,-3,-4,-74,-10,-45,-49,-75,-181,321,335,336,340,342,347,348,350,]),'LE':([1,11,14,16,27,31,45,47,48,49,50,52,53,54,55,56,57,58,60,61,62,63,65,66,69,70,71,72,73,75,77,81,91,143,145,147,184,205,206,207,208,213,217,218,228,229,238,257,258,263,],[-136,-200,-137,-138,-135,-134,-199,-106,134,-62,-139,-63,-66,-59,-65,-113,-140,-118,-61,-55,-56,-93,-58,-123,-60,-64,-57,-69,-67,-68,-122,-124,-143,-133,-119,-201,-211,-114,-94,-107,-73,-202,-144,-145,-142,-141,-212,-70,-71,-140,]),'STRINGCONST':([12,36,39,51,59,67,74,80,82,84,86,88,89,90,92,94,96,97,104,111,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,144,151,188,210,214,215,216,221,223,225,227,231,242,246,253,254,295,309,310,],[75,75,75,-120,-121,75,75,75,75,-111,-112,75,-117,-116,-84,75,-115,-110,75,75,75,75,-100,-96,-103,-99,-104,-98,-95,75,-105,-97,-101,-102,-109,75,-108,75,-85,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'LPAREN':([4,6,10,12,13,18,22,23,33,34,36,39,40,51,57,59,67,74,80,82,84,86,88,89,90,92,94,96,97,104,111,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,144,151,162,167,169,170,173,175,188,190,193,210,214,215,216,221,223,225,227,231,242,246,253,254,263,285,295,302,309,310,],[-217,-213,-220,67,82,-216,-218,-215,-219,-214,67,67,111,-120,82,-121,67,67,67,67,-111,-112,67,-117,-116,-84,67,-115,-110,67,67,67,67,-100,-96,-103,-99,-104,-98,-95,67,-105,-97,-101,-102,-109,67,-108,67,-85,-26,225,227,-30,-27,-25,67,82,245,67,67,67,67,67,67,67,67,67,67,67,67,67,82,-30,67,322,67,67,]),'$end':([0,5,8,9,15,20,25,30,35,38,46,83,156,181,186,243,244,],[-222,-1,-8,-2,-9,-6,-7,-5,-3,0,-4,-74,-10,-45,-49,-75,-181,]),'PROC':([115,],[193,]),'DIV':([1,2,11,13,14,16,26,27,31,45,47,49,50,52,53,54,55,56,57,58,60,61,62,65,66,69,70,71,72,73,75,77,81,91,143,145,147,184,190,205,207,208,213,217,218,228,229,238,257,258,263,],[-136,-139,-200,-140,-137,-138,90,-135,-134,-199,90,-62,-139,-63,-66,-59,-65,-113,-140,-118,-61,-55,-56,-58,-123,-60,-64,-57,-69,-67,-68,-122,-124,-143,-133,-119,-201,-211,-140,-114,90,-73,-202,-144,-145,-142,-141,-212,-70,-71,-140,]),'ARROW':([1,2,11,12,13,14,16,26,27,31,36,39,45,50,51,57,59,66,67,74,80,82,84,86,88,89,90,91,92,94,96,97,104,111,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,143,144,147,151,184,188,190,210,213,214,215,216,217,218,221,223,225,227,228,229,231,238,242,246,253,254,263,295,309,310,],[-136,-139,-200,78,-140,-137,-138,91,-135,-134,78,78,-199,-139,-120,-140,-121,91,78,78,78,78,-111,-112,78,-117,-116,-143,-84,78,-115,-110,78,78,78,78,-100,-96,-103,-99,-104,-98,-95,78,-105,-97,-101,-102,-109,78,-108,91,78,-201,-85,-211,78,-140,78,-202,78,78,78,-144,-145,78,78,78,78,-142,-141,78,-212,78,78,78,78,-140,78,78,78,]),'RBRACKET':([1,11,14,16,27,31,45,47,48,49,50,52,53,54,55,56,57,58,60,61,62,63,64,65,66,69,70,71,72,73,75,77,81,91,143,145,147,153,154,155,159,162,167,173,175,176,177,178,184,205,206,207,208,211,212,213,217,218,228,229,238,257,258,260,261,262,264,266,267,268,269,270,293,297,298,313,317,],[-136,-200,-137,-138,-135,-134,-199,-106,-91,-62,-139,-63,-66,-59,-65,-113,-140,-118,-61,-55,-56,-93,-92,-58,-123,-60,-64,-57,-69,-67,-68,-122,-124,-143,-133,-119,-201,217,-89,218,-24,-26,-23,-27,-25,228,229,-221,-211,-114,-94,-107,-73,257,258,-202,-144,-145,-142,-141,-212,-70,-71,-33,-31,-90,-40,-43,294,-42,296,-38,-125,-29,-28,-126,-41,]),'SMC':([1,2,3,7,11,12,14,16,17,19,21,24,27,31,32,43,45,47,48,49,50,52,53,54,55,56,57,58,60,61,62,63,64,65,66,68,69,70,71,72,73,75,76,77,81,91,98,100,102,103,106,107,109,110,112,113,119,120,121,122,143,145,147,150,159,160,162,163,165,166,167,170,171,172,173,174,175,184,191,192,195,198,199,200,201,204,205,206,207,208,213,217,218,219,224,226,228,229,234,236,237,238,239,240,241,250,257,258,271,275,277,278,282,286,288,293,296,297,298,300,306,311,312,313,315,316,321,326,329,330,333,335,336,340,341,342,343,347,348,349,350,],[-136,-79,-78,-80,-200,-207,-137,-138,83,-81,-147,-77,-135,-134,-146,-82,-199,-106,-91,-62,-139,-63,-66,-59,-65,-113,-140,-118,-61,-55,-56,-93,-92,-58,-123,-210,-60,-64,-57,-69,-67,-68,-208,-122,-124,-143,156,-11,-76,-206,-127,181,-46,-209,186,-50,-159,-164,-163,202,-133,-119,-201,-83,-24,-21,-26,-20,-18,-14,-23,-22,-35,-19,-27,-36,-25,-211,243,244,-162,-168,-166,-167,-165,-180,-114,-94,-107,-73,-202,-144,-145,-12,-13,-34,-142,-141,-148,-47,-48,-212,-51,-52,-54,-160,-70,-71,-17,-149,-53,301,-177,-178,-161,-125,-37,-29,-28,319,327,-169,-179,-126,-44,-39,-182,338,-170,-171,-176,-189,-184,-185,-172,-188,-196,-186,-183,-197,-187,]),'LBRACKET':([1,2,11,13,14,16,26,27,31,45,49,50,52,53,54,55,57,60,61,62,65,66,69,70,71,72,73,75,77,79,91,143,147,161,164,184,190,208,213,217,218,228,229,238,257,258,263,],[-136,-139,-200,-140,-137,-138,94,-135,104,-199,-62,-139,-63,-66,-59,-65,-140,-61,-55,-56,-58,94,-60,-64,-57,-69,-67,-68,-72,144,-143,94,-201,221,222,-211,-140,-73,-202,-144,-145,-142,-141,-212,-70,-71,-140,]),'SYN':([0,5,8,15,20,25,30,35,46,83,156,181,186,243,244,301,319,320,327,334,338,339,346,],[41,41,-8,-9,-6,-7,-5,-3,-4,-74,-10,-45,-49,-75,-181,41,41,41,41,41,41,41,41,]),'ELSIF':([1,11,14,16,27,31,45,47,48,49,50,52,53,54,55,56,57,58,60,61,62,63,64,65,66,69,70,71,72,73,75,77,81,83,91,116,143,145,147,179,180,184,194,205,206,207,208,209,213,217,218,228,229,235,238,243,251,252,256,257,258,290,293,299,313,314,],[-136,-200,-137,-138,-135,-134,-199,-106,-91,-62,-139,-63,-66,-59,-65,-113,-140,-118,-61,-55,-56,-93,-92,-58,-123,-60,-64,-57,-69,-67,-68,-122,-124,-74,-143,-157,-133,-119,-201,231,-150,-211,-158,-114,-94,-107,-73,253,-202,-144,-145,-142,-141,-151,-212,-75,253,-130,-128,-70,-71,-131,-125,231,-126,-132,]),'FI':([1,11,14,16,27,31,45,47,48,49,50,52,53,54,55,56,57,58,60,61,62,63,64,65,66,69,70,71,72,73,75,77,81,83,91,116,143,145,147,179,180,184,194,205,206,207,208,213,217,218,228,229,230,232,233,235,238,243,255,257,258,276,289,292,293,299,313,318,],[-136,-200,-137,-138,-135,-134,-199,-106,-91,-62,-139,-63,-66,-59,-65,-113,-140,-118,-61,-55,-56,-93,-92,-58,-123,-60,-64,-57,-69,-67,-68,-122,-124,-74,-143,-157,-133,-119,-201,234,-150,-211,-158,-114,-94,-107,-73,-202,-144,-145,-142,-141,-154,275,-152,-151,-212,-75,293,-70,-71,-153,313,-129,-125,-155,-126,-156,]),'WHILE':([1,11,14,16,27,31,44,45,47,48,49,50,52,53,54,55,56,57,58,60,61,62,63,64,65,66,69,70,71,72,73,75,77,81,91,121,143,145,147,159,162,167,173,175,184,198,199,200,205,206,207,208,213,217,218,228,229,238,257,258,282,286,293,297,298,311,312,313,329,330,333,341,],[-136,-200,-137,-138,-135,-134,124,-199,-106,-91,-62,-139,-63,-66,-59,-65,-113,-140,-118,-61,-55,-56,-93,-92,-58,-123,-60,-64,-57,-69,-67,-68,-122,-124,-143,124,-133,-119,-201,-24,-26,-23,-27,-25,-211,-168,-166,-167,-114,-94,-107,-73,-202,-144,-145,-142,-141,-212,-70,-71,-177,-178,-125,-29,-28,-169,-179,-126,-170,-171,-176,-172,]),'INT':([99,101,114,168,183,220,221,247,280,287,294,295,322,],[-15,175,175,175,175,-16,175,175,175,175,175,175,175,]),'COLON':([1,11,13,14,16,27,31,42,45,47,48,49,50,52,53,54,55,56,57,58,60,61,62,63,64,65,66,69,70,71,72,73,75,77,81,91,123,143,145,147,152,154,178,184,205,206,207,208,213,217,218,228,229,238,257,258,263,265,293,313,],[-136,-200,-76,-137,-138,-135,-134,115,-199,-106,-91,-62,-139,-63,-66,-59,-65,-113,-140,-118,-61,-55,-56,-93,-92,-58,-123,-60,-64,-57,-69,-67,-68,-122,-124,-143,203,-133,-119,-201,215,-32,-32,-211,-114,-94,-107,-73,-202,-144,-145,-142,-141,-212,-70,-71,-140,-32,-125,-126,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'string_literal':([12,36,39,67,74,80,82,88,94,104,111,124,125,133,139,144,188,210,214,215,216,221,223,225,227,231,242,246,253,254,295,309,310,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'loop_counter':([118,],[196,]),'declaration_statement':([0,5,301,319,320,327,334,338,339,346,],[30,30,30,30,30,30,30,30,30,30,]),'bracketed_action':([0,5,44,115,117,180,202,203,233,235,249,276,301,319,320,327,334,338,339,346,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'operand0':([12,36,39,67,74,82,88,94,104,111,124,144,188,210,214,215,216,221,223,225,227,231,242,246,253,254,295,309,310,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'statement_list':([0,301,319,327,338,],[5,320,334,339,346,]),'iteration':([118,],[199,]),'exit_action':([0,5,44,115,117,180,202,203,233,235,249,276,301,319,320,327,334,338,339,346,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'mode_name':([101,114,168,183,280,294,322,],[165,165,165,165,165,165,165,]),'mode':([101,114,168,183,280,294,322,],[166,189,226,237,305,315,337,]),'discrete_mode_name':([101,114,168,183,221,247,280,287,294,295,322,],[169,169,169,169,169,169,169,169,169,169,169,]),'membership_operator':([48,],[127,]),'lower_bound':([94,104,144,221,225,227,295,],[152,152,152,152,152,152,152,]),'operand3':([12,36,39,67,74,82,88,94,104,111,124,125,133,139,144,188,210,214,215,216,221,223,225,227,231,242,246,253,254,295,309,310,],[56,56,56,56,56,56,56,56,56,56,56,205,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'action_statement_list':([44,180,202,233,],[117,235,249,276,]),'arithmetic_multiplicative_operator':([26,47,207,],[87,125,125,]),'elseif_expression':([209,251,],[252,290,]),'array_element':([0,5,12,36,39,44,67,74,78,80,82,88,94,104,111,115,117,124,125,133,139,144,180,188,202,203,210,214,215,216,221,223,225,227,231,233,235,242,246,249,253,254,276,295,301,309,310,319,320,327,334,338,339,346,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'procedure_statement':([0,5,301,319,320,327,334,338,339,346,],[15,15,15,15,15,15,15,15,15,15,]),'action':([0,5,44,115,117,180,202,203,233,235,249,276,301,319,320,327,334,338,339,346,],[17,17,17,191,17,17,17,191,17,17,17,17,17,17,17,17,17,17,17,17,]),'newmode_list':([37,],[107,]),'primitive_value':([12,36,39,67,74,80,82,88,94,104,111,124,125,133,139,144,188,210,214,215,216,221,223,225,227,231,242,246,253,254,295,309,310,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'arithmetic_additive_operator':([26,63,206,],[95,140,140,]),'array_mode':([101,114,168,183,280,294,322,],[174,174,174,174,174,174,174,]),'procedure_definition':([115,],[192,]),'index_mode':([221,295,],[264,317,]),'value_array_element':([12,36,39,67,74,80,82,88,94,104,111,124,125,133,139,144,188,210,214,215,216,221,223,225,227,231,242,246,253,254,295,309,310,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'then_expression':([142,291,],[209,314,]),'elseif_clause':([179,299,],[230,230,]),'char_literal':([12,36,39,67,74,80,82,88,94,104,111,124,125,133,139,144,188,210,214,215,216,221,223,225,227,231,242,246,253,254,295,309,310,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'declaration':([28,157,],[100,219,]),'conditional_expression':([12,36,39,67,74,82,88,94,104,111,124,144,188,210,214,215,216,221,223,225,227,231,242,246,253,254,295,309,310,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'element_node':([294,],[316,]),'assignment_action':([0,5,44,115,117,180,202,203,233,235,249,276,301,319,320,327,334,338,339,346,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'synonym_statement':([0,5,301,319,320,327,334,338,339,346,],[25,25,25,25,25,25,25,25,25,25,]),'string_reference':([0,5,12,36,39,44,67,74,78,80,82,88,94,104,111,115,117,124,125,133,139,144,180,188,202,203,210,214,215,216,221,223,225,227,231,233,235,242,246,249,253,254,276,295,301,309,310,319,320,327,334,338,339,346,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'discrete_mode':([101,114,168,183,221,247,280,287,294,295,322,],[172,172,172,172,268,286,172,312,172,268,172,]),'declaration_list':([28,],[98,]),'operator2':([63,206,],[139,139,]),'reference_mode':([101,114,168,183,280,294,322,],[163,163,163,163,163,163,163,]),'syn_definition':([41,187,],[113,239,]),'statement':([0,5,301,319,320,327,334,338,339,346,],[35,46,35,35,46,35,46,35,46,46,]),'for_control':([44,],[121,]),'literal':([12,36,39,67,74,80,82,88,94,104,111,124,125,133,139,144,188,210,214,215,216,221,223,225,227,231,242,246,253,254,295,309,310,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'boolean_literal':([12,36,39,67,74,80,82,88,94,104,111,124,125,133,139,144,188,210,214,215,216,221,223,225,227,231,242,246,253,254,295,309,310,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'result':([12,39,],[76,110,]),'parameter_attribute':([305,],[324,]),'upper_bound':([215,],[261,]),'end_value':([283,307,308,328,],[311,329,330,341,]),'integer_expression':([104,309,],[177,332,]),'parameter_spec':([280,],[304,]),'array_primitive_value':([12,36,39,67,74,80,82,88,94,104,111,124,125,133,139,144,188,210,214,215,216,221,223,225,227,231,242,246,253,254,295,309,310,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'result_attribute':([337,],[344,]),'parameter_list':([82,111,214,],[146,185,259,]),'assigning_operator':([26,],[88,]),'control_part':([44,],[122,]),'referenced_location':([12,36,39,67,74,80,82,88,94,104,111,124,125,133,139,144,188,210,214,215,216,221,223,225,227,231,242,246,253,254,295,309,310,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'initialization':([166,],[224,]),'result_action':([0,5,44,115,117,180,202,203,233,235,249,276,301,319,320,327,334,338,339,346,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'operand2':([12,36,39,67,74,82,88,94,104,111,124,133,139,144,188,210,214,215,216,221,223,225,227,231,242,246,253,254,295,309,310,],[47,47,47,47,47,47,47,47,47,47,47,47,207,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'dereferenced_reference':([0,5,12,36,39,44,67,74,78,80,82,88,94,104,111,115,117,124,125,133,139,144,180,188,202,203,210,214,215,216,221,223,225,227,231,233,235,242,246,249,253,254,276,295,301,309,310,319,320,327,334,338,339,346,],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'empty_literal':([12,36,39,67,74,80,82,88,94,104,111,124,125,133,139,144,188,210,214,215,216,221,223,225,227,231,242,246,253,254,295,309,310,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'call_action':([0,5,12,36,39,44,67,74,78,80,82,88,94,104,111,115,117,124,125,133,139,144,180,188,202,203,210,214,215,216,221,223,225,227,231,233,235,242,246,249,253,254,276,295,301,309,310,319,320,327,334,338,339,346,],[2,2,50,50,50,2,50,50,50,50,50,50,50,50,50,2,2,50,50,50,50,50,2,50,2,2,50,50,50,50,50,50,50,50,50,2,2,50,50,2,50,50,2,50,2,50,50,2,2,2,2,2,2,2,]),'discrete_range_mode':([101,114,168,183,221,247,280,287,294,295,322,],[159,159,159,159,159,159,159,159,159,159,159,]),'if_action':([0,5,44,115,117,180,202,203,233,235,249,276,301,319,320,327,334,338,339,346,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'composite_mode':([101,114,168,183,280,294,322,],[160,160,160,160,160,160,160,]),'string_length':([222,],[269,]),'id_list':([28,37,41,157,182,187,245,303,],[101,108,114,101,108,114,280,280,]),'relational_operator':([48,],[132,]),'string_concatenation_operator':([26,63,206,],[85,138,138,]),'integer_literal':([12,36,39,67,74,80,82,88,94,104,111,124,125,133,139,144,188,210,214,215,216,221,223,225,227,231,242,246,253,254,295,309,310,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'procedure_call':([0,5,12,36,39,44,67,74,78,80,82,88,94,104,111,115,117,124,125,133,139,144,180,188,202,203,210,214,215,216,221,223,225,227,231,233,235,242,246,249,253,254,276,295,301,309,310,319,320,327,334,338,339,346,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'location_name':([0,5,12,36,39,44,67,74,78,80,82,88,94,104,111,115,117,124,125,133,139,144,180,188,202,203,210,214,215,216,221,223,225,227,231,233,235,242,246,249,253,254,276,295,301,309,310,319,320,327,334,338,339,346,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'empty':([0,],[9,]),'basic_mode':([101,114,168,183,221,247,280,287,294,295,322,],[167,167,167,167,167,167,167,167,167,167,167,]),'elseif_expression_list':([209,],[251,]),'builtin_call':([0,5,12,36,39,44,67,74,78,80,82,88,94,104,111,115,117,124,125,133,139,144,180,188,202,203,210,214,215,216,221,223,225,227,231,233,235,242,246,249,253,254,276,295,301,309,310,319,320,327,334,338,339,346,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'syn_list':([41,],[112,]),'step_value':([283,],[307,]),'formal_parameter':([245,303,],[279,279,]),'operand4':([12,36,39,67,74,80,82,88,94,104,111,124,125,133,139,144,188,210,214,215,216,221,223,225,227,231,242,246,253,254,295,309,310,],[58,58,58,58,58,145,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'else_expression':([209,251,],[255,289,]),'array_slice':([0,5,12,36,39,44,67,74,78,80,82,88,94,104,111,115,117,124,125,133,139,144,180,188,202,203,210,214,215,216,221,223,225,227,231,233,235,242,246,249,253,254,276,295,301,309,310,319,320,327,334,338,339,346,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'closed_dyadic_operator':([26,],[93,]),'return_action':([0,5,44,115,117,180,202,203,233,235,249,276,301,319,320,327,334,338,339,346,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'else_clause':([179,299,],[232,318,]),'newmode_statement':([0,5,301,319,320,327,334,338,339,346,],[20,20,20,20,20,20,20,20,20,20,]),'expression_list':([94,144,],[153,211,]),'builtin_name':([0,5,12,36,39,44,67,74,78,80,82,88,94,104,111,115,117,124,125,133,139,144,180,188,202,203,210,214,215,216,221,223,225,227,231,233,235,242,246,249,253,254,276,295,301,309,310,319,320,327,334,338,339,346,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'do_action':([0,5,44,115,117,180,202,203,233,235,249,276,301,319,320,327,334,338,339,346,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'formal_parameter_list':([245,303,],[281,323,]),'constant_expression':([188,242,],[240,277,]),'operand1':([12,36,39,67,74,82,88,94,104,111,124,133,144,188,210,214,215,216,221,223,225,227,231,242,246,253,254,295,309,310,],[63,63,63,63,63,63,63,63,63,63,63,206,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'parenthesized_expression':([12,36,39,67,74,80,82,88,94,104,111,124,125,133,139,144,188,210,214,215,216,221,223,225,227,231,242,246,253,254,295,309,310,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'location':([0,5,12,36,39,44,67,74,78,80,82,88,94,104,111,115,117,124,125,133,139,144,180,188,202,203,210,214,215,216,221,223,225,227,231,233,235,242,246,249,253,254,276,295,301,309,310,319,320,327,334,338,339,346,],[26,26,66,66,66,26,66,66,143,66,66,66,66,66,66,26,26,66,66,66,66,66,26,66,26,26,66,66,66,66,66,66,66,66,66,26,26,66,66,26,66,66,26,66,26,66,66,26,26,26,26,26,26,26,]),'program':([0,],[38,]),'expression':([12,36,39,67,74,82,88,94,104,111,124,144,188,210,214,215,216,221,223,225,227,231,242,246,253,254,295,309,310,],[68,106,68,141,106,148,150,154,178,148,106,154,241,256,148,260,262,265,271,265,265,106,241,282,106,292,265,331,282,]),'while_control':([44,121,],[120,201,]),'result_spec':([278,306,],[300,326,]),'literal_range':([94,104,144,221,225,227,295,],[155,176,212,266,272,273,266,]),'boolean_expression':([36,74,124,231,253,],[105,142,204,274,291,]),'start_value':([246,],[283,]),'value_array_slice':([12,36,39,67,74,80,82,88,94,104,111,124,125,133,139,144,188,210,214,215,216,221,223,225,227,231,242,246,253,254,295,309,310,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'parameter':([82,111,214,],[149,149,149,]),'discrete_expression':([246,310,],[284,333,]),'operator1':([48,],[133,]),'index_mode_list':([221,],[267,]),'monadic_operator':([12,36,39,67,74,82,88,94,104,111,124,125,133,139,144,188,210,214,215,216,221,223,225,227,231,242,246,253,254,295,309,310,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'string_mode':([101,114,168,183,280,294,322,],[171,171,171,171,171,171,171,]),'range_enumeration':([118,],[198,]),'action_statement':([0,5,44,117,180,202,233,235,249,276,301,319,320,327,334,338,339,346,],[8,8,116,194,116,116,116,194,194,194,8,8,8,8,8,8,8,8,]),'step_enumeration':([118,],[200,]),'then_clause':([105,274,],[179,299,]),'label':([0,5,29,44,117,180,202,233,235,249,276,301,319,320,327,334,338,339,346,],[42,42,103,123,123,123,123,123,123,123,123,42,42,42,42,42,42,42,42,]),'mode_definition':([37,182,],[109,236,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','lyaParser.py',64),
  ('program -> empty','program',1,'p_program','lyaParser.py',65),
  ('statement_list -> statement','statement_list',1,'p_statement_list1','lyaParser.py',72),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list1','lyaParser.py',73),
  ('statement -> declaration_statement','statement',1,'p_statement','lyaParser.py',80),
  ('statement -> newmode_statement','statement',1,'p_statement','lyaParser.py',81),
  ('statement -> synonym_statement','statement',1,'p_statement','lyaParser.py',82),
  ('statement -> action_statement','statement',1,'p_statement','lyaParser.py',83),
  ('statement -> procedure_statement','statement',1,'p_statement','lyaParser.py',84),
  ('declaration_statement -> DCL declaration_list SMC','declaration_statement',3,'p_declaration_statement','lyaParser.py',92),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','lyaParser.py',96),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','lyaParser.py',97),
  ('declaration -> id_list mode initialization','declaration',3,'p_declaration1','lyaParser.py',104),
  ('declaration -> id_list mode','declaration',2,'p_declaration2','lyaParser.py',108),
  ('id_list -> ID','id_list',1,'p_id_list','lyaParser.py',112),
  ('id_list -> id_list COMMA ID','id_list',3,'p_id_list','lyaParser.py',113),
  ('initialization -> EQUALS expression','initialization',2,'p_initialization','lyaParser.py',120),
  ('mode -> mode_name','mode',1,'p_mode','lyaParser.py',128),
  ('mode -> discrete_mode','mode',1,'p_mode','lyaParser.py',129),
  ('mode -> reference_mode','mode',1,'p_mode','lyaParser.py',130),
  ('mode -> composite_mode','mode',1,'p_mode','lyaParser.py',131),
  ('mode_name -> ID','mode_name',1,'p_mode_name','lyaParser.py',135),
  ('discrete_mode -> basic_mode','discrete_mode',1,'p_discrete_mode','lyaParser.py',139),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','lyaParser.py',140),
  ('basic_mode -> INT','basic_mode',1,'p_basic_mode','lyaParser.py',144),
  ('basic_mode -> BOOL','basic_mode',1,'p_basic_mode','lyaParser.py',145),
  ('basic_mode -> CHAR','basic_mode',1,'p_basic_mode','lyaParser.py',146),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaParser.py',150),
  ('discrete_range_mode -> basic_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaParser.py',151),
  ('discrete_mode_name -> ID','discrete_mode_name',1,'p_discrete_mode_name','lyaParser.py',155),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_litereal_range','lyaParser.py',159),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','lyaParser.py',163),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','lyaParser.py',167),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','lyaParser.py',171),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','lyaParser.py',175),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','lyaParser.py',176),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','lyaParser.py',180),
  ('string_length -> INTCONST','string_length',1,'p_string_length','lyaParser.py',184),
  ('array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_node','array_mode',5,'p_array_mode','lyaParser.py',188),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','lyaParser.py',193),
  ('index_mode_list -> index_mode_list COMMA index_mode','index_mode_list',3,'p_index_mode_list','lyaParser.py',194),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','lyaParser.py',201),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','lyaParser.py',202),
  ('element_node -> mode','element_node',1,'p_element_node','lyaParser.py',206),
  ('newmode_statement -> TYPE newmode_list SMC','newmode_statement',3,'p_newmode_statement','lyaParser.py',214),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','lyaParser.py',218),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','lyaParser.py',219),
  ('mode_definition -> id_list EQUALS mode','mode_definition',3,'p_mode_definition','lyaParser.py',226),
  ('synonym_statement -> SYN syn_list SMC','synonym_statement',3,'p_synonym_statement','lyaParser.py',230),
  ('syn_list -> syn_definition','syn_list',1,'p_syn_list','lyaParser.py',238),
  ('syn_list -> syn_list COMMA syn_definition','syn_list',3,'p_syn_list','lyaParser.py',239),
  ('syn_definition -> id_list EQUALS constant_expression','syn_definition',3,'p_syn_definition','lyaParser.py',246),
  ('syn_definition -> id_list mode EQUALS constant_expression','syn_definition',4,'p_syn_definition2','lyaParser.py',250),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','lyaParser.py',254),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','lyaParser.py',262),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','lyaParser.py',263),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','lyaParser.py',264),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','lyaParser.py',265),
  ('literal -> integer_literal','literal',1,'p_literal','lyaParser.py',269),
  ('literal -> boolean_literal','literal',1,'p_literal','lyaParser.py',270),
  ('literal -> char_literal','literal',1,'p_literal','lyaParser.py',271),
  ('literal -> empty_literal','literal',1,'p_literal','lyaParser.py',272),
  ('literal -> string_literal','literal',1,'p_literal','lyaParser.py',273),
  ('integer_literal -> INTCONST','integer_literal',1,'p_integer_literal','lyaParser.py',277),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','lyaParser.py',281),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','lyaParser.py',282),
  ('char_literal -> CHARCONST','char_literal',1,'p_char_literal','lyaParser.py',286),
  ('string_literal -> STRINGCONST','string_literal',1,'p_string_literal','lyaParser.py',290),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','lyaParser.py',294),
  ('value_array_element -> array_primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','lyaParser.py',298),
  ('value_array_slice -> array_primitive_value LBRACKET literal_range RBRACKET','value_array_slice',4,'p_value_array_slice','lyaParser.py',302),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','lyaParser.py',306),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','lyaParser.py',310),
  ('action_statement -> action SMC','action_statement',2,'p_action_statement','lyaParser.py',318),
  ('action_statement -> label COLON action SMC','action_statement',4,'p_action_statement','lyaParser.py',319),
  ('label -> ID','label',1,'p_label','lyaParser.py',326),
  ('action -> assignment_action','action',1,'p_action','lyaParser.py',330),
  ('action -> bracketed_action','action',1,'p_action','lyaParser.py',331),
  ('action -> call_action','action',1,'p_action','lyaParser.py',332),
  ('action -> exit_action','action',1,'p_action','lyaParser.py',333),
  ('action -> return_action','action',1,'p_action','lyaParser.py',334),
  ('action -> result_action','action',1,'p_action','lyaParser.py',335),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','lyaParser.py',343),
  ('assigning_operator -> EQUALS','assigning_operator',1,'p_assigning_operator','lyaParser.py',347),
  ('assigning_operator -> closed_dyadic_operator EQUALS','assigning_operator',2,'p_assigning_operator','lyaParser.py',348),
  ('closed_dyadic_operator -> arithmetic_additive_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','lyaParser.py',355),
  ('closed_dyadic_operator -> arithmetic_multiplicative_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','lyaParser.py',356),
  ('closed_dyadic_operator -> string_concatenation_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','lyaParser.py',357),
  ('expression_list -> expression','expression_list',1,'p_expression_list','lyaParser.py',361),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','lyaParser.py',362),
  ('expression -> operand0','expression',1,'p_expression','lyaParser.py',369),
  ('expression -> conditional_expression','expression',1,'p_expression','lyaParser.py',370),
  ('operand0 -> operand1','operand0',1,'p_operand0','lyaParser.py',374),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','lyaParser.py',375),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','lyaParser.py',382),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','lyaParser.py',383),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','lyaParser.py',387),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','lyaParser.py',391),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','lyaParser.py',392),
  ('relational_operator -> ISEQUAL','relational_operator',1,'p_relational_operator','lyaParser.py',393),
  ('relational_operator -> NOTEQUAL','relational_operator',1,'p_relational_operator','lyaParser.py',394),
  ('relational_operator -> GT','relational_operator',1,'p_relational_operator','lyaParser.py',395),
  ('relational_operator -> GE','relational_operator',1,'p_relational_operator','lyaParser.py',396),
  ('relational_operator -> LT','relational_operator',1,'p_relational_operator','lyaParser.py',397),
  ('relational_operator -> LE','relational_operator',1,'p_relational_operator','lyaParser.py',398),
  ('operand1 -> operand2','operand1',1,'p_operand1','lyaParser.py',402),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1','lyaParser.py',403),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','lyaParser.py',410),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','lyaParser.py',411),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','lyaParser.py',415),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','lyaParser.py',416),
  ('string_concatenation_operator -> STRCONC','string_concatenation_operator',1,'p_string_concatenation_operator','lyaParser.py',420),
  ('operand2 -> operand3','operand2',1,'p_operand2','lyaParser.py',424),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','lyaParser.py',425),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaParser.py',432),
  ('arithmetic_multiplicative_operator -> DIV','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaParser.py',433),
  ('arithmetic_multiplicative_operator -> MOD','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaParser.py',434),
  ('operand3 -> operand4','operand3',1,'p_operand3','lyaParser.py',438),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','lyaParser.py',439),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','lyaParser.py',446),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','lyaParser.py',447),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','lyaParser.py',451),
  ('operand4 -> location','operand4',1,'p_operand4','lyaParser.py',452),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','lyaParser.py',453),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','lyaParser.py',459),
  ('conditional_expression -> IF boolean_expression then_expression elseif_expression_list else_expression FI','conditional_expression',6,'p_conditional_expression2','lyaParser.py',463),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','lyaParser.py',467),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','lyaParser.py',471),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','lyaParser.py',475),
  ('elseif_expression_list -> elseif_expression','elseif_expression_list',1,'p_elseif_expression_list','lyaParser.py',479),
  ('elseif_expression_list -> elseif_expression_list elseif_expression','elseif_expression_list',2,'p_elseif_expression_list','lyaParser.py',480),
  ('elseif_expression -> ELSIF boolean_expression then_expression','elseif_expression',3,'p_elseif_expression','lyaParser.py',487),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','lyaParser.py',495),
  ('location -> location_name','location',1,'p_location','lyaParser.py',499),
  ('location -> string_reference','location',1,'p_location','lyaParser.py',500),
  ('location -> dereferenced_reference','location',1,'p_location','lyaParser.py',501),
  ('location -> array_element','location',1,'p_location','lyaParser.py',502),
  ('location -> array_slice','location',1,'p_location','lyaParser.py',503),
  ('location -> call_action','location',1,'p_location','lyaParser.py',504),
  ('location_name -> ID','location_name',1,'p_location_name','lyaParser.py',508),
  ('string_reference -> location_name LBRACKET integer_expression RBRACKET','string_reference',4,'p_string_reference','lyaParser.py',512),
  ('string_reference -> location_name LBRACKET literal_range RBRACKET','string_reference',4,'p_string_reference2','lyaParser.py',516),
  ('dereferenced_reference -> location ARROW','dereferenced_reference',2,'p_dereferenced_reference','lyaParser.py',520),
  ('array_element -> location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','lyaParser.py',524),
  ('array_slice -> location LBRACKET literal_range RBRACKET','array_slice',4,'p_array_slice','lyaParser.py',528),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','lyaParser.py',536),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','lyaParser.py',537),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','lyaParser.py',545),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action2','lyaParser.py',549),
  ('then_clause -> THEN','then_clause',1,'p_then_clause','lyaParser.py',553),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','lyaParser.py',554),
  ('else_clause -> ELSE','else_clause',1,'p_else_clause','lyaParser.py',561),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','lyaParser.py',562),
  ('else_clause -> elseif_clause','else_clause',1,'p_else_clause2','lyaParser.py',569),
  ('elseif_clause -> ELSIF boolean_expression then_clause','elseif_clause',3,'p_elseif_clause','lyaParser.py',573),
  ('elseif_clause -> ELSIF boolean_expression then_clause else_clause','elseif_clause',4,'p_elseif_clause2','lyaParser.py',577),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','lyaParser.py',582),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','lyaParser.py',583),
  ('do_action -> DO OD','do_action',2,'p_do_action','lyaParser.py',594),
  ('do_action -> DO control_part SMC OD','do_action',4,'p_do_action2','lyaParser.py',598),
  ('do_action -> DO control_part SMC action_statement_list OD','do_action',5,'p_do_action3','lyaParser.py',602),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action4','lyaParser.py',606),
  ('control_part -> for_control','control_part',1,'p_control_part','lyaParser.py',610),
  ('control_part -> while_control','control_part',1,'p_control_part','lyaParser.py',611),
  ('control_part -> for_control while_control','control_part',2,'p_control_part2','lyaParser.py',615),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','lyaParser.py',619),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','lyaParser.py',623),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','lyaParser.py',624),
  ('step_enumeration -> loop_counter EQUALS start_value end_value','step_enumeration',4,'p_step_enumeration','lyaParser.py',628),
  ('step_enumeration -> loop_counter EQUALS start_value step_value end_value','step_enumeration',5,'p_step_enumeration2','lyaParser.py',632),
  ('step_enumeration -> loop_counter EQUALS start_value DOWN end_value','step_enumeration',5,'p_step_enumeration3','lyaParser.py',636),
  ('step_enumeration -> loop_counter EQUALS start_value step_value DOWN end_value','step_enumeration',6,'p_step_enumeration4','lyaParser.py',640),
  ('loop_counter -> ID','loop_counter',1,'p_loop_counter','lyaParser.py',644),
  ('start_value -> discrete_expression','start_value',1,'p_start_value','lyaParser.py',648),
  ('step_value -> BY integer_expression','step_value',2,'p_step_value','lyaParser.py',652),
  ('end_value -> TO discrete_expression','end_value',2,'p_end_value','lyaParser.py',656),
  ('discrete_expression -> expression','discrete_expression',1,'p_discrete_expression','lyaParser.py',660),
  ('range_enumeration -> loop_counter IN discrete_mode','range_enumeration',3,'p_range_enumeration','lyaParser.py',664),
  ('range_enumeration -> loop_counter DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration2','lyaParser.py',668),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','lyaParser.py',672),
  ('procedure_statement -> label COLON procedure_definition SMC','procedure_statement',4,'p_procedure_statement','lyaParser.py',680),
  ('procedure_definition -> PROC LPAREN RPAREN SMC END','procedure_definition',5,'p_procedure_definition1','lyaParser.py',684),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SMC statement_list END','procedure_definition',7,'p_procedure_definition1','lyaParser.py',685),
  ('procedure_definition -> PROC LPAREN RPAREN SMC statement_list END','procedure_definition',6,'p_procedure_definition1','lyaParser.py',686),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SMC END','procedure_definition',6,'p_procedure_definition2','lyaParser.py',695),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SMC END','procedure_definition',7,'p_procedure_definition2','lyaParser.py',696),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SMC statement_list END','procedure_definition',8,'p_procedure_definition2','lyaParser.py',697),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SMC statement_list END','procedure_definition',7,'p_procedure_definition3','lyaParser.py',706),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SMC END','procedure_definition',6,'p_procedure_definition3','lyaParser.py',707),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','lyaParser.py',714),
  ('formal_parameter_list -> formal_parameter COMMA formal_parameter_list','formal_parameter_list',3,'p_formal_parameter_list','lyaParser.py',715),
  ('formal_parameter -> id_list parameter_spec','formal_parameter',2,'p_formal_parameter','lyaParser.py',722),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','lyaParser.py',728),
  ('parameter_spec -> mode parameter_attribute','parameter_spec',2,'p_parameter_spec','lyaParser.py',729),
  ('parameter_attribute -> LOC','parameter_attribute',1,'p_parameter_attribute','lyaParser.py',736),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','lyaParser.py',740),
  ('result_spec -> RETURNS LPAREN mode result_attribute RPAREN','result_spec',5,'p_result_spec','lyaParser.py',741),
  ('result_attribute -> LOC','result_attribute',1,'p_result_attribute','lyaParser.py',748),
  ('call_action -> procedure_call','call_action',1,'p_call_action','lyaParser.py',756),
  ('call_action -> builtin_call','call_action',1,'p_call_action','lyaParser.py',757),
  ('procedure_call -> ID LPAREN RPAREN','procedure_call',3,'p_procedure_call','lyaParser.py',761),
  ('procedure_call -> ID LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','lyaParser.py',762),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','lyaParser.py',769),
  ('parameter_list -> parameter COMMA parameter_list','parameter_list',3,'p_parameter_list','lyaParser.py',770),
  ('parameter -> expression','parameter',1,'p_parameter','lyaParser.py',777),
  ('exit_action -> EXIT label','exit_action',2,'p_exit_action','lyaParser.py',785),
  ('return_action -> RETURN','return_action',1,'p_return_action','lyaParser.py',789),
  ('return_action -> RETURN result','return_action',2,'p_return_action','lyaParser.py',790),
  ('result_action -> RESULT result','result_action',2,'p_result_action','lyaParser.py',797),
  ('result -> expression','result',1,'p_result','lyaParser.py',801),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','lyaParser.py',805),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','lyaParser.py',806),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','lyaParser.py',813),
  ('builtin_name -> PRED','builtin_name',1,'p_builtin_name','lyaParser.py',814),
  ('builtin_name -> SUCC','builtin_name',1,'p_builtin_name','lyaParser.py',815),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','lyaParser.py',816),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','lyaParser.py',817),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','lyaParser.py',818),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','lyaParser.py',819),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','lyaParser.py',820),
  ('integer_expression -> expression','integer_expression',1,'p_integer_expression','lyaParser.py',829),
  ('empty -> <empty>','empty',0,'p_empty','lyaParser.py',836),
]
