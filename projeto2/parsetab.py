
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '11A5C133B07EF009AD88F9B6101ADBD5'
    
_lr_action_items = {'LOWER':([0,3,4,5,8,16,19,26,29,30,39,42,46,47,48,50,51,52,53,54,55,60,61,66,72,73,77,83,84,87,102,103,108,114,115,121,134,138,160,169,170,172,173,175,176,177,178,179,180,181,182,183,184,185,186,189,190,191,192,197,198,203,206,208,209,214,215,217,218,219,222,225,229,233,242,245,247,250,282,284,286,292,297,302,304,314,317,319,334,336,339,343,],[1,-9,-8,-3,-5,-7,1,-6,1,1,1,1,1,-84,-117,-116,-115,-112,1,1,-111,-110,-4,1,1,-157,1,-121,-120,1,1,1,1,-74,1,1,-85,-45,-10,1,-158,1,1,1,-98,-104,-100,-96,-95,-105,-103,-97,-99,-101,-102,1,1,-108,-109,-49,1,1,1,1,1,-75,-181,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'EQUALS':([7,11,12,14,15,25,27,32,38,44,48,49,50,51,52,55,56,57,58,59,60,63,64,120,126,139,143,144,147,148,149,150,151,152,153,155,156,158,159,165,166,194,199,205,207,210,212,223,238,243,244,296,299,300,323,324,],[-136,-140,-139,-135,47,-138,-200,-137,-134,-199,-117,-86,-116,-115,-112,-111,-87,134,-143,-88,-110,135,-15,198,-201,-140,-18,-25,-27,-21,-19,219,-22,-24,-35,-20,-23,-36,-26,-173,225,-211,242,-202,-145,-144,-16,-34,-212,-142,-141,-28,-37,-29,-39,-44,]),'PROC':([66,],[142,]),'LENGTH':([0,3,4,5,8,16,19,26,29,30,39,42,46,47,48,50,51,52,53,54,55,60,61,66,72,73,77,83,84,87,102,103,108,114,115,121,134,138,160,169,170,172,173,175,176,177,178,179,180,181,182,183,184,185,186,189,190,191,192,197,198,203,206,208,209,214,215,217,218,219,222,225,229,233,242,245,247,250,282,284,286,292,297,302,304,314,317,319,334,336,339,343,],[2,-9,-8,-3,-5,-7,2,-6,2,2,2,2,2,-84,-117,-116,-115,-112,2,2,-111,-110,-4,2,2,-157,2,-121,-120,2,2,2,2,-74,2,2,-85,-45,-10,2,-158,2,2,2,-98,-104,-100,-96,-95,-105,-103,-97,-99,-101,-102,2,2,-108,-109,-49,2,2,2,2,2,-75,-181,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'CHARS':([64,67,120,135,157,212,258,298,316,],[-15,154,154,154,154,-16,154,154,154,]),'ISEQUAL':([7,14,25,27,32,38,44,58,80,82,86,88,89,90,91,92,93,94,95,96,97,98,99,101,104,105,106,107,109,110,111,112,113,126,174,193,194,205,207,210,232,235,236,237,238,243,244,265,277,278,],[-136,-135,-138,-200,-137,-134,-199,-143,-122,-61,-124,-66,-58,-140,-139,-64,-55,-63,-69,-56,-57,-59,178,-62,-68,-60,-106,-93,-113,-65,-118,-123,-67,-201,-133,-119,-211,-202,-145,-144,-94,-73,-114,-107,-212,-142,-141,-140,-71,-70,]),'DOWN':([7,14,25,27,32,38,44,58,80,82,85,86,88,89,90,91,92,93,94,95,96,97,98,99,101,104,105,106,107,109,110,111,112,113,126,165,166,174,193,194,205,207,210,232,235,236,237,238,243,244,270,271,272,277,278,303,307,326,327,331,],[-136,-135,-138,-200,-137,-134,-199,-143,-122,-61,-92,-124,-66,-58,-140,-139,-64,-55,-63,-69,-56,-57,-59,-91,-62,-68,-60,-106,-93,-113,-65,-118,-123,-67,-201,-173,226,-133,-119,-211,-202,-145,-144,-94,-73,-114,-107,-212,-142,-141,-177,301,-174,-71,-70,328,-125,-221,-175,-126,]),'STRCONC':([7,11,12,14,15,25,27,32,38,44,58,80,82,86,88,89,90,91,92,93,94,95,96,97,98,101,104,105,106,107,109,110,111,112,113,126,139,174,193,194,205,207,210,232,235,236,237,238,243,244,265,277,278,],[-136,-140,-139,-135,52,-138,-200,-137,-134,-199,-143,-122,-61,-124,-66,-58,-140,-139,-64,-55,-63,-69,-56,-57,-59,-62,-68,-60,-106,52,-113,-65,-118,-123,-67,-201,-140,-133,-119,-211,-202,-145,-144,52,-73,-114,-107,-212,-142,-141,-140,-71,-70,]),'LBRACKET':([7,11,12,14,15,25,27,32,38,44,58,79,80,82,88,89,90,91,92,93,94,95,96,97,98,101,104,105,110,112,113,126,139,146,154,174,194,205,207,210,235,238,243,244,265,277,278,],[-136,-140,-139,-135,54,-138,-200,-137,121,-199,-143,173,-72,-61,-66,-58,-140,-139,-64,-55,-63,-69,-56,-57,-59,-62,-68,-60,-65,54,-67,-201,-140,218,221,54,-211,-202,-145,-144,-73,-212,-142,-141,-140,-71,-70,]),'SMC':([6,7,10,12,14,17,21,22,25,27,31,32,37,38,39,40,44,58,62,65,68,69,70,71,76,78,80,81,82,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,104,105,106,107,109,110,111,112,113,116,117,118,119,122,123,126,129,140,141,143,144,147,148,149,150,151,152,153,155,156,158,159,162,163,164,167,168,171,174,193,194,205,207,210,211,213,220,223,224,228,232,235,236,237,238,239,240,241,243,244,246,257,266,270,274,276,277,278,285,287,290,293,296,299,300,305,306,307,315,318,323,324,325,329,330,331,335,338,340,341,342,344,345,348,349,350,],[-78,-136,-81,-79,-135,-77,-82,-147,-138,-200,114,-137,-80,-134,-207,-146,-199,-143,-46,138,160,-11,-164,-163,-159,172,-122,-210,-61,-92,-124,-66,-58,-140,-139,-64,-55,-63,-69,-56,-57,-59,-91,-209,-62,-68,-60,-106,-93,-113,-65,-118,-123,-67,-206,-76,-50,197,-208,-127,-201,-83,214,215,-18,-25,-27,-21,-19,-14,-22,-24,-35,-20,-23,-36,-26,-165,-180,-166,-168,-167,-162,-133,-119,-211,-202,-145,-144,-48,-47,-13,-34,-12,-160,-94,-73,-114,-107,-212,-51,-54,-52,-142,-141,-148,292,-17,-177,-178,-161,-71,-70,-53,-149,314,319,-28,-37,-29,-169,-179,-125,336,-182,-39,-44,-171,-170,-176,-126,-185,-184,-189,-172,-183,-186,-196,-188,-187,-197,]),'MINUS':([7,11,12,14,15,25,27,30,32,38,39,42,44,46,47,48,50,51,52,53,54,55,58,60,72,80,82,86,88,89,90,91,92,93,94,95,96,97,98,101,102,103,104,105,106,107,109,110,111,112,113,115,121,126,134,139,173,174,175,176,177,178,179,180,181,182,183,184,185,186,189,190,191,192,193,194,198,205,206,207,208,209,210,217,218,219,222,225,232,233,235,236,237,238,242,243,244,250,265,277,278,282,284,297,302,304,],[-136,-140,-139,-135,55,-138,-200,84,-137,-134,84,84,-199,84,-84,-117,-116,-115,-112,84,84,-111,-143,-110,84,-122,-61,-124,-66,-58,-140,-139,-64,-55,-63,-69,-56,-57,-59,-62,84,84,-68,-60,-106,55,-113,-65,-118,-123,-67,84,84,-201,-85,-140,84,-133,84,-98,-104,-100,-96,-95,-105,-103,-97,-99,-101,-102,84,84,-108,-109,-119,-211,84,-202,84,-145,84,84,-144,84,84,84,84,84,55,84,-73,-114,-107,-212,84,-142,-141,84,-140,-71,-70,84,84,84,84,84,]),'STRINGCONST':([30,39,42,46,47,48,50,51,52,53,54,55,60,72,83,84,102,103,108,115,121,134,173,175,176,177,178,179,180,181,182,183,184,185,186,189,190,191,192,198,206,208,209,217,218,219,222,225,233,242,250,282,284,297,302,304,],[104,104,104,104,-84,-117,-116,-115,-112,104,104,-111,-110,104,-121,-120,104,104,104,104,104,-85,104,104,-98,-104,-100,-96,-95,-105,-103,-97,-99,-101,-102,104,104,-108,-109,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,]),'ARROW':([7,11,12,14,15,25,27,30,32,38,39,42,44,46,47,48,50,51,52,53,54,55,58,60,72,83,84,90,91,102,103,108,112,115,121,126,134,139,173,174,175,176,177,178,179,180,181,182,183,184,185,186,189,190,191,192,194,198,205,206,207,208,209,210,217,218,219,222,225,233,238,242,243,244,250,265,282,284,297,302,304,],[-136,-140,-139,-135,58,-138,-200,87,-137,-134,87,87,-199,87,-84,-117,-116,-115,-112,87,87,-111,-143,-110,87,-121,-120,-140,-139,87,87,87,58,87,87,-201,-85,-140,87,58,87,-98,-104,-100,-96,-95,-105,-103,-97,-99,-101,-102,87,87,-108,-109,-211,87,-202,87,-145,87,87,-144,87,87,87,87,87,87,-212,87,-142,-141,87,-140,87,87,87,87,87,]),'TRUE':([30,39,42,46,47,48,50,51,52,53,54,55,60,72,83,84,102,103,108,115,121,134,173,175,176,177,178,179,180,181,182,183,184,185,186,189,190,191,192,198,206,208,209,217,218,219,222,225,233,242,250,282,284,297,302,304,],[88,88,88,88,-84,-117,-116,-115,-112,88,88,-111,-110,88,-121,-120,88,88,88,88,88,-85,88,88,-98,-104,-100,-96,-95,-105,-103,-97,-99,-101,-102,88,88,-108,-109,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'FOR':([29,],[74,]),'OR':([7,14,25,27,32,38,44,58,80,82,86,88,89,90,91,92,93,94,95,96,97,98,99,101,104,105,106,107,109,110,111,112,113,126,174,193,194,205,207,210,232,235,236,237,238,243,244,265,277,278,],[-136,-135,-138,-200,-137,-134,-199,-143,-122,-61,-124,-66,-58,-140,-139,-64,-55,-63,-69,-56,-57,-59,184,-62,-68,-60,-106,-93,-113,-65,-118,-123,-67,-201,-133,-119,-211,-202,-145,-144,-94,-73,-114,-107,-212,-142,-141,-140,-71,-70,]),'UPPER':([0,3,4,5,8,16,19,26,29,30,39,42,46,47,48,50,51,52,53,54,55,60,61,66,72,73,77,83,84,87,102,103,108,114,115,121,134,138,160,169,170,172,173,175,176,177,178,179,180,181,182,183,184,185,186,189,190,191,192,197,198,203,206,208,209,214,215,217,218,219,222,225,229,233,242,245,247,250,282,284,286,292,297,302,304,314,317,319,334,336,339,343,],[13,-9,-8,-3,-5,-7,13,-6,13,13,13,13,13,-84,-117,-116,-115,-112,13,13,-111,-110,-4,13,13,-157,13,-121,-120,13,13,13,13,-74,13,13,-85,-45,-10,13,-158,13,13,13,-98,-104,-100,-96,-95,-105,-103,-97,-99,-101,-102,13,13,-108,-109,-49,13,13,13,13,13,-75,-181,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'PRINT':([0,3,4,5,8,16,19,26,29,30,39,42,46,47,48,50,51,52,53,54,55,60,61,66,72,73,77,83,84,87,102,103,108,114,115,121,134,138,160,169,170,172,173,175,176,177,178,179,180,181,182,183,184,185,186,189,190,191,192,197,198,203,206,208,209,214,215,217,218,219,222,225,229,233,242,245,247,250,282,284,286,292,297,302,304,314,317,319,334,336,339,343,],[9,-9,-8,-3,-5,-7,9,-6,9,9,9,9,9,-84,-117,-116,-115,-112,9,9,-111,-110,-4,9,9,-157,9,-121,-120,9,9,9,9,-74,9,9,-85,-45,-10,9,-158,9,9,9,-98,-104,-100,-96,-95,-105,-103,-97,-99,-101,-102,9,9,-108,-109,-49,9,9,9,9,9,-75,-181,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'LOC':([143,144,147,148,149,151,152,153,155,156,158,159,223,294,296,299,300,323,324,337,],[-18,-25,-27,-21,-19,-22,-24,-35,-20,-23,-36,-26,-34,321,-28,-37,-29,-39,-44,347,]),'THEN':([7,14,25,27,32,38,44,58,80,82,85,86,88,89,90,91,92,93,94,95,96,97,98,99,101,104,105,106,107,109,110,111,112,113,123,124,126,174,187,193,194,205,207,210,232,235,236,237,238,243,244,277,278,288,307,311,331,],[-136,-135,-138,-200,-137,-134,-199,-143,-122,-61,-92,-124,-66,-58,-140,-139,-64,-55,-63,-69,-56,-57,-59,-91,-62,-68,-60,-106,-93,-113,-65,-118,-123,-67,-127,203,-201,-133,233,-119,-211,-202,-145,-144,-94,-73,-114,-107,-212,-142,-141,-71,-70,203,-125,233,-126,]),'ID':([0,3,4,5,8,16,19,20,24,26,29,30,35,36,39,42,46,47,48,50,51,52,53,54,55,60,61,64,66,67,72,73,74,77,83,84,87,102,103,108,114,115,120,121,134,135,136,137,138,157,160,161,169,170,172,173,175,176,177,178,179,180,181,182,183,184,185,186,189,190,191,192,196,197,198,203,206,208,209,212,214,215,216,217,218,219,222,225,227,229,233,242,245,247,250,258,273,282,284,286,289,292,297,298,302,304,314,316,317,319,334,336,339,343,],[11,-9,-8,-3,-5,-7,11,64,64,-6,11,90,117,64,90,90,90,-84,-117,-116,-115,-112,90,90,-111,-110,-4,-15,139,151,90,-157,165,11,-121,-120,90,90,90,90,-74,90,151,90,-85,151,212,64,-45,151,-10,64,139,-158,11,90,90,-98,-104,-100,-96,-95,-105,-103,-97,-99,-101,-102,90,90,-108,-109,64,-49,90,11,90,90,90,-16,-75,-181,64,90,265,90,90,90,275,11,90,90,11,11,90,151,275,90,90,11,64,11,265,151,90,90,11,151,11,11,11,11,11,11,]),'IN':([7,14,25,27,32,38,44,58,80,82,86,88,89,90,91,92,93,94,95,96,97,98,99,101,104,105,106,107,109,110,111,112,113,126,165,166,174,193,194,205,207,210,226,232,235,236,237,238,243,244,265,277,278,],[-136,-135,-138,-200,-137,-134,-199,-143,-122,-61,-124,-66,-58,-140,-139,-64,-55,-63,-69,-56,-57,-59,183,-62,-68,-60,-106,-93,-113,-65,-118,-123,-67,-201,-173,227,-133,-119,-211,-202,-145,-144,273,-94,-73,-114,-107,-212,-142,-141,-140,-71,-70,]),'CHAR':([64,67,120,135,157,212,218,227,258,273,297,298,316,],[-15,147,147,147,147,-16,147,147,147,147,147,147,147,]),'DIV':([7,11,12,14,15,25,27,32,38,44,58,80,82,86,88,89,90,91,92,93,94,95,96,97,98,101,104,105,106,109,110,111,112,113,126,139,174,193,194,205,207,210,235,236,237,238,243,244,265,277,278,],[-136,-140,-139,-135,50,-138,-200,-137,-134,-199,-143,-122,-61,-124,-66,-58,-140,-139,-64,-55,-63,-69,-56,-57,-59,-62,-68,-60,50,-113,-65,-118,-123,-67,-201,-140,-133,-119,-211,-202,-145,-144,-73,-114,50,-212,-142,-141,-140,-71,-70,]),'TIMES':([7,11,12,14,15,25,27,32,38,44,58,80,82,86,88,89,90,91,92,93,94,95,96,97,98,101,104,105,106,109,110,111,112,113,126,139,174,193,194,205,207,210,235,236,237,238,243,244,265,277,278,],[-136,-140,-139,-135,51,-138,-200,-137,-134,-199,-143,-122,-61,-124,-66,-58,-140,-139,-64,-55,-63,-69,-56,-57,-59,-62,-68,-60,51,-113,-65,-118,-123,-67,-201,-140,-133,-119,-211,-202,-145,-144,-73,-114,51,-212,-142,-141,-140,-71,-70,]),'INTCONST':([30,39,42,46,47,48,50,51,52,53,54,55,60,72,83,84,102,103,108,115,121,134,173,175,176,177,178,179,180,181,182,183,184,185,186,189,190,191,192,198,206,208,209,217,218,219,221,222,225,233,242,250,282,284,297,302,304,],[92,92,92,92,-84,-117,-116,-115,-112,92,92,-111,-110,92,-121,-120,92,92,92,92,92,-85,92,92,-98,-104,-100,-96,-95,-105,-103,-97,-99,-101,-102,92,92,-108,-109,92,92,92,92,92,92,92,268,92,92,92,92,92,92,92,92,92,92,]),'END':([3,4,5,8,16,26,61,114,138,160,197,214,215,292,314,317,319,334,336,339,343,],[-9,-8,-3,-5,-7,-6,-4,-74,-45,-10,-49,-75,-181,318,335,338,340,342,344,348,349,]),'LE':([7,14,25,27,32,38,44,58,80,82,86,88,89,90,91,92,93,94,95,96,97,98,99,101,104,105,106,107,109,110,111,112,113,126,174,193,194,205,207,210,232,235,236,237,238,243,244,265,277,278,],[-136,-135,-138,-200,-137,-134,-199,-143,-122,-61,-124,-66,-58,-140,-139,-64,-55,-63,-69,-56,-57,-59,181,-62,-68,-60,-106,-93,-113,-65,-118,-123,-67,-201,-133,-119,-211,-202,-145,-144,-94,-73,-114,-107,-212,-142,-141,-140,-71,-70,]),'$end':([0,3,4,5,8,16,18,19,26,28,61,114,138,160,197,214,215,],[-222,-9,-8,-3,-5,-7,-2,-1,-6,0,-4,-74,-45,-10,-49,-75,-181,]),'BY':([7,14,25,27,32,38,44,58,80,82,85,86,88,89,90,91,92,93,94,95,96,97,98,99,101,104,105,106,107,109,110,111,112,113,126,174,193,194,205,207,210,232,235,236,237,238,243,244,270,271,272,277,278,307,331,],[-136,-135,-138,-200,-137,-134,-199,-143,-122,-61,-92,-124,-66,-58,-140,-139,-64,-55,-63,-69,-56,-57,-59,-91,-62,-68,-60,-106,-93,-113,-65,-118,-123,-67,-201,-133,-119,-211,-202,-145,-144,-94,-73,-114,-107,-212,-142,-141,-177,302,-174,-71,-70,-125,-126,]),'TYPE':([0,3,4,5,8,16,19,26,61,114,138,160,197,214,215,292,314,317,319,334,336,339,343,],[20,-9,-8,-3,-5,-7,20,-6,-4,-74,-45,-10,-49,-75,-181,20,20,20,20,20,20,20,20,]),'BOOL':([64,67,120,135,157,212,218,227,258,273,297,298,316,],[-15,159,159,159,159,-16,159,159,159,159,159,159,159,]),'COMMA':([7,14,25,27,32,38,44,58,62,63,64,65,67,68,69,80,82,85,86,88,89,90,91,92,93,94,95,96,97,98,99,101,104,105,106,107,109,110,111,112,113,118,119,120,125,126,128,131,133,143,144,147,148,149,150,151,152,153,155,156,158,159,174,193,194,205,207,210,211,212,213,220,223,224,231,232,235,236,237,238,239,240,241,243,244,252,253,254,255,258,261,262,263,264,266,277,278,285,294,295,296,299,300,307,320,321,322,323,324,331,],[-136,-135,-138,-200,-137,-134,-199,-143,-46,136,-15,137,136,161,-11,-122,-61,-92,-124,-66,-58,-140,-139,-64,-55,-63,-69,-56,-57,-59,-91,-62,-68,-60,-106,-93,-113,-65,-118,-123,-67,-50,196,136,-205,-201,206,-89,209,-18,-25,-27,-21,-19,-14,-22,-24,-35,-20,-23,-36,-26,-133,-119,-211,-202,-145,-144,-48,-16,-47,-13,-34,-12,209,-94,-73,-114,-107,-212,-51,-54,-52,-142,-141,-33,-31,-90,289,136,-43,-40,297,-42,-17,-71,-70,-53,-193,-192,-28,-37,-29,-125,-194,-195,-41,-39,-44,-126,]),'OD':([29,73,77,114,170,172,214,229,],[76,-157,171,-74,-158,228,-75,276,]),'CHARCONST':([30,39,42,46,47,48,50,51,52,53,54,55,60,72,83,84,102,103,108,115,121,134,173,175,176,177,178,179,180,181,182,183,184,185,186,189,190,191,192,198,206,208,209,217,218,219,222,225,233,242,250,282,284,297,302,304,],[113,113,113,113,-84,-117,-116,-115,-112,113,113,-111,-110,113,-121,-120,113,113,113,113,113,-85,113,113,-98,-104,-100,-96,-95,-105,-103,-97,-99,-101,-102,113,113,-108,-109,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,]),'DCL':([0,3,4,5,8,16,19,26,61,114,138,160,197,214,215,292,314,317,319,334,336,339,343,],[24,-9,-8,-3,-5,-7,24,-6,-4,-74,-45,-10,-49,-75,-181,24,24,24,24,24,24,24,24,]),'ELSIF':([7,14,25,27,32,38,44,58,73,80,82,85,86,88,89,90,91,92,93,94,95,96,97,98,99,101,104,105,106,107,109,110,111,112,113,114,126,170,174,193,194,203,204,205,207,210,214,232,234,235,236,237,238,243,244,245,277,278,279,281,283,307,310,312,331,332,],[-136,-135,-138,-200,-137,-134,-199,-143,-157,-122,-61,-92,-124,-66,-58,-140,-139,-64,-55,-63,-69,-56,-57,-59,-91,-62,-68,-60,-106,-93,-113,-65,-118,-123,-67,-74,-201,-158,-133,-119,-211,-150,250,-202,-145,-144,-75,-94,284,-73,-114,-107,-212,-142,-141,-151,-71,-70,-128,-130,284,-125,-131,250,-126,-132,]),'IF':([0,3,4,5,8,16,19,26,29,30,39,42,46,47,53,54,61,66,72,73,77,102,103,114,115,121,134,138,160,169,170,172,173,197,198,203,206,208,209,214,215,217,218,219,222,225,229,233,242,245,247,250,282,284,286,292,297,302,304,314,317,319,334,336,339,343,],[42,-9,-8,-3,-5,-7,42,-6,42,102,102,102,102,-84,102,102,-4,42,102,-157,42,102,102,-74,102,102,-85,-45,-10,42,-158,42,102,-49,102,42,102,102,102,-75,-181,102,102,102,102,102,42,102,102,42,42,102,102,102,42,42,102,102,102,42,42,42,42,42,42,42,]),'LPAREN':([1,2,9,11,13,30,33,34,39,41,42,43,45,46,47,48,50,51,52,53,54,55,60,72,83,84,90,102,103,108,115,121,134,139,142,144,145,147,151,156,159,173,175,176,177,178,179,180,181,182,183,184,185,186,189,190,191,192,198,206,208,209,217,218,219,222,225,233,242,250,265,275,282,284,291,297,302,304,],[-217,-218,-220,46,-216,103,-214,115,103,-215,103,-219,-213,103,-84,-117,-116,-115,-112,103,103,-111,-110,103,-121,-120,46,103,103,103,103,103,-85,46,216,-25,217,-27,-30,222,-26,103,103,-98,-104,-100,-96,-95,-105,-103,-97,-99,-101,-102,103,103,-108,-109,103,103,103,103,103,103,103,103,103,103,103,103,46,-30,103,103,316,103,103,103,]),'PLUS':([7,11,12,14,15,25,27,32,38,44,58,80,82,86,88,89,90,91,92,93,94,95,96,97,98,101,104,105,106,107,109,110,111,112,113,126,139,174,193,194,205,207,210,232,235,236,237,238,243,244,265,277,278,],[-136,-140,-139,-135,60,-138,-200,-137,-134,-199,-143,-122,-61,-124,-66,-58,-140,-139,-64,-55,-63,-69,-56,-57,-59,-62,-68,-60,-106,60,-113,-65,-118,-123,-67,-201,-140,-133,-119,-211,-202,-145,-144,60,-73,-114,-107,-212,-142,-141,-140,-71,-70,]),'ARRAY':([64,67,120,135,157,212,258,298,316,],[-15,146,146,146,146,-16,146,146,146,]),'DO':([0,3,4,5,8,16,19,26,29,61,66,73,77,114,138,160,169,170,172,197,203,214,215,229,245,247,286,292,314,317,319,334,336,339,343,],[29,-9,-8,-3,-5,-7,29,-6,29,-4,29,-157,29,-74,-45,-10,29,-158,29,-49,29,-75,-181,29,29,29,29,29,29,29,29,29,29,29,29,]),'GE':([7,14,25,27,32,38,44,58,80,82,86,88,89,90,91,92,93,94,95,96,97,98,99,101,104,105,106,107,109,110,111,112,113,126,174,193,194,205,207,210,232,235,236,237,238,243,244,265,277,278,],[-136,-135,-138,-200,-137,-134,-199,-143,-122,-61,-124,-66,-58,-140,-139,-64,-55,-63,-69,-56,-57,-59,182,-62,-68,-60,-106,-93,-113,-65,-118,-123,-67,-201,-133,-119,-211,-202,-145,-144,-94,-73,-114,-107,-212,-142,-141,-140,-71,-70,]),'RESULT':([0,3,4,5,8,16,19,26,29,61,66,73,77,114,138,160,169,170,172,197,203,214,215,229,245,247,286,292,314,317,319,334,336,339,343,],[30,-9,-8,-3,-5,-7,30,-6,30,-4,30,-157,30,-74,-45,-10,30,-158,30,-49,30,-75,-181,30,30,30,30,30,30,30,30,30,30,30,30,]),'GT':([7,14,25,27,32,38,44,58,80,82,86,88,89,90,91,92,93,94,95,96,97,98,99,101,104,105,106,107,109,110,111,112,113,126,174,193,194,205,207,210,232,235,236,237,238,243,244,265,277,278,],[-136,-135,-138,-200,-137,-134,-199,-143,-122,-61,-124,-66,-58,-140,-139,-64,-55,-63,-69,-56,-57,-59,186,-62,-68,-60,-106,-93,-113,-65,-118,-123,-67,-201,-133,-119,-211,-202,-145,-144,-94,-73,-114,-107,-212,-142,-141,-140,-71,-70,]),'FI':([7,14,25,27,32,38,44,58,73,80,82,85,86,88,89,90,91,92,93,94,95,96,97,98,99,101,104,105,106,107,109,110,111,112,113,114,126,170,174,193,194,203,204,205,207,210,214,232,235,236,237,238,243,244,245,247,248,249,277,278,280,286,307,308,309,312,331,333,],[-136,-135,-138,-200,-137,-134,-199,-143,-157,-122,-61,-92,-124,-66,-58,-140,-139,-64,-55,-63,-69,-56,-57,-59,-91,-62,-68,-60,-106,-93,-113,-65,-118,-123,-67,-74,-201,-158,-133,-119,-211,-150,246,-202,-145,-144,-75,-94,-73,-114,-107,-212,-142,-141,-151,-152,-154,287,-71,-70,307,-153,-125,-129,331,-155,-126,-156,]),'PRED':([0,3,4,5,8,16,19,26,29,30,39,42,46,47,48,50,51,52,53,54,55,60,61,66,72,73,77,83,84,87,102,103,108,114,115,121,134,138,160,169,170,172,173,175,176,177,178,179,180,181,182,183,184,185,186,189,190,191,192,197,198,203,206,208,209,214,215,217,218,219,222,225,229,233,242,245,247,250,282,284,286,292,297,302,304,314,317,319,334,336,339,343,],[33,-9,-8,-3,-5,-7,33,-6,33,33,33,33,33,-84,-117,-116,-115,-112,33,33,-111,-110,-4,33,33,-157,33,-121,-120,33,33,33,33,-74,33,33,-85,-45,-10,33,-158,33,33,33,-98,-104,-100,-96,-95,-105,-103,-97,-99,-101,-102,33,33,-108,-109,-49,33,33,33,33,33,-75,-181,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'INT':([64,67,120,135,157,212,218,227,258,273,297,298,316,],[-15,144,144,144,144,-16,144,144,144,144,144,144,144,]),'MOD':([7,11,12,14,15,25,27,32,38,44,58,80,82,86,88,89,90,91,92,93,94,95,96,97,98,101,104,105,106,109,110,111,112,113,126,139,174,193,194,205,207,210,235,236,237,238,243,244,265,277,278,],[-136,-140,-139,-135,48,-138,-200,-137,-134,-199,-143,-122,-61,-124,-66,-58,-140,-139,-64,-55,-63,-69,-56,-57,-59,-62,-68,-60,48,-113,-65,-118,-123,-67,-201,-140,-133,-119,-211,-202,-145,-144,-73,-114,48,-212,-142,-141,-140,-71,-70,]),'EXIT':([0,3,4,5,8,16,19,26,29,61,66,73,77,114,138,160,169,170,172,197,203,214,215,229,245,247,286,292,314,317,319,334,336,339,343,],[35,-9,-8,-3,-5,-7,35,-6,35,-4,35,-157,35,-74,-45,-10,35,-158,35,-49,35,-75,-181,35,35,35,35,35,35,35,35,35,35,35,35,]),'SYN':([0,3,4,5,8,16,19,26,61,114,138,160,197,214,215,292,314,317,319,334,336,339,343,],[36,-9,-8,-3,-5,-7,36,-6,-4,-74,-45,-10,-49,-75,-181,36,36,36,36,36,36,36,36,]),'RPAREN':([7,14,25,27,32,38,44,46,58,80,82,85,86,88,89,90,91,92,93,94,95,96,97,98,99,101,104,105,106,107,109,110,111,112,113,115,125,126,127,128,143,144,147,148,149,151,152,153,155,156,158,159,174,188,193,194,195,205,207,210,216,223,232,235,236,237,238,243,244,251,252,253,255,256,259,269,277,278,294,295,296,299,300,307,313,320,321,323,324,331,337,346,347,],[-136,-135,-138,-200,-137,-134,-199,126,-143,-122,-61,-92,-124,-66,-58,-140,-139,-64,-55,-63,-69,-56,-57,-59,-91,-62,-68,-60,-106,-93,-113,-65,-118,-123,-67,194,-205,-201,205,-203,-18,-25,-27,-21,-19,-22,-24,-35,-20,-23,-36,-26,-133,235,-119,-211,238,-202,-145,-144,257,-34,-94,-73,-114,-107,-212,-142,-141,-204,-33,-31,-190,290,296,300,-71,-70,-193,-192,-28,-37,-29,-125,-191,-194,-195,-39,-44,-126,345,350,-198,]),'RETURN':([0,3,4,5,8,16,19,26,29,61,66,73,77,114,138,160,169,170,172,197,203,214,215,229,245,247,286,292,314,317,319,334,336,339,343,],[39,-9,-8,-3,-5,-7,39,-6,39,-4,39,-157,39,-74,-45,-10,39,-158,39,-49,39,-75,-181,39,39,39,39,39,39,39,39,39,39,39,39,]),'FALSE':([30,39,42,46,47,48,50,51,52,53,54,55,60,72,83,84,102,103,108,115,121,134,173,175,176,177,178,179,180,181,182,183,184,185,186,189,190,191,192,198,206,208,209,217,218,219,222,225,233,242,250,282,284,297,302,304,],[110,110,110,110,-84,-117,-116,-115,-112,110,110,-111,-110,110,-121,-120,110,110,110,110,110,-85,110,110,-98,-104,-100,-96,-95,-105,-103,-97,-99,-101,-102,110,110,-108,-109,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,]),'RBRACKET':([7,14,25,27,32,38,44,58,80,82,85,86,88,89,90,91,92,93,94,95,96,97,98,99,101,104,105,106,107,109,110,111,112,113,126,130,131,133,144,147,152,156,159,174,193,194,200,201,202,205,207,210,230,231,232,235,236,237,238,243,244,252,253,254,261,262,263,264,267,268,277,278,296,300,307,322,331,],[-136,-135,-138,-200,-137,-134,-199,-143,-122,-61,-92,-124,-66,-58,-140,-139,-64,-55,-63,-69,-56,-57,-59,-91,-62,-68,-60,-106,-93,-113,-65,-118,-123,-67,-201,207,-89,210,-25,-27,-24,-23,-26,-133,-119,-211,243,-221,244,-202,-145,-144,277,278,-94,-73,-114,-107,-212,-142,-141,-33,-31,-90,-43,-40,298,-42,299,-38,-71,-70,-28,-29,-125,-41,-126,]),'WHILE':([7,14,25,27,29,32,38,44,58,71,80,82,85,86,88,89,90,91,92,93,94,95,96,97,98,99,101,104,105,106,107,109,110,111,112,113,126,144,147,152,156,159,164,167,168,174,193,194,205,207,210,232,235,236,237,238,243,244,270,274,277,278,296,300,305,306,307,325,329,330,331,341,],[-136,-135,-138,-200,72,-137,-134,-199,-143,72,-122,-61,-92,-124,-66,-58,-140,-139,-64,-55,-63,-69,-56,-57,-59,-91,-62,-68,-60,-106,-93,-113,-65,-118,-123,-67,-201,-25,-27,-24,-23,-26,-166,-168,-167,-133,-119,-211,-202,-145,-144,-94,-73,-114,-107,-212,-142,-141,-177,-178,-71,-70,-28,-29,-169,-179,-125,-171,-170,-176,-126,-172,]),'REF':([64,67,120,135,157,212,258,298,316,],[-15,157,157,157,157,-16,157,157,157,]),'RETURNS':([257,290,],[291,291,]),'NOT':([30,39,42,46,47,48,50,51,52,53,54,55,60,72,102,103,115,121,134,173,175,176,177,178,179,180,181,182,183,184,185,186,189,190,191,192,198,206,208,209,217,218,219,222,225,233,242,250,282,284,297,302,304,],[83,83,83,83,-84,-117,-116,-115,-112,83,83,-111,-110,83,83,83,83,83,-85,83,83,-98,-104,-100,-96,-95,-105,-103,-97,-99,-101,-102,83,83,-108,-109,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'NULL':([30,39,42,46,47,48,50,51,52,53,54,55,60,72,83,84,102,103,108,115,121,134,173,175,176,177,178,179,180,181,182,183,184,185,186,189,190,191,192,198,206,208,209,217,218,219,222,225,233,242,250,282,284,297,302,304,],[95,95,95,95,-84,-117,-116,-115,-112,95,95,-111,-110,95,-121,-120,95,95,95,95,95,-85,95,95,-98,-104,-100,-96,-95,-105,-103,-97,-99,-101,-102,95,95,-108,-109,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'TO':([7,14,25,27,32,38,44,58,80,82,85,86,88,89,90,91,92,93,94,95,96,97,98,99,101,104,105,106,107,109,110,111,112,113,126,174,193,194,205,207,210,232,235,236,237,238,243,244,270,271,272,277,278,301,303,307,326,327,328,331,],[-136,-135,-138,-200,-137,-134,-199,-143,-122,-61,-92,-124,-66,-58,-140,-139,-64,-55,-63,-69,-56,-57,-59,-91,-62,-68,-60,-106,-93,-113,-65,-118,-123,-67,-201,-133,-119,-211,-202,-145,-144,-94,-73,-114,-107,-212,-142,-141,-177,304,-174,-71,-70,304,304,-125,-221,-175,304,-126,]),'AND':([7,14,25,27,32,38,44,58,80,82,86,88,89,90,91,92,93,94,95,96,97,98,99,101,104,105,106,107,109,110,111,112,113,126,174,193,194,205,207,210,232,235,236,237,238,243,244,265,277,278,],[-136,-135,-138,-200,-137,-134,-199,-143,-122,-61,-124,-66,-58,-140,-139,-64,-55,-63,-69,-56,-57,-59,176,-62,-68,-60,-106,-93,-113,-65,-118,-123,-67,-201,-133,-119,-211,-202,-145,-144,-94,-73,-114,-107,-212,-142,-141,-140,-71,-70,]),'SUCC':([0,3,4,5,8,16,19,26,29,30,39,42,46,47,48,50,51,52,53,54,55,60,61,66,72,73,77,83,84,87,102,103,108,114,115,121,134,138,160,169,170,172,173,175,176,177,178,179,180,181,182,183,184,185,186,189,190,191,192,197,198,203,206,208,209,214,215,217,218,219,222,225,229,233,242,245,247,250,282,284,286,292,297,302,304,314,317,319,334,336,339,343,],[41,-9,-8,-3,-5,-7,41,-6,41,41,41,41,41,-84,-117,-116,-115,-112,41,41,-111,-110,-4,41,41,-157,41,-121,-120,41,41,41,41,-74,41,41,-85,-45,-10,41,-158,41,41,41,-98,-104,-100,-96,-95,-105,-103,-97,-99,-101,-102,41,41,-108,-109,-49,41,41,41,41,41,-75,-181,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'ELSE':([7,14,25,27,32,38,44,58,73,80,82,85,86,88,89,90,91,92,93,94,95,96,97,98,99,101,104,105,106,107,109,110,111,112,113,114,126,170,174,193,194,203,204,205,207,210,214,232,234,235,236,237,238,243,244,245,277,278,279,281,283,307,310,312,331,332,],[-136,-135,-138,-200,-137,-134,-199,-143,-157,-122,-61,-92,-124,-66,-58,-140,-139,-64,-55,-63,-69,-56,-57,-59,-91,-62,-68,-60,-106,-93,-113,-65,-118,-123,-67,-74,-201,-158,-133,-119,-211,-150,247,-202,-145,-144,-75,-94,282,-73,-114,-107,-212,-142,-141,-151,-71,-70,-128,-130,282,-125,-131,247,-126,-132,]),'COLON':([7,11,14,23,25,27,32,38,44,58,75,80,82,85,86,88,89,90,91,92,93,94,95,96,97,98,99,101,104,105,106,107,109,110,111,112,113,126,131,132,174,193,194,201,205,207,210,232,235,236,237,238,243,244,260,265,277,278,307,331,],[-136,-76,-135,66,-138,-200,-137,-134,-199,-143,169,-122,-61,-92,-124,-66,-58,-140,-139,-64,-55,-63,-69,-56,-57,-59,-91,-62,-68,-60,-106,-93,-113,-65,-118,-123,-67,-201,-32,208,-133,-119,-211,-32,-202,-145,-144,-94,-73,-114,-107,-212,-142,-141,-32,-140,-71,-70,-125,-126,]),'READ':([0,3,4,5,8,16,19,26,29,30,39,42,46,47,48,50,51,52,53,54,55,60,61,66,72,73,77,83,84,87,102,103,108,114,115,121,134,138,160,169,170,172,173,175,176,177,178,179,180,181,182,183,184,185,186,189,190,191,192,197,198,203,206,208,209,214,215,217,218,219,222,225,229,233,242,245,247,250,282,284,286,292,297,302,304,314,317,319,334,336,339,343,],[43,-9,-8,-3,-5,-7,43,-6,43,43,43,43,43,-84,-117,-116,-115,-112,43,43,-111,-110,-4,43,43,-157,43,-121,-120,43,43,43,43,-74,43,43,-85,-45,-10,43,-158,43,43,43,-98,-104,-100,-96,-95,-105,-103,-97,-99,-101,-102,43,43,-108,-109,-49,43,43,43,43,43,-75,-181,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'LT':([7,14,25,27,32,38,44,58,80,82,86,88,89,90,91,92,93,94,95,96,97,98,99,101,104,105,106,107,109,110,111,112,113,126,174,193,194,205,207,210,232,235,236,237,238,243,244,265,277,278,],[-136,-135,-138,-200,-137,-134,-199,-143,-122,-61,-124,-66,-58,-140,-139,-64,-55,-63,-69,-56,-57,-59,177,-62,-68,-60,-106,-93,-113,-65,-118,-123,-67,-201,-133,-119,-211,-202,-145,-144,-94,-73,-114,-107,-212,-142,-141,-140,-71,-70,]),'NOTEQUAL':([7,14,25,27,32,38,44,58,80,82,86,88,89,90,91,92,93,94,95,96,97,98,99,101,104,105,106,107,109,110,111,112,113,126,174,193,194,205,207,210,232,235,236,237,238,243,244,265,277,278,],[-136,-135,-138,-200,-137,-134,-199,-143,-122,-61,-124,-66,-58,-140,-139,-64,-55,-63,-69,-56,-57,-59,185,-62,-68,-60,-106,-93,-113,-65,-118,-123,-67,-201,-133,-119,-211,-202,-145,-144,-94,-73,-114,-107,-212,-142,-141,-140,-71,-70,]),'NUM':([0,3,4,5,8,16,19,26,29,30,39,42,46,47,48,50,51,52,53,54,55,60,61,66,72,73,77,83,84,87,102,103,108,114,115,121,134,138,160,169,170,172,173,175,176,177,178,179,180,181,182,183,184,185,186,189,190,191,192,197,198,203,206,208,209,214,215,217,218,219,222,225,229,233,242,245,247,250,282,284,286,292,297,302,304,314,317,319,334,336,339,343,],[45,-9,-8,-3,-5,-7,45,-6,45,45,45,45,45,-84,-117,-116,-115,-112,45,45,-111,-110,-4,45,45,-157,45,-121,-120,45,45,45,45,-74,45,45,-85,-45,-10,45,-158,45,45,45,-98,-104,-100,-96,-95,-105,-103,-97,-99,-101,-102,45,45,-108,-109,-49,45,45,45,45,45,-75,-181,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'primitive_value':([30,39,42,46,53,54,72,102,103,108,115,121,173,175,189,190,198,206,208,209,217,218,219,222,225,233,242,250,282,284,297,302,304,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'parameter_attribute':([294,],[320,]),'step_value':([271,],[303,]),'operator2':([107,232,],[190,190,]),'procedure_statement':([0,19,292,314,317,319,334,336,339,343,],[3,3,3,3,3,3,3,3,3,3,]),'parameter_spec':([258,],[295,]),'assigning_operator':([15,],[53,]),'index_mode':([218,297,],[262,322,]),'referenced_location':([30,39,42,46,53,54,72,102,103,108,115,121,173,175,189,190,198,206,208,209,217,218,219,222,225,233,242,250,282,284,297,302,304,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'discrete_expression':([225,304,],[272,330,]),'integer_expression':([121,302,],[202,327,]),'statement':([0,19,292,314,317,319,334,336,339,343,],[5,61,5,5,61,5,61,5,61,61,]),'index_mode_list':([218,],[263,]),'mode_definition':([20,137,],[62,213,]),'mode':([67,120,135,157,258,298,316,],[150,199,211,223,294,324,337,]),'arithmetic_multiplicative_operator':([15,106,237,],[56,189,189,]),'formal_parameter':([216,289,],[255,255,]),'literal':([30,39,42,46,53,54,72,102,103,108,115,121,173,175,189,190,198,206,208,209,217,218,219,222,225,233,242,250,282,284,297,302,304,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'string_length':([221,],[267,]),'result_attribute':([337,],[346,]),'assignment_action':([0,19,29,66,77,169,172,203,229,245,247,286,292,314,317,319,334,336,339,343,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'elseif_expression_list':([234,],[283,]),'value_array_element':([30,39,42,46,53,54,72,102,103,108,115,121,173,175,189,190,198,206,208,209,217,218,219,222,225,233,242,250,282,284,297,302,304,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'label':([0,19,29,35,77,172,203,229,245,247,286,292,314,317,319,334,336,339,343,],[23,23,75,116,75,75,75,75,75,75,75,23,23,23,23,23,23,23,23,]),'syn_list':([36,],[119,]),'boolean_expression':([42,72,102,250,284,],[124,163,187,288,311,]),'integer_literal':([30,39,42,46,53,54,72,102,103,108,115,121,173,175,189,190,198,206,208,209,217,218,219,222,225,233,242,250,282,284,297,302,304,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'operand0':([30,39,42,46,53,54,72,102,103,115,121,173,198,206,208,209,217,218,219,222,225,233,242,250,282,284,297,302,304,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'else_clause':([204,312,],[249,333,]),'parameter_list':([46,115,206,],[127,195,251,]),'array_slice':([0,19,29,30,39,42,46,53,54,66,72,77,87,102,103,108,115,121,169,172,173,175,189,190,198,203,206,208,209,217,218,219,222,225,229,233,242,245,247,250,282,284,286,292,297,302,304,314,317,319,334,336,339,343,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'mode_name':([67,120,135,157,258,298,316,],[143,143,143,143,143,143,143,]),'program':([0,],[28,]),'parenthesized_expression':([30,39,42,46,53,54,72,102,103,108,115,121,173,175,189,190,198,206,208,209,217,218,219,222,225,233,242,250,282,284,297,302,304,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'closed_dyadic_operator':([15,],[57,]),'elseif_expression':([234,283,],[281,310,]),'procedure_call':([0,19,29,30,39,42,46,53,54,66,72,77,87,102,103,108,115,121,169,172,173,175,189,190,198,203,206,208,209,217,218,219,222,225,229,233,242,245,247,250,282,284,286,292,297,302,304,314,317,319,334,336,339,343,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'boolean_literal':([30,39,42,46,53,54,72,102,103,108,115,121,173,175,189,190,198,206,208,209,217,218,219,222,225,233,242,250,282,284,297,302,304,],[105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'declaration':([24,161,],[69,224,]),'element_node':([298,],[323,]),'formal_parameter_list':([216,289,],[256,313,]),'discrete_mode':([67,120,135,157,218,227,258,273,297,298,316,],[149,149,149,149,264,274,149,306,264,149,149,]),'constant_expression':([198,242,],[241,285,]),'action_statement_list':([29,172,203,247,],[77,229,245,286,]),'string_mode':([67,120,135,157,258,298,316,],[153,153,153,153,153,153,153,]),'parameter':([46,115,206,],[128,128,128,]),'reference_mode':([67,120,135,157,258,298,316,],[155,155,155,155,155,155,155,]),'control_part':([29,],[78,]),'exit_action':([0,19,29,66,77,169,172,203,229,245,247,286,292,314,317,319,334,336,339,343,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'expression':([30,39,42,46,53,54,72,102,103,115,121,173,198,206,208,209,217,218,219,222,225,233,242,250,282,284,297,302,304,],[81,81,123,125,129,131,123,123,188,125,201,131,240,125,252,254,260,260,266,260,270,279,240,123,308,123,260,326,270,]),'while_control':([29,71,],[70,162,]),'initialization':([150,],[220,]),'id_list':([20,24,36,137,161,196,216,289,],[63,67,120,63,67,120,258,258,]),'array_primitive_value':([30,39,42,46,53,54,72,102,103,108,115,121,173,175,189,190,198,206,208,209,217,218,219,222,225,233,242,250,282,284,297,302,304,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'basic_mode':([67,120,135,157,218,227,258,273,297,298,316,],[156,156,156,156,156,156,156,156,156,156,156,]),'expression_list':([54,173,],[133,231,]),'syn_definition':([36,196,],[118,239,]),'action_statement':([0,19,29,77,172,203,229,245,247,286,292,314,317,319,334,336,339,343,],[4,4,73,170,73,73,170,170,73,170,4,4,4,4,4,4,4,4,]),'literal_range':([54,121,173,217,218,222,297,],[130,200,230,259,261,269,261,]),'arithmetic_additive_operator':([15,107,232,],[49,191,191,]),'declaration_list':([24,],[68,]),'for_control':([29,],[71,]),'char_literal':([30,39,42,46,53,54,72,102,103,108,115,121,173,175,189,190,198,206,208,209,217,218,219,222,225,233,242,250,282,284,297,302,304,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'conditional_expression':([30,39,42,46,53,54,72,102,103,115,121,173,198,206,208,209,217,218,219,222,225,233,242,250,282,284,297,302,304,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'start_value':([225,],[271,]),'string_concatenation_operator':([15,107,232,],[59,192,192,]),'bracketed_action':([0,19,29,66,77,169,172,203,229,245,247,286,292,314,317,319,334,336,339,343,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'dereferenced_reference':([0,19,29,30,39,42,46,53,54,66,72,77,87,102,103,108,115,121,169,172,173,175,189,190,198,203,206,208,209,217,218,219,222,225,229,233,242,245,247,250,282,284,286,292,297,302,304,314,317,319,334,336,339,343,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'statement_list':([0,292,314,319,336,],[19,317,334,339,343,]),'operator1':([99,],[175,]),'return_action':([0,19,29,66,77,169,172,203,229,245,247,286,292,314,317,319,334,336,339,343,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'newmode_statement':([0,19,292,314,317,319,334,336,339,343,],[26,26,26,26,26,26,26,26,26,26,]),'else_expression':([234,283,],[280,309,]),'composite_mode':([67,120,135,157,258,298,316,],[148,148,148,148,148,148,148,]),'end_value':([271,301,303,328,],[305,325,329,341,]),'call_action':([0,19,29,30,39,42,46,53,54,66,72,77,87,102,103,108,115,121,169,172,173,175,189,190,198,203,206,208,209,217,218,219,222,225,229,233,242,245,247,250,282,284,286,292,297,302,304,314,317,319,334,336,339,343,],[12,12,12,91,91,91,91,91,91,12,91,12,91,91,91,91,91,91,12,12,91,91,91,91,91,12,91,91,91,91,91,91,91,91,12,91,91,12,12,91,91,91,12,12,91,91,91,12,12,12,12,12,12,12,]),'elseif_clause':([204,312,],[248,248,]),'lower_bound':([54,121,173,217,218,222,297,],[132,132,132,132,132,132,132,]),'string_reference':([0,19,29,30,39,42,46,53,54,66,72,77,87,102,103,108,115,121,169,172,173,175,189,190,198,203,206,208,209,217,218,219,222,225,229,233,242,245,247,250,282,284,286,292,297,302,304,314,317,319,334,336,339,343,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'if_action':([0,19,29,66,77,169,172,203,229,245,247,286,292,314,317,319,334,336,339,343,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'synonym_statement':([0,19,292,314,317,319,334,336,339,343,],[16,16,16,16,16,16,16,16,16,16,]),'string_literal':([30,39,42,46,53,54,72,102,103,108,115,121,173,175,189,190,198,206,208,209,217,218,219,222,225,233,242,250,282,284,297,302,304,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'step_enumeration':([74,],[168,]),'declaration_statement':([0,19,292,314,317,319,334,336,339,343,],[8,8,8,8,8,8,8,8,8,8,]),'membership_operator':([99,],[179,]),'result_action':([0,19,29,66,77,169,172,203,229,245,247,286,292,314,317,319,334,336,339,343,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'value_array_slice':([30,39,42,46,53,54,72,102,103,108,115,121,173,175,189,190,198,206,208,209,217,218,219,222,225,233,242,250,282,284,297,302,304,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'empty':([0,],[18,]),'loop_counter':([74,],[166,]),'result':([30,39,],[100,122,]),'procedure_definition':([66,],[141,]),'then_expression':([187,311,],[234,332,]),'range_enumeration':([74,],[167,]),'builtin_call':([0,19,29,30,39,42,46,53,54,66,72,77,87,102,103,108,115,121,169,172,173,175,189,190,198,203,206,208,209,217,218,219,222,225,229,233,242,245,247,250,282,284,286,292,297,302,304,314,317,319,334,336,339,343,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'relational_operator':([99,],[180,]),'result_spec':([257,290,],[293,315,]),'empty_literal':([30,39,42,46,53,54,72,102,103,108,115,121,173,175,189,190,198,206,208,209,217,218,219,222,225,233,242,250,282,284,297,302,304,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'iteration':([74,],[164,]),'array_element':([0,19,29,30,39,42,46,53,54,66,72,77,87,102,103,108,115,121,169,172,173,175,189,190,198,203,206,208,209,217,218,219,222,225,229,233,242,245,247,250,282,284,286,292,297,302,304,314,317,319,334,336,339,343,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'operand2':([30,39,42,46,53,54,72,102,103,115,121,173,175,190,198,206,208,209,217,218,219,222,225,233,242,250,282,284,297,302,304,],[106,106,106,106,106,106,106,106,106,106,106,106,106,237,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,]),'operand1':([30,39,42,46,53,54,72,102,103,115,121,173,175,198,206,208,209,217,218,219,222,225,233,242,250,282,284,297,302,304,],[107,107,107,107,107,107,107,107,107,107,107,107,232,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,]),'monadic_operator':([30,39,42,46,53,54,72,102,103,115,121,173,175,189,190,198,206,208,209,217,218,219,222,225,233,242,250,282,284,297,302,304,],[108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,]),'builtin_name':([0,19,29,30,39,42,46,53,54,66,72,77,87,102,103,108,115,121,169,172,173,175,189,190,198,203,206,208,209,217,218,219,222,225,229,233,242,245,247,250,282,284,286,292,297,302,304,314,317,319,334,336,339,343,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'do_action':([0,19,29,66,77,169,172,203,229,245,247,286,292,314,317,319,334,336,339,343,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'upper_bound':([208,],[253,]),'discrete_range_mode':([67,120,135,157,218,227,258,273,297,298,316,],[152,152,152,152,152,152,152,152,152,152,152,]),'operand3':([30,39,42,46,53,54,72,102,103,115,121,173,175,189,190,198,206,208,209,217,218,219,222,225,233,242,250,282,284,297,302,304,],[109,109,109,109,109,109,109,109,109,109,109,109,109,236,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,]),'newmode_list':([20,],[65,]),'operand4':([30,39,42,46,53,54,72,102,103,108,115,121,173,175,189,190,198,206,208,209,217,218,219,222,225,233,242,250,282,284,297,302,304,],[111,111,111,111,111,111,111,111,111,193,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,]),'action':([0,19,29,66,77,169,172,203,229,245,247,286,292,314,317,319,334,336,339,343,],[31,31,31,140,31,140,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'location':([0,19,29,30,39,42,46,53,54,66,72,77,87,102,103,108,115,121,169,172,173,175,189,190,198,203,206,208,209,217,218,219,222,225,229,233,242,245,247,250,282,284,286,292,297,302,304,314,317,319,334,336,339,343,],[15,15,15,112,112,112,112,112,112,15,112,15,174,112,112,112,112,112,15,15,112,112,112,112,112,15,112,112,112,112,112,112,112,112,15,112,112,15,15,112,112,112,15,15,112,112,112,15,15,15,15,15,15,15,]),'then_clause':([124,288,],[204,312,]),'location_name':([0,19,29,30,39,42,46,53,54,66,72,77,87,102,103,108,115,121,169,172,173,175,189,190,198,203,206,208,209,217,218,219,222,225,229,233,242,245,247,250,282,284,286,292,297,302,304,314,317,319,334,336,339,343,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'array_mode':([67,120,135,157,258,298,316,],[158,158,158,158,158,158,158,]),'discrete_mode_name':([67,120,135,157,218,227,258,273,297,298,316,],[145,145,145,145,145,145,145,145,145,145,145,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','lyaParser.py',64),
  ('program -> empty','program',1,'p_program','lyaParser.py',65),
  ('statement_list -> statement','statement_list',1,'p_statement_list1','lyaParser.py',72),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list1','lyaParser.py',73),
  ('statement -> declaration_statement','statement',1,'p_statement','lyaParser.py',80),
  ('statement -> newmode_statement','statement',1,'p_statement','lyaParser.py',81),
  ('statement -> synonym_statement','statement',1,'p_statement','lyaParser.py',82),
  ('statement -> action_statement','statement',1,'p_statement','lyaParser.py',83),
  ('statement -> procedure_statement','statement',1,'p_statement','lyaParser.py',84),
  ('declaration_statement -> DCL declaration_list SMC','declaration_statement',3,'p_declaration_statement','lyaParser.py',92),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','lyaParser.py',96),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','lyaParser.py',97),
  ('declaration -> id_list mode initialization','declaration',3,'p_declaration1','lyaParser.py',104),
  ('declaration -> id_list mode','declaration',2,'p_declaration2','lyaParser.py',108),
  ('id_list -> ID','id_list',1,'p_id_list','lyaParser.py',112),
  ('id_list -> id_list COMMA ID','id_list',3,'p_id_list','lyaParser.py',113),
  ('initialization -> EQUALS expression','initialization',2,'p_initialization','lyaParser.py',120),
  ('mode -> mode_name','mode',1,'p_mode','lyaParser.py',128),
  ('mode -> discrete_mode','mode',1,'p_mode','lyaParser.py',129),
  ('mode -> reference_mode','mode',1,'p_mode','lyaParser.py',130),
  ('mode -> composite_mode','mode',1,'p_mode','lyaParser.py',131),
  ('mode_name -> ID','mode_name',1,'p_mode_name','lyaParser.py',135),
  ('discrete_mode -> basic_mode','discrete_mode',1,'p_discrete_mode','lyaParser.py',139),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','lyaParser.py',140),
  ('basic_mode -> INT','basic_mode',1,'p_basic_mode','lyaParser.py',144),
  ('basic_mode -> BOOL','basic_mode',1,'p_basic_mode','lyaParser.py',145),
  ('basic_mode -> CHAR','basic_mode',1,'p_basic_mode','lyaParser.py',146),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaParser.py',150),
  ('discrete_range_mode -> basic_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaParser.py',151),
  ('discrete_mode_name -> ID','discrete_mode_name',1,'p_discrete_mode_name','lyaParser.py',155),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_litereal_range','lyaParser.py',159),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','lyaParser.py',163),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','lyaParser.py',167),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','lyaParser.py',171),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','lyaParser.py',175),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','lyaParser.py',176),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','lyaParser.py',180),
  ('string_length -> INTCONST','string_length',1,'p_string_length','lyaParser.py',184),
  ('array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_node','array_mode',5,'p_array_mode','lyaParser.py',188),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','lyaParser.py',193),
  ('index_mode_list -> index_mode_list COMMA index_mode','index_mode_list',3,'p_index_mode_list','lyaParser.py',194),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','lyaParser.py',201),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','lyaParser.py',202),
  ('element_node -> mode','element_node',1,'p_element_node','lyaParser.py',206),
  ('newmode_statement -> TYPE newmode_list SMC','newmode_statement',3,'p_newmode_statement','lyaParser.py',214),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','lyaParser.py',218),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','lyaParser.py',219),
  ('mode_definition -> id_list EQUALS mode','mode_definition',3,'p_mode_definition','lyaParser.py',226),
  ('synonym_statement -> SYN syn_list SMC','synonym_statement',3,'p_synonym_statement','lyaParser.py',230),
  ('syn_list -> syn_definition','syn_list',1,'p_syn_list','lyaParser.py',238),
  ('syn_list -> syn_list COMMA syn_definition','syn_list',3,'p_syn_list','lyaParser.py',239),
  ('syn_definition -> id_list EQUALS constant_expression','syn_definition',3,'p_syn_definition','lyaParser.py',246),
  ('syn_definition -> id_list mode EQUALS constant_expression','syn_definition',4,'p_syn_definition2','lyaParser.py',250),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','lyaParser.py',254),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','lyaParser.py',262),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','lyaParser.py',263),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','lyaParser.py',264),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','lyaParser.py',265),
  ('literal -> integer_literal','literal',1,'p_literal','lyaParser.py',269),
  ('literal -> boolean_literal','literal',1,'p_literal','lyaParser.py',270),
  ('literal -> char_literal','literal',1,'p_literal','lyaParser.py',271),
  ('literal -> empty_literal','literal',1,'p_literal','lyaParser.py',272),
  ('literal -> string_literal','literal',1,'p_literal','lyaParser.py',273),
  ('integer_literal -> INTCONST','integer_literal',1,'p_integer_literal','lyaParser.py',277),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','lyaParser.py',281),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','lyaParser.py',282),
  ('char_literal -> CHARCONST','char_literal',1,'p_char_literal','lyaParser.py',286),
  ('string_literal -> STRINGCONST','string_literal',1,'p_string_literal','lyaParser.py',290),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','lyaParser.py',294),
  ('value_array_element -> array_primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','lyaParser.py',298),
  ('value_array_slice -> array_primitive_value LBRACKET literal_range RBRACKET','value_array_slice',4,'p_value_array_slice','lyaParser.py',302),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','lyaParser.py',306),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','lyaParser.py',310),
  ('action_statement -> action SMC','action_statement',2,'p_action_statement','lyaParser.py',318),
  ('action_statement -> label COLON action SMC','action_statement',4,'p_action_statement','lyaParser.py',319),
  ('label -> ID','label',1,'p_label','lyaParser.py',326),
  ('action -> assignment_action','action',1,'p_action','lyaParser.py',330),
  ('action -> bracketed_action','action',1,'p_action','lyaParser.py',331),
  ('action -> call_action','action',1,'p_action','lyaParser.py',332),
  ('action -> exit_action','action',1,'p_action','lyaParser.py',333),
  ('action -> return_action','action',1,'p_action','lyaParser.py',334),
  ('action -> result_action','action',1,'p_action','lyaParser.py',335),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','lyaParser.py',343),
  ('assigning_operator -> EQUALS','assigning_operator',1,'p_assigning_operator','lyaParser.py',347),
  ('assigning_operator -> closed_dyadic_operator EQUALS','assigning_operator',2,'p_assigning_operator','lyaParser.py',348),
  ('closed_dyadic_operator -> arithmetic_additive_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','lyaParser.py',355),
  ('closed_dyadic_operator -> arithmetic_multiplicative_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','lyaParser.py',356),
  ('closed_dyadic_operator -> string_concatenation_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','lyaParser.py',357),
  ('expression_list -> expression','expression_list',1,'p_expression_list','lyaParser.py',361),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','lyaParser.py',362),
  ('expression -> operand0','expression',1,'p_expression','lyaParser.py',369),
  ('expression -> conditional_expression','expression',1,'p_expression','lyaParser.py',370),
  ('operand0 -> operand1','operand0',1,'p_operand0','lyaParser.py',374),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','lyaParser.py',375),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','lyaParser.py',382),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','lyaParser.py',383),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','lyaParser.py',387),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','lyaParser.py',391),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','lyaParser.py',392),
  ('relational_operator -> ISEQUAL','relational_operator',1,'p_relational_operator','lyaParser.py',393),
  ('relational_operator -> NOTEQUAL','relational_operator',1,'p_relational_operator','lyaParser.py',394),
  ('relational_operator -> GT','relational_operator',1,'p_relational_operator','lyaParser.py',395),
  ('relational_operator -> GE','relational_operator',1,'p_relational_operator','lyaParser.py',396),
  ('relational_operator -> LT','relational_operator',1,'p_relational_operator','lyaParser.py',397),
  ('relational_operator -> LE','relational_operator',1,'p_relational_operator','lyaParser.py',398),
  ('operand1 -> operand2','operand1',1,'p_operand1','lyaParser.py',402),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1','lyaParser.py',403),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','lyaParser.py',410),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','lyaParser.py',411),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','lyaParser.py',415),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','lyaParser.py',416),
  ('string_concatenation_operator -> STRCONC','string_concatenation_operator',1,'p_string_concatenation_operator','lyaParser.py',420),
  ('operand2 -> operand3','operand2',1,'p_operand2','lyaParser.py',424),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','lyaParser.py',425),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaParser.py',432),
  ('arithmetic_multiplicative_operator -> DIV','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaParser.py',433),
  ('arithmetic_multiplicative_operator -> MOD','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaParser.py',434),
  ('operand3 -> operand4','operand3',1,'p_operand3','lyaParser.py',438),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','lyaParser.py',439),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','lyaParser.py',446),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','lyaParser.py',447),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','lyaParser.py',451),
  ('operand4 -> location','operand4',1,'p_operand4','lyaParser.py',452),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','lyaParser.py',453),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','lyaParser.py',459),
  ('conditional_expression -> IF boolean_expression then_expression elseif_expression_list else_expression FI','conditional_expression',6,'p_conditional_expression2','lyaParser.py',463),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','lyaParser.py',467),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','lyaParser.py',471),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','lyaParser.py',475),
  ('elseif_expression_list -> elseif_expression','elseif_expression_list',1,'p_elseif_expression_list','lyaParser.py',479),
  ('elseif_expression_list -> elseif_expression_list elseif_expression','elseif_expression_list',2,'p_elseif_expression_list','lyaParser.py',480),
  ('elseif_expression -> ELSIF boolean_expression then_expression','elseif_expression',3,'p_elseif_expression','lyaParser.py',487),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','lyaParser.py',495),
  ('location -> location_name','location',1,'p_location','lyaParser.py',499),
  ('location -> string_reference','location',1,'p_location','lyaParser.py',500),
  ('location -> dereferenced_reference','location',1,'p_location','lyaParser.py',501),
  ('location -> array_element','location',1,'p_location','lyaParser.py',502),
  ('location -> array_slice','location',1,'p_location','lyaParser.py',503),
  ('location -> call_action','location',1,'p_location','lyaParser.py',504),
  ('location_name -> ID','location_name',1,'p_location_name','lyaParser.py',508),
  ('string_reference -> location_name LBRACKET integer_expression RBRACKET','string_reference',4,'p_string_reference','lyaParser.py',512),
  ('string_reference -> location_name LBRACKET literal_range RBRACKET','string_reference',4,'p_string_reference2','lyaParser.py',516),
  ('dereferenced_reference -> location ARROW','dereferenced_reference',2,'p_dereferenced_reference','lyaParser.py',520),
  ('array_element -> location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','lyaParser.py',524),
  ('array_slice -> location LBRACKET literal_range RBRACKET','array_slice',4,'p_array_slice','lyaParser.py',528),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','lyaParser.py',536),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','lyaParser.py',537),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','lyaParser.py',545),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action2','lyaParser.py',549),
  ('then_clause -> THEN','then_clause',1,'p_then_clause','lyaParser.py',553),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','lyaParser.py',554),
  ('else_clause -> ELSE','else_clause',1,'p_else_clause','lyaParser.py',561),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','lyaParser.py',562),
  ('else_clause -> elseif_clause','else_clause',1,'p_else_clause2','lyaParser.py',569),
  ('elseif_clause -> ELSIF boolean_expression then_clause','elseif_clause',3,'p_elseif_clause','lyaParser.py',573),
  ('elseif_clause -> ELSIF boolean_expression then_clause else_clause','elseif_clause',4,'p_elseif_clause2','lyaParser.py',577),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','lyaParser.py',582),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','lyaParser.py',583),
  ('do_action -> DO OD','do_action',2,'p_do_action','lyaParser.py',594),
  ('do_action -> DO control_part SMC OD','do_action',4,'p_do_action2','lyaParser.py',598),
  ('do_action -> DO control_part SMC action_statement_list OD','do_action',5,'p_do_action3','lyaParser.py',602),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action4','lyaParser.py',606),
  ('control_part -> for_control','control_part',1,'p_control_part','lyaParser.py',610),
  ('control_part -> while_control','control_part',1,'p_control_part','lyaParser.py',611),
  ('control_part -> for_control while_control','control_part',2,'p_control_part2','lyaParser.py',615),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','lyaParser.py',619),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','lyaParser.py',623),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','lyaParser.py',624),
  ('step_enumeration -> loop_counter EQUALS start_value end_value','step_enumeration',4,'p_step_enumeration','lyaParser.py',628),
  ('step_enumeration -> loop_counter EQUALS start_value step_value end_value','step_enumeration',5,'p_step_enumeration2','lyaParser.py',632),
  ('step_enumeration -> loop_counter EQUALS start_value DOWN end_value','step_enumeration',5,'p_step_enumeration3','lyaParser.py',636),
  ('step_enumeration -> loop_counter EQUALS start_value step_value DOWN end_value','step_enumeration',6,'p_step_enumeration4','lyaParser.py',640),
  ('loop_counter -> ID','loop_counter',1,'p_loop_counter','lyaParser.py',644),
  ('start_value -> discrete_expression','start_value',1,'p_start_value','lyaParser.py',648),
  ('step_value -> BY integer_expression','step_value',2,'p_step_value','lyaParser.py',652),
  ('end_value -> TO discrete_expression','end_value',2,'p_end_value','lyaParser.py',656),
  ('discrete_expression -> expression','discrete_expression',1,'p_discrete_expression','lyaParser.py',660),
  ('range_enumeration -> loop_counter IN discrete_mode','range_enumeration',3,'p_range_enumeration','lyaParser.py',664),
  ('range_enumeration -> loop_counter DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration2','lyaParser.py',668),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','lyaParser.py',672),
  ('procedure_statement -> label COLON procedure_definition SMC','procedure_statement',4,'p_procedure_statement','lyaParser.py',680),
  ('procedure_definition -> PROC LPAREN RPAREN SMC END','procedure_definition',5,'p_procedure_definition1','lyaParser.py',684),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SMC statement_list END','procedure_definition',7,'p_procedure_definition1','lyaParser.py',685),
  ('procedure_definition -> PROC LPAREN RPAREN SMC statement_list END','procedure_definition',6,'p_procedure_definition1','lyaParser.py',686),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SMC END','procedure_definition',6,'p_procedure_definition2','lyaParser.py',695),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SMC END','procedure_definition',7,'p_procedure_definition2','lyaParser.py',696),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SMC statement_list END','procedure_definition',8,'p_procedure_definition2','lyaParser.py',697),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SMC statement_list END','procedure_definition',7,'p_procedure_definition3','lyaParser.py',706),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SMC END','procedure_definition',6,'p_procedure_definition3','lyaParser.py',707),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','lyaParser.py',714),
  ('formal_parameter_list -> formal_parameter COMMA formal_parameter_list','formal_parameter_list',3,'p_formal_parameter_list','lyaParser.py',715),
  ('formal_parameter -> id_list parameter_spec','formal_parameter',2,'p_formal_parameter','lyaParser.py',722),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','lyaParser.py',726),
  ('parameter_spec -> mode parameter_attribute','parameter_spec',2,'p_parameter_spec','lyaParser.py',727),
  ('parameter_attribute -> LOC','parameter_attribute',1,'p_parameter_attribute','lyaParser.py',734),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','lyaParser.py',738),
  ('result_spec -> RETURNS LPAREN mode result_attribute RPAREN','result_spec',5,'p_result_spec','lyaParser.py',739),
  ('result_attribute -> LOC','result_attribute',1,'p_result_attribute','lyaParser.py',746),
  ('call_action -> procedure_call','call_action',1,'p_call_action','lyaParser.py',754),
  ('call_action -> builtin_call','call_action',1,'p_call_action','lyaParser.py',755),
  ('procedure_call -> ID LPAREN RPAREN','procedure_call',3,'p_procedure_call','lyaParser.py',759),
  ('procedure_call -> ID LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','lyaParser.py',760),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','lyaParser.py',767),
  ('parameter_list -> parameter COMMA parameter_list','parameter_list',3,'p_parameter_list','lyaParser.py',768),
  ('parameter -> expression','parameter',1,'p_parameter','lyaParser.py',775),
  ('exit_action -> EXIT label','exit_action',2,'p_exit_action','lyaParser.py',783),
  ('return_action -> RETURN','return_action',1,'p_return_action','lyaParser.py',787),
  ('return_action -> RETURN result','return_action',2,'p_return_action','lyaParser.py',788),
  ('result_action -> RESULT result','result_action',2,'p_result_action','lyaParser.py',795),
  ('result -> expression','result',1,'p_result','lyaParser.py',799),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','lyaParser.py',803),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','lyaParser.py',804),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','lyaParser.py',811),
  ('builtin_name -> PRED','builtin_name',1,'p_builtin_name','lyaParser.py',812),
  ('builtin_name -> SUCC','builtin_name',1,'p_builtin_name','lyaParser.py',813),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','lyaParser.py',814),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','lyaParser.py',815),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','lyaParser.py',816),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','lyaParser.py',817),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','lyaParser.py',818),
  ('integer_expression -> expression','integer_expression',1,'p_integer_expression','lyaParser.py',827),
  ('empty -> <empty>','empty',0,'p_empty','lyaParser.py',834),
]
