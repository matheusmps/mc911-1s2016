
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '93726D5D4AF717E1AEBFEE98F551452E'
    
_lr_action_items = {'LPAREN':([1,7,9,10,26,30,31,32,33,36,37,43,44,53,73,75,77,83,86,89,99,101,103,104,105,106,107,108,110,118,119,124,127,128,132,133,134,139,145,146,149,162,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,180,182,209,210,212,214,220,227,232,233,238,241,247,261,271,277,279,292,298,303,305,],[-215,-218,89,-216,-217,-213,-214,118,119,89,89,-220,-219,89,-121,-120,89,119,89,89,-111,-112,89,89,-116,-117,-115,-84,-110,89,89,89,207,119,-25,210,-27,-30,-26,214,89,89,-108,-109,89,89,89,-99,-105,-100,-104,-102,-95,-97,-101,-98,-103,-96,-85,89,89,89,89,89,89,89,89,89,89,89,119,-30,89,89,318,89,89,89,]),'SUCC':([0,3,8,9,12,15,23,35,36,37,38,40,46,52,53,57,67,73,75,77,86,89,95,99,101,103,104,105,106,107,108,110,118,119,123,124,129,149,150,151,160,162,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,180,182,189,192,201,205,206,209,210,212,214,218,220,227,232,233,238,241,246,247,248,277,279,287,291,298,303,305,314,317,319,335,336,340,344,],[1,-7,1,1,-6,-5,-3,-9,1,1,1,-8,1,1,1,-157,1,-121,-120,1,1,1,-74,-111,-112,1,1,-116,-117,-115,-84,-110,1,1,-4,1,-49,1,1,-158,1,1,-108,-109,1,1,1,-99,-105,-100,-104,-102,-95,-97,-101,-98,-103,-96,-85,-45,-10,1,-181,-75,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'SMC':([6,11,13,14,18,19,20,21,22,25,27,28,34,37,39,41,45,47,50,51,54,55,56,60,61,62,63,64,65,66,68,69,70,71,74,76,78,79,80,81,82,83,84,85,87,88,90,91,92,93,94,96,97,109,112,114,116,117,120,122,125,126,132,134,135,136,137,139,141,142,144,145,146,148,152,153,154,156,158,159,161,163,183,191,195,199,208,211,216,217,219,225,226,229,230,231,234,235,236,237,239,240,242,245,249,250,253,255,266,267,272,273,274,284,286,290,293,296,299,300,302,306,307,315,316,322,323,325,327,328,332,334,337,339,341,342,343,347,348,349,350,],[-80,-79,-81,95,-199,-136,-82,-77,-135,-137,-147,-146,-200,-207,-78,-134,-138,129,-50,150,-163,-164,-159,-124,-123,-66,-65,-118,-64,-69,-57,-62,-139,-122,-55,-210,-60,-93,-92,-68,-67,-140,-106,-56,-58,-91,-63,-209,-113,-59,-61,-76,-206,-143,189,-46,-11,192,-127,-208,205,206,-25,-27,-36,-35,-21,-22,-19,-18,-24,-26,-23,-20,-162,-180,-165,-167,-168,-166,-133,-119,-83,-14,-211,-201,-51,-34,-54,-52,-160,-107,-114,-94,-73,-144,-145,-47,-48,-13,-12,-212,-202,-148,-141,-142,291,-53,-161,-177,-178,-70,-71,-17,-149,314,319,-28,-29,-37,-169,-179,-125,336,-182,-44,-39,-170,-176,-171,-126,-185,-184,-189,-172,-183,-186,-196,-188,-187,-197,]),'TRUE':([9,36,37,53,73,75,77,86,89,99,101,103,104,105,106,107,108,110,118,119,124,149,162,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,180,182,209,210,212,214,220,227,232,233,238,241,247,277,279,298,303,305,],[62,62,62,62,-121,-120,62,62,62,-111,-112,62,62,-116,-117,-115,-84,-110,62,62,62,62,62,-108,-109,62,62,62,-99,-105,-100,-104,-102,-95,-97,-101,-98,-103,-96,-85,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'DIV':([11,17,18,19,22,25,33,34,41,45,60,61,62,63,64,65,66,68,69,70,71,74,78,81,82,83,84,85,87,90,92,93,94,109,128,161,163,195,199,225,226,230,231,234,240,242,249,250,261,273,274,],[-139,105,-199,-136,-135,-137,-140,-200,-134,-138,-124,-123,-66,-65,-118,-64,-69,-57,-62,-139,-122,-55,-60,-68,-67,-140,105,-56,-58,-63,-113,-59,-61,-143,-140,-133,-119,-211,-201,105,-114,-73,-144,-145,-212,-202,-141,-142,-140,-70,-71,]),'DO':([0,3,8,12,15,23,35,38,40,46,52,57,95,123,129,150,151,160,189,192,201,205,206,218,246,248,287,291,314,317,319,335,336,340,344,],[8,-7,8,-6,-5,-3,-9,8,-8,8,8,-157,-74,-4,-49,8,-158,8,-45,-10,8,-181,-75,8,8,8,8,8,8,8,8,8,8,8,8,]),'SYN':([0,3,12,15,23,35,38,40,95,123,129,189,192,205,206,291,314,317,319,335,336,340,344,],[5,-7,-6,-5,-3,-9,5,-8,-74,-4,-49,-45,-10,-181,-75,5,5,5,5,5,5,5,5,]),'FALSE':([9,36,37,53,73,75,77,86,89,99,101,103,104,105,106,107,108,110,118,119,124,149,162,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,180,182,209,210,212,214,220,227,232,233,238,241,247,277,279,298,303,305,],[63,63,63,63,-121,-120,63,63,63,-111,-112,63,63,-116,-117,-115,-84,-110,63,63,63,63,63,-108,-109,63,63,63,-99,-105,-100,-104,-102,-95,-97,-101,-98,-103,-96,-85,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'PRINT':([0,3,8,9,12,15,23,35,36,37,38,40,46,52,53,57,67,73,75,77,86,89,95,99,101,103,104,105,106,107,108,110,118,119,123,124,129,149,150,151,160,162,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,180,182,189,192,201,205,206,209,210,212,214,218,220,227,232,233,238,241,246,247,248,277,279,287,291,298,303,305,314,317,319,335,336,340,344,],[43,-7,43,43,-6,-5,-3,-9,43,43,43,-8,43,43,43,-157,43,-121,-120,43,43,43,-74,-111,-112,43,43,-116,-117,-115,-84,-110,43,43,-4,43,-49,43,43,-158,43,43,-108,-109,43,43,43,-99,-105,-100,-104,-102,-95,-97,-101,-98,-103,-96,-85,-45,-10,43,-181,-75,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'INTCONST':([9,36,37,53,73,75,77,86,89,99,101,103,104,105,106,107,108,110,118,119,124,149,162,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,180,182,209,210,212,214,215,220,227,232,233,238,241,247,277,279,298,303,305,],[65,65,65,65,-121,-120,65,65,65,-111,-112,65,65,-116,-117,-115,-84,-110,65,65,65,65,65,-108,-109,65,65,65,-99,-105,-100,-104,-102,-95,-97,-101,-98,-103,-96,-85,65,65,65,65,265,65,65,65,65,65,65,65,65,65,65,65,65,]),'NOTEQUAL':([18,19,22,25,34,41,45,60,61,62,63,64,65,66,68,69,70,71,74,78,79,81,82,83,84,85,87,88,90,92,93,94,109,161,163,195,199,225,226,229,230,231,234,240,242,249,250,261,273,274,],[-199,-136,-135,-137,-200,-134,-138,-124,-123,-66,-65,-118,-64,-69,-57,-62,-139,-122,-55,-60,-93,-68,-67,-140,-106,-56,-58,177,-63,-113,-59,-61,-143,-133,-119,-211,-201,-107,-114,-94,-73,-144,-145,-212,-202,-141,-142,-140,-70,-71,]),'NUM':([0,3,8,9,12,15,23,35,36,37,38,40,46,52,53,57,67,73,75,77,86,89,95,99,101,103,104,105,106,107,108,110,118,119,123,124,129,149,150,151,160,162,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,180,182,189,192,201,205,206,209,210,212,214,218,220,227,232,233,238,241,246,247,248,277,279,287,291,298,303,305,314,317,319,335,336,340,344,],[30,-7,30,30,-6,-5,-3,-9,30,30,30,-8,30,30,30,-157,30,-121,-120,30,30,30,-74,-111,-112,30,30,-116,-117,-115,-84,-110,30,30,-4,30,-49,30,30,-158,30,30,-108,-109,30,30,30,-99,-105,-100,-104,-102,-95,-97,-101,-98,-103,-96,-85,-45,-10,30,-181,-75,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'DOWN':([18,19,22,25,34,41,45,60,61,62,63,64,65,66,68,69,70,71,74,78,79,80,81,82,83,84,85,87,88,90,92,93,94,109,155,157,161,163,195,199,225,226,229,230,231,234,240,242,249,250,267,268,269,273,274,301,307,329,330,332,],[-199,-136,-135,-137,-200,-134,-138,-124,-123,-66,-65,-118,-64,-69,-57,-62,-139,-122,-55,-60,-93,-92,-68,-67,-140,-106,-56,-58,-91,-63,-113,-59,-61,-143,221,-173,-133,-119,-211,-201,-107,-114,-94,-73,-144,-145,-212,-202,-141,-142,-177,-174,304,-70,-71,326,-125,-221,-175,-126,]),'NULL':([9,36,37,53,73,75,77,86,89,99,101,103,104,105,106,107,108,110,118,119,124,149,162,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,180,182,209,210,212,214,220,227,232,233,238,241,247,277,279,298,303,305,],[66,66,66,66,-121,-120,66,66,66,-111,-112,66,66,-116,-117,-115,-84,-110,66,66,66,66,66,-108,-109,66,66,66,-99,-105,-100,-104,-102,-95,-97,-101,-98,-103,-96,-85,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'RESULT':([0,3,8,12,15,23,35,38,40,46,52,57,95,123,129,150,151,160,189,192,201,205,206,218,246,248,287,291,314,317,319,335,336,340,344,],[9,-7,9,-6,-5,-3,-9,9,-8,9,9,-157,-74,-4,-49,9,-158,9,-45,-10,9,-181,-75,9,9,9,9,9,9,9,9,9,9,9,9,]),'UPPER':([0,3,8,9,12,15,23,35,36,37,38,40,46,52,53,57,67,73,75,77,86,89,95,99,101,103,104,105,106,107,108,110,118,119,123,124,129,149,150,151,160,162,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,180,182,189,192,201,205,206,209,210,212,214,218,220,227,232,233,238,241,246,247,248,277,279,287,291,298,303,305,314,317,319,335,336,340,344,],[10,-7,10,10,-6,-5,-3,-9,10,10,10,-8,10,10,10,-157,10,-121,-120,10,10,10,-74,-111,-112,10,10,-116,-117,-115,-84,-110,10,10,-4,10,-49,10,10,-158,10,10,-108,-109,10,10,10,-99,-105,-100,-104,-102,-95,-97,-101,-98,-103,-96,-85,-45,-10,10,-181,-75,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'GT':([18,19,22,25,34,41,45,60,61,62,63,64,65,66,68,69,70,71,74,78,79,81,82,83,84,85,87,88,90,92,93,94,109,161,163,195,199,225,226,229,230,231,234,240,242,249,250,261,273,274,],[-199,-136,-135,-137,-200,-134,-138,-124,-123,-66,-65,-118,-64,-69,-57,-62,-139,-122,-55,-60,-93,-68,-67,-140,-106,-56,-58,174,-63,-113,-59,-61,-143,-133,-119,-211,-201,-107,-114,-94,-73,-144,-145,-212,-202,-141,-142,-140,-70,-71,]),'WHILE':([8,18,19,22,25,34,41,45,54,60,61,62,63,64,65,66,68,69,70,71,74,78,79,80,81,82,83,84,85,87,88,90,92,93,94,109,132,134,144,145,146,156,158,159,161,163,195,199,225,226,229,230,231,234,240,242,249,250,267,272,273,274,296,299,302,306,307,325,327,328,332,341,],[53,-199,-136,-135,-137,-200,-134,-138,53,-124,-123,-66,-65,-118,-64,-69,-57,-62,-139,-122,-55,-60,-93,-92,-68,-67,-140,-106,-56,-58,-91,-63,-113,-59,-61,-143,-25,-27,-24,-26,-23,-167,-168,-166,-133,-119,-211,-201,-107,-114,-94,-73,-144,-145,-212,-202,-141,-142,-177,-178,-70,-71,-28,-29,-169,-179,-125,-170,-176,-171,-126,-172,]),'COMMA':([18,19,22,25,34,41,45,47,48,49,50,60,61,62,63,64,65,66,68,69,70,71,74,78,79,80,81,82,83,84,85,87,88,90,92,93,94,109,112,113,114,115,116,117,132,134,135,136,137,139,141,142,144,145,146,148,161,163,184,186,191,195,196,197,199,208,211,213,216,217,223,225,226,229,230,231,234,235,236,237,239,240,242,249,250,251,254,255,258,259,260,262,273,274,281,282,283,284,294,295,296,299,300,307,320,321,322,323,324,332,],[-199,-136,-135,-137,-200,-134,-138,130,-15,143,-50,-124,-123,-66,-65,-118,-64,-69,-57,-62,-139,-122,-55,-60,-93,-92,-68,-67,-140,-106,-56,-58,-91,-63,-113,-59,-61,-143,188,143,-46,143,-11,193,-25,-27,-36,-35,-21,-22,-19,-18,-24,-26,-23,-20,-133,-119,232,-89,-14,-211,-205,241,-201,-51,-34,-16,-54,-52,232,-107,-114,-94,-73,-144,-145,-47,-48,-13,-12,-212,-202,-141,-142,289,143,-53,-42,-40,298,-43,-70,-71,-90,-33,-31,-17,-193,-192,-28,-29,-37,-125,-195,-194,-44,-39,-41,-126,]),'ARROW':([9,11,17,18,19,22,25,33,34,36,37,41,45,53,61,70,73,75,77,83,86,89,99,101,103,104,105,106,107,108,109,110,118,119,124,128,149,161,162,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,180,182,195,199,209,210,212,214,220,227,231,232,233,234,238,240,241,242,247,249,250,261,277,279,298,303,305,],[67,-139,109,-199,-136,-135,-137,-140,-200,67,67,-134,-138,67,109,-139,-121,-120,67,-140,67,67,-111,-112,67,67,-116,-117,-115,-84,-143,-110,67,67,67,-140,67,109,67,-108,-109,67,67,67,-99,-105,-100,-104,-102,-95,-97,-101,-98,-103,-96,-85,-211,-201,67,67,67,67,67,67,-144,67,67,-145,67,-212,67,-202,67,-141,-142,-140,67,67,67,67,67,]),'ISEQUAL':([18,19,22,25,34,41,45,60,61,62,63,64,65,66,68,69,70,71,74,78,79,81,82,83,84,85,87,88,90,92,93,94,109,161,163,195,199,225,226,229,230,231,234,240,242,249,250,261,273,274,],[-199,-136,-135,-137,-200,-134,-138,-124,-123,-66,-65,-118,-64,-69,-57,-62,-139,-122,-55,-60,-93,-68,-67,-140,-106,-56,-58,172,-63,-113,-59,-61,-143,-133,-119,-211,-201,-107,-114,-94,-73,-144,-145,-212,-202,-141,-142,-140,-70,-71,]),'PRED':([0,3,8,9,12,15,23,35,36,37,38,40,46,52,53,57,67,73,75,77,86,89,95,99,101,103,104,105,106,107,108,110,118,119,123,124,129,149,150,151,160,162,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,180,182,189,192,201,205,206,209,210,212,214,218,220,227,232,233,238,241,246,247,248,277,279,287,291,298,303,305,314,317,319,335,336,340,344,],[31,-7,31,31,-6,-5,-3,-9,31,31,31,-8,31,31,31,-157,31,-121,-120,31,31,31,-74,-111,-112,31,31,-116,-117,-115,-84,-110,31,31,-4,31,-49,31,31,-158,31,31,-108,-109,31,31,31,-99,-105,-100,-104,-102,-95,-97,-101,-98,-103,-96,-85,-45,-10,31,-181,-75,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'BOOL':([48,49,115,138,190,212,213,222,254,270,297,298,318,],[-15,145,145,145,145,145,-16,145,145,145,145,145,145,]),'GE':([18,19,22,25,34,41,45,60,61,62,63,64,65,66,68,69,70,71,74,78,79,81,82,83,84,85,87,88,90,92,93,94,109,161,163,195,199,225,226,229,230,231,234,240,242,249,250,261,273,274,],[-199,-136,-135,-137,-200,-134,-138,-124,-123,-66,-65,-118,-64,-69,-57,-62,-139,-122,-55,-60,-93,-68,-67,-140,-106,-56,-58,179,-63,-113,-59,-61,-143,-133,-119,-211,-201,-107,-114,-94,-73,-144,-145,-212,-202,-141,-142,-140,-70,-71,]),'EXIT':([0,3,8,12,15,23,35,38,40,46,52,57,95,123,129,150,151,160,189,192,201,205,206,218,246,248,287,291,314,317,319,335,336,340,344,],[16,-7,16,-6,-5,-3,-9,16,-8,16,16,-157,-74,-4,-49,16,-158,16,-45,-10,16,-181,-75,16,16,16,16,16,16,16,16,16,16,16,16,]),'STRCONC':([11,17,18,19,22,25,33,34,41,45,60,61,62,63,64,65,66,68,69,70,71,74,78,79,81,82,83,84,85,87,90,92,93,94,109,128,161,163,195,199,225,226,229,230,231,234,240,242,249,250,261,273,274,],[-139,101,-199,-136,-135,-137,-140,-200,-134,-138,-124,-123,-66,-65,-118,-64,-69,-57,-62,-139,-122,-55,-60,101,-68,-67,-140,-106,-56,-58,-63,-113,-59,-61,-143,-140,-133,-119,-211,-201,-107,-114,101,-73,-144,-145,-212,-202,-141,-142,-140,-70,-71,]),'RPAREN':([18,19,22,25,34,41,45,60,61,62,63,64,65,66,68,69,70,71,74,78,79,80,81,82,83,84,85,87,88,90,92,93,94,109,118,119,132,134,135,136,137,139,141,142,144,145,146,148,161,163,181,194,195,196,197,198,199,207,211,225,226,229,230,231,234,240,242,249,250,251,252,257,263,273,274,282,283,285,294,295,296,299,300,307,313,320,321,322,323,332,338,345,346,],[-199,-136,-135,-137,-200,-134,-138,-124,-123,-66,-65,-118,-64,-69,-57,-62,-139,-122,-55,-60,-93,-92,-68,-67,-140,-106,-56,-58,-91,-63,-113,-59,-61,-143,195,199,-25,-27,-36,-35,-21,-22,-19,-18,-24,-26,-23,-20,-133,-119,230,240,-211,-205,-203,242,-201,253,-34,-107,-114,-94,-73,-144,-145,-212,-202,-141,-142,-190,290,296,299,-70,-71,-33,-31,-204,-193,-192,-28,-29,-37,-125,-191,-195,-194,-44,-39,-126,347,-198,350,]),'REF':([48,49,115,138,190,213,254,297,318,],[-15,138,138,138,138,-16,138,138,138,]),'CHARS':([48,49,115,138,190,213,254,297,318,],[-15,147,147,147,147,-16,147,147,147,]),'NOT':([9,36,37,53,86,89,99,101,103,104,105,106,107,108,110,118,119,124,149,162,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,180,182,209,210,212,214,220,227,232,233,238,241,247,277,279,298,303,305,],[73,73,73,73,73,73,-111,-112,73,73,-116,-117,-115,-84,-110,73,73,73,73,73,-108,-109,73,73,73,-99,-105,-100,-104,-102,-95,-97,-101,-98,-103,-96,-85,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'EQUALS':([11,17,18,19,22,25,33,34,41,45,48,49,98,99,100,101,102,105,106,107,109,110,111,113,128,131,132,134,135,136,137,139,141,142,144,145,146,148,155,157,191,195,199,211,213,231,234,240,242,249,250,296,299,300,322,323,],[-139,108,-199,-136,-135,-137,-140,-200,-134,-138,-15,149,182,-111,-87,-112,-86,-116,-117,-115,-143,-110,-88,190,-140,209,-25,-27,-36,-35,-21,-22,-19,-18,-24,-26,-23,-20,220,-173,238,-211,-201,-34,-16,-144,-145,-212,-202,-141,-142,-28,-29,-37,-44,-39,]),'IN':([18,19,22,25,34,41,45,60,61,62,63,64,65,66,68,69,70,71,74,78,79,81,82,83,84,85,87,88,90,92,93,94,109,155,157,161,163,195,199,221,225,226,229,230,231,234,240,242,249,250,261,273,274,],[-199,-136,-135,-137,-200,-134,-138,-124,-123,-66,-65,-118,-64,-69,-57,-62,-139,-122,-55,-60,-93,-68,-67,-140,-106,-56,-58,176,-63,-113,-59,-61,-143,222,-173,-133,-119,-211,-201,270,-107,-114,-94,-73,-144,-145,-212,-202,-141,-142,-140,-70,-71,]),'FI':([18,19,22,25,34,41,45,57,60,61,62,63,64,65,66,68,69,70,71,74,78,79,80,81,82,83,84,85,87,88,90,92,93,94,95,109,151,161,163,195,199,200,201,206,225,226,229,230,231,234,240,242,243,244,246,248,249,250,273,274,276,287,307,309,311,312,332,333,],[-199,-136,-135,-137,-200,-134,-138,-157,-124,-123,-66,-65,-118,-64,-69,-57,-62,-139,-122,-55,-60,-93,-92,-68,-67,-140,-106,-56,-58,-91,-63,-113,-59,-61,-74,-143,-158,-133,-119,-211,-201,245,-150,-75,-107,-114,-94,-73,-144,-145,-212,-202,-154,286,-152,-151,-141,-142,-70,-71,307,-153,-125,332,-129,-155,-126,-156,]),'THEN':([18,19,22,25,34,41,45,60,61,62,63,64,65,66,68,69,70,71,74,78,79,80,81,82,83,84,85,87,88,90,92,93,94,109,120,121,161,163,168,195,199,225,226,229,230,231,234,240,242,249,250,273,274,288,307,308,332,],[-199,-136,-135,-137,-200,-134,-138,-124,-123,-66,-65,-118,-64,-69,-57,-62,-139,-122,-55,-60,-93,-92,-68,-67,-140,-106,-56,-58,-91,-63,-113,-59,-61,-143,-127,201,-133,-119,227,-211,-201,-107,-114,-94,-73,-144,-145,-212,-202,-141,-142,-70,-71,201,-125,227,-126,]),'BY':([18,19,22,25,34,41,45,60,61,62,63,64,65,66,68,69,70,71,74,78,79,80,81,82,83,84,85,87,88,90,92,93,94,109,161,163,195,199,225,226,229,230,231,234,240,242,249,250,267,268,269,273,274,307,332,],[-199,-136,-135,-137,-200,-134,-138,-124,-123,-66,-65,-118,-64,-69,-57,-62,-139,-122,-55,-60,-93,-92,-68,-67,-140,-106,-56,-58,-91,-63,-113,-59,-61,-143,-133,-119,-211,-201,-107,-114,-94,-73,-144,-145,-212,-202,-141,-142,-177,-174,305,-70,-71,-125,-126,]),'TYPE':([0,3,12,15,23,35,38,40,95,123,129,189,192,205,206,291,314,317,319,335,336,340,344,],[24,-7,-6,-5,-3,-9,24,-8,-74,-4,-49,-45,-10,-181,-75,24,24,24,24,24,24,24,24,]),'MINUS':([9,11,17,18,19,22,25,33,34,36,37,41,45,53,60,61,62,63,64,65,66,68,69,70,71,74,78,79,81,82,83,84,85,86,87,89,90,92,93,94,99,101,103,104,105,106,107,108,109,110,118,119,124,128,149,161,162,163,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,180,182,195,199,209,210,212,214,220,225,226,227,229,230,231,232,233,234,238,240,241,242,247,249,250,261,273,274,277,279,298,303,305,],[75,-139,99,-199,-136,-135,-137,-140,-200,75,75,-134,-138,75,-124,-123,-66,-65,-118,-64,-69,-57,-62,-139,-122,-55,-60,99,-68,-67,-140,-106,-56,75,-58,75,-63,-113,-59,-61,-111,-112,75,75,-116,-117,-115,-84,-143,-110,75,75,75,-140,75,-133,75,-119,-108,-109,75,75,75,-99,-105,-100,-104,-102,-95,-97,-101,-98,-103,-96,-85,-211,-201,75,75,75,75,75,-107,-114,75,99,-73,-144,75,75,-145,75,-212,75,-202,75,-141,-142,-140,-70,-71,75,75,75,75,75,]),'OR':([18,19,22,25,34,41,45,60,61,62,63,64,65,66,68,69,70,71,74,78,79,81,82,83,84,85,87,88,90,92,93,94,109,161,163,195,199,225,226,229,230,231,234,240,242,249,250,261,273,274,],[-199,-136,-135,-137,-200,-134,-138,-124,-123,-66,-65,-118,-64,-69,-57,-62,-139,-122,-55,-60,-93,-68,-67,-140,-106,-56,-58,170,-63,-113,-59,-61,-143,-133,-119,-211,-201,-107,-114,-94,-73,-144,-145,-212,-202,-141,-142,-140,-70,-71,]),'RBRACKET':([18,19,22,25,34,41,45,60,61,62,63,64,65,66,68,69,70,71,74,78,79,80,81,82,83,84,85,87,88,90,92,93,94,109,132,134,144,145,146,161,163,184,186,187,195,199,202,203,204,223,224,225,226,229,230,231,234,240,242,249,250,258,259,260,262,264,265,273,274,281,282,283,296,299,307,324,332,],[-199,-136,-135,-137,-200,-134,-138,-124,-123,-66,-65,-118,-64,-69,-57,-62,-139,-122,-55,-60,-93,-92,-68,-67,-140,-106,-56,-58,-91,-63,-113,-59,-61,-143,-25,-27,-24,-26,-23,-133,-119,231,-89,234,-211,-201,-221,249,250,273,274,-107,-114,-94,-73,-144,-145,-212,-202,-141,-142,-42,-40,297,-43,300,-38,-70,-71,-90,-33,-31,-28,-29,-125,-41,-126,]),'CHAR':([48,49,115,138,190,212,213,222,254,270,297,298,318,],[-15,134,134,134,134,134,-16,134,134,134,134,134,134,]),'RETURNS':([253,290,],[292,292,]),'DCL':([0,3,12,15,23,35,38,40,95,123,129,189,192,205,206,291,314,317,319,335,336,340,344,],[29,-7,-6,-5,-3,-9,29,-8,-74,-4,-49,-45,-10,-181,-75,29,29,29,29,29,29,29,29,]),'PLUS':([11,17,18,19,22,25,33,34,41,45,60,61,62,63,64,65,66,68,69,70,71,74,78,79,81,82,83,84,85,87,90,92,93,94,109,128,161,163,195,199,225,226,229,230,231,234,240,242,249,250,261,273,274,],[-139,110,-199,-136,-135,-137,-140,-200,-134,-138,-124,-123,-66,-65,-118,-64,-69,-57,-62,-139,-122,-55,-60,110,-68,-67,-140,-106,-56,-58,-63,-113,-59,-61,-143,-140,-133,-119,-211,-201,-107,-114,110,-73,-144,-145,-212,-202,-141,-142,-140,-70,-71,]),'RETURN':([0,3,8,12,15,23,35,38,40,46,52,57,95,123,129,150,151,160,189,192,201,205,206,218,246,248,287,291,314,317,319,335,336,340,344,],[37,-7,37,-6,-5,-3,-9,37,-8,37,37,-157,-74,-4,-49,37,-158,37,-45,-10,37,-181,-75,37,37,37,37,37,37,37,37,37,37,37,37,]),'ARRAY':([48,49,115,138,190,213,254,297,318,],[-15,140,140,140,140,-16,140,140,140,]),'STRINGCONST':([9,36,37,53,73,75,77,86,89,99,101,103,104,105,106,107,108,110,118,119,124,149,162,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,180,182,209,210,212,214,220,227,232,233,238,241,247,277,279,298,303,305,],[81,81,81,81,-121,-120,81,81,81,-111,-112,81,81,-116,-117,-115,-84,-110,81,81,81,81,81,-108,-109,81,81,81,-99,-105,-100,-104,-102,-95,-97,-101,-98,-103,-96,-85,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'COLON':([4,18,19,22,25,33,34,41,45,59,60,61,62,63,64,65,66,68,69,70,71,74,78,79,80,81,82,83,84,85,87,88,90,92,93,94,109,161,163,185,186,195,199,202,225,226,229,230,231,234,240,242,249,250,256,261,273,274,307,332,],[46,-199,-136,-135,-137,-76,-200,-134,-138,160,-124,-123,-66,-65,-118,-64,-69,-57,-62,-139,-122,-55,-60,-93,-92,-68,-67,-140,-106,-56,-58,-91,-63,-113,-59,-61,-143,-133,-119,233,-32,-211,-201,-32,-107,-114,-94,-73,-144,-145,-212,-202,-141,-142,-32,-140,-70,-71,-125,-126,]),'CHARCONST':([9,36,37,53,73,75,77,86,89,99,101,103,104,105,106,107,108,110,118,119,124,149,162,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,180,182,209,210,212,214,220,227,232,233,238,241,247,277,279,298,303,305,],[82,82,82,82,-121,-120,82,82,82,-111,-112,82,82,-116,-117,-115,-84,-110,82,82,82,82,82,-108,-109,82,82,82,-99,-105,-100,-104,-102,-95,-97,-101,-98,-103,-96,-85,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'LT':([18,19,22,25,34,41,45,60,61,62,63,64,65,66,68,69,70,71,74,78,79,81,82,83,84,85,87,88,90,92,93,94,109,161,163,195,199,225,226,229,230,231,234,240,242,249,250,261,273,274,],[-199,-136,-135,-137,-200,-134,-138,-124,-123,-66,-65,-118,-64,-69,-57,-62,-139,-122,-55,-60,-93,-68,-67,-140,-106,-56,-58,173,-63,-113,-59,-61,-143,-133,-119,-211,-201,-107,-114,-94,-73,-144,-145,-212,-202,-141,-142,-140,-70,-71,]),'ID':([0,3,5,8,9,12,15,16,23,24,29,35,36,37,38,40,46,48,49,52,53,57,58,67,73,75,77,86,89,95,99,101,103,104,105,106,107,108,110,115,118,119,123,124,129,130,138,143,149,150,151,160,162,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,180,182,188,189,190,192,193,201,205,206,207,209,210,212,213,214,218,220,222,227,232,233,238,241,246,247,248,254,270,277,279,287,289,291,297,298,303,305,314,317,318,319,335,336,340,344,],[33,-7,48,33,83,-6,-5,96,-3,48,48,-9,83,83,33,-8,128,-15,139,33,83,-157,157,83,-121,-120,83,83,83,-74,-111,-112,83,83,-116,-117,-115,-84,-110,139,83,83,-4,83,-49,48,139,213,83,33,-158,128,83,-108,-109,83,83,83,-99,-105,-100,-104,-102,-95,-97,-101,-98,-103,-96,-85,48,-45,139,-10,48,33,-181,-75,48,83,83,261,-16,83,33,83,271,83,83,83,83,83,33,83,33,139,271,83,83,33,48,33,139,261,83,83,33,33,139,33,33,33,33,33,]),'TIMES':([11,17,18,19,22,25,33,34,41,45,60,61,62,63,64,65,66,68,69,70,71,74,78,81,82,83,84,85,87,90,92,93,94,109,128,161,163,195,199,225,226,230,231,234,240,242,249,250,261,273,274,],[-139,107,-199,-136,-135,-137,-140,-200,-134,-138,-124,-123,-66,-65,-118,-64,-69,-57,-62,-139,-122,-55,-60,-68,-67,-140,107,-56,-58,-63,-113,-59,-61,-143,-140,-133,-119,-211,-201,107,-114,-73,-144,-145,-212,-202,-141,-142,-140,-70,-71,]),'LE':([18,19,22,25,34,41,45,60,61,62,63,64,65,66,68,69,70,71,74,78,79,81,82,83,84,85,87,88,90,92,93,94,109,161,163,195,199,225,226,229,230,231,234,240,242,249,250,261,273,274,],[-199,-136,-135,-137,-200,-134,-138,-124,-123,-66,-65,-118,-64,-69,-57,-62,-139,-122,-55,-60,-93,-68,-67,-140,-106,-56,-58,171,-63,-113,-59,-61,-143,-133,-119,-211,-201,-107,-114,-94,-73,-144,-145,-212,-202,-141,-142,-140,-70,-71,]),'AND':([18,19,22,25,34,41,45,60,61,62,63,64,65,66,68,69,70,71,74,78,79,81,82,83,84,85,87,88,90,92,93,94,109,161,163,195,199,225,226,229,230,231,234,240,242,249,250,261,273,274,],[-199,-136,-135,-137,-200,-134,-138,-124,-123,-66,-65,-118,-64,-69,-57,-62,-139,-122,-55,-60,-93,-68,-67,-140,-106,-56,-58,178,-63,-113,-59,-61,-143,-133,-119,-211,-201,-107,-114,-94,-73,-144,-145,-212,-202,-141,-142,-140,-70,-71,]),'IF':([0,3,8,9,12,15,23,35,36,37,38,40,46,52,53,57,86,89,95,103,104,108,118,119,123,124,129,149,150,151,160,162,182,189,192,201,205,206,209,210,212,214,218,220,227,232,233,238,241,246,247,248,277,279,287,291,298,303,305,314,317,319,335,336,340,344,],[36,-7,36,86,-6,-5,-3,-9,86,86,36,-8,36,36,86,-157,86,86,-74,86,86,-84,86,86,-4,86,-49,86,36,-158,36,86,-85,-45,-10,36,-181,-75,86,86,86,86,36,86,86,86,86,86,86,36,86,36,86,86,36,36,86,86,86,36,36,36,36,36,36,36,]),'END':([3,12,15,23,35,40,95,123,129,189,192,205,206,291,314,317,319,335,336,340,344,],[-7,-6,-5,-3,-9,-8,-74,-4,-49,-45,-10,-181,-75,316,334,337,339,342,343,348,349,]),'MOD':([11,17,18,19,22,25,33,34,41,45,60,61,62,63,64,65,66,68,69,70,71,74,78,81,82,83,84,85,87,90,92,93,94,109,128,161,163,195,199,225,226,230,231,234,240,242,249,250,261,273,274,],[-139,106,-199,-136,-135,-137,-140,-200,-134,-138,-124,-123,-66,-65,-118,-64,-69,-57,-62,-139,-122,-55,-60,-68,-67,-140,106,-56,-58,-63,-113,-59,-61,-143,-140,-133,-119,-211,-201,106,-114,-73,-144,-145,-212,-202,-141,-142,-140,-70,-71,]),'LOC':([132,134,135,136,137,139,141,142,144,145,146,148,211,294,296,299,300,322,323,338,],[-25,-27,-36,-35,-21,-22,-19,-18,-24,-26,-23,-20,-34,320,-28,-29,-37,-44,-39,345,]),'INT':([48,49,115,138,190,212,213,222,254,270,297,298,318,],[-15,132,132,132,132,132,-16,132,132,132,132,132,132,]),'LOWER':([0,3,8,9,12,15,23,35,36,37,38,40,46,52,53,57,67,73,75,77,86,89,95,99,101,103,104,105,106,107,108,110,118,119,123,124,129,149,150,151,160,162,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,180,182,189,192,201,205,206,209,210,212,214,218,220,227,232,233,238,241,246,247,248,277,279,287,291,298,303,305,314,317,319,335,336,340,344,],[26,-7,26,26,-6,-5,-3,-9,26,26,26,-8,26,26,26,-157,26,-121,-120,26,26,26,-74,-111,-112,26,26,-116,-117,-115,-84,-110,26,26,-4,26,-49,26,26,-158,26,26,-108,-109,26,26,26,-99,-105,-100,-104,-102,-95,-97,-101,-98,-103,-96,-85,-45,-10,26,-181,-75,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'LBRACKET':([11,17,18,19,22,25,33,34,41,45,61,62,63,65,66,68,69,70,71,72,74,78,81,82,83,85,87,90,93,94,109,128,140,147,161,195,199,230,231,234,240,242,249,250,261,273,274,],[-139,104,-199,-136,-135,-137,-140,-200,124,-138,104,-66,-65,-64,-69,-57,-62,-139,-72,162,-55,-60,-68,-67,-140,-56,-58,-63,-59,-61,-143,-140,212,215,104,-211,-201,-73,-144,-145,-212,-202,-141,-142,-140,-70,-71,]),'PROC':([46,],[127,]),'LENGTH':([0,3,8,9,12,15,23,35,36,37,38,40,46,52,53,57,67,73,75,77,86,89,95,99,101,103,104,105,106,107,108,110,118,119,123,124,129,149,150,151,160,162,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,180,182,189,192,201,205,206,209,210,212,214,218,220,227,232,233,238,241,246,247,248,277,279,287,291,298,303,305,314,317,319,335,336,340,344,],[7,-7,7,7,-6,-5,-3,-9,7,7,7,-8,7,7,7,-157,7,-121,-120,7,7,7,-74,-111,-112,7,7,-116,-117,-115,-84,-110,7,7,-4,7,-49,7,7,-158,7,7,-108,-109,7,7,7,-99,-105,-100,-104,-102,-95,-97,-101,-98,-103,-96,-85,-45,-10,7,-181,-75,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'ELSIF':([18,19,22,25,34,41,45,57,60,61,62,63,64,65,66,68,69,70,71,74,78,79,80,81,82,83,84,85,87,88,90,92,93,94,95,109,151,161,163,195,199,200,201,206,225,226,228,229,230,231,234,240,242,248,249,250,273,274,275,278,280,307,310,312,331,332,],[-199,-136,-135,-137,-200,-134,-138,-157,-124,-123,-66,-65,-118,-64,-69,-57,-62,-139,-122,-55,-60,-93,-92,-68,-67,-140,-106,-56,-58,-91,-63,-113,-59,-61,-74,-143,-158,-133,-119,-211,-201,247,-150,-75,-107,-114,277,-94,-73,-144,-145,-212,-202,-151,-141,-142,-70,-71,-128,277,-130,-125,-131,247,-132,-126,]),'FOR':([8,],[58,]),'TO':([18,19,22,25,34,41,45,60,61,62,63,64,65,66,68,69,70,71,74,78,79,80,81,82,83,84,85,87,88,90,92,93,94,109,161,163,195,199,225,226,229,230,231,234,240,242,249,250,267,268,269,273,274,301,304,307,326,329,330,332,],[-199,-136,-135,-137,-200,-134,-138,-124,-123,-66,-65,-118,-64,-69,-57,-62,-139,-122,-55,-60,-93,-92,-68,-67,-140,-106,-56,-58,-91,-63,-113,-59,-61,-143,-133,-119,-211,-201,-107,-114,-94,-73,-144,-145,-212,-202,-141,-142,-177,-174,303,-70,-71,303,303,-125,303,-221,-175,-126,]),'$end':([0,2,3,12,15,23,35,38,40,42,95,123,129,189,192,205,206,],[-222,-2,-7,-6,-5,-3,-9,-1,-8,0,-74,-4,-49,-45,-10,-181,-75,]),'READ':([0,3,8,9,12,15,23,35,36,37,38,40,46,52,53,57,67,73,75,77,86,89,95,99,101,103,104,105,106,107,108,110,118,119,123,124,129,149,150,151,160,162,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,180,182,189,192,201,205,206,209,210,212,214,218,220,227,232,233,238,241,246,247,248,277,279,287,291,298,303,305,314,317,319,335,336,340,344,],[44,-7,44,44,-6,-5,-3,-9,44,44,44,-8,44,44,44,-157,44,-121,-120,44,44,44,-74,-111,-112,44,44,-116,-117,-115,-84,-110,44,44,-4,44,-49,44,44,-158,44,44,-108,-109,44,44,44,-99,-105,-100,-104,-102,-95,-97,-101,-98,-103,-96,-85,-45,-10,44,-181,-75,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'ELSE':([18,19,22,25,34,41,45,57,60,61,62,63,64,65,66,68,69,70,71,74,78,79,80,81,82,83,84,85,87,88,90,92,93,94,95,109,151,161,163,195,199,200,201,206,225,226,228,229,230,231,234,240,242,248,249,250,273,274,275,278,280,307,310,312,331,332,],[-199,-136,-135,-137,-200,-134,-138,-157,-124,-123,-66,-65,-118,-64,-69,-57,-62,-139,-122,-55,-60,-93,-92,-68,-67,-140,-106,-56,-58,-91,-63,-113,-59,-61,-74,-143,-158,-133,-119,-211,-201,246,-150,-75,-107,-114,279,-94,-73,-144,-145,-212,-202,-151,-141,-142,-70,-71,-128,279,-130,-125,-131,246,-132,-126,]),'OD':([8,52,57,95,150,151,206,218,],[56,152,-157,-74,219,-158,-75,266,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'mode':([49,115,138,190,254,297,318,],[131,191,211,236,294,322,338,]),'array_primitive_value':([9,36,37,53,77,86,89,103,104,118,119,124,149,162,166,167,169,209,210,212,214,220,227,232,233,238,241,247,277,279,298,303,305,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'synonym_statement':([0,38,291,314,317,319,335,336,340,344,],[3,3,3,3,3,3,3,3,3,3,]),'discrete_mode_name':([49,115,138,190,212,222,254,270,297,298,318,],[133,133,133,133,133,133,133,133,133,133,133,]),'array_mode':([49,115,138,190,254,297,318,],[135,135,135,135,135,135,135,]),'string_mode':([49,115,138,190,254,297,318,],[136,136,136,136,136,136,136,]),'element_node':([297,],[323,]),'elseif_expression_list':([228,],[278,]),'else_clause':([200,312,],[244,333,]),'operand3':([9,36,37,53,86,89,103,104,118,119,124,149,162,166,167,169,209,210,212,214,220,227,232,233,238,241,247,277,279,298,303,305,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,226,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'control_part':([8,],[51,]),'parameter_list':([118,119,241,],[194,198,285,]),'newmode_statement':([0,38,291,314,317,319,335,336,340,344,],[12,12,12,12,12,12,12,12,12,12,]),'syn_list':([5,],[47,]),'return_action':([0,8,38,46,52,150,160,201,218,246,248,287,291,314,317,319,335,336,340,344,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'builtin_call':([0,8,9,36,37,38,46,52,53,67,77,86,89,103,104,118,119,124,149,150,160,162,166,167,169,201,209,210,212,214,218,220,227,232,233,238,241,246,247,248,277,279,287,291,298,303,305,314,317,319,335,336,340,344,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'arithmetic_multiplicative_operator':([17,84,225,],[100,167,167,]),'label':([0,8,16,38,52,150,201,218,246,248,287,291,314,317,319,335,336,340,344,],[4,59,97,4,59,59,59,59,59,59,59,4,4,4,4,4,4,4,4,]),'action':([0,8,38,46,52,150,160,201,218,246,248,287,291,314,317,319,335,336,340,344,],[14,14,14,126,14,14,126,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'arithmetic_additive_operator':([17,79,229,],[102,164,164,]),'relational_operator':([88,],[175,]),'then_expression':([168,308,],[228,331,]),'parameter_spec':([254,],[295,]),'dereferenced_reference':([0,8,9,36,37,38,46,52,53,67,77,86,89,103,104,118,119,124,149,150,160,162,166,167,169,201,209,210,212,214,218,220,227,232,233,238,241,246,247,248,277,279,287,291,298,303,305,314,317,319,335,336,340,344,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'id_list':([5,24,29,130,188,193,207,289,],[49,113,115,49,113,115,254,254,]),'index_mode':([212,298,],[259,324,]),'for_control':([8,],[54,]),'statement':([0,38,291,314,317,319,335,336,340,344,],[23,123,23,23,123,23,123,23,123,123,]),'mode_definition':([24,188,],[114,235,]),'formal_parameter':([207,289,],[251,251,]),'newmode_list':([24,],[112,]),'range_enumeration':([58,],[158,]),'loop_counter':([58,],[155,]),'monadic_operator':([9,36,37,53,86,89,103,104,118,119,124,149,162,166,167,169,209,210,212,214,220,227,232,233,238,241,247,277,279,298,303,305,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'if_action':([0,8,38,46,52,150,160,201,218,246,248,287,291,314,317,319,335,336,340,344,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'boolean_literal':([9,36,37,53,77,86,89,103,104,118,119,124,149,162,166,167,169,209,210,212,214,220,227,232,233,238,241,247,277,279,298,303,305,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'string_concatenation_operator':([17,79,229,],[111,165,165,]),'conditional_expression':([9,36,37,53,86,89,103,104,118,119,124,149,162,209,210,212,214,220,227,232,233,238,241,247,277,279,298,303,305,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'string_length':([215,],[264,]),'builtin_name':([0,8,9,36,37,38,46,52,53,67,77,86,89,103,104,118,119,124,149,150,160,162,166,167,169,201,209,210,212,214,218,220,227,232,233,238,241,246,247,248,277,279,287,291,298,303,305,314,317,319,335,336,340,344,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'elseif_clause':([200,312,],[243,243,]),'operand0':([9,36,37,53,86,89,103,104,118,119,124,149,162,209,210,212,214,220,227,232,233,238,241,247,277,279,298,303,305,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'start_value':([220,],[269,]),'index_mode_list':([212,],[260,]),'discrete_mode':([49,115,138,190,212,222,254,270,297,298,318,],[141,141,141,141,258,272,141,306,141,258,141,]),'operand2':([9,36,37,53,86,89,103,104,118,119,124,149,162,166,169,209,210,212,214,220,227,232,233,238,241,247,277,279,298,303,305,],[84,84,84,84,84,84,84,84,84,84,84,84,84,225,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'operator2':([79,229,],[166,166,]),'closed_dyadic_operator':([17,],[98,]),'parenthesized_expression':([9,36,37,53,77,86,89,103,104,118,119,124,149,162,166,167,169,209,210,212,214,220,227,232,233,238,241,247,277,279,298,303,305,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'formal_parameter_list':([207,289,],[252,313,]),'then_clause':([121,288,],[200,312,]),'action_statement':([0,8,38,52,150,201,218,246,248,287,291,314,317,319,335,336,340,344,],[40,57,40,151,57,57,151,57,151,151,40,40,40,40,40,40,40,40,]),'declaration_statement':([0,38,291,314,317,319,335,336,340,344,],[15,15,15,15,15,15,15,15,15,15,]),'assignment_action':([0,8,38,46,52,150,160,201,218,246,248,287,291,314,317,319,335,336,340,344,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'reference_mode':([49,115,138,190,254,297,318,],[148,148,148,148,148,148,148,]),'parameter':([118,119,241,],[197,197,197,]),'parameter_attribute':([294,],[321,]),'array_slice':([0,8,9,36,37,38,46,52,53,67,77,86,89,103,104,118,119,124,149,150,160,162,166,167,169,201,209,210,212,214,218,220,227,232,233,238,241,246,247,248,277,279,287,291,298,303,305,314,317,319,335,336,340,344,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'value_array_element':([9,36,37,53,77,86,89,103,104,118,119,124,149,162,166,167,169,209,210,212,214,220,227,232,233,238,241,247,277,279,298,303,305,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'referenced_location':([9,36,37,53,77,86,89,103,104,118,119,124,149,162,166,167,169,209,210,212,214,220,227,232,233,238,241,247,277,279,298,303,305,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'empty':([0,],[2,]),'end_value':([269,301,304,326,],[302,325,328,341,]),'constant_expression':([149,209,],[217,255,]),'assigning_operator':([17,],[103,]),'composite_mode':([49,115,138,190,254,297,318,],[137,137,137,137,137,137,137,]),'operand4':([9,36,37,53,77,86,89,103,104,118,119,124,149,162,166,167,169,209,210,212,214,220,227,232,233,238,241,247,277,279,298,303,305,],[64,64,64,64,163,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'exit_action':([0,8,38,46,52,150,160,201,218,246,248,287,291,314,317,319,335,336,340,344,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'mode_name':([49,115,138,190,254,297,318,],[142,142,142,142,142,142,142,]),'syn_definition':([5,130,],[50,208,]),'call_action':([0,8,9,36,37,38,46,52,53,67,77,86,89,103,104,118,119,124,149,150,160,162,166,167,169,201,209,210,212,214,218,220,227,232,233,238,241,246,247,248,277,279,287,291,298,303,305,314,317,319,335,336,340,344,],[11,11,70,70,70,11,11,11,70,70,70,70,70,70,70,70,70,70,70,11,11,70,70,70,70,11,70,70,70,70,11,70,70,70,70,70,70,11,70,11,70,70,11,11,70,70,70,11,11,11,11,11,11,11,]),'integer_expression':([124,305,],[203,330,]),'operator1':([88,],[169,]),'location_name':([0,8,9,36,37,38,46,52,53,67,77,86,89,103,104,118,119,124,149,150,160,162,166,167,169,201,209,210,212,214,218,220,227,232,233,238,241,246,247,248,277,279,287,291,298,303,305,314,317,319,335,336,340,344,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'declaration_list':([29,],[117,]),'action_statement_list':([8,150,201,246,],[52,218,248,287,]),'iteration':([58,],[159,]),'program':([0,],[42,]),'string_literal':([9,36,37,53,77,86,89,103,104,118,119,124,149,162,166,167,169,209,210,212,214,220,227,232,233,238,241,247,277,279,298,303,305,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'location':([0,8,9,36,37,38,46,52,53,67,77,86,89,103,104,118,119,124,149,150,160,162,166,167,169,201,209,210,212,214,218,220,227,232,233,238,241,246,247,248,277,279,287,291,298,303,305,314,317,319,335,336,340,344,],[17,17,61,61,61,17,17,17,61,161,61,61,61,61,61,61,61,61,61,17,17,61,61,61,61,17,61,61,61,61,17,61,61,61,61,61,61,17,61,17,61,61,17,17,61,61,61,17,17,17,17,17,17,17,]),'result':([9,37,],[91,122,]),'empty_literal':([9,36,37,53,77,86,89,103,104,118,119,124,149,162,166,167,169,209,210,212,214,220,227,232,233,238,241,247,277,279,298,303,305,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'discrete_expression':([220,303,],[268,327,]),'lower_bound':([104,124,162,210,212,214,298,],[185,185,185,185,185,185,185,]),'declaration':([29,193,],[116,239,]),'result_action':([0,8,38,46,52,150,160,201,218,246,248,287,291,314,317,319,335,336,340,344,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'string_reference':([0,8,9,36,37,38,46,52,53,67,77,86,89,103,104,118,119,124,149,150,160,162,166,167,169,201,209,210,212,214,218,220,227,232,233,238,241,246,247,248,277,279,287,291,298,303,305,314,317,319,335,336,340,344,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'operand1':([9,36,37,53,86,89,103,104,118,119,124,149,162,169,209,210,212,214,220,227,232,233,238,241,247,277,279,298,303,305,],[79,79,79,79,79,79,79,79,79,79,79,79,79,229,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'array_element':([0,8,9,36,37,38,46,52,53,67,77,86,89,103,104,118,119,124,149,150,160,162,166,167,169,201,209,210,212,214,218,220,227,232,233,238,241,246,247,248,277,279,287,291,298,303,305,314,317,319,335,336,340,344,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'expression':([9,36,37,53,86,89,103,104,118,119,124,149,162,209,210,212,214,220,227,232,233,238,241,247,277,279,298,303,305,],[76,120,76,120,120,181,183,186,196,196,202,216,186,216,256,256,256,267,275,281,282,284,196,120,120,311,256,267,329,]),'do_action':([0,8,38,46,52,150,160,201,218,246,248,287,291,314,317,319,335,336,340,344,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'initialization':([191,],[237,]),'step_enumeration':([58,],[156,]),'literal':([9,36,37,53,77,86,89,103,104,118,119,124,149,162,166,167,169,209,210,212,214,220,227,232,233,238,241,247,277,279,298,303,305,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'result_spec':([253,290,],[293,315,]),'result_attribute':([338,],[346,]),'integer_literal':([9,36,37,53,77,86,89,103,104,118,119,124,149,162,166,167,169,209,210,212,214,220,227,232,233,238,241,247,277,279,298,303,305,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'while_control':([8,54,],[55,154,]),'expression_list':([104,162,],[184,223,]),'procedure_statement':([0,38,291,314,317,319,335,336,340,344,],[35,35,35,35,35,35,35,35,35,35,]),'step_value':([269,],[301,]),'else_expression':([228,278,],[276,309,]),'statement_list':([0,291,314,319,336,],[38,317,335,340,344,]),'upper_bound':([233,],[283,]),'basic_mode':([49,115,138,190,212,222,254,270,297,298,318,],[146,146,146,146,146,146,146,146,146,146,146,]),'bracketed_action':([0,8,38,46,52,150,160,201,218,246,248,287,291,314,317,319,335,336,340,344,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'discrete_range_mode':([49,115,138,190,212,222,254,270,297,298,318,],[144,144,144,144,144,144,144,144,144,144,144,]),'elseif_expression':([228,278,],[280,310,]),'value_array_slice':([9,36,37,53,77,86,89,103,104,118,119,124,149,162,166,167,169,209,210,212,214,220,227,232,233,238,241,247,277,279,298,303,305,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'primitive_value':([9,36,37,53,77,86,89,103,104,118,119,124,149,162,166,167,169,209,210,212,214,220,227,232,233,238,241,247,277,279,298,303,305,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'procedure_call':([0,8,9,36,37,38,46,52,53,67,77,86,89,103,104,118,119,124,149,150,160,162,166,167,169,201,209,210,212,214,218,220,227,232,233,238,241,246,247,248,277,279,287,291,298,303,305,314,317,319,335,336,340,344,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'boolean_expression':([36,53,86,247,277,],[121,153,168,288,308,]),'procedure_definition':([46,],[125,]),'literal_range':([104,124,162,210,212,214,298,],[187,204,224,257,262,263,262,]),'membership_operator':([88,],[180,]),'char_literal':([9,36,37,53,77,86,89,103,104,118,119,124,149,162,166,167,169,209,210,212,214,220,227,232,233,238,241,247,277,279,298,303,305,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','lyaParser.py',64),
  ('program -> empty','program',1,'p_program','lyaParser.py',65),
  ('statement_list -> statement','statement_list',1,'p_statement_list1','lyaParser.py',72),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list1','lyaParser.py',73),
  ('statement -> declaration_statement','statement',1,'p_statement','lyaParser.py',80),
  ('statement -> newmode_statement','statement',1,'p_statement','lyaParser.py',81),
  ('statement -> synonym_statement','statement',1,'p_statement','lyaParser.py',82),
  ('statement -> action_statement','statement',1,'p_statement','lyaParser.py',83),
  ('statement -> procedure_statement','statement',1,'p_statement','lyaParser.py',84),
  ('declaration_statement -> DCL declaration_list SMC','declaration_statement',3,'p_declaration_statement','lyaParser.py',92),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','lyaParser.py',96),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','lyaParser.py',97),
  ('declaration -> id_list mode initialization','declaration',3,'p_declaration1','lyaParser.py',104),
  ('declaration -> id_list mode','declaration',2,'p_declaration2','lyaParser.py',108),
  ('id_list -> ID','id_list',1,'p_id_list','lyaParser.py',112),
  ('id_list -> id_list COMMA ID','id_list',3,'p_id_list','lyaParser.py',113),
  ('initialization -> EQUALS expression','initialization',2,'p_initialization','lyaParser.py',120),
  ('mode -> mode_name','mode',1,'p_mode','lyaParser.py',128),
  ('mode -> discrete_mode','mode',1,'p_mode','lyaParser.py',129),
  ('mode -> reference_mode','mode',1,'p_mode','lyaParser.py',130),
  ('mode -> composite_mode','mode',1,'p_mode','lyaParser.py',131),
  ('mode_name -> ID','mode_name',1,'p_mode_name','lyaParser.py',135),
  ('discrete_mode -> basic_mode','discrete_mode',1,'p_discrete_mode','lyaParser.py',139),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','lyaParser.py',140),
  ('basic_mode -> INT','basic_mode',1,'p_basic_mode','lyaParser.py',144),
  ('basic_mode -> BOOL','basic_mode',1,'p_basic_mode','lyaParser.py',145),
  ('basic_mode -> CHAR','basic_mode',1,'p_basic_mode','lyaParser.py',146),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaParser.py',150),
  ('discrete_range_mode -> basic_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaParser.py',151),
  ('discrete_mode_name -> ID','discrete_mode_name',1,'p_discrete_mode_name','lyaParser.py',155),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_litereal_range','lyaParser.py',159),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','lyaParser.py',163),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','lyaParser.py',167),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','lyaParser.py',171),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','lyaParser.py',175),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','lyaParser.py',176),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','lyaParser.py',180),
  ('string_length -> INTCONST','string_length',1,'p_string_length','lyaParser.py',184),
  ('array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_node','array_mode',5,'p_array_mode','lyaParser.py',188),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','lyaParser.py',193),
  ('index_mode_list -> index_mode_list COMMA index_mode','index_mode_list',3,'p_index_mode_list','lyaParser.py',194),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','lyaParser.py',201),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','lyaParser.py',202),
  ('element_node -> mode','element_node',1,'p_element_node','lyaParser.py',206),
  ('newmode_statement -> TYPE newmode_list SMC','newmode_statement',3,'p_newmode_statement','lyaParser.py',214),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','lyaParser.py',218),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','lyaParser.py',219),
  ('mode_definition -> id_list EQUALS mode','mode_definition',3,'p_mode_definition','lyaParser.py',226),
  ('synonym_statement -> SYN syn_list SMC','synonym_statement',3,'p_synonym_statement','lyaParser.py',230),
  ('syn_list -> syn_definition','syn_list',1,'p_syn_list','lyaParser.py',238),
  ('syn_list -> syn_list COMMA syn_definition','syn_list',3,'p_syn_list','lyaParser.py',239),
  ('syn_definition -> id_list EQUALS constant_expression','syn_definition',3,'p_syn_definition','lyaParser.py',246),
  ('syn_definition -> id_list mode EQUALS constant_expression','syn_definition',4,'p_syn_definition2','lyaParser.py',250),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','lyaParser.py',254),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','lyaParser.py',262),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','lyaParser.py',263),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','lyaParser.py',264),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','lyaParser.py',265),
  ('literal -> integer_literal','literal',1,'p_literal','lyaParser.py',269),
  ('literal -> boolean_literal','literal',1,'p_literal','lyaParser.py',270),
  ('literal -> char_literal','literal',1,'p_literal','lyaParser.py',271),
  ('literal -> empty_literal','literal',1,'p_literal','lyaParser.py',272),
  ('literal -> string_literal','literal',1,'p_literal','lyaParser.py',273),
  ('integer_literal -> INTCONST','integer_literal',1,'p_integer_literal','lyaParser.py',277),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','lyaParser.py',281),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','lyaParser.py',282),
  ('char_literal -> CHARCONST','char_literal',1,'p_char_literal','lyaParser.py',286),
  ('string_literal -> STRINGCONST','string_literal',1,'p_string_literal','lyaParser.py',290),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','lyaParser.py',294),
  ('value_array_element -> array_primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','lyaParser.py',298),
  ('value_array_slice -> array_primitive_value LBRACKET literal_range RBRACKET','value_array_slice',4,'p_value_array_slice','lyaParser.py',302),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','lyaParser.py',306),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','lyaParser.py',310),
  ('action_statement -> action SMC','action_statement',2,'p_action_statement','lyaParser.py',318),
  ('action_statement -> label COLON action SMC','action_statement',4,'p_action_statement','lyaParser.py',319),
  ('label -> ID','label',1,'p_label','lyaParser.py',326),
  ('action -> assignment_action','action',1,'p_action','lyaParser.py',330),
  ('action -> bracketed_action','action',1,'p_action','lyaParser.py',331),
  ('action -> call_action','action',1,'p_action','lyaParser.py',332),
  ('action -> exit_action','action',1,'p_action','lyaParser.py',333),
  ('action -> return_action','action',1,'p_action','lyaParser.py',334),
  ('action -> result_action','action',1,'p_action','lyaParser.py',335),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','lyaParser.py',343),
  ('assigning_operator -> EQUALS','assigning_operator',1,'p_assigning_operator','lyaParser.py',347),
  ('assigning_operator -> closed_dyadic_operator EQUALS','assigning_operator',2,'p_assigning_operator','lyaParser.py',348),
  ('closed_dyadic_operator -> arithmetic_additive_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','lyaParser.py',355),
  ('closed_dyadic_operator -> arithmetic_multiplicative_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','lyaParser.py',356),
  ('closed_dyadic_operator -> string_concatenation_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','lyaParser.py',357),
  ('expression_list -> expression','expression_list',1,'p_expression_list','lyaParser.py',361),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','lyaParser.py',362),
  ('expression -> operand0','expression',1,'p_expression','lyaParser.py',369),
  ('expression -> conditional_expression','expression',1,'p_expression','lyaParser.py',370),
  ('operand0 -> operand1','operand0',1,'p_operand0','lyaParser.py',374),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','lyaParser.py',375),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','lyaParser.py',382),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','lyaParser.py',383),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','lyaParser.py',387),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','lyaParser.py',391),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','lyaParser.py',392),
  ('relational_operator -> ISEQUAL','relational_operator',1,'p_relational_operator','lyaParser.py',393),
  ('relational_operator -> NOTEQUAL','relational_operator',1,'p_relational_operator','lyaParser.py',394),
  ('relational_operator -> GT','relational_operator',1,'p_relational_operator','lyaParser.py',395),
  ('relational_operator -> GE','relational_operator',1,'p_relational_operator','lyaParser.py',396),
  ('relational_operator -> LT','relational_operator',1,'p_relational_operator','lyaParser.py',397),
  ('relational_operator -> LE','relational_operator',1,'p_relational_operator','lyaParser.py',398),
  ('operand1 -> operand2','operand1',1,'p_operand1','lyaParser.py',402),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1','lyaParser.py',403),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','lyaParser.py',410),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','lyaParser.py',411),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','lyaParser.py',415),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','lyaParser.py',416),
  ('string_concatenation_operator -> STRCONC','string_concatenation_operator',1,'p_string_concatenation_operator','lyaParser.py',420),
  ('operand2 -> operand3','operand2',1,'p_operand2','lyaParser.py',424),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','lyaParser.py',425),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaParser.py',432),
  ('arithmetic_multiplicative_operator -> DIV','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaParser.py',433),
  ('arithmetic_multiplicative_operator -> MOD','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaParser.py',434),
  ('operand3 -> operand4','operand3',1,'p_operand3','lyaParser.py',438),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','lyaParser.py',439),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','lyaParser.py',446),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','lyaParser.py',447),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','lyaParser.py',451),
  ('operand4 -> location','operand4',1,'p_operand4','lyaParser.py',452),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','lyaParser.py',453),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','lyaParser.py',459),
  ('conditional_expression -> IF boolean_expression then_expression elseif_expression_list else_expression FI','conditional_expression',6,'p_conditional_expression2','lyaParser.py',463),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','lyaParser.py',467),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','lyaParser.py',471),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','lyaParser.py',475),
  ('elseif_expression_list -> elseif_expression','elseif_expression_list',1,'p_elseif_expression_list','lyaParser.py',479),
  ('elseif_expression_list -> elseif_expression_list elseif_expression','elseif_expression_list',2,'p_elseif_expression_list','lyaParser.py',480),
  ('elseif_expression -> ELSIF boolean_expression then_expression','elseif_expression',3,'p_elseif_expression','lyaParser.py',487),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','lyaParser.py',495),
  ('location -> location_name','location',1,'p_location','lyaParser.py',499),
  ('location -> string_reference','location',1,'p_location','lyaParser.py',500),
  ('location -> dereferenced_reference','location',1,'p_location','lyaParser.py',501),
  ('location -> array_element','location',1,'p_location','lyaParser.py',502),
  ('location -> array_slice','location',1,'p_location','lyaParser.py',503),
  ('location -> call_action','location',1,'p_location','lyaParser.py',504),
  ('location_name -> ID','location_name',1,'p_location_name','lyaParser.py',508),
  ('string_reference -> location_name LBRACKET integer_expression RBRACKET','string_reference',4,'p_string_reference','lyaParser.py',512),
  ('string_reference -> location_name LBRACKET literal_range RBRACKET','string_reference',4,'p_string_reference2','lyaParser.py',516),
  ('dereferenced_reference -> location ARROW','dereferenced_reference',2,'p_dereferenced_reference','lyaParser.py',520),
  ('array_element -> location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','lyaParser.py',524),
  ('array_slice -> location LBRACKET literal_range RBRACKET','array_slice',4,'p_array_slice','lyaParser.py',528),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','lyaParser.py',536),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','lyaParser.py',537),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','lyaParser.py',545),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action2','lyaParser.py',549),
  ('then_clause -> THEN','then_clause',1,'p_then_clause','lyaParser.py',553),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','lyaParser.py',554),
  ('else_clause -> ELSE','else_clause',1,'p_else_clause','lyaParser.py',561),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','lyaParser.py',562),
  ('else_clause -> elseif_clause','else_clause',1,'p_else_clause2','lyaParser.py',569),
  ('elseif_clause -> ELSIF boolean_expression then_clause','elseif_clause',3,'p_elseif_clause','lyaParser.py',573),
  ('elseif_clause -> ELSIF boolean_expression then_clause else_clause','elseif_clause',4,'p_elseif_clause2','lyaParser.py',577),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','lyaParser.py',582),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','lyaParser.py',583),
  ('do_action -> DO OD','do_action',2,'p_do_action','lyaParser.py',594),
  ('do_action -> DO control_part SMC OD','do_action',4,'p_do_action2','lyaParser.py',598),
  ('do_action -> DO control_part SMC action_statement_list OD','do_action',5,'p_do_action3','lyaParser.py',602),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action4','lyaParser.py',606),
  ('control_part -> for_control','control_part',1,'p_control_part','lyaParser.py',610),
  ('control_part -> while_control','control_part',1,'p_control_part','lyaParser.py',611),
  ('control_part -> for_control while_control','control_part',2,'p_control_part2','lyaParser.py',615),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','lyaParser.py',619),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','lyaParser.py',623),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','lyaParser.py',624),
  ('step_enumeration -> loop_counter EQUALS start_value end_value','step_enumeration',4,'p_step_enumeration','lyaParser.py',628),
  ('step_enumeration -> loop_counter EQUALS start_value step_value end_value','step_enumeration',5,'p_step_enumeration2','lyaParser.py',632),
  ('step_enumeration -> loop_counter EQUALS start_value DOWN end_value','step_enumeration',5,'p_step_enumeration3','lyaParser.py',636),
  ('step_enumeration -> loop_counter EQUALS start_value step_value DOWN end_value','step_enumeration',6,'p_step_enumeration4','lyaParser.py',640),
  ('loop_counter -> ID','loop_counter',1,'p_loop_counter','lyaParser.py',644),
  ('start_value -> discrete_expression','start_value',1,'p_start_value','lyaParser.py',648),
  ('step_value -> BY integer_expression','step_value',2,'p_step_value','lyaParser.py',652),
  ('end_value -> TO discrete_expression','end_value',2,'p_end_value','lyaParser.py',656),
  ('discrete_expression -> expression','discrete_expression',1,'p_discrete_expression','lyaParser.py',660),
  ('range_enumeration -> loop_counter IN discrete_mode','range_enumeration',3,'p_range_enumeration','lyaParser.py',664),
  ('range_enumeration -> loop_counter DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration2','lyaParser.py',668),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','lyaParser.py',672),
  ('procedure_statement -> label COLON procedure_definition SMC','procedure_statement',4,'p_procedure_statement','lyaParser.py',680),
  ('procedure_definition -> PROC LPAREN RPAREN SMC END','procedure_definition',5,'p_procedure_definition1','lyaParser.py',684),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SMC statement_list END','procedure_definition',7,'p_procedure_definition1','lyaParser.py',685),
  ('procedure_definition -> PROC LPAREN RPAREN SMC statement_list END','procedure_definition',6,'p_procedure_definition1','lyaParser.py',686),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SMC END','procedure_definition',6,'p_procedure_definition2','lyaParser.py',695),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SMC END','procedure_definition',7,'p_procedure_definition2','lyaParser.py',696),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SMC statement_list END','procedure_definition',8,'p_procedure_definition2','lyaParser.py',697),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SMC statement_list END','procedure_definition',7,'p_procedure_definition3','lyaParser.py',706),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SMC END','procedure_definition',6,'p_procedure_definition3','lyaParser.py',707),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','lyaParser.py',714),
  ('formal_parameter_list -> formal_parameter COMMA formal_parameter_list','formal_parameter_list',3,'p_formal_parameter_list','lyaParser.py',715),
  ('formal_parameter -> id_list parameter_spec','formal_parameter',2,'p_formal_parameter','lyaParser.py',722),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','lyaParser.py',726),
  ('parameter_spec -> mode parameter_attribute','parameter_spec',2,'p_parameter_spec','lyaParser.py',727),
  ('parameter_attribute -> LOC','parameter_attribute',1,'p_parameter_attribute','lyaParser.py',734),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','lyaParser.py',738),
  ('result_spec -> RETURNS LPAREN mode result_attribute RPAREN','result_spec',5,'p_result_spec','lyaParser.py',739),
  ('result_attribute -> LOC','result_attribute',1,'p_result_attribute','lyaParser.py',746),
  ('call_action -> procedure_call','call_action',1,'p_call_action','lyaParser.py',754),
  ('call_action -> builtin_call','call_action',1,'p_call_action','lyaParser.py',755),
  ('procedure_call -> ID LPAREN RPAREN','procedure_call',3,'p_procedure_call','lyaParser.py',759),
  ('procedure_call -> ID LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','lyaParser.py',760),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','lyaParser.py',767),
  ('parameter_list -> parameter COMMA parameter_list','parameter_list',3,'p_parameter_list','lyaParser.py',768),
  ('parameter -> expression','parameter',1,'p_parameter','lyaParser.py',775),
  ('exit_action -> EXIT label','exit_action',2,'p_exit_action','lyaParser.py',783),
  ('return_action -> RETURN','return_action',1,'p_return_action','lyaParser.py',787),
  ('return_action -> RETURN result','return_action',2,'p_return_action','lyaParser.py',788),
  ('result_action -> RESULT result','result_action',2,'p_result_action','lyaParser.py',795),
  ('result -> expression','result',1,'p_result','lyaParser.py',799),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','lyaParser.py',803),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','lyaParser.py',804),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','lyaParser.py',811),
  ('builtin_name -> PRED','builtin_name',1,'p_builtin_name','lyaParser.py',812),
  ('builtin_name -> SUCC','builtin_name',1,'p_builtin_name','lyaParser.py',813),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','lyaParser.py',814),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','lyaParser.py',815),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','lyaParser.py',816),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','lyaParser.py',817),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','lyaParser.py',818),
  ('integer_expression -> expression','integer_expression',1,'p_integer_expression','lyaParser.py',827),
  ('empty -> <empty>','empty',0,'p_empty','lyaParser.py',834),
]
