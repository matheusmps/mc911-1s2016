
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'D06835AF31C6D95A66AF0B90B651E0C9'
    
_lr_action_items = {'MINUS':([1,6,8,9,11,17,18,24,27,30,32,41,44,47,48,51,54,55,56,57,58,59,60,61,62,63,65,66,67,68,69,71,73,74,75,78,79,80,81,82,85,86,87,88,89,91,92,93,96,97,104,105,115,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,145,156,178,182,198,202,205,206,207,208,209,218,219,220,221,222,223,224,228,230,231,232,234,235,236,241,247,255,256,257,258,274,298,301,303,],[-135,50,-134,-136,-139,96,-199,-200,-137,-138,-140,50,50,-118,-67,-66,-60,-106,96,50,-59,-113,-56,-58,-63,-123,50,-122,-69,-139,-64,-55,-124,-140,-62,-57,-65,-68,-61,50,50,-117,-110,-112,-115,-116,50,-143,-111,-84,50,50,50,-119,-133,-101,50,-102,-97,-100,-98,-95,-104,-105,-96,-103,-99,50,-109,-108,50,50,-85,-201,-211,-140,50,96,-114,-107,-73,50,50,-141,-142,50,-145,-144,50,50,50,50,50,-202,50,-212,50,50,50,50,-71,-70,-140,50,50,50,]),'FI':([1,8,9,18,24,27,30,46,47,48,51,53,54,55,56,58,59,60,61,62,63,66,67,68,69,71,73,74,75,76,78,79,80,81,93,110,125,126,146,147,178,182,191,205,206,207,208,213,214,216,217,219,220,222,223,234,236,244,253,257,258,260,289,291,292,294,313,315,],[-135,-134,-136,-199,-200,-137,-138,-74,-118,-67,-66,-91,-60,-106,-93,-59,-113,-56,-58,-63,-123,-122,-69,-139,-64,-55,-124,-140,-62,-92,-57,-65,-68,-61,-143,-157,-119,-133,-150,215,-201,-211,-158,-94,-114,-107,-73,-151,259,-154,-152,-141,-142,-145,-144,-202,-212,-75,289,-71,-70,-153,-125,313,-129,-155,-126,-156,]),'CHARCONST':([6,41,44,49,50,57,64,65,82,85,86,87,88,89,91,92,96,97,104,105,115,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,145,156,202,209,218,221,224,228,230,231,232,235,241,247,255,256,298,301,303,],[48,48,48,48,-120,48,-121,48,48,48,-117,-110,-112,-115,-116,48,-111,-84,48,48,48,-101,48,-102,-97,-100,-98,-95,-104,-105,-96,-103,-99,48,-109,-108,48,48,-85,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'NOT':([6,41,44,57,65,82,85,86,87,88,89,91,92,96,97,104,105,115,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,145,156,202,209,218,221,224,228,230,231,232,235,241,247,255,256,298,301,303,],[64,64,64,64,64,64,64,-117,-110,-112,-115,-116,64,-111,-84,64,64,64,-101,64,-102,-97,-100,-98,-95,-104,-105,-96,-103,-99,64,-109,-108,64,64,-85,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'PRED':([0,2,3,6,7,13,14,15,33,38,41,44,46,49,50,52,57,64,65,82,83,85,86,87,88,89,91,92,96,97,104,105,110,113,115,120,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,145,146,156,157,184,191,195,196,202,203,209,213,217,218,221,224,228,230,231,232,235,241,243,244,246,247,255,256,260,298,301,303,310,326,330,333,335,336,340,342,],[31,-8,-5,31,-9,-7,-6,31,-3,31,31,31,-74,31,-120,31,31,-121,31,31,-4,31,-117,-110,-112,-115,-116,31,-111,-84,31,31,-157,31,31,31,-101,31,-102,-97,-100,-98,-95,-104,-105,-96,-103,-99,31,-109,-108,31,31,31,-85,-10,-45,-158,31,31,31,-49,31,31,31,31,31,31,31,31,31,31,31,31,31,-75,-181,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'GT':([1,8,9,18,24,27,30,47,48,51,53,54,55,56,58,59,60,61,62,63,66,67,68,69,71,73,74,75,78,79,80,81,93,125,126,178,182,205,206,207,208,219,220,222,223,234,236,257,258,274,],[-135,-134,-136,-199,-200,-137,-138,-118,-67,-66,129,-60,-106,-93,-59,-113,-56,-58,-63,-123,-122,-69,-139,-64,-55,-124,-140,-62,-57,-65,-68,-61,-143,-119,-133,-201,-211,-94,-114,-107,-73,-141,-142,-145,-144,-202,-212,-71,-70,-140,]),'END':([2,3,7,13,14,33,46,83,157,184,203,244,246,310,326,330,333,335,336,340,342,],[-8,-5,-9,-7,-6,-3,-74,-4,-10,-45,-49,-75,-181,331,337,338,341,343,344,348,349,]),'ELSIF':([1,8,9,18,24,27,30,46,47,48,51,53,54,55,56,58,59,60,61,62,63,66,67,68,69,71,73,74,75,76,78,79,80,81,93,110,125,126,146,147,178,182,191,205,206,207,208,210,213,219,220,222,223,234,236,244,251,252,254,257,258,289,290,294,313,314,],[-135,-134,-136,-199,-200,-137,-138,-74,-118,-67,-66,-91,-60,-106,-93,-59,-113,-56,-58,-63,-123,-122,-69,-139,-64,-55,-124,-140,-62,-92,-57,-65,-68,-61,-143,-157,-119,-133,-150,218,-201,-211,-158,-94,-114,-107,-73,256,-151,-141,-142,-145,-144,-202,-212,-75,-128,-130,256,-71,-70,-125,-131,218,-126,-132,]),'$end':([0,2,3,7,13,14,15,22,28,33,46,83,157,184,203,244,246,],[-222,-8,-5,-9,-7,-6,-1,0,-2,-3,-74,-4,-10,-45,-49,-75,-181,]),'RBRACKET':([1,8,9,18,24,27,30,47,48,51,53,54,55,56,58,59,60,61,62,63,66,67,68,69,71,73,74,75,76,78,79,80,81,93,125,126,148,149,150,153,154,155,162,166,167,170,173,178,182,205,206,207,208,211,212,219,220,222,223,234,236,257,258,262,263,264,265,266,270,271,272,273,289,296,299,313,318,],[-135,-134,-136,-199,-200,-137,-138,-118,-67,-66,-91,-60,-106,-93,-59,-113,-56,-58,-63,-123,-122,-69,-139,-64,-55,-124,-140,-62,-92,-57,-65,-68,-61,-143,-119,-133,219,-221,220,-89,222,223,-24,-27,-23,-25,-26,-201,-211,-94,-114,-107,-73,257,258,-141,-142,-145,-144,-202,-212,-71,-70,-31,-33,-90,-38,295,-40,-42,297,-43,-125,-29,-28,-126,-41,]),'LBRACKET':([1,8,9,11,17,18,24,27,30,32,48,51,54,58,60,61,62,63,66,67,68,69,71,72,74,75,78,79,80,81,93,126,160,171,178,182,198,208,219,220,222,223,234,236,257,258,274,],[-135,82,-136,-139,92,-199,-200,-137,-138,-140,-67,-66,-60,-59,-56,-58,-63,92,-72,-69,-139,-64,-55,145,-140,-62,-57,-65,-68,-61,-143,92,227,231,-201,-211,-140,-73,-141,-142,-145,-144,-202,-212,-71,-70,-140,]),'ARROW':([1,6,8,9,11,17,18,24,27,30,32,41,44,49,50,57,63,64,65,68,74,82,85,86,87,88,89,91,92,93,96,97,104,105,115,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,145,156,178,182,198,202,209,218,219,220,221,222,223,224,228,230,231,232,234,235,236,241,247,255,256,274,298,301,303,],[-135,52,-134,-136,-139,93,-199,-200,-137,-138,-140,52,52,52,-120,52,93,-121,52,-139,-140,52,52,-117,-110,-112,-115,-116,52,-143,-111,-84,52,52,52,93,-101,52,-102,-97,-100,-98,-95,-104,-105,-96,-103,-99,52,-109,-108,52,52,-85,-201,-211,-140,52,52,52,-141,-142,52,-145,-144,52,52,52,52,52,-202,52,-212,52,52,52,52,-140,52,52,52,]),'DO':([0,2,3,7,13,14,15,33,38,46,83,110,113,120,146,157,184,191,195,196,203,213,217,243,244,246,260,310,326,330,333,335,336,340,342,],[38,-8,-5,-9,-7,-6,38,-3,38,-74,-4,-157,38,38,38,-10,-45,-158,38,38,-49,38,38,38,-75,-181,38,38,38,38,38,38,38,38,38,]),'FOR':([38,],[111,]),'MOD':([1,8,9,11,17,18,24,27,30,32,47,48,51,54,55,58,59,60,61,62,63,66,67,68,69,71,73,74,75,78,79,80,81,93,125,126,178,182,198,206,207,208,219,220,222,223,234,236,257,258,274,],[-135,-134,-136,-139,86,-199,-200,-137,-138,-140,-118,-67,-66,-60,86,-59,-113,-56,-58,-63,-123,-122,-69,-139,-64,-55,-124,-140,-62,-57,-65,-68,-61,-143,-119,-133,-201,-211,-140,-114,86,-73,-141,-142,-145,-144,-202,-212,-71,-70,-140,]),'STRCONC':([1,8,9,11,17,18,24,27,30,32,47,48,51,54,55,56,58,59,60,61,62,63,66,67,68,69,71,73,74,75,78,79,80,81,93,125,126,178,182,198,205,206,207,208,219,220,222,223,234,236,257,258,274,],[-135,-134,-136,-139,88,-199,-200,-137,-138,-140,-118,-67,-66,-60,-106,88,-59,-113,-56,-58,-63,-123,-122,-69,-139,-64,-55,-124,-140,-62,-57,-65,-68,-61,-143,-119,-133,-201,-211,-140,88,-114,-107,-73,-141,-142,-145,-144,-202,-212,-71,-70,-140,]),'LOWER':([0,2,3,6,7,13,14,15,33,38,41,44,46,49,50,52,57,64,65,82,83,85,86,87,88,89,91,92,96,97,104,105,110,113,115,120,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,145,146,156,157,184,191,195,196,202,203,209,213,217,218,221,224,228,230,231,232,235,241,243,244,246,247,255,256,260,298,301,303,310,326,330,333,335,336,340,342,],[39,-8,-5,39,-9,-7,-6,39,-3,39,39,39,-74,39,-120,39,39,-121,39,39,-4,39,-117,-110,-112,-115,-116,39,-111,-84,39,39,-157,39,39,39,-101,39,-102,-97,-100,-98,-95,-104,-105,-96,-103,-99,39,-109,-108,39,39,39,-85,-10,-45,-158,39,39,39,-49,39,39,39,39,39,39,39,39,39,39,39,39,39,-75,-181,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'CHAR':([102,103,123,159,183,231,233,239,279,286,297,298,332,],[166,-15,166,166,166,166,-16,166,166,166,166,166,166,]),'NULL':([6,41,44,49,50,57,64,65,82,85,86,87,88,89,91,92,96,97,104,105,115,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,145,156,202,209,218,221,224,228,230,231,232,235,241,247,255,256,298,301,303,],[67,67,67,67,-120,67,-121,67,67,67,-117,-110,-112,-115,-116,67,-111,-84,67,67,67,-101,67,-102,-97,-100,-98,-95,-104,-105,-96,-103,-99,67,-109,-108,67,67,-85,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'PLUS':([1,8,9,11,17,18,24,27,30,32,47,48,51,54,55,56,58,59,60,61,62,63,66,67,68,69,71,73,74,75,78,79,80,81,93,125,126,178,182,198,205,206,207,208,219,220,222,223,234,236,257,258,274,],[-135,-134,-136,-139,87,-199,-200,-137,-138,-140,-118,-67,-66,-60,-106,87,-59,-113,-56,-58,-63,-123,-122,-69,-139,-64,-55,-124,-140,-62,-57,-65,-68,-61,-143,-119,-133,-201,-211,-140,87,-114,-107,-73,-141,-142,-145,-144,-202,-212,-71,-70,-140,]),'IN':([1,8,9,18,24,27,30,47,48,51,53,54,55,56,58,59,60,61,62,63,66,67,68,69,71,73,74,75,78,79,80,81,93,125,126,178,182,189,190,205,206,207,208,219,220,222,223,234,236,240,257,258,274,],[-135,-134,-136,-199,-200,-137,-138,-118,-67,-66,130,-60,-106,-93,-59,-113,-56,-58,-63,-123,-122,-69,-139,-64,-55,-124,-140,-62,-57,-65,-68,-61,-143,-119,-133,-201,-211,239,-173,-94,-114,-107,-73,-141,-142,-145,-144,-202,-212,279,-71,-70,-140,]),'THEN':([1,8,9,18,24,27,30,47,48,51,53,54,55,56,58,59,60,61,62,63,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,93,125,126,144,178,182,205,206,207,208,219,220,222,223,234,236,257,258,261,289,293,313,],[-135,-134,-136,-199,-200,-137,-138,-118,-67,-66,-91,-60,-106,-93,-59,-113,-56,-58,-63,-123,-122,-69,-139,-64,-127,-55,-124,-140,-62,-92,146,-57,-65,-68,-61,-143,-119,-133,209,-201,-211,-94,-114,-107,-73,-141,-142,-145,-144,-202,-212,-71,-70,146,-125,209,-126,]),'TRUE':([6,41,44,49,50,57,64,65,82,85,86,87,88,89,91,92,96,97,104,105,115,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,145,156,202,209,218,221,224,228,230,231,232,235,241,247,255,256,298,301,303,],[51,51,51,51,-120,51,-121,51,51,51,-117,-110,-112,-115,-116,51,-111,-84,51,51,51,-101,51,-102,-97,-100,-98,-95,-104,-105,-96,-103,-99,51,-109,-108,51,51,-85,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'SMC':([1,5,8,9,10,11,12,16,18,20,24,25,27,30,40,41,42,47,48,51,53,54,55,56,58,59,60,61,62,63,66,67,68,69,70,71,73,74,75,76,78,79,80,81,93,98,99,100,101,107,108,109,112,114,116,118,119,121,122,124,125,126,152,161,162,163,164,165,166,167,168,169,170,172,173,174,178,182,186,187,188,192,193,194,197,200,205,206,207,208,215,219,220,222,223,225,226,229,234,236,237,238,242,248,249,250,257,258,259,267,277,280,283,287,288,289,295,296,299,300,304,306,312,313,316,317,319,320,324,325,331,334,337,338,341,343,344,345,348,349,350,],[-135,46,-134,-136,-147,-79,-82,-77,-199,-81,-200,-80,-137,-138,-78,-207,-146,-118,-67,-66,-91,-60,-106,-93,-59,-113,-56,-58,-63,-123,-122,-69,-139,-64,-127,-55,-124,-140,-62,-92,-57,-65,-68,-61,-143,-206,-76,157,-11,184,-46,-164,-159,-163,195,-208,-210,-209,-50,203,-119,-133,-83,-18,-24,-19,-14,-21,-27,-23,-22,-20,-25,-35,-26,-36,-201,-211,-167,-166,-168,-162,-165,-180,244,246,-94,-114,-107,-73,-148,-141,-142,-145,-144,-12,-34,-13,-202,-212,-48,-47,-160,-54,-52,-51,-71,-70,-149,-17,-178,-177,-161,310,-53,-125,-37,-29,-28,-179,-169,326,333,-126,-44,-39,-176,-170,-171,335,-182,-172,-185,-184,-189,-186,-183,-196,-188,-187,-197,]),'BY':([1,8,9,18,24,27,30,47,48,51,53,54,55,56,58,59,60,61,62,63,66,67,68,69,71,73,74,75,76,78,79,80,81,93,125,126,178,182,205,206,207,208,219,220,222,223,234,236,257,258,280,281,282,289,313,],[-135,-134,-136,-199,-200,-137,-138,-118,-67,-66,-91,-60,-106,-93,-59,-113,-56,-58,-63,-123,-122,-69,-139,-64,-55,-124,-140,-62,-92,-57,-65,-68,-61,-143,-119,-133,-201,-211,-94,-114,-107,-73,-141,-142,-145,-144,-202,-212,-71,-70,-177,-174,303,-125,-126,]),'INTCONST':([6,41,44,49,50,57,64,65,82,85,86,87,88,89,91,92,96,97,104,105,115,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,145,156,202,209,218,221,224,227,228,230,231,232,235,241,247,255,256,298,301,303,],[69,69,69,69,-120,69,-121,69,69,69,-117,-110,-112,-115,-116,69,-111,-84,69,69,69,-101,69,-102,-97,-100,-98,-95,-104,-105,-96,-103,-99,69,-109,-108,69,69,-85,69,69,69,69,69,265,69,69,69,69,69,69,69,69,69,69,69,69,]),'LT':([1,8,9,18,24,27,30,47,48,51,53,54,55,56,58,59,60,61,62,63,66,67,68,69,71,73,74,75,78,79,80,81,93,125,126,178,182,205,206,207,208,219,220,222,223,234,236,257,258,274,],[-135,-134,-136,-199,-200,-137,-138,-118,-67,-66,134,-60,-106,-93,-59,-113,-56,-58,-63,-123,-122,-69,-139,-64,-55,-124,-140,-62,-57,-65,-68,-61,-143,-119,-133,-201,-211,-94,-114,-107,-73,-141,-142,-145,-144,-202,-212,-71,-70,-140,]),'EXIT':([0,2,3,7,13,14,15,33,38,46,83,110,113,120,146,157,184,191,195,196,203,213,217,243,244,246,260,310,326,330,333,335,336,340,342,],[19,-8,-5,-9,-7,-6,19,-3,19,-74,-4,-157,19,19,19,-10,-45,-158,19,19,-49,19,19,19,-75,-181,19,19,19,19,19,19,19,19,19,]),'RETURNS':([287,306,],[311,311,]),'OD':([38,46,110,113,191,195,243,244,],[112,-74,-157,192,-158,242,283,-75,]),'RPAREN':([1,8,9,18,24,27,30,47,48,51,53,54,55,56,58,59,60,61,62,63,66,67,68,69,71,73,74,75,76,78,79,80,81,93,104,105,125,126,143,161,162,163,165,166,167,168,169,170,172,173,174,177,178,179,180,181,182,205,206,207,208,219,220,222,223,226,234,236,245,257,258,262,263,269,275,276,284,285,289,295,296,299,308,309,313,316,317,327,328,329,339,346,347,],[-135,-134,-136,-199,-200,-137,-138,-118,-67,-66,-91,-60,-106,-93,-59,-113,-56,-58,-63,-123,-122,-69,-139,-64,-55,-124,-140,-62,-92,-57,-65,-68,-61,-143,178,182,-119,-133,208,-18,-24,-19,-21,-27,-23,-22,-20,-25,-35,-26,-36,234,-201,-205,-203,236,-211,-94,-114,-107,-73,-141,-142,-145,-144,-34,-202,-212,287,-71,-70,-31,-33,296,299,-204,306,-190,-125,-37,-29,-28,-193,-192,-126,-44,-39,-191,-194,-195,345,-198,350,]),'OR':([1,8,9,18,24,27,30,47,48,51,53,54,55,56,58,59,60,61,62,63,66,67,68,69,71,73,74,75,78,79,80,81,93,125,126,178,182,205,206,207,208,219,220,222,223,234,236,257,258,274,],[-135,-134,-136,-199,-200,-137,-138,-118,-67,-66,138,-60,-106,-93,-59,-113,-56,-58,-63,-123,-122,-69,-139,-64,-55,-124,-140,-62,-57,-65,-68,-61,-143,-119,-133,-201,-211,-94,-114,-107,-73,-141,-142,-145,-144,-202,-212,-71,-70,-140,]),'STRINGCONST':([6,41,44,49,50,57,64,65,82,85,86,87,88,89,91,92,96,97,104,105,115,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,145,156,202,209,218,221,224,228,230,231,232,235,241,247,255,256,298,301,303,],[80,80,80,80,-120,80,-121,80,80,80,-117,-110,-112,-115,-116,80,-111,-84,80,80,80,-101,80,-102,-97,-100,-98,-95,-104,-105,-96,-103,-99,80,-109,-108,80,80,-85,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'NUM':([0,2,3,6,7,13,14,15,33,38,41,44,46,49,50,52,57,64,65,82,83,85,86,87,88,89,91,92,96,97,104,105,110,113,115,120,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,145,146,156,157,184,191,195,196,202,203,209,213,217,218,221,224,228,230,231,232,235,241,243,244,246,247,255,256,260,298,301,303,310,326,330,333,335,336,340,342,],[34,-8,-5,34,-9,-7,-6,34,-3,34,34,34,-74,34,-120,34,34,-121,34,34,-4,34,-117,-110,-112,-115,-116,34,-111,-84,34,34,-157,34,34,34,-101,34,-102,-97,-100,-98,-95,-104,-105,-96,-103,-99,34,-109,-108,34,34,34,-85,-10,-45,-158,34,34,34,-49,34,34,34,34,34,34,34,34,34,34,34,34,34,-75,-181,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'SUCC':([0,2,3,6,7,13,14,15,33,38,41,44,46,49,50,52,57,64,65,82,83,85,86,87,88,89,91,92,96,97,104,105,110,113,115,120,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,145,146,156,157,184,191,195,196,202,203,209,213,217,218,221,224,228,230,231,232,235,241,243,244,246,247,255,256,260,298,301,303,310,326,330,333,335,336,340,342,],[4,-8,-5,4,-9,-7,-6,4,-3,4,4,4,-74,4,-120,4,4,-121,4,4,-4,4,-117,-110,-112,-115,-116,4,-111,-84,4,4,-157,4,4,4,-101,4,-102,-97,-100,-98,-95,-104,-105,-96,-103,-99,4,-109,-108,4,4,4,-85,-10,-45,-158,4,4,4,-49,4,4,4,4,4,4,4,4,4,4,4,4,4,-75,-181,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'IF':([0,2,3,6,7,13,14,15,33,38,41,44,46,57,65,82,83,85,92,97,104,105,110,113,115,120,145,146,156,157,184,191,195,196,202,203,209,213,217,218,221,224,228,230,231,232,235,241,243,244,246,247,255,256,260,298,301,303,310,326,330,333,335,336,340,342,],[6,-8,-5,65,-9,-7,-6,6,-3,6,65,65,-74,65,65,65,-4,65,65,-84,65,65,-157,6,65,6,65,6,-85,-10,-45,-158,6,6,65,-49,65,6,6,65,65,65,65,65,65,65,65,65,6,-75,-181,65,65,65,6,65,65,65,6,6,6,6,6,6,6,6,]),'NOTEQUAL':([1,8,9,18,24,27,30,47,48,51,53,54,55,56,58,59,60,61,62,63,66,67,68,69,71,73,74,75,78,79,80,81,93,125,126,178,182,205,206,207,208,219,220,222,223,234,236,257,258,274,],[-135,-134,-136,-199,-200,-137,-138,-118,-67,-66,127,-60,-106,-93,-59,-113,-56,-58,-63,-123,-122,-69,-139,-64,-55,-124,-140,-62,-57,-65,-68,-61,-143,-119,-133,-201,-211,-94,-114,-107,-73,-141,-142,-145,-144,-202,-212,-71,-70,-140,]),'DCL':([0,2,3,7,13,14,15,33,46,83,157,184,203,244,246,310,326,330,333,335,336,340,342,],[23,-8,-5,-9,-7,-6,23,-3,-74,-4,-10,-45,-49,-75,-181,23,23,23,23,23,23,23,23,]),'COLON':([1,8,9,18,24,27,30,32,43,47,48,51,53,54,55,56,58,59,60,61,62,63,66,67,68,69,71,73,74,75,76,78,79,80,81,93,117,125,126,149,151,153,178,182,205,206,207,208,219,220,222,223,234,236,257,258,268,274,289,313,],[-135,-134,-136,-199,-200,-137,-138,-76,120,-118,-67,-66,-91,-60,-106,-93,-59,-113,-56,-58,-63,-123,-122,-69,-139,-64,-55,-124,-140,-62,-92,-57,-65,-68,-61,-143,196,-119,-133,-32,221,-32,-201,-211,-94,-114,-107,-73,-141,-142,-145,-144,-202,-212,-71,-70,-32,-140,-125,-126,]),'LPAREN':([4,6,21,26,29,31,32,34,35,37,39,41,44,49,50,57,64,65,74,82,85,86,87,88,89,91,92,96,97,104,105,115,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,145,156,166,167,168,170,173,175,198,199,202,209,218,221,224,228,230,231,232,235,241,247,255,256,274,278,298,301,303,311,],[-215,57,-216,-218,-219,-214,104,-213,105,-220,-217,57,57,57,-120,57,-121,57,104,57,57,-117,-110,-112,-115,-116,57,-111,-84,57,57,57,-101,57,-102,-97,-100,-98,-95,-104,-105,-96,-103,-99,57,-109,-108,57,57,-85,-27,230,-30,-25,-26,232,104,245,57,57,57,57,57,57,57,57,57,57,57,57,57,57,104,-30,57,57,57,332,]),'ELSE':([1,8,9,18,24,27,30,46,47,48,51,53,54,55,56,58,59,60,61,62,63,66,67,68,69,71,73,74,75,76,78,79,80,81,93,110,125,126,146,147,178,182,191,205,206,207,208,210,213,219,220,222,223,234,236,244,251,252,254,257,258,289,290,294,313,314,],[-135,-134,-136,-199,-200,-137,-138,-74,-118,-67,-66,-91,-60,-106,-93,-59,-113,-56,-58,-63,-123,-122,-69,-139,-64,-55,-124,-140,-62,-92,-57,-65,-68,-61,-143,-157,-119,-133,-150,217,-201,-211,-158,-94,-114,-107,-73,255,-151,-141,-142,-145,-144,-202,-212,-75,-128,-130,255,-71,-70,-125,-131,217,-126,-132,]),'UPPER':([0,2,3,6,7,13,14,15,33,38,41,44,46,49,50,52,57,64,65,82,83,85,86,87,88,89,91,92,96,97,104,105,110,113,115,120,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,145,146,156,157,184,191,195,196,202,203,209,213,217,218,221,224,228,230,231,232,235,241,243,244,246,247,255,256,260,298,301,303,310,326,330,333,335,336,340,342,],[21,-8,-5,21,-9,-7,-6,21,-3,21,21,21,-74,21,-120,21,21,-121,21,21,-4,21,-117,-110,-112,-115,-116,21,-111,-84,21,21,-157,21,21,21,-101,21,-102,-97,-100,-98,-95,-104,-105,-96,-103,-99,21,-109,-108,21,21,21,-85,-10,-45,-158,21,21,21,-49,21,21,21,21,21,21,21,21,21,21,21,21,21,-75,-181,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'CHARS':([102,103,123,159,183,233,286,297,332,],[160,-15,160,160,160,-16,160,160,160,]),'TO':([1,8,9,18,24,27,30,47,48,51,53,54,55,56,58,59,60,61,62,63,66,67,68,69,71,73,74,75,76,78,79,80,81,93,125,126,178,182,205,206,207,208,219,220,222,223,234,236,257,258,280,281,282,289,302,305,313,321,322,323,],[-135,-134,-136,-199,-200,-137,-138,-118,-67,-66,-91,-60,-106,-93,-59,-113,-56,-58,-63,-123,-122,-69,-139,-64,-55,-124,-140,-62,-92,-57,-65,-68,-61,-143,-119,-133,-201,-211,-94,-114,-107,-73,-141,-142,-145,-144,-202,-212,-71,-70,-177,-174,301,-125,301,301,-126,301,-175,-221,]),'DOWN':([1,8,9,18,24,27,30,47,48,51,53,54,55,56,58,59,60,61,62,63,66,67,68,69,71,73,74,75,76,78,79,80,81,93,125,126,178,182,189,190,205,206,207,208,219,220,222,223,234,236,257,258,280,281,282,289,302,313,322,323,],[-135,-134,-136,-199,-200,-137,-138,-118,-67,-66,-91,-60,-106,-93,-59,-113,-56,-58,-63,-123,-122,-69,-139,-64,-55,-124,-140,-62,-92,-57,-65,-68,-61,-143,-119,-133,-201,-211,240,-173,-94,-114,-107,-73,-141,-142,-145,-144,-202,-212,-71,-70,-177,-174,305,-125,321,-126,-175,-221,]),'TYPE':([0,2,3,7,13,14,15,33,46,83,157,184,203,244,246,310,326,330,333,335,336,340,342,],[36,-8,-5,-9,-7,-6,36,-3,-74,-4,-10,-45,-49,-75,-181,36,36,36,36,36,36,36,36,]),'DIV':([1,8,9,11,17,18,24,27,30,32,47,48,51,54,55,58,59,60,61,62,63,66,67,68,69,71,73,74,75,78,79,80,81,93,125,126,178,182,198,206,207,208,219,220,222,223,234,236,257,258,274,],[-135,-134,-136,-139,91,-199,-200,-137,-138,-140,-118,-67,-66,-60,91,-59,-113,-56,-58,-63,-123,-122,-69,-139,-64,-55,-124,-140,-62,-57,-65,-68,-61,-143,-119,-133,-201,-211,-140,-114,91,-73,-141,-142,-145,-144,-202,-212,-71,-70,-140,]),'READ':([0,2,3,6,7,13,14,15,33,38,41,44,46,49,50,52,57,64,65,82,83,85,86,87,88,89,91,92,96,97,104,105,110,113,115,120,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,145,146,156,157,184,191,195,196,202,203,209,213,217,218,221,224,228,230,231,232,235,241,243,244,246,247,255,256,260,298,301,303,310,326,330,333,335,336,340,342,],[29,-8,-5,29,-9,-7,-6,29,-3,29,29,29,-74,29,-120,29,29,-121,29,29,-4,29,-117,-110,-112,-115,-116,29,-111,-84,29,29,-157,29,29,29,-101,29,-102,-97,-100,-98,-95,-104,-105,-96,-103,-99,29,-109,-108,29,29,29,-85,-10,-45,-158,29,29,29,-49,29,29,29,29,29,29,29,29,29,29,29,29,29,-75,-181,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'LENGTH':([0,2,3,6,7,13,14,15,33,38,41,44,46,49,50,52,57,64,65,82,83,85,86,87,88,89,91,92,96,97,104,105,110,113,115,120,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,145,146,156,157,184,191,195,196,202,203,209,213,217,218,221,224,228,230,231,232,235,241,243,244,246,247,255,256,260,298,301,303,310,326,330,333,335,336,340,342,],[26,-8,-5,26,-9,-7,-6,26,-3,26,26,26,-74,26,-120,26,26,-121,26,26,-4,26,-117,-110,-112,-115,-116,26,-111,-84,26,26,-157,26,26,26,-101,26,-102,-97,-100,-98,-95,-104,-105,-96,-103,-99,26,-109,-108,26,26,26,-85,-10,-45,-158,26,26,26,-49,26,26,26,26,26,26,26,26,26,26,26,26,26,-75,-181,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'ID':([0,2,3,6,7,13,14,15,19,23,33,36,38,41,44,45,46,49,50,52,57,64,65,82,83,85,86,87,88,89,91,92,96,97,102,103,104,105,110,111,113,115,120,123,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,145,146,156,157,158,159,176,183,184,185,191,195,196,202,203,204,209,213,217,218,221,224,228,230,231,232,233,235,239,241,243,244,245,246,247,255,256,260,279,286,297,298,301,303,307,310,326,330,332,333,335,336,340,342,],[32,-8,-5,74,-9,-7,-6,32,99,103,-3,103,32,74,74,103,-74,74,-120,74,74,-121,74,74,-4,74,-117,-110,-112,-115,-116,74,-111,-84,168,-15,74,74,-157,190,32,74,198,168,-101,74,-102,-97,-100,-98,-95,-104,-105,-96,-103,-99,74,-109,-108,74,74,32,-85,-10,103,168,233,168,-45,103,-158,32,198,74,-49,103,74,32,32,74,74,74,74,74,274,74,-16,74,278,74,32,-75,103,-181,74,74,74,32,278,168,168,274,74,74,103,32,32,32,168,32,32,32,32,32,]),'EQUALS':([1,8,9,11,17,18,24,27,30,32,84,86,87,88,89,90,91,93,94,95,96,103,106,123,161,162,163,164,165,166,167,168,169,170,172,173,174,178,182,189,190,198,201,219,220,222,223,226,233,234,236,295,296,299,316,317,],[-135,-134,-136,-139,97,-199,-200,-137,-138,-140,-88,-117,-110,-112,-115,-86,-116,-143,156,-87,-111,-15,183,202,-18,-24,-19,228,-21,-27,-23,-22,-20,-25,-35,-26,-36,-201,-211,241,-173,-140,247,-141,-142,-145,-144,-34,-16,-202,-212,-37,-29,-28,-44,-39,]),'PROC':([120,],[199,]),'BOOL':([102,103,123,159,183,231,233,239,279,286,297,298,332,],[173,-15,173,173,173,173,-16,173,173,173,173,173,173,]),'AND':([1,8,9,18,24,27,30,47,48,51,53,54,55,56,58,59,60,61,62,63,66,67,68,69,71,73,74,75,78,79,80,81,93,125,126,178,182,205,206,207,208,219,220,222,223,234,236,257,258,274,],[-135,-134,-136,-199,-200,-137,-138,-118,-67,-66,132,-60,-106,-93,-59,-113,-56,-58,-63,-123,-122,-69,-139,-64,-55,-124,-140,-62,-57,-65,-68,-61,-143,-119,-133,-201,-211,-94,-114,-107,-73,-141,-142,-145,-144,-202,-212,-71,-70,-140,]),'GE':([1,8,9,18,24,27,30,47,48,51,53,54,55,56,58,59,60,61,62,63,66,67,68,69,71,73,74,75,78,79,80,81,93,125,126,178,182,205,206,207,208,219,220,222,223,234,236,257,258,274,],[-135,-134,-136,-199,-200,-137,-138,-118,-67,-66,137,-60,-106,-93,-59,-113,-56,-58,-63,-123,-122,-69,-139,-64,-55,-124,-140,-62,-57,-65,-68,-61,-143,-119,-133,-201,-211,-94,-114,-107,-73,-141,-142,-145,-144,-202,-212,-71,-70,-140,]),'WHILE':([1,8,9,18,24,27,30,38,47,48,51,53,54,55,56,58,59,60,61,62,63,66,67,68,69,71,73,74,75,76,78,79,80,81,93,114,125,126,162,166,167,170,173,178,182,186,187,188,205,206,207,208,219,220,222,223,234,236,257,258,277,280,289,296,299,300,304,313,319,320,324,334,],[-135,-134,-136,-199,-200,-137,-138,115,-118,-67,-66,-91,-60,-106,-93,-59,-113,-56,-58,-63,-123,-122,-69,-139,-64,-55,-124,-140,-62,-92,-57,-65,-68,-61,-143,115,-119,-133,-24,-27,-23,-25,-26,-201,-211,-167,-166,-168,-94,-114,-107,-73,-141,-142,-145,-144,-202,-212,-71,-70,-178,-177,-125,-29,-28,-179,-169,-126,-176,-170,-171,-172,]),'REF':([102,103,123,159,183,233,286,297,332,],[159,-15,159,159,159,-16,159,159,159,]),'LE':([1,8,9,18,24,27,30,47,48,51,53,54,55,56,58,59,60,61,62,63,66,67,68,69,71,73,74,75,78,79,80,81,93,125,126,178,182,205,206,207,208,219,220,222,223,234,236,257,258,274,],[-135,-134,-136,-199,-200,-137,-138,-118,-67,-66,135,-60,-106,-93,-59,-113,-56,-58,-63,-123,-122,-69,-139,-64,-55,-124,-140,-62,-57,-65,-68,-61,-143,-119,-133,-201,-211,-94,-114,-107,-73,-141,-142,-145,-144,-202,-212,-71,-70,-140,]),'PRINT':([0,2,3,6,7,13,14,15,33,38,41,44,46,49,50,52,57,64,65,82,83,85,86,87,88,89,91,92,96,97,104,105,110,113,115,120,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,145,146,156,157,184,191,195,196,202,203,209,213,217,218,221,224,228,230,231,232,235,241,243,244,246,247,255,256,260,298,301,303,310,326,330,333,335,336,340,342,],[37,-8,-5,37,-9,-7,-6,37,-3,37,37,37,-74,37,-120,37,37,-121,37,37,-4,37,-117,-110,-112,-115,-116,37,-111,-84,37,37,-157,37,37,37,-101,37,-102,-97,-100,-98,-95,-104,-105,-96,-103,-99,37,-109,-108,37,37,37,-85,-10,-45,-158,37,37,37,-49,37,37,37,37,37,37,37,37,37,37,37,37,37,-75,-181,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'ISEQUAL':([1,8,9,18,24,27,30,47,48,51,53,54,55,56,58,59,60,61,62,63,66,67,68,69,71,73,74,75,78,79,80,81,93,125,126,178,182,205,206,207,208,219,220,222,223,234,236,257,258,274,],[-135,-134,-136,-199,-200,-137,-138,-118,-67,-66,131,-60,-106,-93,-59,-113,-56,-58,-63,-123,-122,-69,-139,-64,-55,-124,-140,-62,-57,-65,-68,-61,-143,-119,-133,-201,-211,-94,-114,-107,-73,-141,-142,-145,-144,-202,-212,-71,-70,-140,]),'TIMES':([1,8,9,11,17,18,24,27,30,32,47,48,51,54,55,58,59,60,61,62,63,66,67,68,69,71,73,74,75,78,79,80,81,93,125,126,178,182,198,206,207,208,219,220,222,223,234,236,257,258,274,],[-135,-134,-136,-139,89,-199,-200,-137,-138,-140,-118,-67,-66,-60,89,-59,-113,-56,-58,-63,-123,-122,-69,-139,-64,-55,-124,-140,-62,-57,-65,-68,-61,-143,-119,-133,-201,-211,-140,-114,89,-73,-141,-142,-145,-144,-202,-212,-71,-70,-140,]),'RETURN':([0,2,3,7,13,14,15,33,38,46,83,110,113,120,146,157,184,191,195,196,203,213,217,243,244,246,260,310,326,330,333,335,336,340,342,],[41,-8,-5,-9,-7,-6,41,-3,41,-74,-4,-157,41,41,41,-10,-45,-158,41,41,-49,41,41,41,-75,-181,41,41,41,41,41,41,41,41,41,]),'FALSE':([6,41,44,49,50,57,64,65,82,85,86,87,88,89,91,92,96,97,104,105,115,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,145,156,202,209,218,221,224,228,230,231,232,235,241,247,255,256,298,301,303,],[79,79,79,79,-120,79,-121,79,79,79,-117,-110,-112,-115,-116,79,-111,-84,79,79,79,-101,79,-102,-97,-100,-98,-95,-104,-105,-96,-103,-99,79,-109,-108,79,79,-85,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'ARRAY':([102,103,123,159,183,233,286,297,332,],[171,-15,171,171,171,-16,171,171,171,]),'LOC':([161,162,163,165,166,167,168,169,170,172,173,174,226,295,296,299,308,316,317,339,],[-18,-24,-19,-21,-27,-23,-22,-20,-25,-35,-26,-36,-34,-37,-29,-28,329,-44,-39,346,]),'COMMA':([1,8,9,18,24,27,30,47,48,51,53,54,55,56,58,59,60,61,62,63,66,67,68,69,71,73,74,75,76,78,79,80,81,93,100,101,102,103,106,107,108,122,123,124,125,126,153,155,161,162,163,164,165,166,167,168,169,170,172,173,174,178,179,180,182,205,206,207,208,212,219,220,222,223,225,226,229,233,234,236,237,238,248,249,250,257,258,262,263,264,267,270,271,272,273,285,286,288,289,295,296,299,308,309,313,316,317,318,328,329,],[-135,-134,-136,-199,-200,-137,-138,-118,-67,-66,-91,-60,-106,-93,-59,-113,-56,-58,-63,-123,-122,-69,-139,-64,-55,-124,-140,-62,-92,-57,-65,-68,-61,-143,158,-11,176,-15,176,185,-46,-50,176,204,-119,-133,-89,224,-18,-24,-19,-14,-21,-27,-23,-22,-20,-25,-35,-26,-36,-201,-205,235,-211,-94,-114,-107,-73,224,-141,-142,-145,-144,-12,-34,-13,-16,-202,-212,-48,-47,-54,-52,-51,-71,-70,-31,-33,-90,-17,-40,-42,298,-43,307,176,-53,-125,-37,-29,-28,-193,-192,-126,-44,-39,-41,-194,-195,]),'RESULT':([0,2,3,7,13,14,15,33,38,46,83,110,113,120,146,157,184,191,195,196,203,213,217,243,244,246,260,310,326,330,333,335,336,340,342,],[44,-8,-5,-9,-7,-6,44,-3,44,-74,-4,-157,44,44,44,-10,-45,-158,44,44,-49,44,44,44,-75,-181,44,44,44,44,44,44,44,44,44,]),'INT':([102,103,123,159,183,231,233,239,279,286,297,298,332,],[170,-15,170,170,170,170,-16,170,170,170,170,170,170,]),'SYN':([0,2,3,7,13,14,15,33,46,83,157,184,203,244,246,310,326,330,333,335,336,340,342,],[45,-8,-5,-9,-7,-6,45,-3,-74,-4,-10,-45,-49,-75,-181,45,45,45,45,45,45,45,45,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'while_control':([38,114,],[109,193,]),'operand4':([6,41,44,49,57,65,82,85,92,104,105,115,128,139,142,145,202,209,218,221,224,228,230,231,232,235,241,247,255,256,298,301,303,],[47,47,47,125,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'string_reference':([0,6,15,38,41,44,49,52,57,65,82,85,92,104,105,113,115,120,128,139,142,145,146,195,196,202,209,213,217,218,221,224,228,230,231,232,235,241,243,247,255,256,260,298,301,303,310,326,330,333,335,336,340,342,],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'action_statement':([0,15,38,113,146,195,213,217,243,260,310,326,330,333,335,336,340,342,],[2,2,110,191,110,110,191,110,191,191,2,2,2,2,2,2,2,2,]),'declaration_statement':([0,15,310,326,330,333,335,336,340,342,],[3,3,3,3,3,3,3,3,3,3,]),'integer_expression':([82,303,],[148,322,]),'action':([0,15,38,113,120,146,195,196,213,217,243,260,310,326,330,333,335,336,340,342,],[5,5,5,5,197,5,5,197,5,5,5,5,5,5,5,5,5,5,5,5,]),'string_literal':([6,41,44,49,57,65,82,85,92,104,105,115,128,139,142,145,202,209,218,221,224,228,230,231,232,235,241,247,255,256,298,301,303,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'array_slice':([0,6,15,38,41,44,49,52,57,65,82,85,92,104,105,113,115,120,128,139,142,145,146,195,196,202,209,213,217,218,221,224,228,230,231,232,235,241,243,247,255,256,260,298,301,303,310,326,330,333,335,336,340,342,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'procedure_statement':([0,15,310,326,330,333,335,336,340,342,],[7,7,7,7,7,7,7,7,7,7,]),'value_array_slice':([6,41,44,49,57,65,82,85,92,104,105,115,128,139,142,145,202,209,218,221,224,228,230,231,232,235,241,247,255,256,298,301,303,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'discrete_range_mode':([102,123,159,183,231,239,279,286,297,298,332,],[162,162,162,162,162,162,162,162,162,162,162,]),'string_length':([227,],[266,]),'closed_dyadic_operator':([17,],[94,]),'operand0':([6,41,44,57,65,82,85,92,104,105,115,145,202,209,218,221,224,228,230,231,232,235,241,247,255,256,298,301,303,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'composite_mode':([102,123,159,183,286,297,332,],[165,165,165,165,165,165,165,]),'operator1':([53,],[128,]),'dereferenced_reference':([0,6,15,38,41,44,49,52,57,65,82,85,92,104,105,113,115,120,128,139,142,145,146,195,196,202,209,213,217,218,221,224,228,230,231,232,235,241,243,247,255,256,260,298,301,303,310,326,330,333,335,336,340,342,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'string_concatenation_operator':([17,56,205,],[84,140,140,]),'else_clause':([147,294,],[214,315,]),'upper_bound':([221,],[262,]),'index_mode_list':([231,],[272,]),'synonym_statement':([0,15,310,326,330,333,335,336,340,342,],[13,13,13,13,13,13,13,13,13,13,]),'end_value':([282,302,305,321,],[304,320,324,334,]),'statement_list':([0,310,326,333,335,],[15,330,336,340,342,]),'assignment_action':([0,15,38,113,120,146,195,196,213,217,243,260,310,326,330,333,335,336,340,342,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'parenthesized_expression':([6,41,44,49,57,65,82,85,92,104,105,115,128,139,142,145,202,209,218,221,224,228,230,231,232,235,241,247,255,256,298,301,303,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'procedure_call':([0,6,15,38,41,44,49,52,57,65,82,85,92,104,105,113,115,120,128,139,142,145,146,195,196,202,209,213,217,218,221,224,228,230,231,232,235,241,243,247,255,256,260,298,301,303,310,326,330,333,335,336,340,342,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'elseif_clause':([147,294,],[216,216,]),'return_action':([0,15,38,113,120,146,195,196,213,217,243,260,310,326,330,333,335,336,340,342,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'value_array_element':([6,41,44,49,57,65,82,85,92,104,105,115,128,139,142,145,202,209,218,221,224,228,230,231,232,235,241,247,255,256,298,301,303,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'else_expression':([210,254,],[253,291,]),'primitive_value':([6,41,44,49,57,65,82,85,92,104,105,115,128,139,142,145,202,209,218,221,224,228,230,231,232,235,241,247,255,256,298,301,303,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'call_action':([0,6,15,38,41,44,49,52,57,65,82,85,92,104,105,113,115,120,128,139,142,145,146,195,196,202,209,213,217,218,221,224,228,230,231,232,235,241,243,247,255,256,260,298,301,303,310,326,330,333,335,336,340,342,],[11,68,11,11,68,68,68,68,68,68,68,68,68,68,68,11,68,11,68,68,68,68,11,11,11,68,68,11,11,68,68,68,68,68,68,68,68,68,11,68,68,68,11,68,68,68,11,11,11,11,11,11,11,11,]),'elseif_expression_list':([210,],[254,]),'parameter_attribute':([308,],[328,]),'literal':([6,41,44,49,57,65,82,85,92,104,105,115,128,139,142,145,202,209,218,221,224,228,230,231,232,235,241,247,255,256,298,301,303,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'result_attribute':([339,],[347,]),'initialization':([164,],[229,]),'step_enumeration':([111,],[186,]),'step_value':([282,],[302,]),'referenced_location':([6,41,44,49,57,65,82,85,92,104,105,115,128,139,142,145,202,209,218,221,224,228,230,231,232,235,241,247,255,256,298,301,303,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'lower_bound':([82,92,145,230,231,232,298,],[151,151,151,151,151,151,151,]),'result_spec':([287,306,],[312,325,]),'builtin_call':([0,6,15,38,41,44,49,52,57,65,82,85,92,104,105,113,115,120,128,139,142,145,146,195,196,202,209,213,217,218,221,224,228,230,231,232,235,241,243,247,255,256,260,298,301,303,310,326,330,333,335,336,340,342,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'reference_mode':([102,123,159,183,286,297,332,],[169,169,169,169,169,169,169,]),'empty_literal':([6,41,44,49,57,65,82,85,92,104,105,115,128,139,142,145,202,209,218,221,224,228,230,231,232,235,241,247,255,256,298,301,303,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'parameter':([104,105,235,],[180,180,180,]),'conditional_expression':([6,41,44,57,65,82,85,92,104,105,115,145,202,209,218,221,224,228,230,231,232,235,241,247,255,256,298,301,303,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'action_statement_list':([38,146,195,217,],[113,213,243,260,]),'boolean_expression':([6,65,115,218,256,],[77,144,194,261,293,]),'loop_counter':([111,],[189,]),'range_enumeration':([111,],[188,]),'syn_definition':([45,204,],[122,250,]),'relational_operator':([53,],[133,]),'bracketed_action':([0,15,38,113,120,146,195,196,213,217,243,260,310,326,330,333,335,336,340,342,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'parameter_spec':([286,],[309,]),'then_expression':([144,293,],[210,314,]),'for_control':([38,],[114,]),'then_clause':([77,261,],[147,294,]),'elseif_expression':([210,254,],[252,290,]),'procedure_definition':([120,],[200,]),'monadic_operator':([6,41,44,57,65,82,85,92,104,105,115,128,139,142,145,202,209,218,221,224,228,230,231,232,235,241,247,255,256,298,301,303,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'parameter_list':([104,105,235,],[177,181,276,]),'newmode_list':([36,],[107,]),'result':([41,44,],[118,121,]),'mode_name':([102,123,159,183,286,297,332,],[161,161,161,161,161,161,161,]),'declaration_list':([23,],[100,]),'constant_expression':([202,247,],[249,288,]),'discrete_mode':([102,123,159,183,231,239,279,286,297,298,332,],[163,163,163,163,271,277,300,163,163,271,163,]),'mode':([102,123,159,183,286,297,332,],[164,201,226,237,308,316,339,]),'basic_mode':([102,123,159,183,231,239,279,286,297,298,332,],[167,167,167,167,167,167,167,167,167,167,167,]),'boolean_literal':([6,41,44,49,57,65,82,85,92,104,105,115,128,139,142,145,202,209,218,221,224,228,230,231,232,235,241,247,255,256,298,301,303,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'do_action':([0,15,38,113,120,146,195,196,213,217,243,260,310,326,330,333,335,336,340,342,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'arithmetic_multiplicative_operator':([17,55,207,],[95,139,139,]),'operator2':([56,205,],[142,142,]),'declaration':([23,158,],[101,225,]),'operand2':([6,41,44,57,65,82,85,92,104,105,115,128,142,145,202,209,218,221,224,228,230,231,232,235,241,247,255,256,298,301,303,],[55,55,55,55,55,55,55,55,55,55,55,55,207,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'newmode_statement':([0,15,310,326,330,333,335,336,340,342,],[14,14,14,14,14,14,14,14,14,14,]),'operand1':([6,41,44,57,65,82,85,92,104,105,115,128,145,202,209,218,221,224,228,230,231,232,235,241,247,255,256,298,301,303,],[56,56,56,56,56,56,56,56,56,56,56,205,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'id_list':([23,36,45,158,185,204,245,307,],[102,106,123,102,106,123,286,286,]),'integer_literal':([6,41,44,49,57,65,82,85,92,104,105,115,128,139,142,145,202,209,218,221,224,228,230,231,232,235,241,247,255,256,298,301,303,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'operand3':([6,41,44,57,65,82,85,92,104,105,115,128,139,142,145,202,209,218,221,224,228,230,231,232,235,241,247,255,256,298,301,303,],[59,59,59,59,59,59,59,59,59,59,59,59,206,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'location':([0,6,15,38,41,44,49,52,57,65,82,85,92,104,105,113,115,120,128,139,142,145,146,195,196,202,209,213,217,218,221,224,228,230,231,232,235,241,243,247,255,256,260,298,301,303,310,326,330,333,335,336,340,342,],[17,63,17,17,63,63,63,126,63,63,63,63,63,63,63,17,63,17,63,63,63,63,17,17,17,63,63,17,17,63,63,63,63,63,63,63,63,63,17,63,63,63,17,63,63,63,17,17,17,17,17,17,17,17,]),'discrete_mode_name':([102,123,159,183,231,239,279,286,297,298,332,],[175,175,175,175,175,175,175,175,175,175,175,]),'discrete_expression':([241,301,],[281,319,]),'location_name':([0,6,15,38,41,44,49,52,57,65,82,85,92,104,105,113,115,120,128,139,142,145,146,195,196,202,209,213,217,218,221,224,228,230,231,232,235,241,243,247,255,256,260,298,301,303,310,326,330,333,335,336,340,342,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'assigning_operator':([17,],[85,]),'program':([0,],[22,]),'iteration':([111,],[187,]),'array_mode':([102,123,159,183,286,297,332,],[174,174,174,174,174,174,174,]),'formal_parameter':([245,307,],[285,285,]),'exit_action':([0,15,38,113,120,146,195,196,213,217,243,260,310,326,330,333,335,336,340,342,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'literal_range':([82,92,145,230,231,232,298,],[150,154,211,269,273,275,273,]),'if_action':([0,15,38,113,120,146,195,196,213,217,243,260,310,326,330,333,335,336,340,342,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'syn_list':([45,],[124,]),'array_element':([0,6,15,38,41,44,49,52,57,65,82,85,92,104,105,113,115,120,128,139,142,145,146,195,196,202,209,213,217,218,221,224,228,230,231,232,235,241,243,247,255,256,260,298,301,303,310,326,330,333,335,336,340,342,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'empty':([0,],[28,]),'array_primitive_value':([6,41,44,49,57,65,82,85,92,104,105,115,128,139,142,145,202,209,218,221,224,228,230,231,232,235,241,247,255,256,298,301,303,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'expression':([6,41,44,57,65,82,85,92,104,105,115,145,202,209,218,221,224,228,230,231,232,235,241,247,255,256,298,301,303,],[70,119,119,143,70,149,152,153,179,179,70,153,248,251,70,263,264,267,268,268,268,179,280,248,292,70,268,280,323,]),'statement':([0,15,310,326,330,333,335,336,340,342,],[33,83,33,33,83,33,33,83,83,83,]),'index_mode':([231,298,],[270,318,]),'element_node':([297,],[317,]),'formal_parameter_list':([245,307,],[284,327,]),'string_mode':([102,123,159,183,286,297,332,],[172,172,172,172,172,172,172,]),'builtin_name':([0,6,15,38,41,44,49,52,57,65,82,85,92,104,105,113,115,120,128,139,142,145,146,195,196,202,209,213,217,218,221,224,228,230,231,232,235,241,243,247,255,256,260,298,301,303,310,326,330,333,335,336,340,342,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'result_action':([0,15,38,113,120,146,195,196,213,217,243,260,310,326,330,333,335,336,340,342,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'control_part':([38,],[116,]),'expression_list':([92,145,],[155,212,]),'arithmetic_additive_operator':([17,56,205,],[90,141,141,]),'label':([0,15,19,38,113,146,195,213,217,243,260,310,326,330,333,335,336,340,342,],[43,43,98,117,117,117,117,117,117,117,117,43,43,43,43,43,43,43,43,]),'start_value':([241,],[282,]),'membership_operator':([53,],[136,]),'mode_definition':([36,185,],[108,238,]),'char_literal':([6,41,44,49,57,65,82,85,92,104,105,115,128,139,142,145,202,209,218,221,224,228,230,231,232,235,241,247,255,256,298,301,303,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','lyaParser.py',64),
  ('program -> empty','program',1,'p_program','lyaParser.py',65),
  ('statement_list -> statement','statement_list',1,'p_statement_list1','lyaParser.py',72),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list1','lyaParser.py',73),
  ('statement -> declaration_statement','statement',1,'p_statement','lyaParser.py',80),
  ('statement -> newmode_statement','statement',1,'p_statement','lyaParser.py',81),
  ('statement -> synonym_statement','statement',1,'p_statement','lyaParser.py',82),
  ('statement -> action_statement','statement',1,'p_statement','lyaParser.py',83),
  ('statement -> procedure_statement','statement',1,'p_statement','lyaParser.py',84),
  ('declaration_statement -> DCL declaration_list SMC','declaration_statement',3,'p_declaration_statement','lyaParser.py',92),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','lyaParser.py',96),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','lyaParser.py',97),
  ('declaration -> id_list mode initialization','declaration',3,'p_declaration1','lyaParser.py',104),
  ('declaration -> id_list mode','declaration',2,'p_declaration2','lyaParser.py',108),
  ('id_list -> ID','id_list',1,'p_id_list','lyaParser.py',112),
  ('id_list -> id_list COMMA ID','id_list',3,'p_id_list','lyaParser.py',113),
  ('initialization -> EQUALS expression','initialization',2,'p_initialization','lyaParser.py',120),
  ('mode -> mode_name','mode',1,'p_mode','lyaParser.py',128),
  ('mode -> discrete_mode','mode',1,'p_mode','lyaParser.py',129),
  ('mode -> reference_mode','mode',1,'p_mode','lyaParser.py',130),
  ('mode -> composite_mode','mode',1,'p_mode','lyaParser.py',131),
  ('mode_name -> ID','mode_name',1,'p_mode_name','lyaParser.py',135),
  ('discrete_mode -> basic_mode','discrete_mode',1,'p_discrete_mode','lyaParser.py',139),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','lyaParser.py',140),
  ('basic_mode -> INT','basic_mode',1,'p_basic_mode','lyaParser.py',144),
  ('basic_mode -> BOOL','basic_mode',1,'p_basic_mode','lyaParser.py',145),
  ('basic_mode -> CHAR','basic_mode',1,'p_basic_mode','lyaParser.py',146),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaParser.py',150),
  ('discrete_range_mode -> basic_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaParser.py',151),
  ('discrete_mode_name -> ID','discrete_mode_name',1,'p_discrete_mode_name','lyaParser.py',155),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_litereal_range','lyaParser.py',159),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','lyaParser.py',163),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','lyaParser.py',167),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','lyaParser.py',171),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','lyaParser.py',175),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','lyaParser.py',176),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','lyaParser.py',180),
  ('string_length -> INTCONST','string_length',1,'p_string_length','lyaParser.py',184),
  ('array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_node','array_mode',5,'p_array_mode','lyaParser.py',188),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','lyaParser.py',193),
  ('index_mode_list -> index_mode_list COMMA index_mode','index_mode_list',3,'p_index_mode_list','lyaParser.py',194),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','lyaParser.py',201),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','lyaParser.py',202),
  ('element_node -> mode','element_node',1,'p_element_node','lyaParser.py',206),
  ('newmode_statement -> TYPE newmode_list SMC','newmode_statement',3,'p_newmode_statement','lyaParser.py',214),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','lyaParser.py',218),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','lyaParser.py',219),
  ('mode_definition -> id_list EQUALS mode','mode_definition',3,'p_mode_definition','lyaParser.py',226),
  ('synonym_statement -> SYN syn_list SMC','synonym_statement',3,'p_synonym_statement','lyaParser.py',230),
  ('syn_list -> syn_definition','syn_list',1,'p_syn_list','lyaParser.py',238),
  ('syn_list -> syn_list COMMA syn_definition','syn_list',3,'p_syn_list','lyaParser.py',239),
  ('syn_definition -> id_list EQUALS constant_expression','syn_definition',3,'p_syn_definition','lyaParser.py',246),
  ('syn_definition -> id_list mode EQUALS constant_expression','syn_definition',4,'p_syn_definition2','lyaParser.py',250),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','lyaParser.py',254),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','lyaParser.py',262),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','lyaParser.py',263),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','lyaParser.py',264),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','lyaParser.py',265),
  ('literal -> integer_literal','literal',1,'p_literal','lyaParser.py',269),
  ('literal -> boolean_literal','literal',1,'p_literal','lyaParser.py',270),
  ('literal -> char_literal','literal',1,'p_literal','lyaParser.py',271),
  ('literal -> empty_literal','literal',1,'p_literal','lyaParser.py',272),
  ('literal -> string_literal','literal',1,'p_literal','lyaParser.py',273),
  ('integer_literal -> INTCONST','integer_literal',1,'p_integer_literal','lyaParser.py',277),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','lyaParser.py',281),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','lyaParser.py',282),
  ('char_literal -> CHARCONST','char_literal',1,'p_char_literal','lyaParser.py',286),
  ('string_literal -> STRINGCONST','string_literal',1,'p_string_literal','lyaParser.py',290),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','lyaParser.py',294),
  ('value_array_element -> array_primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','lyaParser.py',298),
  ('value_array_slice -> array_primitive_value LBRACKET literal_range RBRACKET','value_array_slice',4,'p_value_array_slice','lyaParser.py',302),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','lyaParser.py',306),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','lyaParser.py',310),
  ('action_statement -> action SMC','action_statement',2,'p_action_statement','lyaParser.py',318),
  ('action_statement -> label COLON action SMC','action_statement',4,'p_action_statement','lyaParser.py',319),
  ('label -> ID','label',1,'p_label','lyaParser.py',326),
  ('action -> assignment_action','action',1,'p_action','lyaParser.py',330),
  ('action -> bracketed_action','action',1,'p_action','lyaParser.py',331),
  ('action -> call_action','action',1,'p_action','lyaParser.py',332),
  ('action -> exit_action','action',1,'p_action','lyaParser.py',333),
  ('action -> return_action','action',1,'p_action','lyaParser.py',334),
  ('action -> result_action','action',1,'p_action','lyaParser.py',335),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','lyaParser.py',343),
  ('assigning_operator -> EQUALS','assigning_operator',1,'p_assigning_operator','lyaParser.py',347),
  ('assigning_operator -> closed_dyadic_operator EQUALS','assigning_operator',2,'p_assigning_operator','lyaParser.py',348),
  ('closed_dyadic_operator -> arithmetic_additive_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','lyaParser.py',355),
  ('closed_dyadic_operator -> arithmetic_multiplicative_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','lyaParser.py',356),
  ('closed_dyadic_operator -> string_concatenation_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','lyaParser.py',357),
  ('expression_list -> expression','expression_list',1,'p_expression_list','lyaParser.py',361),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','lyaParser.py',362),
  ('expression -> operand0','expression',1,'p_expression','lyaParser.py',369),
  ('expression -> conditional_expression','expression',1,'p_expression','lyaParser.py',370),
  ('operand0 -> operand1','operand0',1,'p_operand0','lyaParser.py',374),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','lyaParser.py',375),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','lyaParser.py',382),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','lyaParser.py',383),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','lyaParser.py',387),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','lyaParser.py',391),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','lyaParser.py',392),
  ('relational_operator -> ISEQUAL','relational_operator',1,'p_relational_operator','lyaParser.py',393),
  ('relational_operator -> NOTEQUAL','relational_operator',1,'p_relational_operator','lyaParser.py',394),
  ('relational_operator -> GT','relational_operator',1,'p_relational_operator','lyaParser.py',395),
  ('relational_operator -> GE','relational_operator',1,'p_relational_operator','lyaParser.py',396),
  ('relational_operator -> LT','relational_operator',1,'p_relational_operator','lyaParser.py',397),
  ('relational_operator -> LE','relational_operator',1,'p_relational_operator','lyaParser.py',398),
  ('operand1 -> operand2','operand1',1,'p_operand1','lyaParser.py',402),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1','lyaParser.py',403),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','lyaParser.py',410),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','lyaParser.py',411),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','lyaParser.py',415),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','lyaParser.py',416),
  ('string_concatenation_operator -> STRCONC','string_concatenation_operator',1,'p_string_concatenation_operator','lyaParser.py',420),
  ('operand2 -> operand3','operand2',1,'p_operand2','lyaParser.py',424),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','lyaParser.py',425),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaParser.py',432),
  ('arithmetic_multiplicative_operator -> DIV','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaParser.py',433),
  ('arithmetic_multiplicative_operator -> MOD','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaParser.py',434),
  ('operand3 -> operand4','operand3',1,'p_operand3','lyaParser.py',438),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','lyaParser.py',439),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','lyaParser.py',446),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','lyaParser.py',447),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','lyaParser.py',451),
  ('operand4 -> location','operand4',1,'p_operand4','lyaParser.py',452),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','lyaParser.py',453),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','lyaParser.py',459),
  ('conditional_expression -> IF boolean_expression then_expression elseif_expression_list else_expression FI','conditional_expression',6,'p_conditional_expression2','lyaParser.py',463),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','lyaParser.py',467),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','lyaParser.py',471),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','lyaParser.py',475),
  ('elseif_expression_list -> elseif_expression','elseif_expression_list',1,'p_elseif_expression_list','lyaParser.py',479),
  ('elseif_expression_list -> elseif_expression_list elseif_expression','elseif_expression_list',2,'p_elseif_expression_list','lyaParser.py',480),
  ('elseif_expression -> ELSIF boolean_expression then_expression','elseif_expression',3,'p_elseif_expression','lyaParser.py',487),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','lyaParser.py',495),
  ('location -> location_name','location',1,'p_location','lyaParser.py',499),
  ('location -> string_reference','location',1,'p_location','lyaParser.py',500),
  ('location -> dereferenced_reference','location',1,'p_location','lyaParser.py',501),
  ('location -> array_element','location',1,'p_location','lyaParser.py',502),
  ('location -> array_slice','location',1,'p_location','lyaParser.py',503),
  ('location -> call_action','location',1,'p_location','lyaParser.py',504),
  ('location_name -> ID','location_name',1,'p_location_name','lyaParser.py',508),
  ('string_reference -> location_name LBRACKET integer_expression RBRACKET','string_reference',4,'p_string_reference','lyaParser.py',512),
  ('string_reference -> location_name LBRACKET literal_range RBRACKET','string_reference',4,'p_string_reference2','lyaParser.py',516),
  ('dereferenced_reference -> location ARROW','dereferenced_reference',2,'p_dereferenced_reference','lyaParser.py',520),
  ('array_element -> location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','lyaParser.py',524),
  ('array_slice -> location LBRACKET literal_range RBRACKET','array_slice',4,'p_array_slice','lyaParser.py',528),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','lyaParser.py',536),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','lyaParser.py',537),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','lyaParser.py',545),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action2','lyaParser.py',549),
  ('then_clause -> THEN','then_clause',1,'p_then_clause','lyaParser.py',553),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','lyaParser.py',554),
  ('else_clause -> ELSE','else_clause',1,'p_else_clause','lyaParser.py',561),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','lyaParser.py',562),
  ('else_clause -> elseif_clause','else_clause',1,'p_else_clause2','lyaParser.py',569),
  ('elseif_clause -> ELSIF boolean_expression then_clause','elseif_clause',3,'p_elseif_clause','lyaParser.py',573),
  ('elseif_clause -> ELSIF boolean_expression then_clause else_clause','elseif_clause',4,'p_elseif_clause2','lyaParser.py',577),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','lyaParser.py',582),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','lyaParser.py',583),
  ('do_action -> DO OD','do_action',2,'p_do_action','lyaParser.py',594),
  ('do_action -> DO control_part SMC OD','do_action',4,'p_do_action2','lyaParser.py',598),
  ('do_action -> DO control_part SMC action_statement_list OD','do_action',5,'p_do_action3','lyaParser.py',602),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action4','lyaParser.py',606),
  ('control_part -> for_control','control_part',1,'p_control_part','lyaParser.py',610),
  ('control_part -> while_control','control_part',1,'p_control_part','lyaParser.py',611),
  ('control_part -> for_control while_control','control_part',2,'p_control_part2','lyaParser.py',615),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','lyaParser.py',619),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','lyaParser.py',623),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','lyaParser.py',624),
  ('step_enumeration -> loop_counter EQUALS start_value end_value','step_enumeration',4,'p_step_enumeration','lyaParser.py',628),
  ('step_enumeration -> loop_counter EQUALS start_value step_value end_value','step_enumeration',5,'p_step_enumeration2','lyaParser.py',632),
  ('step_enumeration -> loop_counter EQUALS start_value DOWN end_value','step_enumeration',5,'p_step_enumeration3','lyaParser.py',636),
  ('step_enumeration -> loop_counter EQUALS start_value step_value DOWN end_value','step_enumeration',6,'p_step_enumeration4','lyaParser.py',640),
  ('loop_counter -> ID','loop_counter',1,'p_loop_counter','lyaParser.py',644),
  ('start_value -> discrete_expression','start_value',1,'p_start_value','lyaParser.py',648),
  ('step_value -> BY integer_expression','step_value',2,'p_step_value','lyaParser.py',652),
  ('end_value -> TO discrete_expression','end_value',2,'p_end_value','lyaParser.py',656),
  ('discrete_expression -> expression','discrete_expression',1,'p_discrete_expression','lyaParser.py',660),
  ('range_enumeration -> loop_counter IN discrete_mode','range_enumeration',3,'p_range_enumeration','lyaParser.py',664),
  ('range_enumeration -> loop_counter DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration2','lyaParser.py',668),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','lyaParser.py',672),
  ('procedure_statement -> label COLON procedure_definition SMC','procedure_statement',4,'p_procedure_statement','lyaParser.py',680),
  ('procedure_definition -> PROC LPAREN RPAREN SMC END','procedure_definition',5,'p_procedure_definition1','lyaParser.py',684),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SMC statement_list END','procedure_definition',7,'p_procedure_definition1','lyaParser.py',685),
  ('procedure_definition -> PROC LPAREN RPAREN SMC statement_list END','procedure_definition',6,'p_procedure_definition1','lyaParser.py',686),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SMC END','procedure_definition',6,'p_procedure_definition2','lyaParser.py',695),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SMC END','procedure_definition',7,'p_procedure_definition2','lyaParser.py',696),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SMC statement_list END','procedure_definition',8,'p_procedure_definition2','lyaParser.py',697),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SMC statement_list END','procedure_definition',7,'p_procedure_definition3','lyaParser.py',706),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SMC END','procedure_definition',6,'p_procedure_definition3','lyaParser.py',707),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','lyaParser.py',714),
  ('formal_parameter_list -> formal_parameter COMMA formal_parameter_list','formal_parameter_list',3,'p_formal_parameter_list','lyaParser.py',715),
  ('formal_parameter -> id_list parameter_spec','formal_parameter',2,'p_formal_parameter','lyaParser.py',722),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','lyaParser.py',726),
  ('parameter_spec -> mode parameter_attribute','parameter_spec',2,'p_parameter_spec','lyaParser.py',727),
  ('parameter_attribute -> LOC','parameter_attribute',1,'p_parameter_attribute','lyaParser.py',734),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','lyaParser.py',738),
  ('result_spec -> RETURNS LPAREN mode result_attribute RPAREN','result_spec',5,'p_result_spec','lyaParser.py',739),
  ('result_attribute -> LOC','result_attribute',1,'p_result_attribute','lyaParser.py',746),
  ('call_action -> procedure_call','call_action',1,'p_call_action','lyaParser.py',754),
  ('call_action -> builtin_call','call_action',1,'p_call_action','lyaParser.py',755),
  ('procedure_call -> ID LPAREN RPAREN','procedure_call',3,'p_procedure_call','lyaParser.py',759),
  ('procedure_call -> ID LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','lyaParser.py',760),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','lyaParser.py',767),
  ('parameter_list -> parameter COMMA parameter_list','parameter_list',3,'p_parameter_list','lyaParser.py',768),
  ('parameter -> expression','parameter',1,'p_parameter','lyaParser.py',775),
  ('exit_action -> EXIT label','exit_action',2,'p_exit_action','lyaParser.py',783),
  ('return_action -> RETURN','return_action',1,'p_return_action','lyaParser.py',787),
  ('return_action -> RETURN result','return_action',2,'p_return_action','lyaParser.py',788),
  ('result_action -> RESULT result','result_action',2,'p_result_action','lyaParser.py',795),
  ('result -> expression','result',1,'p_result','lyaParser.py',799),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','lyaParser.py',803),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','lyaParser.py',804),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','lyaParser.py',811),
  ('builtin_name -> PRED','builtin_name',1,'p_builtin_name','lyaParser.py',812),
  ('builtin_name -> SUCC','builtin_name',1,'p_builtin_name','lyaParser.py',813),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','lyaParser.py',814),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','lyaParser.py',815),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','lyaParser.py',816),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','lyaParser.py',817),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','lyaParser.py',818),
  ('integer_expression -> expression','integer_expression',1,'p_integer_expression','lyaParser.py',827),
  ('empty -> <empty>','empty',0,'p_empty','lyaParser.py',834),
]
