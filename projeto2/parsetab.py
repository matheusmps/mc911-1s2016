
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'A329C7AEB8B9C1E98469646CD8DDA3ED'
    
_lr_action_items = {'INT':([49,106,120,136,173,211,227,238,262,281,301,302,321,],[-15,167,167,167,167,-16,167,167,167,167,167,167,167,]),'ID':([0,6,7,9,11,14,17,24,25,29,34,35,37,40,41,44,46,47,49,61,65,74,75,77,78,87,92,93,94,97,98,101,102,103,104,106,108,109,113,114,117,118,120,124,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,151,152,153,154,162,173,184,185,186,188,190,191,200,201,204,205,208,211,220,221,222,223,224,227,230,231,232,236,238,240,244,246,249,250,257,260,262,281,288,297,300,301,302,309,310,318,320,321,322,334,335,337,342,],[2,49,52,-8,89,52,-6,49,2,-9,49,-7,52,-3,2,-5,52,52,-15,52,-120,52,52,-121,52,158,-117,-112,-115,-116,-111,52,-110,52,-84,170,-157,52,2,197,52,-74,170,-4,49,-45,211,170,-99,-97,-96,-101,-95,-100,-98,-103,-104,-105,52,-102,52,52,-108,52,-109,-85,170,52,-49,49,158,2,-158,49,-10,2,52,52,-16,52,-181,49,-75,52,267,52,52,52,2,279,52,52,52,2,2,52,52,170,279,2,49,2,267,170,52,52,2,2,170,2,2,2,2,2,]),'PROC':([87,],[160,]),'RETURNS':([265,296,],[299,299,]),'COMMA':([3,5,15,21,31,32,45,48,49,50,51,52,53,54,55,56,57,58,59,60,62,63,64,67,68,69,70,71,72,76,79,80,81,82,83,84,85,100,105,106,107,119,120,121,125,127,128,150,155,163,165,167,169,170,171,172,176,177,178,179,180,181,182,199,202,206,207,209,210,211,212,213,214,215,217,218,225,226,228,233,234,235,241,242,243,252,253,254,255,262,264,266,268,269,270,271,277,285,289,294,295,303,304,305,313,315,316,324,325,326,],[-134,-136,-200,-199,-138,-137,-135,133,-15,135,-46,-140,-67,-68,-113,-91,-106,-56,-63,-123,-61,-65,-60,-118,-62,-64,-124,-58,-93,-66,-139,-122,-59,-69,-92,-55,-57,-143,-50,135,186,200,135,-11,205,-201,-205,-119,-133,224,-89,-25,-20,-22,-18,-36,-24,-27,-26,-23,-35,-19,-21,-211,-14,-202,-141,-142,-47,-16,-48,-94,-114,224,-107,-73,-144,-145,-34,-52,-54,-51,-212,-12,-13,-31,-33,-70,-71,135,297,-90,-40,-42,301,-43,-53,-17,-125,-192,-193,-37,-28,-29,-126,-194,-195,-41,-39,-44,]),'ISEQUAL':([3,5,15,21,31,32,45,52,53,54,55,56,57,58,59,60,62,63,64,67,68,69,70,71,72,76,79,80,81,82,84,85,100,127,150,155,199,206,207,209,213,214,217,218,225,226,241,254,255,267,],[-134,-136,-200,-199,-138,-137,-135,-140,-67,-68,-113,142,-106,-56,-63,-123,-61,-65,-60,-118,-62,-64,-124,-58,-93,-66,-139,-122,-59,-69,-55,-57,-143,-201,-119,-133,-211,-202,-141,-142,-94,-114,-107,-73,-144,-145,-212,-70,-71,-140,]),'NOTEQUAL':([3,5,15,21,31,32,45,52,53,54,55,56,57,58,59,60,62,63,64,67,68,69,70,71,72,76,79,80,81,82,84,85,100,127,150,155,199,206,207,209,213,214,217,218,225,226,241,254,255,267,],[-134,-136,-200,-199,-138,-137,-135,-140,-67,-68,-113,140,-106,-56,-63,-123,-61,-65,-60,-118,-62,-64,-124,-58,-93,-66,-139,-122,-59,-69,-55,-57,-143,-201,-119,-133,-211,-202,-141,-142,-94,-114,-107,-73,-144,-145,-212,-70,-71,-140,]),'REF':([49,106,120,136,173,211,262,302,321,],[-15,173,173,173,173,-16,173,173,173,]),'TYPE':([0,9,17,29,35,40,41,44,118,124,134,185,201,221,223,300,318,320,322,334,335,337,342,],[6,-8,-6,-9,-7,-3,6,-5,-74,-4,-45,-49,-10,-181,-75,6,6,6,6,6,6,6,6,]),'STRINGCONST':([7,14,37,46,47,61,65,75,77,78,92,93,94,97,98,101,102,103,104,109,117,137,138,139,140,141,142,143,144,145,146,147,148,149,151,152,153,154,162,184,205,208,220,224,227,230,231,232,240,244,246,257,260,301,309,310,],[54,54,54,54,54,54,-120,54,-121,54,-117,-112,-115,-116,-111,54,-110,54,-84,54,54,-99,-97,-96,-101,-95,-100,-98,-103,-104,-105,54,-102,54,54,-108,54,-109,-85,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'RESULT':([0,9,17,25,29,35,40,41,44,87,108,113,118,124,134,185,188,190,191,201,204,221,223,236,249,250,288,300,318,320,322,334,335,337,342,],[7,-8,-6,7,-9,-7,-3,7,-5,7,-157,7,-74,-4,-45,-49,7,7,-158,-10,7,-181,-75,7,7,7,7,7,7,7,7,7,7,7,7,]),'MOD':([2,3,5,15,16,21,31,32,38,45,52,53,54,55,57,58,59,60,62,63,64,67,68,69,70,71,76,79,80,81,82,84,85,100,127,150,155,158,199,206,207,209,214,217,218,225,226,241,254,255,267,],[-140,-134,-136,-200,92,-199,-138,-137,-139,-135,-140,-67,-68,-113,92,-56,-63,-123,-61,-65,-60,-118,-62,-64,-124,-58,-66,-139,-122,-59,-69,-55,-57,-143,-201,-119,-133,-140,-211,-202,-141,-142,-114,92,-73,-144,-145,-212,-70,-71,-140,]),'STRCONC':([2,3,5,15,16,21,31,32,38,45,52,53,54,55,57,58,59,60,62,63,64,67,68,69,70,71,72,76,79,80,81,82,84,85,100,127,150,155,158,199,206,207,209,213,214,217,218,225,226,241,254,255,267,],[-140,-134,-136,-200,93,-199,-138,-137,-139,-135,-140,-67,-68,-113,-106,-56,-63,-123,-61,-65,-60,-118,-62,-64,-124,-58,93,-66,-139,-122,-59,-69,-55,-57,-143,-201,-119,-133,-140,-211,-202,-141,-142,93,-114,-107,-73,-144,-145,-212,-70,-71,-140,]),'READ':([0,7,9,14,17,25,29,35,37,40,41,44,46,47,61,65,74,75,77,78,87,92,93,94,97,98,101,102,103,104,108,109,113,117,118,124,134,137,138,139,140,141,142,143,144,145,146,147,148,149,151,152,153,154,162,184,185,188,190,191,201,204,205,208,220,221,223,224,227,230,231,232,236,240,244,246,249,250,257,260,288,300,301,309,310,318,320,322,334,335,337,342,],[42,42,-8,42,-6,42,-9,-7,42,-3,42,-5,42,42,42,-120,42,42,-121,42,42,-117,-112,-115,-116,-111,42,-110,42,-84,-157,42,42,42,-74,-4,-45,-99,-97,-96,-101,-95,-100,-98,-103,-104,-105,42,-102,42,42,-108,42,-109,-85,42,-49,42,42,-158,-10,42,42,42,42,-181,-75,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'WHILE':([3,5,15,21,25,31,32,45,52,53,54,55,56,57,58,59,60,62,63,64,67,68,69,70,71,72,76,79,80,81,82,83,84,85,100,111,127,150,155,167,176,177,178,179,193,195,196,199,206,207,209,213,214,217,218,225,226,241,254,255,280,284,289,304,305,306,307,313,327,330,331,341,],[-134,-136,-200,-199,109,-138,-137,-135,-140,-67,-68,-113,-91,-106,-56,-63,-123,-61,-65,-60,-118,-62,-64,-124,-58,-93,-66,-139,-122,-59,-69,-92,-55,-57,-143,109,-201,-119,-133,-25,-24,-27,-26,-23,-166,-167,-168,-211,-202,-141,-142,-94,-114,-107,-73,-144,-145,-212,-70,-71,-178,-177,-125,-28,-29,-179,-169,-126,-171,-176,-170,-172,]),'GE':([3,5,15,21,31,32,45,52,53,54,55,56,57,58,59,60,62,63,64,67,68,69,70,71,72,76,79,80,81,82,84,85,100,127,150,155,199,206,207,209,213,214,217,218,225,226,241,254,255,267,],[-134,-136,-200,-199,-138,-137,-135,-140,-67,-68,-113,144,-106,-56,-63,-123,-61,-65,-60,-118,-62,-64,-124,-58,-93,-66,-139,-122,-59,-69,-55,-57,-143,-201,-119,-133,-211,-202,-141,-142,-94,-114,-107,-73,-144,-145,-212,-70,-71,-140,]),'PRINT':([0,7,9,14,17,25,29,35,37,40,41,44,46,47,61,65,74,75,77,78,87,92,93,94,97,98,101,102,103,104,108,109,113,117,118,124,134,137,138,139,140,141,142,143,144,145,146,147,148,149,151,152,153,154,162,184,185,188,190,191,201,204,205,208,220,221,223,224,227,230,231,232,236,240,244,246,249,250,257,260,288,300,301,309,310,318,320,322,334,335,337,342,],[4,4,-8,4,-6,4,-9,-7,4,-3,4,-5,4,4,4,-120,4,4,-121,4,4,-117,-112,-115,-116,-111,4,-110,4,-84,-157,4,4,4,-74,-4,-45,-99,-97,-96,-101,-95,-100,-98,-103,-104,-105,4,-102,4,4,-108,4,-109,-85,4,-49,4,4,-158,-10,4,4,4,4,-181,-75,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'LT':([3,5,15,21,31,32,45,52,53,54,55,56,57,58,59,60,62,63,64,67,68,69,70,71,72,76,79,80,81,82,84,85,100,127,150,155,199,206,207,209,213,214,217,218,225,226,241,254,255,267,],[-134,-136,-200,-199,-138,-137,-135,-140,-67,-68,-113,145,-106,-56,-63,-123,-61,-65,-60,-118,-62,-64,-124,-58,-93,-66,-139,-122,-59,-69,-55,-57,-143,-201,-119,-133,-211,-202,-141,-142,-94,-114,-107,-73,-144,-145,-212,-70,-71,-140,]),'EXIT':([0,9,17,25,29,35,40,41,44,87,108,113,118,124,134,185,188,190,191,201,204,221,223,236,249,250,288,300,318,320,322,334,335,337,342,],[11,-8,-6,11,-9,-7,-3,11,-5,11,-157,11,-74,-4,-45,-49,11,11,-158,-10,11,-181,-75,11,11,11,11,11,11,11,11,11,11,11,11,]),'CHAR':([49,106,120,136,173,211,227,238,262,281,301,302,321,],[-15,177,177,177,177,-16,177,177,177,177,177,177,177,]),'LE':([3,5,15,21,31,32,45,52,53,54,55,56,57,58,59,60,62,63,64,67,68,69,70,71,72,76,79,80,81,82,84,85,100,127,150,155,199,206,207,209,213,214,217,218,225,226,241,254,255,267,],[-134,-136,-200,-199,-138,-137,-135,-140,-67,-68,-113,146,-106,-56,-63,-123,-61,-65,-60,-118,-62,-64,-124,-58,-93,-66,-139,-122,-59,-69,-55,-57,-143,-201,-119,-133,-211,-202,-141,-142,-94,-114,-107,-73,-144,-145,-212,-70,-71,-140,]),'RETURN':([0,9,17,25,29,35,40,41,44,87,108,113,118,124,134,185,188,190,191,201,204,221,223,236,249,250,288,300,318,320,322,334,335,337,342,],[14,-8,-6,14,-9,-7,-3,14,-5,14,-157,14,-74,-4,-45,-49,14,14,-158,-10,14,-181,-75,14,14,14,14,14,14,14,14,14,14,14,14,]),'GT':([3,5,15,21,31,32,45,52,53,54,55,56,57,58,59,60,62,63,64,67,68,69,70,71,72,76,79,80,81,82,84,85,100,127,150,155,199,206,207,209,213,214,217,218,225,226,241,254,255,267,],[-134,-136,-200,-199,-138,-137,-135,-140,-67,-68,-113,148,-106,-56,-63,-123,-61,-65,-60,-118,-62,-64,-124,-58,-93,-66,-139,-122,-59,-69,-55,-57,-143,-201,-119,-133,-211,-202,-141,-142,-94,-114,-107,-73,-144,-145,-212,-70,-71,-140,]),'FOR':([25,],[114,]),'RBRACKET':([3,5,15,21,31,32,45,52,53,54,55,56,57,58,59,60,62,63,64,67,68,69,70,71,72,76,79,80,81,82,83,84,85,100,127,129,131,132,150,155,163,164,165,167,176,177,178,179,199,206,207,209,213,214,215,216,217,218,225,226,241,252,253,254,255,266,268,269,270,271,273,274,289,304,305,313,324,],[-134,-136,-200,-199,-138,-137,-135,-140,-67,-68,-113,-91,-106,-56,-63,-123,-61,-65,-60,-118,-62,-64,-124,-58,-93,-66,-139,-122,-59,-69,-92,-55,-57,-143,-201,207,209,-221,-119,-133,225,226,-89,-25,-24,-27,-26,-23,-211,-202,-141,-142,-94,-114,254,255,-107,-73,-144,-145,-212,-31,-33,-70,-71,-90,-40,-42,302,-43,-38,303,-125,-28,-29,-126,-41,]),'FI':([3,5,15,21,31,32,45,52,53,54,55,56,57,58,59,60,62,63,64,67,68,69,70,71,72,76,79,80,81,82,83,84,85,100,108,118,127,150,155,191,199,203,204,206,207,209,213,214,217,218,223,225,226,241,245,248,249,250,254,255,256,288,289,290,291,312,313,333,],[-134,-136,-200,-199,-138,-137,-135,-140,-67,-68,-113,-91,-106,-56,-63,-123,-61,-65,-60,-118,-62,-64,-124,-58,-93,-66,-139,-122,-59,-69,-92,-55,-57,-143,-157,-74,-201,-119,-133,-158,-211,247,-150,-202,-141,-142,-94,-114,-107,-73,-75,-144,-145,-212,-154,287,-152,-151,-70,-71,289,-153,-125,-129,313,-155,-126,-156,]),'IN':([3,5,15,21,31,32,45,52,53,54,55,56,57,58,59,60,62,63,64,67,68,69,70,71,72,76,79,80,81,82,84,85,100,127,150,155,194,197,199,206,207,209,213,214,217,218,225,226,239,241,254,255,267,],[-134,-136,-200,-199,-138,-137,-135,-140,-67,-68,-113,138,-106,-56,-63,-123,-61,-65,-60,-118,-62,-64,-124,-58,-93,-66,-139,-122,-59,-69,-55,-57,-143,-201,-119,-133,238,-173,-211,-202,-141,-142,-94,-114,-107,-73,-144,-145,281,-212,-70,-71,-140,]),'OD':([25,108,113,118,190,191,223,236,],[116,-157,192,-74,237,-158,-75,278,]),'FALSE':([7,14,37,46,47,61,65,75,77,78,92,93,94,97,98,101,102,103,104,109,117,137,138,139,140,141,142,143,144,145,146,147,148,149,151,152,153,154,162,184,205,208,220,224,227,230,231,232,240,244,246,257,260,301,309,310,],[63,63,63,63,63,63,-120,63,-121,63,-117,-112,-115,-116,-111,63,-110,63,-84,63,63,-99,-97,-96,-101,-95,-100,-98,-103,-104,-105,63,-102,63,63,-108,63,-109,-85,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'TO':([3,5,15,21,31,32,45,52,53,54,55,56,57,58,59,60,62,63,64,67,68,69,70,71,72,76,79,80,81,82,83,84,85,100,127,150,155,199,206,207,209,213,214,217,218,225,226,241,254,255,282,283,284,289,308,311,313,328,329,332,],[-134,-136,-200,-199,-138,-137,-135,-140,-67,-68,-113,-91,-106,-56,-63,-123,-61,-65,-60,-118,-62,-64,-124,-58,-93,-66,-139,-122,-59,-69,-92,-55,-57,-143,-201,-119,-133,-211,-202,-141,-142,-94,-114,-107,-73,-144,-145,-212,-70,-71,-174,310,-177,-125,310,310,-126,-175,-221,310,]),'BOOL':([49,106,120,136,173,211,227,238,262,281,301,302,321,],[-15,178,178,178,178,-16,178,178,178,178,178,178,178,]),'DIV':([2,3,5,15,16,21,31,32,38,45,52,53,54,55,57,58,59,60,62,63,64,67,68,69,70,71,76,79,80,81,82,84,85,100,127,150,155,158,199,206,207,209,214,217,218,225,226,241,254,255,267,],[-140,-134,-136,-200,97,-199,-138,-137,-139,-135,-140,-67,-68,-113,97,-56,-63,-123,-61,-65,-60,-118,-62,-64,-124,-58,-66,-139,-122,-59,-69,-55,-57,-143,-201,-119,-133,-140,-211,-202,-141,-142,-114,97,-73,-144,-145,-212,-70,-71,-140,]),'THEN':([3,5,15,21,31,32,45,52,53,54,55,56,57,58,59,60,62,63,64,67,68,69,70,71,72,76,79,80,81,82,83,84,85,100,122,123,127,150,155,157,199,206,207,209,213,214,217,218,225,226,241,254,255,286,289,293,313,],[-134,-136,-200,-199,-138,-137,-135,-140,-67,-68,-113,-91,-106,-56,-63,-123,-61,-65,-60,-118,-62,-64,-124,-58,-93,-66,-139,-122,-59,-69,-92,-55,-57,-143,204,-127,-201,-119,-133,220,-211,-202,-141,-142,-94,-114,-107,-73,-144,-145,-212,-70,-71,204,-125,220,-126,]),'LOC':([167,169,170,171,172,176,177,178,179,180,181,182,228,295,303,304,305,325,326,339,],[-25,-20,-22,-18,-36,-24,-27,-26,-23,-35,-19,-21,-34,316,-37,-28,-29,-39,-44,347,]),'MINUS':([2,3,5,7,14,15,16,21,31,32,37,38,45,46,47,52,53,54,55,57,58,59,60,62,63,64,67,68,69,70,71,72,75,76,78,79,80,81,82,84,85,92,93,94,97,98,100,101,102,103,104,109,117,127,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,158,162,184,199,205,206,207,208,209,213,214,217,218,220,224,225,226,227,230,231,232,240,241,244,246,254,255,257,260,267,301,309,310,],[-140,-134,-136,65,65,-200,98,-199,-138,-137,65,-139,-135,65,65,-140,-67,-68,-113,-106,-56,-63,-123,-61,-65,-60,-118,-62,-64,-124,-58,98,65,-66,65,-139,-122,-59,-69,-55,-57,-117,-112,-115,-116,-111,-143,65,-110,65,-84,65,65,-201,-99,-97,-96,-101,-95,-100,-98,-103,-104,-105,65,-102,65,-119,65,-108,65,-109,-133,-140,-85,65,-211,65,-202,-141,65,-142,98,-114,-107,-73,65,65,-144,-145,65,65,65,65,65,-212,65,65,-70,-71,65,65,-140,65,65,65,]),'SYN':([0,9,17,29,35,40,41,44,118,124,134,185,201,221,223,300,318,320,322,334,335,337,342,],[24,-8,-6,-9,-7,-3,24,-5,-74,-4,-45,-49,-10,-181,-75,24,24,24,24,24,24,24,24,]),'DO':([0,9,17,25,29,35,40,41,44,87,108,113,118,124,134,185,188,190,191,201,204,221,223,236,249,250,288,300,318,320,322,334,335,337,342,],[25,-8,-6,25,-9,-7,-3,25,-5,25,-157,25,-74,-4,-45,-49,25,25,-158,-10,25,-181,-75,25,25,25,25,25,25,25,25,25,25,25,25,]),'CHARCONST':([7,14,37,46,47,61,65,75,77,78,92,93,94,97,98,101,102,103,104,109,117,137,138,139,140,141,142,143,144,145,146,147,148,149,151,152,153,154,162,184,205,208,220,224,227,230,231,232,240,244,246,257,260,301,309,310,],[53,53,53,53,53,53,-120,53,-121,53,-117,-112,-115,-116,-111,53,-110,53,-84,53,53,-99,-97,-96,-101,-95,-100,-98,-103,-104,-105,53,-102,53,53,-108,53,-109,-85,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'ARRAY':([49,106,120,136,173,211,262,302,321,],[-15,168,168,168,168,-16,168,168,168,]),'UPPER':([0,7,9,14,17,25,29,35,37,40,41,44,46,47,61,65,74,75,77,78,87,92,93,94,97,98,101,102,103,104,108,109,113,117,118,124,134,137,138,139,140,141,142,143,144,145,146,147,148,149,151,152,153,154,162,184,185,188,190,191,201,204,205,208,220,221,223,224,227,230,231,232,236,240,244,246,249,250,257,260,288,300,301,309,310,318,320,322,334,335,337,342,],[8,8,-8,8,-6,8,-9,-7,8,-3,8,-5,8,8,8,-120,8,8,-121,8,8,-117,-112,-115,-116,-111,8,-110,8,-84,-157,8,8,8,-74,-4,-45,-99,-97,-96,-101,-95,-100,-98,-103,-104,-105,8,-102,8,8,-108,8,-109,-85,8,-49,8,8,-158,-10,8,8,8,8,-181,-75,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'LOWER':([0,7,9,14,17,25,29,35,37,40,41,44,46,47,61,65,74,75,77,78,87,92,93,94,97,98,101,102,103,104,108,109,113,117,118,124,134,137,138,139,140,141,142,143,144,145,146,147,148,149,151,152,153,154,162,184,185,188,190,191,201,204,205,208,220,221,223,224,227,230,231,232,236,240,244,246,249,250,257,260,288,300,301,309,310,318,320,322,334,335,337,342,],[27,27,-8,27,-6,27,-9,-7,27,-3,27,-5,27,27,27,-120,27,27,-121,27,27,-117,-112,-115,-116,-111,27,-110,27,-84,-157,27,27,27,-74,-4,-45,-99,-97,-96,-101,-95,-100,-98,-103,-104,-105,27,-102,27,27,-108,27,-109,-85,27,-49,27,27,-158,-10,27,27,27,27,-181,-75,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'DOWN':([3,5,15,21,31,32,45,52,53,54,55,56,57,58,59,60,62,63,64,67,68,69,70,71,72,76,79,80,81,82,83,84,85,100,127,150,155,194,197,199,206,207,209,213,214,217,218,225,226,241,254,255,282,283,284,289,311,313,328,329,],[-134,-136,-200,-199,-138,-137,-135,-140,-67,-68,-113,-91,-106,-56,-63,-123,-61,-65,-60,-118,-62,-64,-124,-58,-93,-66,-139,-122,-59,-69,-92,-55,-57,-143,-201,-119,-133,239,-173,-211,-202,-141,-142,-94,-114,-107,-73,-144,-145,-212,-70,-71,-174,308,-177,-125,332,-126,-175,-221,]),'INTCONST':([7,14,37,46,47,61,65,75,77,78,92,93,94,97,98,101,102,103,104,109,117,137,138,139,140,141,142,143,144,145,146,147,148,149,151,152,153,154,162,184,205,208,220,224,227,229,230,231,232,240,244,246,257,260,301,309,310,],[69,69,69,69,69,69,-120,69,-121,69,-117,-112,-115,-116,-111,69,-110,69,-84,69,69,-99,-97,-96,-101,-95,-100,-98,-103,-104,-105,69,-102,69,69,-108,69,-109,-85,69,69,69,69,69,69,273,69,69,69,69,69,69,69,69,69,69,69,]),'TIMES':([2,3,5,15,16,21,31,32,38,45,52,53,54,55,57,58,59,60,62,63,64,67,68,69,70,71,76,79,80,81,82,84,85,100,127,150,155,158,199,206,207,209,214,217,218,225,226,241,254,255,267,],[-140,-134,-136,-200,94,-199,-138,-137,-139,-135,-140,-67,-68,-113,94,-56,-63,-123,-61,-65,-60,-118,-62,-64,-124,-58,-66,-139,-122,-59,-69,-55,-57,-143,-201,-119,-133,-140,-211,-202,-141,-142,-114,94,-73,-144,-145,-212,-70,-71,-140,]),'SMC':([1,3,5,14,15,19,20,21,23,28,30,31,32,33,36,38,45,48,51,52,53,54,55,56,57,58,59,60,62,63,64,67,68,69,70,71,72,73,76,79,80,81,82,83,84,85,86,88,89,90,100,105,107,111,112,115,116,119,121,123,127,150,155,159,161,166,167,169,170,171,172,176,177,178,179,180,181,182,187,189,192,193,195,196,199,202,206,207,209,210,212,213,214,217,218,225,226,228,233,234,235,237,241,242,243,247,254,255,265,277,278,280,284,285,287,289,296,298,303,304,305,306,307,313,317,323,325,326,327,330,331,336,338,340,341,343,344,345,348,349,350,],[-82,-134,-136,-207,-200,-77,-80,-199,-78,118,-146,-138,-137,-81,-147,-79,-135,134,-46,-140,-67,-68,-113,-91,-106,-56,-63,-123,-61,-65,-60,-118,-62,-64,-124,-58,-93,-209,-66,-139,-122,-59,-69,-92,-55,-57,-210,-206,-76,-208,-143,-50,185,-163,190,-164,-159,201,-11,-127,-201,-119,-133,221,223,-83,-25,-20,-22,-18,-36,-24,-27,-26,-23,-35,-19,-21,-180,-165,-162,-166,-167,-168,-211,-14,-202,-141,-142,-47,-48,-94,-114,-107,-73,-144,-145,-34,-52,-54,-51,-160,-212,-12,-13,-148,-70,-71,300,-53,-161,-178,-177,-17,-149,-125,318,320,-37,-28,-29,-179,-169,-126,334,-182,-39,-44,-171,-176,-170,-185,-189,-184,-172,-186,-183,-188,-196,-187,-197,]),'TRUE':([7,14,37,46,47,61,65,75,77,78,92,93,94,97,98,101,102,103,104,109,117,137,138,139,140,141,142,143,144,145,146,147,148,149,151,152,153,154,162,184,205,208,220,224,227,230,231,232,240,244,246,257,260,301,309,310,],[76,76,76,76,76,76,-120,76,-121,76,-117,-112,-115,-116,-111,76,-110,76,-84,76,76,-99,-97,-96,-101,-95,-100,-98,-103,-104,-105,76,-102,76,76,-108,76,-109,-85,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'ELSE':([3,5,15,21,31,32,45,52,53,54,55,56,57,58,59,60,62,63,64,67,68,69,70,71,72,76,79,80,81,82,83,84,85,100,108,118,127,150,155,191,199,203,204,206,207,209,213,214,217,218,219,223,225,226,241,250,254,255,258,259,261,289,292,312,313,314,],[-134,-136,-200,-199,-138,-137,-135,-140,-67,-68,-113,-91,-106,-56,-63,-123,-61,-65,-60,-118,-62,-64,-124,-58,-93,-66,-139,-122,-59,-69,-92,-55,-57,-143,-157,-74,-201,-119,-133,-158,-211,249,-150,-202,-141,-142,-94,-114,-107,-73,257,-75,-144,-145,-212,-151,-70,-71,-130,257,-128,-125,-131,249,-126,-132,]),'ARROW':([2,3,5,7,14,15,16,21,31,32,37,38,45,46,47,52,60,61,65,75,77,78,79,92,93,94,97,98,100,101,102,103,104,109,117,127,137,138,139,140,141,142,143,144,145,146,147,148,149,151,152,153,154,155,158,162,184,199,205,206,207,208,209,220,224,225,226,227,230,231,232,240,241,244,246,257,260,267,301,309,310,],[-140,-134,-136,74,74,-200,100,-199,-138,-137,74,-139,-135,74,74,-140,100,74,-120,74,-121,74,-139,-117,-112,-115,-116,-111,-143,74,-110,74,-84,74,74,-201,-99,-97,-96,-101,-95,-100,-98,-103,-104,-105,74,-102,74,74,-108,74,-109,100,-140,-85,74,-211,74,-202,-141,74,-142,74,74,-144,-145,74,74,74,74,74,-212,74,74,74,74,-140,74,74,74,]),'LENGTH':([0,7,9,14,17,25,29,35,37,40,41,44,46,47,61,65,74,75,77,78,87,92,93,94,97,98,101,102,103,104,108,109,113,117,118,124,134,137,138,139,140,141,142,143,144,145,146,147,148,149,151,152,153,154,162,184,185,188,190,191,201,204,205,208,220,221,223,224,227,230,231,232,236,240,244,246,249,250,257,260,288,300,301,309,310,318,320,322,334,335,337,342,],[13,13,-8,13,-6,13,-9,-7,13,-3,13,-5,13,13,13,-120,13,13,-121,13,13,-117,-112,-115,-116,-111,13,-110,13,-84,-157,13,13,13,-74,-4,-45,-99,-97,-96,-101,-95,-100,-98,-103,-104,-105,13,-102,13,13,-108,13,-109,-85,13,-49,13,13,-158,-10,13,13,13,13,-181,-75,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'CHARS':([49,106,120,136,173,211,262,302,321,],[-15,174,174,174,174,-16,174,174,174,]),'NUM':([0,7,9,14,17,25,29,35,37,40,41,44,46,47,61,65,74,75,77,78,87,92,93,94,97,98,101,102,103,104,108,109,113,117,118,124,134,137,138,139,140,141,142,143,144,145,146,147,148,149,151,152,153,154,162,184,185,188,190,191,201,204,205,208,220,221,223,224,227,230,231,232,236,240,244,246,249,250,257,260,288,300,301,309,310,318,320,322,334,335,337,342,],[18,18,-8,18,-6,18,-9,-7,18,-3,18,-5,18,18,18,-120,18,18,-121,18,18,-117,-112,-115,-116,-111,18,-110,18,-84,-157,18,18,18,-74,-4,-45,-99,-97,-96,-101,-95,-100,-98,-103,-104,-105,18,-102,18,18,-108,18,-109,-85,18,-49,18,18,-158,-10,18,18,18,18,-181,-75,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'DCL':([0,9,17,29,35,40,41,44,118,124,134,185,201,221,223,300,318,320,322,334,335,337,342,],[34,-8,-6,-9,-7,-3,34,-5,-74,-4,-45,-49,-10,-181,-75,34,34,34,34,34,34,34,34,]),'LPAREN':([2,4,7,8,13,14,18,26,27,37,39,42,43,46,47,52,61,65,75,77,78,92,93,94,97,98,101,102,103,104,109,117,137,138,139,140,141,142,143,144,145,146,147,148,149,151,152,153,154,158,160,162,167,170,175,177,178,179,184,205,208,220,224,227,230,231,232,240,244,246,257,260,267,279,299,301,309,310,],[46,-220,75,-216,-218,75,-213,117,-217,75,-214,-219,-215,75,75,46,75,-120,75,-121,75,-117,-112,-115,-116,-111,75,-110,75,-84,75,75,-99,-97,-96,-101,-95,-100,-98,-103,-104,-105,75,-102,75,75,-108,75,-109,46,222,-85,-25,-30,230,-27,-26,231,75,75,75,75,75,75,75,75,75,75,75,75,75,75,46,-30,321,75,75,75,]),'LBRACKET':([2,3,5,15,16,21,31,32,38,45,52,53,54,58,59,60,62,63,64,66,68,69,71,76,79,80,81,82,84,85,100,127,155,158,168,174,199,206,207,209,218,225,226,241,254,255,267,],[-140,47,-136,-200,101,-199,-138,-137,-139,-135,-140,-67,-68,-56,-63,101,-61,-65,-60,151,-62,-64,-58,-66,-139,-72,-59,-69,-55,-57,-143,-201,101,-140,227,229,-211,-202,-141,-142,-73,-144,-145,-212,-70,-71,-140,]),'NOT':([7,14,37,46,47,75,78,92,93,94,97,98,101,102,103,104,109,117,137,138,139,140,141,142,143,144,145,146,147,148,149,151,152,153,154,162,184,205,208,220,224,227,230,231,232,240,244,246,257,260,301,309,310,],[77,77,77,77,77,77,77,-117,-112,-115,-116,-111,77,-110,77,-84,77,77,-99,-97,-96,-101,-95,-100,-98,-103,-104,-105,77,-102,77,77,-108,77,-109,-85,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'BY':([3,5,15,21,31,32,45,52,53,54,55,56,57,58,59,60,62,63,64,67,68,69,70,71,72,76,79,80,81,82,83,84,85,100,127,150,155,199,206,207,209,213,214,217,218,225,226,241,254,255,282,283,284,289,313,],[-134,-136,-200,-199,-138,-137,-135,-140,-67,-68,-113,-91,-106,-56,-63,-123,-61,-65,-60,-118,-62,-64,-124,-58,-93,-66,-139,-122,-59,-69,-92,-55,-57,-143,-201,-119,-133,-211,-202,-141,-142,-94,-114,-107,-73,-144,-145,-212,-70,-71,-174,309,-177,-125,-126,]),'RPAREN':([3,5,15,21,31,32,45,46,52,53,54,55,56,57,58,59,60,62,63,64,67,68,69,70,71,72,76,79,80,81,82,83,84,85,100,117,125,126,127,128,150,155,156,167,169,170,171,172,176,177,178,179,180,181,182,198,199,206,207,209,213,214,217,218,222,225,226,228,241,251,252,253,254,255,263,264,275,276,289,294,295,303,304,305,313,315,316,319,325,326,339,346,347,],[-134,-136,-200,-199,-138,-137,-135,127,-140,-67,-68,-113,-91,-106,-56,-63,-123,-61,-65,-60,-118,-62,-64,-124,-58,-93,-66,-139,-122,-59,-69,-92,-55,-57,-143,199,-203,206,-201,-205,-119,-133,218,-25,-20,-22,-18,-36,-24,-27,-26,-23,-35,-19,-21,241,-211,-202,-141,-142,-94,-114,-107,-73,265,-144,-145,-34,-212,-204,-31,-33,-70,-71,296,-190,304,305,-125,-192,-193,-37,-28,-29,-126,-194,-195,-191,-39,-44,348,350,-198,]),'IF':([0,7,9,14,17,25,29,35,37,40,41,44,46,47,75,78,87,101,103,104,108,109,113,117,118,124,134,151,162,184,185,188,190,191,201,204,205,208,220,221,223,224,227,230,231,232,236,240,244,246,249,250,257,260,288,300,301,309,310,318,320,322,334,335,337,342,],[37,78,-8,78,-6,37,-9,-7,78,-3,37,-5,78,78,78,78,37,78,78,-84,-157,78,37,78,-74,-4,-45,78,-85,78,-49,37,37,-158,-10,37,78,78,78,-181,-75,78,78,78,78,78,37,78,78,78,37,37,78,78,37,37,78,78,78,37,37,37,37,37,37,37,]),'PRED':([0,7,9,14,17,25,29,35,37,40,41,44,46,47,61,65,74,75,77,78,87,92,93,94,97,98,101,102,103,104,108,109,113,117,118,124,134,137,138,139,140,141,142,143,144,145,146,147,148,149,151,152,153,154,162,184,185,188,190,191,201,204,205,208,220,221,223,224,227,230,231,232,236,240,244,246,249,250,257,260,288,300,301,309,310,318,320,322,334,335,337,342,],[39,39,-8,39,-6,39,-9,-7,39,-3,39,-5,39,39,39,-120,39,39,-121,39,39,-117,-112,-115,-116,-111,39,-110,39,-84,-157,39,39,39,-74,-4,-45,-99,-97,-96,-101,-95,-100,-98,-103,-104,-105,39,-102,39,39,-108,39,-109,-85,39,-49,39,39,-158,-10,39,39,39,39,-181,-75,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'$end':([0,9,12,17,22,29,35,40,41,44,118,124,134,185,201,221,223,],[-222,-8,-2,-6,0,-9,-7,-3,-1,-5,-74,-4,-45,-49,-10,-181,-75,]),'ELSIF':([3,5,15,21,31,32,45,52,53,54,55,56,57,58,59,60,62,63,64,67,68,69,70,71,72,76,79,80,81,82,83,84,85,100,108,118,127,150,155,191,199,203,204,206,207,209,213,214,217,218,219,223,225,226,241,250,254,255,258,259,261,289,292,312,313,314,],[-134,-136,-200,-199,-138,-137,-135,-140,-67,-68,-113,-91,-106,-56,-63,-123,-61,-65,-60,-118,-62,-64,-124,-58,-93,-66,-139,-122,-59,-69,-92,-55,-57,-143,-157,-74,-201,-119,-133,-158,-211,246,-150,-202,-141,-142,-94,-114,-107,-73,260,-75,-144,-145,-212,-151,-70,-71,-130,260,-128,-125,-131,246,-126,-132,]),'COLON':([2,3,5,10,15,21,31,32,45,52,53,54,55,56,57,58,59,60,62,63,64,67,68,69,70,71,72,76,79,80,81,82,83,84,85,100,110,127,130,132,150,155,165,199,206,207,209,213,214,217,218,225,226,241,254,255,267,272,289,313,],[-76,-134,-136,87,-200,-199,-138,-137,-135,-140,-67,-68,-113,-91,-106,-56,-63,-123,-61,-65,-60,-118,-62,-64,-124,-58,-93,-66,-139,-122,-59,-69,-92,-55,-57,-143,188,-201,208,-32,-119,-133,-32,-211,-202,-141,-142,-94,-114,-107,-73,-144,-145,-212,-70,-71,-140,-32,-125,-126,]),'AND':([3,5,15,21,31,32,45,52,53,54,55,56,57,58,59,60,62,63,64,67,68,69,70,71,72,76,79,80,81,82,84,85,100,127,150,155,199,206,207,209,213,214,217,218,225,226,241,254,255,267,],[-134,-136,-200,-199,-138,-137,-135,-140,-67,-68,-113,143,-106,-56,-63,-123,-61,-65,-60,-118,-62,-64,-124,-58,-93,-66,-139,-122,-59,-69,-55,-57,-143,-201,-119,-133,-211,-202,-141,-142,-94,-114,-107,-73,-144,-145,-212,-70,-71,-140,]),'END':([9,17,29,35,40,44,118,124,134,185,201,221,223,300,318,320,322,334,335,337,342,],[-8,-6,-9,-7,-3,-5,-74,-4,-45,-49,-10,-181,-75,323,336,338,340,343,344,345,349,]),'SUCC':([0,7,9,14,17,25,29,35,37,40,41,44,46,47,61,65,74,75,77,78,87,92,93,94,97,98,101,102,103,104,108,109,113,117,118,124,134,137,138,139,140,141,142,143,144,145,146,147,148,149,151,152,153,154,162,184,185,188,190,191,201,204,205,208,220,221,223,224,227,230,231,232,236,240,244,246,249,250,257,260,288,300,301,309,310,318,320,322,334,335,337,342,],[43,43,-8,43,-6,43,-9,-7,43,-3,43,-5,43,43,43,-120,43,43,-121,43,43,-117,-112,-115,-116,-111,43,-110,43,-84,-157,43,43,43,-74,-4,-45,-99,-97,-96,-101,-95,-100,-98,-103,-104,-105,43,-102,43,43,-108,43,-109,-85,43,-49,43,43,-158,-10,43,43,43,43,-181,-75,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'EQUALS':([2,3,5,15,16,21,31,32,38,45,49,50,91,92,93,94,95,96,97,98,99,100,102,106,127,158,167,169,170,171,172,176,177,178,179,180,181,182,183,194,197,199,202,206,207,209,211,225,226,228,241,303,304,305,325,326,],[-140,-134,-136,-200,104,-199,-138,-137,-139,-135,-15,136,-86,-117,-112,-115,-88,162,-116,-111,-87,-143,-110,184,-201,-140,-25,-20,-22,-18,-36,-24,-27,-26,-23,-35,-19,-21,232,240,-173,-211,244,-202,-141,-142,-16,-144,-145,-34,-212,-37,-28,-29,-39,-44,]),'PLUS':([2,3,5,15,16,21,31,32,38,45,52,53,54,55,57,58,59,60,62,63,64,67,68,69,70,71,72,76,79,80,81,82,84,85,100,127,150,155,158,199,206,207,209,213,214,217,218,225,226,241,254,255,267,],[-140,-134,-136,-200,102,-199,-138,-137,-139,-135,-140,-67,-68,-113,-106,-56,-63,-123,-61,-65,-60,-118,-62,-64,-124,-58,102,-66,-139,-122,-59,-69,-55,-57,-143,-201,-119,-133,-140,-211,-202,-141,-142,102,-114,-107,-73,-144,-145,-212,-70,-71,-140,]),'NULL':([7,14,37,46,47,61,65,75,77,78,92,93,94,97,98,101,102,103,104,109,117,137,138,139,140,141,142,143,144,145,146,147,148,149,151,152,153,154,162,184,205,208,220,224,227,230,231,232,240,244,246,257,260,301,309,310,],[82,82,82,82,82,82,-120,82,-121,82,-117,-112,-115,-116,-111,82,-110,82,-84,82,82,-99,-97,-96,-101,-95,-100,-98,-103,-104,-105,82,-102,82,82,-108,82,-109,-85,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'OR':([3,5,15,21,31,32,45,52,53,54,55,56,57,58,59,60,62,63,64,67,68,69,70,71,72,76,79,80,81,82,84,85,100,127,150,155,199,206,207,209,213,214,217,218,225,226,241,254,255,267,],[-134,-136,-200,-199,-138,-137,-135,-140,-67,-68,-113,137,-106,-56,-63,-123,-61,-65,-60,-118,-62,-64,-124,-58,-93,-66,-139,-122,-59,-69,-55,-57,-143,-201,-119,-133,-211,-202,-141,-142,-94,-114,-107,-73,-144,-145,-212,-70,-71,-140,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'integer_expression':([47,309,],[129,328,]),'location_name':([0,7,14,25,37,41,46,47,61,74,75,78,87,101,103,109,113,117,147,149,151,153,184,188,190,204,205,208,220,224,227,230,231,232,236,240,244,246,249,250,257,260,288,300,301,309,310,318,320,322,334,335,337,342,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'if_action':([0,25,41,87,113,188,190,204,236,249,250,288,300,318,320,322,334,335,337,342,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'formal_parameter_list':([222,297,],[263,319,]),'result_attribute':([339,],[346,]),'string_concatenation_operator':([16,72,213,],[95,154,154,]),'operand0':([7,14,37,46,47,75,78,101,103,109,117,151,184,205,208,220,224,227,230,231,232,240,244,246,257,260,301,309,310,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'procedure_definition':([87,],[159,]),'discrete_expression':([240,310,],[282,330,]),'discrete_range_mode':([106,120,136,173,227,238,262,281,301,302,321,],[176,176,176,176,176,176,176,176,176,176,176,]),'value_array_element':([7,14,37,46,47,61,75,78,101,103,109,117,147,149,151,153,184,205,208,220,224,227,230,231,232,240,244,246,257,260,301,309,310,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'string_literal':([7,14,37,46,47,61,75,78,101,103,109,117,147,149,151,153,184,205,208,220,224,227,230,231,232,240,244,246,257,260,301,309,310,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'result_spec':([265,296,],[298,317,]),'upper_bound':([208,],[252,]),'monadic_operator':([7,14,37,46,47,75,78,101,103,109,117,147,149,151,153,184,205,208,220,224,227,230,231,232,240,244,246,257,260,301,309,310,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'elseif_expression_list':([219,],[259,]),'newmode_statement':([0,41,300,318,320,322,334,335,337,342,],[17,17,17,17,17,17,17,17,17,17,]),'loop_counter':([114,],[194,]),'char_literal':([7,14,37,46,47,61,75,78,101,103,109,117,147,149,151,153,184,205,208,220,224,227,230,231,232,240,244,246,257,260,301,309,310,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'constant_expression':([184,232,],[233,277,]),'expression_list':([101,151,],[163,215,]),'closed_dyadic_operator':([16,],[96,]),'program':([0,],[22,]),'parameter_attribute':([295,],[315,]),'conditional_expression':([7,14,37,46,47,75,78,101,103,109,117,151,184,205,208,220,224,227,230,231,232,240,244,246,257,260,301,309,310,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'end_value':([283,308,311,332,],[307,327,331,341,]),'array_mode':([106,120,136,173,262,302,321,],[172,172,172,172,172,172,172,]),'array_primitive_value':([7,14,37,46,47,61,75,78,101,103,109,117,147,149,151,153,184,205,208,220,224,227,230,231,232,240,244,246,257,260,301,309,310,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'builtin_name':([0,7,14,25,37,41,46,47,61,74,75,78,87,101,103,109,113,117,147,149,151,153,184,188,190,204,205,208,220,224,227,230,231,232,236,240,244,246,249,250,257,260,288,300,301,309,310,318,320,322,334,335,337,342,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'empty_literal':([7,14,37,46,47,61,75,78,101,103,109,117,147,149,151,153,184,205,208,220,224,227,230,231,232,240,244,246,257,260,301,309,310,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'id_list':([6,24,34,133,186,200,222,297,],[50,106,120,50,106,120,262,262,]),'referenced_location':([7,14,37,46,47,61,75,78,101,103,109,117,147,149,151,153,184,205,208,220,224,227,230,231,232,240,244,246,257,260,301,309,310,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'operator2':([72,213,],[153,153,]),'literal_range':([47,101,151,227,230,231,301,],[131,164,216,271,275,276,271,]),'result':([7,14,],[73,90,]),'parameter':([46,117,205,],[125,125,125,]),'composite_mode':([106,120,136,173,262,302,321,],[182,182,182,182,182,182,182,]),'array_slice':([0,7,14,25,37,41,46,47,61,74,75,78,87,101,103,109,113,117,147,149,151,153,184,188,190,204,205,208,220,224,227,230,231,232,236,240,244,246,249,250,257,260,288,300,301,309,310,318,320,322,334,335,337,342,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'while_control':([25,111,],[115,189,]),'then_expression':([157,293,],[219,314,]),'boolean_literal':([7,14,37,46,47,61,75,78,101,103,109,117,147,149,151,153,184,205,208,220,224,227,230,231,232,240,244,246,257,260,301,309,310,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'membership_operator':([56,],[139,]),'string_mode':([106,120,136,173,262,302,321,],[180,180,180,180,180,180,180,]),'integer_literal':([7,14,37,46,47,61,75,78,101,103,109,117,147,149,151,153,184,205,208,220,224,227,230,231,232,240,244,246,257,260,301,309,310,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'relational_operator':([56,],[141,]),'arithmetic_additive_operator':([16,72,213,],[91,152,152,]),'statement_list':([0,300,318,320,334,],[41,322,335,337,342,]),'elseif_clause':([203,312,],[245,245,]),'mode':([106,120,136,173,262,302,321,],[183,202,212,228,295,326,339,]),'arithmetic_multiplicative_operator':([16,57,217,],[99,149,149,]),'declaration_statement':([0,41,300,318,320,322,334,335,337,342,],[44,44,44,44,44,44,44,44,44,44,]),'step_value':([283,],[311,]),'elseif_expression':([219,259,],[258,292,]),'syn_list':([24,],[107,]),'expression':([7,14,37,46,47,75,78,101,103,109,117,151,184,205,208,220,224,227,230,231,232,240,244,246,257,260,301,309,310,],[86,86,123,128,132,156,123,165,166,123,128,165,234,128,253,261,266,272,272,272,234,284,285,123,290,123,272,329,284,]),'result_action':([0,25,41,87,113,188,190,204,236,249,250,288,300,318,320,322,334,335,337,342,],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'start_value':([240,],[283,]),'string_length':([229,],[274,]),'formal_parameter':([222,297,],[264,264,]),'index_mode':([227,301,],[268,324,]),'declaration':([34,200,],[121,242,]),'mode_definition':([6,133,],[51,210,]),'dereferenced_reference':([0,7,14,25,37,41,46,47,61,74,75,78,87,101,103,109,113,117,147,149,151,153,184,188,190,204,205,208,220,224,227,230,231,232,236,240,244,246,249,250,257,260,288,300,301,309,310,318,320,322,334,335,337,342,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'operand3':([7,14,37,46,47,75,78,101,103,109,117,147,149,151,153,184,205,208,220,224,227,230,231,232,240,244,246,257,260,301,309,310,],[55,55,55,55,55,55,55,55,55,55,55,55,214,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'declaration_list':([34,],[119,]),'action_statement':([0,25,41,113,190,204,236,249,250,288,300,318,320,322,334,335,337,342,],[9,108,9,191,108,108,191,108,191,191,9,9,9,9,9,9,9,9,]),'label':([0,11,25,41,113,190,204,236,249,250,288,300,318,320,322,334,335,337,342,],[10,88,110,10,110,110,110,110,110,110,110,10,10,10,10,10,10,10,10,]),'for_control':([25,],[111,]),'empty':([0,],[12,]),'control_part':([25,],[112,]),'builtin_call':([0,7,14,25,37,41,46,47,61,74,75,78,87,101,103,109,113,117,147,149,151,153,184,188,190,204,205,208,220,224,227,230,231,232,236,240,244,246,249,250,257,260,288,300,301,309,310,318,320,322,334,335,337,342,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'location':([0,7,14,25,37,41,46,47,61,74,75,78,87,101,103,109,113,117,147,149,151,153,184,188,190,204,205,208,220,224,227,230,231,232,236,240,244,246,249,250,257,260,288,300,301,309,310,318,320,322,334,335,337,342,],[16,60,60,16,60,16,60,60,60,155,60,60,16,60,60,60,16,60,60,60,60,60,60,16,16,16,60,60,60,60,60,60,60,60,16,60,60,60,16,16,60,60,16,16,60,60,60,16,16,16,16,16,16,16,]),'newmode_list':([6,],[48,]),'element_node':([302,],[325,]),'assignment_action':([0,25,41,87,113,188,190,204,236,249,250,288,300,318,320,322,334,335,337,342,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'parameter_spec':([262,],[294,]),'action_statement_list':([25,190,204,249,],[113,236,250,288,]),'exit_action':([0,25,41,87,113,188,190,204,236,249,250,288,300,318,320,322,334,335,337,342,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'procedure_call':([0,7,14,25,37,41,46,47,61,74,75,78,87,101,103,109,113,117,147,149,151,153,184,188,190,204,205,208,220,224,227,230,231,232,236,240,244,246,249,250,257,260,288,300,301,309,310,318,320,322,334,335,337,342,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'parameter_list':([46,117,205,],[126,198,251,]),'discrete_mode':([106,120,136,173,227,238,262,281,301,302,321,],[181,181,181,181,269,280,181,306,269,181,181,]),'bracketed_action':([0,25,41,87,113,188,190,204,236,249,250,288,300,318,320,322,334,335,337,342,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'lower_bound':([47,101,151,227,230,231,301,],[130,130,130,130,130,130,130,]),'operand1':([7,14,37,46,47,75,78,101,103,109,117,147,151,184,205,208,220,224,227,230,231,232,240,244,246,257,260,301,309,310,],[72,72,72,72,72,72,72,72,72,72,72,213,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'assigning_operator':([16,],[103,]),'operator1':([56,],[147,]),'basic_mode':([106,120,136,173,227,238,262,281,301,302,321,],[179,179,179,179,179,179,179,179,179,179,179,]),'operand4':([7,14,37,46,47,61,75,78,101,103,109,117,147,149,151,153,184,205,208,220,224,227,230,231,232,240,244,246,257,260,301,309,310,],[67,67,67,67,67,150,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'reference_mode':([106,120,136,173,262,302,321,],[169,169,169,169,169,169,169,]),'mode_name':([106,120,136,173,262,302,321,],[171,171,171,171,171,171,171,]),'index_mode_list':([227,],[270,]),'action':([0,25,41,87,113,188,190,204,236,249,250,288,300,318,320,322,334,335,337,342,],[28,28,28,161,28,161,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'procedure_statement':([0,41,300,318,320,322,334,335,337,342,],[29,29,29,29,29,29,29,29,29,29,]),'then_clause':([122,286,],[203,312,]),'discrete_mode_name':([106,120,136,173,227,238,262,281,301,302,321,],[175,175,175,175,175,175,175,175,175,175,175,]),'range_enumeration':([114,],[196,]),'operand2':([7,14,37,46,47,75,78,101,103,109,117,147,151,153,184,205,208,220,224,227,230,231,232,240,244,246,257,260,301,309,310,],[57,57,57,57,57,57,57,57,57,57,57,57,57,217,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'return_action':([0,25,41,87,113,188,190,204,236,249,250,288,300,318,320,322,334,335,337,342,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'syn_definition':([24,186,],[105,235,]),'synonym_statement':([0,41,300,318,320,322,334,335,337,342,],[35,35,35,35,35,35,35,35,35,35,]),'parenthesized_expression':([7,14,37,46,47,61,75,78,101,103,109,117,147,149,151,153,184,205,208,220,224,227,230,231,232,240,244,246,257,260,301,309,310,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'do_action':([0,25,41,87,113,188,190,204,236,249,250,288,300,318,320,322,334,335,337,342,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'else_expression':([219,259,],[256,291,]),'call_action':([0,7,14,25,37,41,46,47,61,74,75,78,87,101,103,109,113,117,147,149,151,153,184,188,190,204,205,208,220,224,227,230,231,232,236,240,244,246,249,250,257,260,288,300,301,309,310,318,320,322,334,335,337,342,],[38,79,79,38,79,38,79,79,79,79,79,79,38,79,79,79,38,79,79,79,79,79,79,38,38,38,79,79,79,79,79,79,79,79,38,79,79,79,38,38,79,79,38,38,79,79,79,38,38,38,38,38,38,38,]),'iteration':([114,],[193,]),'primitive_value':([7,14,37,46,47,61,75,78,101,103,109,117,147,149,151,153,184,205,208,220,224,227,230,231,232,240,244,246,257,260,301,309,310,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'initialization':([202,],[243,]),'statement':([0,41,300,318,320,322,334,335,337,342,],[40,124,40,40,40,124,40,124,124,124,]),'step_enumeration':([114,],[195,]),'boolean_expression':([37,78,109,246,260,],[122,157,187,286,293,]),'literal':([7,14,37,46,47,61,75,78,101,103,109,117,147,149,151,153,184,205,208,220,224,227,230,231,232,240,244,246,257,260,301,309,310,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'value_array_slice':([7,14,37,46,47,61,75,78,101,103,109,117,147,149,151,153,184,205,208,220,224,227,230,231,232,240,244,246,257,260,301,309,310,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'string_reference':([0,7,14,25,37,41,46,47,61,74,75,78,87,101,103,109,113,117,147,149,151,153,184,188,190,204,205,208,220,224,227,230,231,232,236,240,244,246,249,250,257,260,288,300,301,309,310,318,320,322,334,335,337,342,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'else_clause':([203,312,],[248,333,]),'array_element':([0,7,14,25,37,41,46,47,61,74,75,78,87,101,103,109,113,117,147,149,151,153,184,188,190,204,205,208,220,224,227,230,231,232,236,240,244,246,249,250,257,260,288,300,301,309,310,318,320,322,334,335,337,342,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','lyaParser.py',65),
  ('program -> empty','program',1,'p_program','lyaParser.py',66),
  ('statement_list -> statement','statement_list',1,'p_statement_list1','lyaParser.py',73),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list1','lyaParser.py',74),
  ('statement -> declaration_statement','statement',1,'p_statement','lyaParser.py',81),
  ('statement -> newmode_statement','statement',1,'p_statement','lyaParser.py',82),
  ('statement -> synonym_statement','statement',1,'p_statement','lyaParser.py',83),
  ('statement -> action_statement','statement',1,'p_statement','lyaParser.py',84),
  ('statement -> procedure_statement','statement',1,'p_statement','lyaParser.py',85),
  ('declaration_statement -> DCL declaration_list SMC','declaration_statement',3,'p_declaration_statement','lyaParser.py',93),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','lyaParser.py',97),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','lyaParser.py',98),
  ('declaration -> id_list mode initialization','declaration',3,'p_declaration1','lyaParser.py',105),
  ('declaration -> id_list mode','declaration',2,'p_declaration2','lyaParser.py',109),
  ('id_list -> ID','id_list',1,'p_id_list','lyaParser.py',113),
  ('id_list -> id_list COMMA ID','id_list',3,'p_id_list','lyaParser.py',114),
  ('initialization -> EQUALS expression','initialization',2,'p_initialization','lyaParser.py',121),
  ('mode -> mode_name','mode',1,'p_mode','lyaParser.py',129),
  ('mode -> discrete_mode','mode',1,'p_mode','lyaParser.py',130),
  ('mode -> reference_mode','mode',1,'p_mode','lyaParser.py',131),
  ('mode -> composite_mode','mode',1,'p_mode','lyaParser.py',132),
  ('mode_name -> ID','mode_name',1,'p_mode_name','lyaParser.py',136),
  ('discrete_mode -> basic_mode','discrete_mode',1,'p_discrete_mode','lyaParser.py',140),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','lyaParser.py',141),
  ('basic_mode -> INT','basic_mode',1,'p_basic_mode','lyaParser.py',145),
  ('basic_mode -> BOOL','basic_mode',1,'p_basic_mode','lyaParser.py',146),
  ('basic_mode -> CHAR','basic_mode',1,'p_basic_mode','lyaParser.py',147),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaParser.py',151),
  ('discrete_range_mode -> basic_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaParser.py',152),
  ('discrete_mode_name -> ID','discrete_mode_name',1,'p_discrete_mode_name','lyaParser.py',156),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_litereal_range','lyaParser.py',160),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','lyaParser.py',164),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','lyaParser.py',168),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','lyaParser.py',172),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','lyaParser.py',176),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','lyaParser.py',177),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','lyaParser.py',181),
  ('string_length -> INTCONST','string_length',1,'p_string_length','lyaParser.py',185),
  ('array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_node','array_mode',5,'p_array_mode','lyaParser.py',189),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','lyaParser.py',194),
  ('index_mode_list -> index_mode_list COMMA index_mode','index_mode_list',3,'p_index_mode_list','lyaParser.py',195),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','lyaParser.py',202),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','lyaParser.py',203),
  ('element_node -> mode','element_node',1,'p_element_node','lyaParser.py',207),
  ('newmode_statement -> TYPE newmode_list SMC','newmode_statement',3,'p_newmode_statement','lyaParser.py',215),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','lyaParser.py',219),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','lyaParser.py',220),
  ('mode_definition -> id_list EQUALS mode','mode_definition',3,'p_mode_definition','lyaParser.py',227),
  ('synonym_statement -> SYN syn_list SMC','synonym_statement',3,'p_synonym_statement','lyaParser.py',231),
  ('syn_list -> syn_definition','syn_list',1,'p_syn_list','lyaParser.py',239),
  ('syn_list -> syn_list COMMA syn_definition','syn_list',3,'p_syn_list','lyaParser.py',240),
  ('syn_definition -> id_list EQUALS constant_expression','syn_definition',3,'p_syn_definition','lyaParser.py',247),
  ('syn_definition -> id_list mode EQUALS constant_expression','syn_definition',4,'p_syn_definition2','lyaParser.py',251),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','lyaParser.py',255),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','lyaParser.py',263),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','lyaParser.py',264),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','lyaParser.py',265),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','lyaParser.py',266),
  ('literal -> integer_literal','literal',1,'p_literal','lyaParser.py',270),
  ('literal -> boolean_literal','literal',1,'p_literal','lyaParser.py',271),
  ('literal -> char_literal','literal',1,'p_literal','lyaParser.py',272),
  ('literal -> empty_literal','literal',1,'p_literal','lyaParser.py',273),
  ('literal -> string_literal','literal',1,'p_literal','lyaParser.py',274),
  ('integer_literal -> INTCONST','integer_literal',1,'p_integer_literal','lyaParser.py',278),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','lyaParser.py',282),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','lyaParser.py',283),
  ('char_literal -> CHARCONST','char_literal',1,'p_char_literal','lyaParser.py',287),
  ('string_literal -> STRINGCONST','string_literal',1,'p_string_literal','lyaParser.py',291),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','lyaParser.py',295),
  ('value_array_element -> array_primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','lyaParser.py',299),
  ('value_array_slice -> array_primitive_value LBRACKET literal_range RBRACKET','value_array_slice',4,'p_value_array_slice','lyaParser.py',303),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','lyaParser.py',307),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','lyaParser.py',311),
  ('action_statement -> action SMC','action_statement',2,'p_action_statement','lyaParser.py',319),
  ('action_statement -> label COLON action SMC','action_statement',4,'p_action_statement','lyaParser.py',320),
  ('label -> ID','label',1,'p_label','lyaParser.py',327),
  ('action -> assignment_action','action',1,'p_action','lyaParser.py',331),
  ('action -> bracketed_action','action',1,'p_action','lyaParser.py',332),
  ('action -> call_action','action',1,'p_action','lyaParser.py',333),
  ('action -> exit_action','action',1,'p_action','lyaParser.py',334),
  ('action -> return_action','action',1,'p_action','lyaParser.py',335),
  ('action -> result_action','action',1,'p_action','lyaParser.py',336),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','lyaParser.py',344),
  ('assigning_operator -> EQUALS','assigning_operator',1,'p_assigning_operator','lyaParser.py',348),
  ('assigning_operator -> closed_dyadic_operator EQUALS','assigning_operator',2,'p_assigning_operator','lyaParser.py',349),
  ('closed_dyadic_operator -> arithmetic_additive_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','lyaParser.py',356),
  ('closed_dyadic_operator -> arithmetic_multiplicative_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','lyaParser.py',357),
  ('closed_dyadic_operator -> string_concatenation_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','lyaParser.py',358),
  ('expression_list -> expression','expression_list',1,'p_expression_list','lyaParser.py',362),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','lyaParser.py',363),
  ('expression -> operand0','expression',1,'p_expression','lyaParser.py',370),
  ('expression -> conditional_expression','expression',1,'p_expression','lyaParser.py',371),
  ('operand0 -> operand1','operand0',1,'p_operand0','lyaParser.py',375),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','lyaParser.py',376),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','lyaParser.py',383),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','lyaParser.py',384),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','lyaParser.py',388),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','lyaParser.py',392),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','lyaParser.py',393),
  ('relational_operator -> ISEQUAL','relational_operator',1,'p_relational_operator','lyaParser.py',394),
  ('relational_operator -> NOTEQUAL','relational_operator',1,'p_relational_operator','lyaParser.py',395),
  ('relational_operator -> GT','relational_operator',1,'p_relational_operator','lyaParser.py',396),
  ('relational_operator -> GE','relational_operator',1,'p_relational_operator','lyaParser.py',397),
  ('relational_operator -> LT','relational_operator',1,'p_relational_operator','lyaParser.py',398),
  ('relational_operator -> LE','relational_operator',1,'p_relational_operator','lyaParser.py',399),
  ('operand1 -> operand2','operand1',1,'p_operand1','lyaParser.py',403),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1','lyaParser.py',404),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','lyaParser.py',411),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','lyaParser.py',412),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','lyaParser.py',416),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','lyaParser.py',417),
  ('string_concatenation_operator -> STRCONC','string_concatenation_operator',1,'p_string_concatenation_operator','lyaParser.py',421),
  ('operand2 -> operand3','operand2',1,'p_operand2','lyaParser.py',425),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','lyaParser.py',426),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaParser.py',433),
  ('arithmetic_multiplicative_operator -> DIV','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaParser.py',434),
  ('arithmetic_multiplicative_operator -> MOD','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaParser.py',435),
  ('operand3 -> operand4','operand3',1,'p_operand3','lyaParser.py',439),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','lyaParser.py',440),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','lyaParser.py',447),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','lyaParser.py',448),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','lyaParser.py',452),
  ('operand4 -> location','operand4',1,'p_operand4','lyaParser.py',453),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','lyaParser.py',454),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','lyaParser.py',460),
  ('conditional_expression -> IF boolean_expression then_expression elseif_expression_list else_expression FI','conditional_expression',6,'p_conditional_expression2','lyaParser.py',464),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','lyaParser.py',468),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','lyaParser.py',472),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','lyaParser.py',476),
  ('elseif_expression_list -> elseif_expression','elseif_expression_list',1,'p_elseif_expression_list','lyaParser.py',480),
  ('elseif_expression_list -> elseif_expression_list elseif_expression','elseif_expression_list',2,'p_elseif_expression_list','lyaParser.py',481),
  ('elseif_expression -> ELSIF boolean_expression then_expression','elseif_expression',3,'p_elseif_expression','lyaParser.py',488),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','lyaParser.py',496),
  ('location -> location_name','location',1,'p_location','lyaParser.py',500),
  ('location -> string_reference','location',1,'p_location','lyaParser.py',501),
  ('location -> dereferenced_reference','location',1,'p_location','lyaParser.py',502),
  ('location -> array_element','location',1,'p_location','lyaParser.py',503),
  ('location -> array_slice','location',1,'p_location','lyaParser.py',504),
  ('location -> call_action','location',1,'p_location','lyaParser.py',505),
  ('location_name -> ID','location_name',1,'p_location_name','lyaParser.py',509),
  ('string_reference -> location_name LBRACKET integer_expression RBRACKET','string_reference',4,'p_string_reference','lyaParser.py',513),
  ('string_reference -> location_name LBRACKET literal_range RBRACKET','string_reference',4,'p_string_reference2','lyaParser.py',517),
  ('dereferenced_reference -> location ARROW','dereferenced_reference',2,'p_dereferenced_reference','lyaParser.py',521),
  ('array_element -> location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','lyaParser.py',525),
  ('array_slice -> location LBRACKET literal_range RBRACKET','array_slice',4,'p_array_slice','lyaParser.py',529),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','lyaParser.py',537),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','lyaParser.py',538),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','lyaParser.py',546),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action2','lyaParser.py',550),
  ('then_clause -> THEN','then_clause',1,'p_then_clause','lyaParser.py',554),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','lyaParser.py',555),
  ('else_clause -> ELSE','else_clause',1,'p_else_clause','lyaParser.py',562),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','lyaParser.py',563),
  ('else_clause -> elseif_clause','else_clause',1,'p_else_clause2','lyaParser.py',570),
  ('elseif_clause -> ELSIF boolean_expression then_clause','elseif_clause',3,'p_elseif_clause','lyaParser.py',574),
  ('elseif_clause -> ELSIF boolean_expression then_clause else_clause','elseif_clause',4,'p_elseif_clause2','lyaParser.py',578),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','lyaParser.py',583),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','lyaParser.py',584),
  ('do_action -> DO OD','do_action',2,'p_do_action','lyaParser.py',595),
  ('do_action -> DO control_part SMC OD','do_action',4,'p_do_action2','lyaParser.py',599),
  ('do_action -> DO control_part SMC action_statement_list OD','do_action',5,'p_do_action3','lyaParser.py',603),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action4','lyaParser.py',607),
  ('control_part -> for_control','control_part',1,'p_control_part','lyaParser.py',611),
  ('control_part -> while_control','control_part',1,'p_control_part','lyaParser.py',612),
  ('control_part -> for_control while_control','control_part',2,'p_control_part2','lyaParser.py',616),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','lyaParser.py',620),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','lyaParser.py',624),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','lyaParser.py',625),
  ('step_enumeration -> loop_counter EQUALS start_value end_value','step_enumeration',4,'p_step_enumeration','lyaParser.py',629),
  ('step_enumeration -> loop_counter EQUALS start_value step_value end_value','step_enumeration',5,'p_step_enumeration2','lyaParser.py',633),
  ('step_enumeration -> loop_counter EQUALS start_value DOWN end_value','step_enumeration',5,'p_step_enumeration3','lyaParser.py',637),
  ('step_enumeration -> loop_counter EQUALS start_value step_value DOWN end_value','step_enumeration',6,'p_step_enumeration4','lyaParser.py',641),
  ('loop_counter -> ID','loop_counter',1,'p_loop_counter','lyaParser.py',645),
  ('start_value -> discrete_expression','start_value',1,'p_start_value','lyaParser.py',649),
  ('step_value -> BY integer_expression','step_value',2,'p_step_value','lyaParser.py',653),
  ('end_value -> TO discrete_expression','end_value',2,'p_end_value','lyaParser.py',657),
  ('discrete_expression -> expression','discrete_expression',1,'p_discrete_expression','lyaParser.py',661),
  ('range_enumeration -> loop_counter IN discrete_mode','range_enumeration',3,'p_range_enumeration','lyaParser.py',665),
  ('range_enumeration -> loop_counter DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration2','lyaParser.py',669),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','lyaParser.py',673),
  ('procedure_statement -> label COLON procedure_definition SMC','procedure_statement',4,'p_procedure_statement','lyaParser.py',681),
  ('procedure_definition -> PROC LPAREN RPAREN SMC END','procedure_definition',5,'p_procedure_definition1','lyaParser.py',685),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SMC statement_list END','procedure_definition',7,'p_procedure_definition1','lyaParser.py',686),
  ('procedure_definition -> PROC LPAREN RPAREN SMC statement_list END','procedure_definition',6,'p_procedure_definition1','lyaParser.py',687),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SMC END','procedure_definition',6,'p_procedure_definition2','lyaParser.py',696),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SMC END','procedure_definition',7,'p_procedure_definition2','lyaParser.py',697),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SMC statement_list END','procedure_definition',8,'p_procedure_definition2','lyaParser.py',698),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SMC statement_list END','procedure_definition',7,'p_procedure_definition3','lyaParser.py',707),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SMC END','procedure_definition',6,'p_procedure_definition3','lyaParser.py',708),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','lyaParser.py',715),
  ('formal_parameter_list -> formal_parameter COMMA formal_parameter_list','formal_parameter_list',3,'p_formal_parameter_list','lyaParser.py',716),
  ('formal_parameter -> id_list parameter_spec','formal_parameter',2,'p_formal_parameter','lyaParser.py',723),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','lyaParser.py',727),
  ('parameter_spec -> mode parameter_attribute','parameter_spec',2,'p_parameter_spec','lyaParser.py',728),
  ('parameter_attribute -> LOC','parameter_attribute',1,'p_parameter_attribute','lyaParser.py',735),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','lyaParser.py',739),
  ('result_spec -> RETURNS LPAREN mode result_attribute RPAREN','result_spec',5,'p_result_spec','lyaParser.py',740),
  ('result_attribute -> LOC','result_attribute',1,'p_result_attribute','lyaParser.py',747),
  ('call_action -> procedure_call','call_action',1,'p_call_action','lyaParser.py',755),
  ('call_action -> builtin_call','call_action',1,'p_call_action','lyaParser.py',756),
  ('procedure_call -> ID LPAREN RPAREN','procedure_call',3,'p_procedure_call','lyaParser.py',760),
  ('procedure_call -> ID LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','lyaParser.py',761),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','lyaParser.py',768),
  ('parameter_list -> parameter COMMA parameter_list','parameter_list',3,'p_parameter_list','lyaParser.py',769),
  ('parameter -> expression','parameter',1,'p_parameter','lyaParser.py',776),
  ('exit_action -> EXIT label','exit_action',2,'p_exit_action','lyaParser.py',784),
  ('return_action -> RETURN','return_action',1,'p_return_action','lyaParser.py',788),
  ('return_action -> RETURN result','return_action',2,'p_return_action','lyaParser.py',789),
  ('result_action -> RESULT result','result_action',2,'p_result_action','lyaParser.py',796),
  ('result -> expression','result',1,'p_result','lyaParser.py',800),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','lyaParser.py',804),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','lyaParser.py',805),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','lyaParser.py',812),
  ('builtin_name -> PRED','builtin_name',1,'p_builtin_name','lyaParser.py',813),
  ('builtin_name -> SUCC','builtin_name',1,'p_builtin_name','lyaParser.py',814),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','lyaParser.py',815),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','lyaParser.py',816),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','lyaParser.py',817),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','lyaParser.py',818),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','lyaParser.py',819),
  ('integer_expression -> expression','integer_expression',1,'p_integer_expression','lyaParser.py',828),
  ('empty -> <empty>','empty',0,'p_empty','lyaParser.py',835),
]
