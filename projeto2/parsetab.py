
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '92F522CCEBFA3F26677939B6D28F2A48'
    
_lr_action_items = {'RETURNS':([288,306,],[310,310,]),'LBRACKET':([1,10,11,16,19,23,24,27,39,40,51,54,56,58,60,61,62,63,65,66,67,72,73,74,76,77,80,81,82,83,107,133,139,145,187,190,202,218,226,228,235,236,239,241,255,262,263,],[-139,-199,-135,89,-136,-137,-200,-140,-138,109,-139,-72,-58,-67,-140,-68,-62,-56,-69,-60,-65,-64,-57,150,-55,-63,-61,-59,-66,109,-143,208,210,109,-211,-201,-140,-73,-142,-141,-212,-202,-145,-144,-140,-71,-70,]),'NOT':([13,21,41,75,79,89,97,100,102,106,109,110,111,112,114,116,117,118,146,147,148,149,150,154,155,156,157,158,159,160,161,162,163,164,165,166,194,207,208,212,213,219,224,227,231,234,240,245,265,267,290,301,302,],[52,52,52,52,52,52,52,52,52,-115,52,-84,-110,-116,-117,-112,-111,52,52,-109,-108,52,52,-99,-95,-102,-100,52,-101,-104,-96,-103,-97,-105,-98,52,-85,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'EQUALS':([1,10,11,16,19,23,24,27,39,40,50,86,105,106,107,108,111,112,113,114,115,116,117,119,127,129,131,132,134,136,137,138,140,141,142,143,144,167,182,183,187,190,202,206,209,226,228,235,236,239,241,289,292,293,314,315,],[-139,-199,-135,-134,-136,-137,-200,-140,-138,110,-15,166,193,-115,-143,194,-110,-116,-88,-117,-86,-112,-111,-87,-35,-20,-21,-36,-19,-25,-22,-26,-18,212,-24,-27,-23,224,-173,231,-211,-201,-140,-16,-34,-142,-141,-212,-202,-145,-144,-28,-37,-29,-39,-44,]),'WHILE':([10,11,16,19,22,23,24,39,51,53,54,56,58,59,60,61,62,63,65,66,67,68,69,70,71,72,73,76,77,80,81,82,83,84,96,107,136,138,142,143,144,145,152,179,180,181,187,190,214,215,218,221,226,228,235,236,239,241,262,263,276,278,289,293,298,299,304,316,318,322,323,334,],[-199,-135,-134,-136,97,-137,-200,-138,-139,-124,-122,-58,-67,-118,-140,-68,-62,-56,-69,-60,-65,-113,-93,-106,-92,-64,-57,-55,-63,-61,-59,-66,-123,-91,97,-143,-25,-26,-24,-27,-23,-133,-119,-168,-167,-166,-211,-201,-107,-114,-73,-94,-142,-141,-212,-202,-145,-144,-71,-70,-177,-178,-28,-29,-125,-169,-179,-126,-170,-176,-171,-172,]),'UPPER':([0,3,13,17,21,22,26,29,30,37,38,41,46,52,55,64,75,78,79,89,91,92,97,100,101,102,106,109,110,111,112,114,116,117,118,124,125,146,147,148,149,150,154,155,156,157,158,159,160,161,162,163,164,165,166,168,174,176,184,191,194,200,207,208,212,213,219,224,227,229,231,234,240,244,245,247,248,250,265,267,283,290,301,302,311,325,331,333,335,337,340,343,],[33,-8,33,-3,33,33,33,-9,-5,-6,-7,33,-74,-121,-120,33,33,33,33,33,33,-157,33,33,-4,33,-115,33,-84,-110,-116,-117,-112,-111,33,33,-10,33,-109,-108,33,33,-99,-95,-102,-100,33,-101,-104,-96,-103,-97,-105,-98,33,-49,-158,33,33,-45,-85,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-75,-181,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'ARRAY':([49,50,86,135,193,206,287,291,330,],[133,-15,133,133,133,-16,133,133,133,]),'DCL':([0,3,17,26,29,30,37,38,46,101,125,168,191,248,250,311,325,331,333,335,337,340,343,],[6,-8,-3,6,-9,-5,-6,-7,-74,-4,-10,-49,-45,-75,-181,6,6,6,6,6,6,6,6,]),'FALSE':([13,21,41,52,55,75,78,79,89,97,100,102,106,109,110,111,112,114,116,117,118,146,147,148,149,150,154,155,156,157,158,159,160,161,162,163,164,165,166,194,207,208,212,213,219,224,227,231,234,240,245,265,267,290,301,302,],[67,67,67,-121,-120,67,67,67,67,67,67,67,-115,67,-84,-110,-116,-117,-112,-111,67,67,-109,-108,67,67,-99,-95,-102,-100,67,-101,-104,-96,-103,-97,-105,-98,67,-85,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'CHAR':([49,50,86,135,193,206,208,232,279,287,290,291,330,],[143,-15,143,143,143,-16,143,143,143,143,143,143,143,]),'SUCC':([0,3,13,17,21,22,26,29,30,37,38,41,46,52,55,64,75,78,79,89,91,92,97,100,101,102,106,109,110,111,112,114,116,117,118,124,125,146,147,148,149,150,154,155,156,157,158,159,160,161,162,163,164,165,166,168,174,176,184,191,194,200,207,208,212,213,219,224,227,229,231,234,240,244,245,247,248,250,265,267,283,290,301,302,311,325,331,333,335,337,340,343,],[8,-8,8,-3,8,8,8,-9,-5,-6,-7,8,-74,-121,-120,8,8,8,8,8,8,-157,8,8,-4,8,-115,8,-84,-110,-116,-117,-112,-111,8,8,-10,8,-109,-108,8,8,-99,-95,-102,-100,8,-101,-104,-96,-103,-97,-105,-98,8,-49,-158,8,8,-45,-85,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,-75,-181,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'IN':([10,11,16,19,23,24,39,51,53,54,56,58,59,60,61,62,63,65,66,67,68,69,70,72,73,76,77,80,81,82,83,84,107,145,152,182,183,187,190,214,215,218,221,226,228,233,235,236,239,241,255,262,263,],[-199,-135,-134,-136,-137,-200,-138,-139,-124,-122,-58,-67,-118,-140,-68,-62,-56,-69,-60,-65,-113,-93,-106,-64,-57,-55,-63,-61,-59,-66,-123,163,-143,-133,-119,-173,232,-211,-201,-107,-114,-73,-94,-142,-141,279,-212,-202,-145,-144,-140,-71,-70,]),'REF':([49,50,86,135,193,206,287,291,330,],[135,-15,135,135,135,-16,135,135,135,]),'TIMES':([1,10,11,16,19,23,24,27,39,40,51,53,54,56,58,59,60,61,62,63,65,66,67,68,70,72,73,76,77,80,81,82,83,107,145,152,187,190,202,214,215,218,226,228,235,236,239,241,255,262,263,],[-139,-199,-135,-134,-136,-137,-200,-140,-138,106,-139,-124,-122,-58,-67,-118,-140,-68,-62,-56,-69,-60,-65,-113,106,-64,-57,-55,-63,-61,-59,-66,-123,-143,-133,-119,-211,-201,-140,106,-114,-73,-142,-141,-212,-202,-145,-144,-140,-71,-70,]),'GT':([10,11,16,19,23,24,39,51,53,54,56,58,59,60,61,62,63,65,66,67,68,69,70,72,73,76,77,80,81,82,83,84,107,145,152,187,190,214,215,218,221,226,228,235,236,239,241,255,262,263,],[-199,-135,-134,-136,-137,-200,-138,-139,-124,-122,-58,-67,-118,-140,-68,-62,-56,-69,-60,-65,-113,-93,-106,-64,-57,-55,-63,-61,-59,-66,-123,156,-143,-133,-119,-211,-201,-107,-114,-73,-94,-142,-141,-212,-202,-145,-144,-140,-71,-70,]),'SYN':([0,3,17,26,29,30,37,38,46,101,125,168,191,248,250,311,325,331,333,335,337,340,343,],[14,-8,-3,14,-9,-5,-6,-7,-74,-4,-10,-49,-45,-75,-181,14,14,14,14,14,14,14,14,]),'DOWN':([10,11,16,19,23,24,39,51,53,54,56,58,59,60,61,62,63,65,66,67,68,69,70,71,72,73,76,77,80,81,82,83,84,107,145,152,182,183,187,190,214,215,218,221,226,228,235,236,239,241,262,263,274,275,276,298,300,316,320,321,],[-199,-135,-134,-136,-137,-200,-138,-139,-124,-122,-58,-67,-118,-140,-68,-62,-56,-69,-60,-65,-113,-93,-106,-92,-64,-57,-55,-63,-61,-59,-66,-123,-91,-143,-133,-119,-173,233,-211,-201,-107,-114,-73,-94,-142,-141,-212,-202,-145,-144,-71,-70,-174,303,-177,-125,319,-126,-175,-221,]),'COMMA':([10,11,16,19,23,24,39,47,48,49,50,51,53,54,56,58,59,60,61,62,63,65,66,67,68,69,70,71,72,73,76,77,80,81,82,83,84,86,87,88,103,104,105,107,127,129,131,132,134,136,137,138,140,141,142,143,144,145,152,185,187,188,190,196,197,205,206,209,211,214,215,217,218,221,222,223,225,226,228,235,236,237,238,239,241,253,254,256,257,260,262,263,270,271,272,281,286,287,289,292,293,298,308,309,313,314,315,316,328,329,],[-199,-135,-134,-136,-137,-200,-138,126,-11,128,-15,-139,-124,-122,-58,-67,-118,-140,-68,-62,-56,-69,-60,-65,-113,-93,-106,-92,-64,-57,-55,-63,-61,-59,-66,-123,-91,128,169,-50,192,-46,128,-143,-35,-20,-21,-36,-19,-25,-22,-26,-18,-14,-24,-27,-23,-133,-119,234,-211,-205,-201,240,-89,-12,-16,-34,-13,-107,-114,240,-73,-94,-52,-54,-51,-142,-141,-212,-202,-47,-48,-145,-144,-42,-43,290,-40,-17,-71,-70,-53,-31,-33,-90,307,128,-28,-37,-29,-125,-192,-193,-41,-39,-44,-126,-194,-195,]),'LPAREN':([2,8,13,15,20,21,25,27,31,32,33,41,42,52,55,60,75,78,79,89,97,100,102,106,109,110,111,112,114,116,117,118,130,136,137,138,143,144,146,147,148,149,150,154,155,156,157,158,159,160,161,162,163,164,165,166,194,202,203,207,208,212,213,219,224,227,231,234,240,245,255,265,267,277,290,301,302,310,],[-220,-215,75,-218,-217,75,100,102,-214,-219,-216,75,-213,-121,-120,102,75,75,75,75,75,75,75,-115,75,-84,-110,-116,-117,-112,-111,75,207,-25,-30,-26,-27,213,75,-109,-108,75,75,-99,-95,-102,-100,75,-101,-104,-96,-103,-97,-105,-98,75,-85,102,249,75,75,75,75,75,75,75,75,75,75,75,102,75,75,-30,75,75,75,330,]),'LENGTH':([0,3,13,17,21,22,26,29,30,37,38,41,46,52,55,64,75,78,79,89,91,92,97,100,101,102,106,109,110,111,112,114,116,117,118,124,125,146,147,148,149,150,154,155,156,157,158,159,160,161,162,163,164,165,166,168,174,176,184,191,194,200,207,208,212,213,219,224,227,229,231,234,240,244,245,247,248,250,265,267,283,290,301,302,311,325,331,333,335,337,340,343,],[15,-8,15,-3,15,15,15,-9,-5,-6,-7,15,-74,-121,-120,15,15,15,15,15,15,-157,15,15,-4,15,-115,15,-84,-110,-116,-117,-112,-111,15,15,-10,15,-109,-108,15,15,-99,-95,-102,-100,15,-101,-104,-96,-103,-97,-105,-98,15,-49,-158,15,15,-45,-85,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-75,-181,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'STRCONC':([1,10,11,16,19,23,24,27,39,40,51,53,54,56,58,59,60,61,62,63,65,66,67,68,69,70,72,73,76,77,80,81,82,83,107,145,152,187,190,202,214,215,218,221,226,228,235,236,239,241,255,262,263,],[-139,-199,-135,-134,-136,-137,-200,-140,-138,116,-139,-124,-122,-58,-67,-118,-140,-68,-62,-56,-69,-60,-65,-113,116,-106,-64,-57,-55,-63,-61,-59,-66,-123,-143,-133,-119,-211,-201,-140,-107,-114,-73,116,-142,-141,-212,-202,-145,-144,-140,-71,-70,]),'NOTEQUAL':([10,11,16,19,23,24,39,51,53,54,56,58,59,60,61,62,63,65,66,67,68,69,70,72,73,76,77,80,81,82,83,84,107,145,152,187,190,214,215,218,221,226,228,235,236,239,241,255,262,263,],[-199,-135,-134,-136,-137,-200,-138,-139,-124,-122,-58,-67,-118,-140,-68,-62,-56,-69,-60,-65,-113,-93,-106,-64,-57,-55,-63,-61,-59,-66,-123,159,-143,-133,-119,-211,-201,-107,-114,-73,-94,-142,-141,-212,-202,-145,-144,-140,-71,-70,]),'PROC':([124,],[203,]),'ARROW':([1,10,11,13,16,19,21,23,24,27,39,40,41,51,52,55,60,75,78,79,83,89,97,100,102,106,107,109,110,111,112,114,116,117,118,145,146,147,148,149,150,154,155,156,157,158,159,160,161,162,163,164,165,166,187,190,194,202,207,208,212,213,219,224,226,227,228,231,234,235,236,239,240,241,245,255,265,267,290,301,302,],[-139,-199,-135,64,-134,-136,64,-137,-200,-140,-138,107,64,-139,-121,-120,-140,64,64,64,107,64,64,64,64,-115,-143,64,-84,-110,-116,-117,-112,-111,64,107,64,-109,-108,64,64,-99,-95,-102,-100,64,-101,-104,-96,-103,-97,-105,-98,64,-211,-201,-85,-140,64,64,64,64,64,64,-142,64,-141,64,64,-212,-202,-145,64,-144,64,-140,64,64,64,64,64,]),'$end':([0,3,5,17,26,29,30,36,37,38,46,101,125,168,191,248,250,],[-222,-8,0,-3,-1,-9,-5,-2,-6,-7,-74,-4,-10,-49,-45,-75,-181,]),'GE':([10,11,16,19,23,24,39,51,53,54,56,58,59,60,61,62,63,65,66,67,68,69,70,72,73,76,77,80,81,82,83,84,107,145,152,187,190,214,215,218,221,226,228,235,236,239,241,255,262,263,],[-199,-135,-134,-136,-137,-200,-138,-139,-124,-122,-58,-67,-118,-140,-68,-62,-56,-69,-60,-65,-113,-93,-106,-64,-57,-55,-63,-61,-59,-66,-123,162,-143,-133,-119,-211,-201,-107,-114,-73,-94,-142,-141,-212,-202,-145,-144,-140,-71,-70,]),'NULL':([13,21,41,52,55,75,78,79,89,97,100,102,106,109,110,111,112,114,116,117,118,146,147,148,149,150,154,155,156,157,158,159,160,161,162,163,164,165,166,194,207,208,212,213,219,224,227,231,234,240,245,265,267,290,301,302,],[65,65,65,-121,-120,65,65,65,65,65,65,65,-115,65,-84,-110,-116,-117,-112,-111,65,65,-109,-108,65,65,-99,-95,-102,-100,65,-101,-104,-96,-103,-97,-105,-98,65,-85,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'TO':([10,11,16,19,23,24,39,51,53,54,56,58,59,60,61,62,63,65,66,67,68,69,70,71,72,73,76,77,80,81,82,83,84,107,145,152,187,190,214,215,218,221,226,228,235,236,239,241,262,263,274,275,276,298,300,303,316,319,320,321,],[-199,-135,-134,-136,-137,-200,-138,-139,-124,-122,-58,-67,-118,-140,-68,-62,-56,-69,-60,-65,-113,-93,-106,-92,-64,-57,-55,-63,-61,-59,-66,-123,-91,-143,-133,-119,-211,-201,-107,-114,-73,-94,-142,-141,-212,-202,-145,-144,-71,-70,-174,302,-177,-125,302,302,-126,302,-175,-221,]),'TYPE':([0,3,17,26,29,30,37,38,46,101,125,168,191,248,250,311,325,331,333,335,337,340,343,],[35,-8,-3,35,-9,-5,-6,-7,-74,-4,-10,-49,-45,-75,-181,35,35,35,35,35,35,35,35,]),'ISEQUAL':([10,11,16,19,23,24,39,51,53,54,56,58,59,60,61,62,63,65,66,67,68,69,70,72,73,76,77,80,81,82,83,84,107,145,152,187,190,214,215,218,221,226,228,235,236,239,241,255,262,263,],[-199,-135,-134,-136,-137,-200,-138,-139,-124,-122,-58,-67,-118,-140,-68,-62,-56,-69,-60,-65,-113,-93,-106,-64,-57,-55,-63,-61,-59,-66,-123,157,-143,-133,-119,-211,-201,-107,-114,-73,-94,-142,-141,-212,-202,-145,-144,-140,-71,-70,]),'LE':([10,11,16,19,23,24,39,51,53,54,56,58,59,60,61,62,63,65,66,67,68,69,70,72,73,76,77,80,81,82,83,84,107,145,152,187,190,214,215,218,221,226,228,235,236,239,241,255,262,263,],[-199,-135,-134,-136,-137,-200,-138,-139,-124,-122,-58,-67,-118,-140,-68,-62,-56,-69,-60,-65,-113,-93,-106,-64,-57,-55,-63,-61,-59,-66,-123,164,-143,-133,-119,-211,-201,-107,-114,-73,-94,-142,-141,-212,-202,-145,-144,-140,-71,-70,]),'RESULT':([0,3,17,22,26,29,30,37,38,46,91,92,101,124,125,168,174,176,184,191,200,229,244,247,248,250,283,311,325,331,333,335,337,340,343,],[13,-8,-3,13,13,-9,-5,-6,-7,-74,13,-157,-4,13,-10,-49,-158,13,13,-45,13,13,13,13,-75,-181,13,13,13,13,13,13,13,13,13,]),'FI':([10,11,16,19,23,24,39,46,51,53,54,56,58,59,60,61,62,63,65,66,67,68,69,70,71,72,73,76,77,80,81,82,83,84,92,107,145,152,174,187,190,199,200,214,215,218,221,226,228,235,236,239,241,242,243,244,247,248,262,263,268,283,294,295,298,305,316,324,],[-199,-135,-134,-136,-137,-200,-138,-74,-139,-124,-122,-58,-67,-118,-140,-68,-62,-56,-69,-60,-65,-113,-93,-106,-92,-64,-57,-55,-63,-61,-59,-66,-123,-91,-157,-143,-133,-119,-158,-211,-201,246,-150,-107,-114,-73,-94,-142,-141,-212,-202,-145,-144,282,-154,-152,-151,-75,-71,-70,298,-153,-129,316,-125,-155,-126,-156,]),'CHARCONST':([13,21,41,52,55,75,78,79,89,97,100,102,106,109,110,111,112,114,116,117,118,146,147,148,149,150,154,155,156,157,158,159,160,161,162,163,164,165,166,194,207,208,212,213,219,224,227,231,234,240,245,265,267,290,301,302,],[58,58,58,-121,-120,58,58,58,58,58,58,58,-115,58,-84,-110,-116,-117,-112,-111,58,58,-109,-108,58,58,-99,-95,-102,-100,58,-101,-104,-96,-103,-97,-105,-98,58,-85,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'ELSIF':([10,11,16,19,23,24,39,46,51,53,54,56,58,59,60,61,62,63,65,66,67,68,69,70,71,72,73,76,77,80,81,82,83,84,92,107,145,152,174,187,190,199,200,214,215,218,220,221,226,228,235,236,239,241,247,248,262,263,264,266,269,296,298,305,316,317,],[-199,-135,-134,-136,-137,-200,-138,-74,-139,-124,-122,-58,-67,-118,-140,-68,-62,-56,-69,-60,-65,-113,-93,-106,-92,-64,-57,-55,-63,-61,-59,-66,-123,-91,-157,-143,-133,-119,-158,-211,-201,245,-150,-107,-114,-73,267,-94,-142,-141,-212,-202,-145,-144,-151,-75,-71,-70,-128,267,-130,-131,-125,245,-126,-132,]),'DIV':([1,10,11,16,19,23,24,27,39,40,51,53,54,56,58,59,60,61,62,63,65,66,67,68,70,72,73,76,77,80,81,82,83,107,145,152,187,190,202,214,215,218,226,228,235,236,239,241,255,262,263,],[-139,-199,-135,-134,-136,-137,-200,-140,-138,112,-139,-124,-122,-58,-67,-118,-140,-68,-62,-56,-69,-60,-65,-113,112,-64,-57,-55,-63,-61,-59,-66,-123,-143,-133,-119,-211,-201,-140,112,-114,-73,-142,-141,-212,-202,-145,-144,-140,-71,-70,]),'OD':([22,46,91,92,174,176,229,248,],[95,-74,175,-157,-158,230,273,-75,]),'RETURN':([0,3,17,22,26,29,30,37,38,46,91,92,101,124,125,168,174,176,184,191,200,229,244,247,248,250,283,311,325,331,333,335,337,340,343,],[21,-8,-3,21,21,-9,-5,-6,-7,-74,21,-157,-4,21,-10,-49,-158,21,21,-45,21,21,21,21,-75,-181,21,21,21,21,21,21,21,21,21,]),'DO':([0,3,17,22,26,29,30,37,38,46,91,92,101,124,125,168,174,176,184,191,200,229,244,247,248,250,283,311,325,331,333,335,337,340,343,],[22,-8,-3,22,22,-9,-5,-6,-7,-74,22,-157,-4,22,-10,-49,-158,22,22,-45,22,22,22,22,-75,-181,22,22,22,22,22,22,22,22,22,]),'END':([3,17,29,30,37,38,46,101,125,168,191,248,250,311,325,331,333,335,337,340,343,],[-8,-3,-9,-5,-6,-7,-74,-4,-10,-49,-45,-75,-181,332,336,339,341,342,344,348,349,]),'LOWER':([0,3,13,17,21,22,26,29,30,37,38,41,46,52,55,64,75,78,79,89,91,92,97,100,101,102,106,109,110,111,112,114,116,117,118,124,125,146,147,148,149,150,154,155,156,157,158,159,160,161,162,163,164,165,166,168,174,176,184,191,194,200,207,208,212,213,219,224,227,229,231,234,240,244,245,247,248,250,265,267,283,290,301,302,311,325,331,333,335,337,340,343,],[20,-8,20,-3,20,20,20,-9,-5,-6,-7,20,-74,-121,-120,20,20,20,20,20,20,-157,20,20,-4,20,-115,20,-84,-110,-116,-117,-112,-111,20,20,-10,20,-109,-108,20,20,-99,-95,-102,-100,20,-101,-104,-96,-103,-97,-105,-98,20,-49,-158,20,20,-45,-85,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-75,-181,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'NUM':([0,3,13,17,21,22,26,29,30,37,38,41,46,52,55,64,75,78,79,89,91,92,97,100,101,102,106,109,110,111,112,114,116,117,118,124,125,146,147,148,149,150,154,155,156,157,158,159,160,161,162,163,164,165,166,168,174,176,184,191,194,200,207,208,212,213,219,224,227,229,231,234,240,244,245,247,248,250,265,267,283,290,301,302,311,325,331,333,335,337,340,343,],[42,-8,42,-3,42,42,42,-9,-5,-6,-7,42,-74,-121,-120,42,42,42,42,42,42,-157,42,42,-4,42,-115,42,-84,-110,-116,-117,-112,-111,42,42,-10,42,-109,-108,42,42,-99,-95,-102,-100,42,-101,-104,-96,-103,-97,-105,-98,42,-49,-158,42,42,-45,-85,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-75,-181,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'COLON':([10,11,16,19,23,24,27,39,44,51,53,54,56,58,59,60,61,62,63,65,66,67,68,69,70,71,72,73,76,77,80,81,82,83,84,99,107,145,152,171,173,187,190,197,214,215,218,221,226,228,235,236,239,241,252,255,262,263,298,316,],[-199,-135,-134,-136,-137,-200,-76,-138,124,-139,-124,-122,-58,-67,-118,-140,-68,-62,-56,-69,-60,-65,-113,-93,-106,-92,-64,-57,-55,-63,-61,-59,-66,-123,-91,184,-143,-133,-119,227,-32,-211,-201,-32,-107,-114,-73,-94,-142,-141,-212,-202,-145,-144,-32,-140,-71,-70,-125,-126,]),'MOD':([1,10,11,16,19,23,24,27,39,40,51,53,54,56,58,59,60,61,62,63,65,66,67,68,70,72,73,76,77,80,81,82,83,107,145,152,187,190,202,214,215,218,226,228,235,236,239,241,255,262,263,],[-139,-199,-135,-134,-136,-137,-200,-140,-138,114,-139,-124,-122,-58,-67,-118,-140,-68,-62,-56,-69,-60,-65,-113,114,-64,-57,-55,-63,-61,-59,-66,-123,-143,-133,-119,-211,-201,-140,114,-114,-73,-142,-141,-212,-202,-145,-144,-140,-71,-70,]),'RPAREN':([10,11,16,19,23,24,39,51,53,54,56,58,59,60,61,62,63,65,66,67,68,69,70,71,72,73,76,77,80,81,82,83,84,100,102,107,127,129,131,132,134,136,137,138,140,142,143,144,145,151,152,185,186,187,188,189,190,209,214,215,218,221,226,228,235,236,239,241,249,251,261,262,263,271,272,280,285,286,289,292,293,298,308,309,314,315,316,327,328,329,338,345,347,],[-199,-135,-134,-136,-137,-200,-138,-139,-124,-122,-58,-67,-118,-140,-68,-62,-56,-69,-60,-65,-113,-93,-106,-92,-64,-57,-55,-63,-61,-59,-66,-123,-91,187,190,-143,-35,-20,-21,-36,-19,-25,-22,-26,-18,-24,-27,-23,-133,218,-119,-203,235,-211,-205,236,-201,-34,-107,-114,-73,-94,-142,-141,-212,-202,-145,-144,288,289,293,-71,-70,-31,-33,-204,306,-190,-28,-37,-29,-125,-192,-193,-39,-44,-126,-191,-194,-195,346,350,-198,]),'INTCONST':([13,21,41,52,55,75,78,79,89,97,100,102,106,109,110,111,112,114,116,117,118,146,147,148,149,150,154,155,156,157,158,159,160,161,162,163,164,165,166,194,207,208,210,212,213,219,224,227,231,234,240,245,265,267,290,301,302,],[72,72,72,-121,-120,72,72,72,72,72,72,72,-115,72,-84,-110,-116,-117,-112,-111,72,72,-109,-108,72,72,-99,-95,-102,-100,72,-101,-104,-96,-103,-97,-105,-98,72,-85,72,72,258,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'MINUS':([1,10,11,13,16,19,21,23,24,27,39,40,41,51,53,54,56,58,59,60,61,62,63,65,66,67,68,69,70,72,73,75,76,77,79,80,81,82,83,89,97,100,102,106,107,109,110,111,112,114,116,117,118,145,146,147,148,149,150,152,154,155,156,157,158,159,160,161,162,163,164,165,166,187,190,194,202,207,208,212,213,214,215,218,219,221,224,226,227,228,231,234,235,236,239,240,241,245,255,262,263,265,267,290,301,302,],[-139,-199,-135,55,-134,-136,55,-137,-200,-140,-138,117,55,-139,-124,-122,-58,-67,-118,-140,-68,-62,-56,-69,-60,-65,-113,117,-106,-64,-57,55,-55,-63,55,-61,-59,-66,-123,55,55,55,55,-115,-143,55,-84,-110,-116,-117,-112,-111,55,-133,55,-109,-108,55,55,-119,-99,-95,-102,-100,55,-101,-104,-96,-103,-97,-105,-98,55,-211,-201,-85,-140,55,55,55,55,-107,-114,-73,55,117,55,-142,55,-141,55,55,-212,-202,-145,55,-144,55,-140,-71,-70,55,55,55,55,55,]),'SMC':([1,4,7,9,10,11,12,16,18,19,21,23,24,28,34,39,45,47,48,51,53,54,56,57,58,59,60,61,62,63,65,66,67,68,69,70,71,72,73,76,77,80,81,82,83,84,85,87,88,90,93,94,95,96,103,104,107,121,122,123,127,129,131,132,134,136,137,138,140,141,142,143,144,145,152,175,177,178,179,180,181,187,190,198,201,204,205,209,211,214,215,218,221,222,223,225,226,228,230,235,236,237,238,239,241,246,260,262,263,270,273,276,278,282,288,289,292,293,298,299,304,306,312,314,315,316,318,322,323,326,332,334,336,339,341,342,344,346,348,349,350,],[-79,46,-146,-77,-199,-135,-82,-134,-78,-136,-207,-137,-200,-80,-147,-138,-81,125,-11,-139,-124,-122,-58,-209,-67,-118,-140,-68,-62,-56,-69,-60,-65,-113,-93,-106,-92,-64,-57,-55,-63,-61,-59,-66,-123,-91,-210,168,-50,-208,-164,176,-159,-163,191,-46,-143,-127,-206,-76,-35,-20,-21,-36,-19,-25,-22,-26,-18,-14,-24,-27,-23,-133,-119,-162,-165,-180,-168,-167,-166,-211,-201,-83,248,250,-12,-34,-13,-107,-114,-73,-94,-52,-54,-51,-142,-141,-160,-212,-202,-47,-48,-145,-144,-148,-17,-71,-70,-53,-161,-177,-178,-149,311,-28,-37,-29,-125,-169,-179,325,333,-39,-44,-126,-170,-176,-171,337,-182,-172,-185,-184,-189,-183,-186,-196,-188,-187,-197,]),'ID':([0,3,6,13,14,17,21,22,26,29,30,35,37,38,41,43,46,49,50,52,55,64,75,78,79,86,89,91,92,97,98,100,101,102,106,109,110,111,112,114,116,117,118,124,125,126,128,135,146,147,148,149,150,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,174,176,184,191,192,193,194,200,206,207,208,212,213,219,224,227,229,231,232,234,240,244,245,247,248,249,250,265,267,279,283,287,290,291,301,302,307,311,325,330,331,333,335,337,340,343,],[27,-8,50,60,50,-3,60,27,27,-9,-5,50,-6,-7,60,123,-74,137,-15,-121,-120,60,60,60,60,137,60,27,-157,60,182,60,-4,60,-115,60,-84,-110,-116,-117,-112,-111,60,202,-10,50,206,137,60,-109,-108,60,60,-99,-95,-102,-100,60,-101,-104,-96,-103,-97,-105,-98,60,-49,50,-158,27,202,-45,50,137,-85,27,-16,60,255,60,60,60,60,60,27,60,277,60,60,27,60,27,-75,50,-181,60,60,277,27,137,255,137,60,60,50,27,27,137,27,27,27,27,27,27,]),'AND':([10,11,16,19,23,24,39,51,53,54,56,58,59,60,61,62,63,65,66,67,68,69,70,72,73,76,77,80,81,82,83,84,107,145,152,187,190,214,215,218,221,226,228,235,236,239,241,255,262,263,],[-199,-135,-134,-136,-137,-200,-138,-139,-124,-122,-58,-67,-118,-140,-68,-62,-56,-69,-60,-65,-113,-93,-106,-64,-57,-55,-63,-61,-59,-66,-123,165,-143,-133,-119,-211,-201,-107,-114,-73,-94,-142,-141,-212,-202,-145,-144,-140,-71,-70,]),'OR':([10,11,16,19,23,24,39,51,53,54,56,58,59,60,61,62,63,65,66,67,68,69,70,72,73,76,77,80,81,82,83,84,107,145,152,187,190,214,215,218,221,226,228,235,236,239,241,255,262,263,],[-199,-135,-134,-136,-137,-200,-138,-139,-124,-122,-58,-67,-118,-140,-68,-62,-56,-69,-60,-65,-113,-93,-106,-64,-57,-55,-63,-61,-59,-66,-123,154,-143,-133,-119,-211,-201,-107,-114,-73,-94,-142,-141,-212,-202,-145,-144,-140,-71,-70,]),'PRINT':([0,3,13,17,21,22,26,29,30,37,38,41,46,52,55,64,75,78,79,89,91,92,97,100,101,102,106,109,110,111,112,114,116,117,118,124,125,146,147,148,149,150,154,155,156,157,158,159,160,161,162,163,164,165,166,168,174,176,184,191,194,200,207,208,212,213,219,224,227,229,231,234,240,244,245,247,248,250,265,267,283,290,301,302,311,325,331,333,335,337,340,343,],[2,-8,2,-3,2,2,2,-9,-5,-6,-7,2,-74,-121,-120,2,2,2,2,2,2,-157,2,2,-4,2,-115,2,-84,-110,-116,-117,-112,-111,2,2,-10,2,-109,-108,2,2,-99,-95,-102,-100,2,-101,-104,-96,-103,-97,-105,-98,2,-49,-158,2,2,-45,-85,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,-75,-181,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'INT':([49,50,86,135,193,206,208,232,279,287,290,291,330,],[136,-15,136,136,136,-16,136,136,136,136,136,136,136,]),'ELSE':([10,11,16,19,23,24,39,46,51,53,54,56,58,59,60,61,62,63,65,66,67,68,69,70,71,72,73,76,77,80,81,82,83,84,92,107,145,152,174,187,190,199,200,214,215,218,220,221,226,228,235,236,239,241,247,248,262,263,264,266,269,296,298,305,316,317,],[-199,-135,-134,-136,-137,-200,-138,-74,-139,-124,-122,-58,-67,-118,-140,-68,-62,-56,-69,-60,-65,-113,-93,-106,-92,-64,-57,-55,-63,-61,-59,-66,-123,-91,-157,-143,-133,-119,-158,-211,-201,244,-150,-107,-114,-73,265,-94,-142,-141,-212,-202,-145,-144,-151,-75,-71,-70,-128,265,-130,-131,-125,244,-126,-132,]),'LT':([10,11,16,19,23,24,39,51,53,54,56,58,59,60,61,62,63,65,66,67,68,69,70,72,73,76,77,80,81,82,83,84,107,145,152,187,190,214,215,218,221,226,228,235,236,239,241,255,262,263,],[-199,-135,-134,-136,-137,-200,-138,-139,-124,-122,-58,-67,-118,-140,-68,-62,-56,-69,-60,-65,-113,-93,-106,-64,-57,-55,-63,-61,-59,-66,-123,160,-143,-133,-119,-211,-201,-107,-114,-73,-94,-142,-141,-212,-202,-145,-144,-140,-71,-70,]),'READ':([0,3,13,17,21,22,26,29,30,37,38,41,46,52,55,64,75,78,79,89,91,92,97,100,101,102,106,109,110,111,112,114,116,117,118,124,125,146,147,148,149,150,154,155,156,157,158,159,160,161,162,163,164,165,166,168,174,176,184,191,194,200,207,208,212,213,219,224,227,229,231,234,240,244,245,247,248,250,265,267,283,290,301,302,311,325,331,333,335,337,340,343,],[32,-8,32,-3,32,32,32,-9,-5,-6,-7,32,-74,-121,-120,32,32,32,32,32,32,-157,32,32,-4,32,-115,32,-84,-110,-116,-117,-112,-111,32,32,-10,32,-109,-108,32,32,-99,-95,-102,-100,32,-101,-104,-96,-103,-97,-105,-98,32,-49,-158,32,32,-45,-85,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-75,-181,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'BOOL':([49,50,86,135,193,206,208,232,279,287,290,291,330,],[138,-15,138,138,138,-16,138,138,138,138,138,138,138,]),'IF':([0,3,13,17,21,22,26,29,30,37,38,41,46,75,79,89,91,92,97,100,101,102,109,110,118,124,125,150,166,168,174,176,184,191,194,200,207,208,212,213,219,224,227,229,231,234,240,244,245,247,248,250,265,267,283,290,301,302,311,325,331,333,335,337,340,343,],[41,-8,79,-3,79,41,41,-9,-5,-6,-7,79,-74,79,79,79,41,-157,79,79,-4,79,79,-84,79,41,-10,79,79,-49,-158,41,41,-45,-85,41,79,79,79,79,79,79,79,41,79,79,79,41,79,41,-75,-181,79,79,41,79,79,79,41,41,41,41,41,41,41,41,]),'LOC':([127,129,131,132,134,136,137,138,140,142,143,144,209,289,292,293,309,314,315,338,],[-35,-20,-21,-36,-19,-25,-22,-26,-18,-24,-27,-23,-34,-28,-37,-29,329,-39,-44,347,]),'RBRACKET':([10,11,16,19,23,24,39,51,53,54,56,58,59,60,61,62,63,65,66,67,68,69,70,71,72,73,76,77,80,81,82,83,84,107,136,138,142,143,144,145,152,170,172,173,187,190,195,196,197,214,215,216,217,218,221,226,228,235,236,239,241,253,254,256,257,258,259,262,263,271,272,281,289,293,298,313,316,],[-199,-135,-134,-136,-137,-200,-138,-139,-124,-122,-58,-67,-118,-140,-68,-62,-56,-69,-60,-65,-113,-93,-106,-92,-64,-57,-55,-63,-61,-59,-66,-123,-91,-143,-25,-26,-24,-27,-23,-133,-119,226,228,-221,-211,-201,239,241,-89,-107,-114,262,263,-73,-94,-142,-141,-212,-202,-145,-144,-42,-43,291,-40,-38,292,-71,-70,-31,-33,-90,-28,-29,-125,-41,-126,]),'TRUE':([13,21,41,52,55,75,78,79,89,97,100,102,106,109,110,111,112,114,116,117,118,146,147,148,149,150,154,155,156,157,158,159,160,161,162,163,164,165,166,194,207,208,212,213,219,224,227,231,234,240,245,265,267,290,301,302,],[82,82,82,-121,-120,82,82,82,82,82,82,82,-115,82,-84,-110,-116,-117,-112,-111,82,82,-109,-108,82,82,-99,-95,-102,-100,82,-101,-104,-96,-103,-97,-105,-98,82,-85,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'CHARS':([49,50,86,135,193,206,287,291,330,],[139,-15,139,139,139,-16,139,139,139,]),'STRINGCONST':([13,21,41,52,55,75,78,79,89,97,100,102,106,109,110,111,112,114,116,117,118,146,147,148,149,150,154,155,156,157,158,159,160,161,162,163,164,165,166,194,207,208,212,213,219,224,227,231,234,240,245,265,267,290,301,302,],[61,61,61,-121,-120,61,61,61,61,61,61,61,-115,61,-84,-110,-116,-117,-112,-111,61,61,-109,-108,61,61,-99,-95,-102,-100,61,-101,-104,-96,-103,-97,-105,-98,61,-85,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'FOR':([22,],[98,]),'BY':([10,11,16,19,23,24,39,51,53,54,56,58,59,60,61,62,63,65,66,67,68,69,70,71,72,73,76,77,80,81,82,83,84,107,145,152,187,190,214,215,218,221,226,228,235,236,239,241,262,263,274,275,276,298,316,],[-199,-135,-134,-136,-137,-200,-138,-139,-124,-122,-58,-67,-118,-140,-68,-62,-56,-69,-60,-65,-113,-93,-106,-92,-64,-57,-55,-63,-61,-59,-66,-123,-91,-143,-133,-119,-211,-201,-107,-114,-73,-94,-142,-141,-212,-202,-145,-144,-71,-70,-174,301,-177,-125,-126,]),'EXIT':([0,3,17,22,26,29,30,37,38,46,91,92,101,124,125,168,174,176,184,191,200,229,244,247,248,250,283,311,325,331,333,335,337,340,343,],[43,-8,-3,43,43,-9,-5,-6,-7,-74,43,-157,-4,43,-10,-49,-158,43,43,-45,43,43,43,43,-75,-181,43,43,43,43,43,43,43,43,43,]),'PRED':([0,3,13,17,21,22,26,29,30,37,38,41,46,52,55,64,75,78,79,89,91,92,97,100,101,102,106,109,110,111,112,114,116,117,118,124,125,146,147,148,149,150,154,155,156,157,158,159,160,161,162,163,164,165,166,168,174,176,184,191,194,200,207,208,212,213,219,224,227,229,231,234,240,244,245,247,248,250,265,267,283,290,301,302,311,325,331,333,335,337,340,343,],[31,-8,31,-3,31,31,31,-9,-5,-6,-7,31,-74,-121,-120,31,31,31,31,31,31,-157,31,31,-4,31,-115,31,-84,-110,-116,-117,-112,-111,31,31,-10,31,-109,-108,31,31,-99,-95,-102,-100,31,-101,-104,-96,-103,-97,-105,-98,31,-49,-158,31,31,-45,-85,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-75,-181,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'PLUS':([1,10,11,16,19,23,24,27,39,40,51,53,54,56,58,59,60,61,62,63,65,66,67,68,69,70,72,73,76,77,80,81,82,83,107,145,152,187,190,202,214,215,218,221,226,228,235,236,239,241,255,262,263,],[-139,-199,-135,-134,-136,-137,-200,-140,-138,111,-139,-124,-122,-58,-67,-118,-140,-68,-62,-56,-69,-60,-65,-113,111,-106,-64,-57,-55,-63,-61,-59,-66,-123,-143,-133,-119,-211,-201,-140,-107,-114,-73,111,-142,-141,-212,-202,-145,-144,-140,-71,-70,]),'THEN':([10,11,16,19,23,24,39,51,53,54,56,58,59,60,61,62,63,65,66,67,68,69,70,71,72,73,76,77,80,81,82,83,84,107,120,121,145,152,153,187,190,214,215,218,221,226,228,235,236,239,241,262,263,284,297,298,316,],[-199,-135,-134,-136,-137,-200,-138,-139,-124,-122,-58,-67,-118,-140,-68,-62,-56,-69,-60,-65,-113,-93,-106,-92,-64,-57,-55,-63,-61,-59,-66,-123,-91,-143,200,-127,-133,-119,219,-211,-201,-107,-114,-73,-94,-142,-141,-212,-202,-145,-144,-71,-70,200,219,-125,-126,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'operator2':([69,221,],[146,146,]),'iteration':([98,],[181,]),'action_statement_list':([22,176,200,244,],[91,229,247,283,]),'action_statement':([0,22,26,91,176,200,229,244,247,283,311,325,331,333,335,337,340,343,],[3,92,3,174,92,92,174,92,174,174,3,3,3,3,3,3,3,3,]),'discrete_expression':([231,302,],[274,322,]),'newmode_statement':([0,26,311,325,331,333,335,337,340,343,],[37,37,37,37,37,37,37,37,37,37,]),'assignment_action':([0,22,26,91,124,176,184,200,229,244,247,283,311,325,331,333,335,337,340,343,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'array_primitive_value':([13,21,41,75,78,79,89,97,100,102,109,118,146,149,150,158,166,207,208,212,213,219,224,227,231,234,240,245,265,267,290,301,302,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'string_reference':([0,13,21,22,26,41,64,75,78,79,89,91,97,100,102,109,118,124,146,149,150,158,166,176,184,200,207,208,212,213,219,224,227,229,231,234,240,244,245,247,265,267,283,290,301,302,311,325,331,333,335,337,340,343,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'upper_bound':([227,],[271,]),'for_control':([22,],[96,]),'result_attribute':([338,],[345,]),'elseif_expression_list':([220,],[266,]),'start_value':([231,],[275,]),'string_literal':([13,21,41,75,78,79,89,97,100,102,109,118,146,149,150,158,166,207,208,212,213,219,224,227,231,234,240,245,265,267,290,301,302,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'location_name':([0,13,21,22,26,41,64,75,78,79,89,91,97,100,102,109,118,124,146,149,150,158,166,176,184,200,207,208,212,213,219,224,227,229,231,234,240,244,245,247,265,267,283,290,301,302,311,325,331,333,335,337,340,343,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'formal_parameter':([249,307,],[286,286,]),'procedure_definition':([124,],[204,]),'statement':([0,26,311,325,331,333,335,337,340,343,],[17,101,17,17,101,17,101,17,101,101,]),'basic_mode':([49,86,135,193,208,232,279,287,290,291,330,],[144,144,144,144,144,144,144,144,144,144,144,]),'reference_mode':([49,86,135,193,287,291,330,],[129,129,129,129,129,129,129,]),'string_concatenation_operator':([40,69,221,],[113,147,147,]),'operand1':([13,21,41,75,79,89,97,100,102,109,118,150,158,166,207,208,212,213,219,224,227,231,234,240,245,265,267,290,301,302,],[69,69,69,69,69,69,69,69,69,69,69,69,221,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'parameter_spec':([287,],[308,]),'elseif_expression':([220,266,],[269,296,]),'arithmetic_additive_operator':([40,69,221,],[115,148,148,]),'array_element':([0,13,21,22,26,41,64,75,78,79,89,91,97,100,102,109,118,124,146,149,150,158,166,176,184,200,207,208,212,213,219,224,227,229,231,234,240,244,245,247,265,267,283,290,301,302,311,325,331,333,335,337,340,343,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'declaration':([6,126,],[48,205,]),'parameter':([100,102,234,],[185,185,185,]),'constant_expression':([166,224,],[222,270,]),'value_array_slice':([13,21,41,75,78,79,89,97,100,102,109,118,146,149,150,158,166,207,208,212,213,219,224,227,231,234,240,245,265,267,290,301,302,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'assigning_operator':([40,],[118,]),'procedure_statement':([0,26,311,325,331,333,335,337,340,343,],[29,29,29,29,29,29,29,29,29,29,]),'literal':([13,21,41,75,78,79,89,97,100,102,109,118,146,149,150,158,166,207,208,212,213,219,224,227,231,234,240,245,265,267,290,301,302,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'declaration_statement':([0,26,311,325,331,333,335,337,340,343,],[30,30,30,30,30,30,30,30,30,30,]),'do_action':([0,22,26,91,124,176,184,200,229,244,247,283,311,325,331,333,335,337,340,343,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'index_mode':([208,290,],[257,313,]),'empty':([0,],[36,]),'synonym_statement':([0,26,311,325,331,333,335,337,340,343,],[38,38,38,38,38,38,38,38,38,38,]),'then_expression':([153,297,],[220,317,]),'primitive_value':([13,21,41,75,78,79,89,97,100,102,109,118,146,149,150,158,166,207,208,212,213,219,224,227,231,234,240,245,265,267,290,301,302,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'mode_definition':([35,192,],[104,237,]),'id_list':([6,14,35,126,169,192,249,307,],[49,86,105,49,86,105,287,287,]),'mode_name':([49,86,135,193,287,291,330,],[140,140,140,140,140,140,140,]),'elseif_clause':([199,305,],[243,243,]),'membership_operator':([84,],[161,]),'operator1':([84,],[158,]),'formal_parameter_list':([249,307,],[285,327,]),'discrete_range_mode':([49,86,135,193,208,232,279,287,290,291,330,],[142,142,142,142,142,142,142,142,142,142,142,]),'else_clause':([199,305,],[242,324,]),'declaration_list':([6,],[47,]),'call_action':([0,13,21,22,26,41,64,75,78,79,89,91,97,100,102,109,118,124,146,149,150,158,166,176,184,200,207,208,212,213,219,224,227,229,231,234,240,244,245,247,265,267,283,290,301,302,311,325,331,333,335,337,340,343,],[1,51,51,1,1,51,51,51,51,51,51,1,51,51,51,51,51,1,51,51,51,51,51,1,1,1,51,51,51,51,51,51,51,1,51,51,51,1,51,1,51,51,1,51,51,51,1,1,1,1,1,1,1,1,]),'conditional_expression':([13,21,41,75,79,89,97,100,102,109,118,150,166,207,208,212,213,219,224,227,231,234,240,245,265,267,290,301,302,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'string_mode':([49,86,135,193,287,291,330,],[127,127,127,127,127,127,127,]),'then_clause':([120,284,],[199,305,]),'discrete_mode_name':([49,86,135,193,208,232,279,287,290,291,330,],[130,130,130,130,130,130,130,130,130,130,130,]),'action':([0,22,26,91,124,176,184,200,229,244,247,283,311,325,331,333,335,337,340,343,],[4,4,4,4,201,4,201,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'program':([0,],[5,]),'referenced_location':([13,21,41,75,78,79,89,97,100,102,109,118,146,149,150,158,166,207,208,212,213,219,224,227,231,234,240,245,265,267,290,301,302,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'newmode_list':([35,],[103,]),'array_mode':([49,86,135,193,287,291,330,],[132,132,132,132,132,132,132,]),'element_node':([291,],[314,]),'if_action':([0,22,26,91,124,176,184,200,229,244,247,283,311,325,331,333,335,337,340,343,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'while_control':([22,96,],[93,177,]),'parenthesized_expression':([13,21,41,75,78,79,89,97,100,102,109,118,146,149,150,158,166,207,208,212,213,219,224,227,231,234,240,245,265,267,290,301,302,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'procedure_call':([0,13,21,22,26,41,64,75,78,79,89,91,97,100,102,109,118,124,146,149,150,158,166,176,184,200,207,208,212,213,219,224,227,229,231,234,240,244,245,247,265,267,283,290,301,302,311,325,331,333,335,337,340,343,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'value_array_element':([13,21,41,75,78,79,89,97,100,102,109,118,146,149,150,158,166,207,208,212,213,219,224,227,231,234,240,245,265,267,290,301,302,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'discrete_mode':([49,86,135,193,208,232,279,287,290,291,330,],[134,134,134,134,253,278,304,134,253,134,134,]),'loop_counter':([98,],[183,]),'literal_range':([89,109,150,207,208,213,290,],[170,195,216,251,254,261,254,]),'result_action':([0,22,26,91,124,176,184,200,229,244,247,283,311,325,331,333,335,337,340,343,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'step_enumeration':([98,],[180,]),'operand4':([13,21,41,75,78,79,89,97,100,102,109,118,146,149,150,158,166,207,208,212,213,219,224,227,231,234,240,245,265,267,290,301,302,],[59,59,59,59,152,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'empty_literal':([13,21,41,75,78,79,89,97,100,102,109,118,146,149,150,158,166,207,208,212,213,219,224,227,231,234,240,245,265,267,290,301,302,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'result':([13,21,],[57,90,]),'bracketed_action':([0,22,26,91,124,176,184,200,229,244,247,283,311,325,331,333,335,337,340,343,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'index_mode_list':([208,],[256,]),'expression_list':([109,150,],[196,217,]),'control_part':([22,],[94,]),'syn_list':([14,],[87,]),'boolean_literal':([13,21,41,75,78,79,89,97,100,102,109,118,146,149,150,158,166,207,208,212,213,219,224,227,231,234,240,245,265,267,290,301,302,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'range_enumeration':([98,],[179,]),'operand3':([13,21,41,75,79,89,97,100,102,109,118,146,149,150,158,166,207,208,212,213,219,224,227,231,234,240,245,265,267,290,301,302,],[68,68,68,68,68,68,68,68,68,68,68,68,215,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'dereferenced_reference':([0,13,21,22,26,41,64,75,78,79,89,91,97,100,102,109,118,124,146,149,150,158,166,176,184,200,207,208,212,213,219,224,227,229,231,234,240,244,245,247,265,267,283,290,301,302,311,325,331,333,335,337,340,343,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'operand0':([13,21,41,75,79,89,97,100,102,109,118,150,166,207,208,212,213,219,224,227,231,234,240,245,265,267,290,301,302,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'syn_definition':([14,169,],[88,225,]),'composite_mode':([49,86,135,193,287,291,330,],[131,131,131,131,131,131,131,]),'operand2':([13,21,41,75,79,89,97,100,102,109,118,146,150,158,166,207,208,212,213,219,224,227,231,234,240,245,265,267,290,301,302,],[70,70,70,70,70,70,70,70,70,70,70,214,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'initialization':([141,],[211,]),'builtin_call':([0,13,21,22,26,41,64,75,78,79,89,91,97,100,102,109,118,124,146,149,150,158,166,176,184,200,207,208,212,213,219,224,227,229,231,234,240,244,245,247,265,267,283,290,301,302,311,325,331,333,335,337,340,343,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'integer_expression':([89,301,],[172,320,]),'lower_bound':([89,109,150,207,208,213,290,],[171,171,171,171,171,171,171,]),'builtin_name':([0,13,21,22,26,41,64,75,78,79,89,91,97,100,102,109,118,124,146,149,150,158,166,176,184,200,207,208,212,213,219,224,227,229,231,234,240,244,245,247,265,267,283,290,301,302,311,325,331,333,335,337,340,343,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'statement_list':([0,311,325,333,337,],[26,331,335,340,343,]),'exit_action':([0,22,26,91,124,176,184,200,229,244,247,283,311,325,331,333,335,337,340,343,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'parameter_list':([100,102,234,],[186,189,280,]),'result_spec':([288,306,],[312,326,]),'string_length':([210,],[259,]),'label':([0,22,26,43,91,176,200,229,244,247,283,311,325,331,333,335,337,340,343,],[44,99,44,122,99,99,99,99,99,99,99,44,44,44,44,44,44,44,44,]),'closed_dyadic_operator':([40,],[108,]),'relational_operator':([84,],[155,]),'monadic_operator':([13,21,41,75,79,89,97,100,102,109,118,146,149,150,158,166,207,208,212,213,219,224,227,231,234,240,245,265,267,290,301,302,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'return_action':([0,22,26,91,124,176,184,200,229,244,247,283,311,325,331,333,335,337,340,343,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'parameter_attribute':([309,],[328,]),'char_literal':([13,21,41,75,78,79,89,97,100,102,109,118,146,149,150,158,166,207,208,212,213,219,224,227,231,234,240,245,265,267,290,301,302,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'boolean_expression':([41,79,97,245,267,],[120,153,178,284,297,]),'integer_literal':([13,21,41,75,78,79,89,97,100,102,109,118,146,149,150,158,166,207,208,212,213,219,224,227,231,234,240,245,265,267,290,301,302,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'end_value':([275,300,303,319,],[299,318,323,334,]),'array_slice':([0,13,21,22,26,41,64,75,78,79,89,91,97,100,102,109,118,124,146,149,150,158,166,176,184,200,207,208,212,213,219,224,227,229,231,234,240,244,245,247,265,267,283,290,301,302,311,325,331,333,335,337,340,343,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'location':([0,13,21,22,26,41,64,75,78,79,89,91,97,100,102,109,118,124,146,149,150,158,166,176,184,200,207,208,212,213,219,224,227,229,231,234,240,244,245,247,265,267,283,290,301,302,311,325,331,333,335,337,340,343,],[40,83,83,40,40,83,145,83,83,83,83,40,83,83,83,83,83,40,83,83,83,83,83,40,40,40,83,83,83,83,83,83,83,40,83,83,83,40,83,40,83,83,40,83,83,83,40,40,40,40,40,40,40,40,]),'mode':([49,86,135,193,287,291,330,],[141,167,209,238,309,315,338,]),'step_value':([275,],[300,]),'else_expression':([220,266,],[268,295,]),'arithmetic_multiplicative_operator':([40,70,214,],[119,149,149,]),'expression':([13,21,41,75,79,89,97,100,102,109,118,150,166,207,208,212,213,219,224,227,231,234,240,245,265,267,290,301,302,],[85,85,121,151,121,173,121,188,188,197,198,197,223,252,252,260,252,264,223,272,276,188,281,121,294,121,252,321,276,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','lyaParser.py',64),
  ('program -> empty','program',1,'p_program','lyaParser.py',65),
  ('statement_list -> statement','statement_list',1,'p_statement_list1','lyaParser.py',72),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list1','lyaParser.py',73),
  ('statement -> declaration_statement','statement',1,'p_statement','lyaParser.py',80),
  ('statement -> newmode_statement','statement',1,'p_statement','lyaParser.py',81),
  ('statement -> synonym_statement','statement',1,'p_statement','lyaParser.py',82),
  ('statement -> action_statement','statement',1,'p_statement','lyaParser.py',83),
  ('statement -> procedure_statement','statement',1,'p_statement','lyaParser.py',84),
  ('declaration_statement -> DCL declaration_list SMC','declaration_statement',3,'p_declaration_statement','lyaParser.py',92),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','lyaParser.py',96),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','lyaParser.py',97),
  ('declaration -> id_list mode initialization','declaration',3,'p_declaration1','lyaParser.py',104),
  ('declaration -> id_list mode','declaration',2,'p_declaration2','lyaParser.py',108),
  ('id_list -> ID','id_list',1,'p_id_list','lyaParser.py',112),
  ('id_list -> id_list COMMA ID','id_list',3,'p_id_list','lyaParser.py',113),
  ('initialization -> EQUALS expression','initialization',2,'p_initialization','lyaParser.py',120),
  ('mode -> mode_name','mode',1,'p_mode','lyaParser.py',128),
  ('mode -> discrete_mode','mode',1,'p_mode','lyaParser.py',129),
  ('mode -> reference_mode','mode',1,'p_mode','lyaParser.py',130),
  ('mode -> composite_mode','mode',1,'p_mode','lyaParser.py',131),
  ('mode_name -> ID','mode_name',1,'p_mode_name','lyaParser.py',135),
  ('discrete_mode -> basic_mode','discrete_mode',1,'p_discrete_mode','lyaParser.py',139),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','lyaParser.py',140),
  ('basic_mode -> INT','basic_mode',1,'p_basic_mode','lyaParser.py',144),
  ('basic_mode -> BOOL','basic_mode',1,'p_basic_mode','lyaParser.py',145),
  ('basic_mode -> CHAR','basic_mode',1,'p_basic_mode','lyaParser.py',146),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaParser.py',150),
  ('discrete_range_mode -> basic_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaParser.py',151),
  ('discrete_mode_name -> ID','discrete_mode_name',1,'p_discrete_mode_name','lyaParser.py',155),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_litereal_range','lyaParser.py',159),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','lyaParser.py',163),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','lyaParser.py',167),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','lyaParser.py',171),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','lyaParser.py',175),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','lyaParser.py',176),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','lyaParser.py',180),
  ('string_length -> INTCONST','string_length',1,'p_string_length','lyaParser.py',184),
  ('array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_node','array_mode',5,'p_array_mode','lyaParser.py',188),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','lyaParser.py',193),
  ('index_mode_list -> index_mode_list COMMA index_mode','index_mode_list',3,'p_index_mode_list','lyaParser.py',194),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','lyaParser.py',201),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','lyaParser.py',202),
  ('element_node -> mode','element_node',1,'p_element_node','lyaParser.py',206),
  ('newmode_statement -> TYPE newmode_list SMC','newmode_statement',3,'p_newmode_statement','lyaParser.py',214),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','lyaParser.py',218),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','lyaParser.py',219),
  ('mode_definition -> id_list EQUALS mode','mode_definition',3,'p_mode_definition','lyaParser.py',226),
  ('synonym_statement -> SYN syn_list SMC','synonym_statement',3,'p_synonym_statement','lyaParser.py',230),
  ('syn_list -> syn_definition','syn_list',1,'p_syn_list','lyaParser.py',238),
  ('syn_list -> syn_list COMMA syn_definition','syn_list',3,'p_syn_list','lyaParser.py',239),
  ('syn_definition -> id_list EQUALS constant_expression','syn_definition',3,'p_syn_definition','lyaParser.py',246),
  ('syn_definition -> id_list mode EQUALS constant_expression','syn_definition',4,'p_syn_definition2','lyaParser.py',250),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','lyaParser.py',254),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','lyaParser.py',262),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','lyaParser.py',263),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','lyaParser.py',264),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','lyaParser.py',265),
  ('literal -> integer_literal','literal',1,'p_literal','lyaParser.py',269),
  ('literal -> boolean_literal','literal',1,'p_literal','lyaParser.py',270),
  ('literal -> char_literal','literal',1,'p_literal','lyaParser.py',271),
  ('literal -> empty_literal','literal',1,'p_literal','lyaParser.py',272),
  ('literal -> string_literal','literal',1,'p_literal','lyaParser.py',273),
  ('integer_literal -> INTCONST','integer_literal',1,'p_integer_literal','lyaParser.py',277),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','lyaParser.py',281),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','lyaParser.py',282),
  ('char_literal -> CHARCONST','char_literal',1,'p_char_literal','lyaParser.py',286),
  ('string_literal -> STRINGCONST','string_literal',1,'p_string_literal','lyaParser.py',290),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','lyaParser.py',294),
  ('value_array_element -> array_primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','lyaParser.py',298),
  ('value_array_slice -> array_primitive_value LBRACKET literal_range RBRACKET','value_array_slice',4,'p_value_array_slice','lyaParser.py',302),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','lyaParser.py',306),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','lyaParser.py',310),
  ('action_statement -> action SMC','action_statement',2,'p_action_statement','lyaParser.py',318),
  ('action_statement -> label COLON action SMC','action_statement',4,'p_action_statement','lyaParser.py',319),
  ('label -> ID','label',1,'p_label','lyaParser.py',326),
  ('action -> assignment_action','action',1,'p_action','lyaParser.py',330),
  ('action -> bracketed_action','action',1,'p_action','lyaParser.py',331),
  ('action -> call_action','action',1,'p_action','lyaParser.py',332),
  ('action -> exit_action','action',1,'p_action','lyaParser.py',333),
  ('action -> return_action','action',1,'p_action','lyaParser.py',334),
  ('action -> result_action','action',1,'p_action','lyaParser.py',335),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','lyaParser.py',343),
  ('assigning_operator -> EQUALS','assigning_operator',1,'p_assigning_operator','lyaParser.py',347),
  ('assigning_operator -> closed_dyadic_operator EQUALS','assigning_operator',2,'p_assigning_operator','lyaParser.py',348),
  ('closed_dyadic_operator -> arithmetic_additive_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','lyaParser.py',355),
  ('closed_dyadic_operator -> arithmetic_multiplicative_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','lyaParser.py',356),
  ('closed_dyadic_operator -> string_concatenation_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','lyaParser.py',357),
  ('expression_list -> expression','expression_list',1,'p_expression_list','lyaParser.py',361),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','lyaParser.py',362),
  ('expression -> operand0','expression',1,'p_expression','lyaParser.py',369),
  ('expression -> conditional_expression','expression',1,'p_expression','lyaParser.py',370),
  ('operand0 -> operand1','operand0',1,'p_operand0','lyaParser.py',374),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','lyaParser.py',375),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','lyaParser.py',382),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','lyaParser.py',383),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','lyaParser.py',387),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','lyaParser.py',391),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','lyaParser.py',392),
  ('relational_operator -> ISEQUAL','relational_operator',1,'p_relational_operator','lyaParser.py',393),
  ('relational_operator -> NOTEQUAL','relational_operator',1,'p_relational_operator','lyaParser.py',394),
  ('relational_operator -> GT','relational_operator',1,'p_relational_operator','lyaParser.py',395),
  ('relational_operator -> GE','relational_operator',1,'p_relational_operator','lyaParser.py',396),
  ('relational_operator -> LT','relational_operator',1,'p_relational_operator','lyaParser.py',397),
  ('relational_operator -> LE','relational_operator',1,'p_relational_operator','lyaParser.py',398),
  ('operand1 -> operand2','operand1',1,'p_operand1','lyaParser.py',402),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1','lyaParser.py',403),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','lyaParser.py',410),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','lyaParser.py',411),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','lyaParser.py',415),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','lyaParser.py',416),
  ('string_concatenation_operator -> STRCONC','string_concatenation_operator',1,'p_string_concatenation_operator','lyaParser.py',420),
  ('operand2 -> operand3','operand2',1,'p_operand2','lyaParser.py',424),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','lyaParser.py',425),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaParser.py',432),
  ('arithmetic_multiplicative_operator -> DIV','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaParser.py',433),
  ('arithmetic_multiplicative_operator -> MOD','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaParser.py',434),
  ('operand3 -> operand4','operand3',1,'p_operand3','lyaParser.py',438),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','lyaParser.py',439),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','lyaParser.py',446),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','lyaParser.py',447),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','lyaParser.py',451),
  ('operand4 -> location','operand4',1,'p_operand4','lyaParser.py',452),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','lyaParser.py',453),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','lyaParser.py',459),
  ('conditional_expression -> IF boolean_expression then_expression elseif_expression_list else_expression FI','conditional_expression',6,'p_conditional_expression2','lyaParser.py',463),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','lyaParser.py',467),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','lyaParser.py',471),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','lyaParser.py',475),
  ('elseif_expression_list -> elseif_expression','elseif_expression_list',1,'p_elseif_expression_list','lyaParser.py',479),
  ('elseif_expression_list -> elseif_expression_list elseif_expression','elseif_expression_list',2,'p_elseif_expression_list','lyaParser.py',480),
  ('elseif_expression -> ELSIF boolean_expression then_expression','elseif_expression',3,'p_elseif_expression','lyaParser.py',487),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','lyaParser.py',495),
  ('location -> location_name','location',1,'p_location','lyaParser.py',499),
  ('location -> string_reference','location',1,'p_location','lyaParser.py',500),
  ('location -> dereferenced_reference','location',1,'p_location','lyaParser.py',501),
  ('location -> array_element','location',1,'p_location','lyaParser.py',502),
  ('location -> array_slice','location',1,'p_location','lyaParser.py',503),
  ('location -> call_action','location',1,'p_location','lyaParser.py',504),
  ('location_name -> ID','location_name',1,'p_location_name','lyaParser.py',508),
  ('string_reference -> location_name LBRACKET integer_expression RBRACKET','string_reference',4,'p_string_reference','lyaParser.py',512),
  ('string_reference -> location_name LBRACKET literal_range RBRACKET','string_reference',4,'p_string_reference2','lyaParser.py',516),
  ('dereferenced_reference -> location ARROW','dereferenced_reference',2,'p_dereferenced_reference','lyaParser.py',520),
  ('array_element -> location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','lyaParser.py',524),
  ('array_slice -> location LBRACKET literal_range RBRACKET','array_slice',4,'p_array_slice','lyaParser.py',528),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','lyaParser.py',536),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','lyaParser.py',537),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','lyaParser.py',545),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action2','lyaParser.py',549),
  ('then_clause -> THEN','then_clause',1,'p_then_clause','lyaParser.py',553),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','lyaParser.py',554),
  ('else_clause -> ELSE','else_clause',1,'p_else_clause','lyaParser.py',561),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','lyaParser.py',562),
  ('else_clause -> elseif_clause','else_clause',1,'p_else_clause2','lyaParser.py',569),
  ('elseif_clause -> ELSIF boolean_expression then_clause','elseif_clause',3,'p_elseif_clause','lyaParser.py',573),
  ('elseif_clause -> ELSIF boolean_expression then_clause else_clause','elseif_clause',4,'p_elseif_clause2','lyaParser.py',577),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','lyaParser.py',582),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','lyaParser.py',583),
  ('do_action -> DO OD','do_action',2,'p_do_action','lyaParser.py',594),
  ('do_action -> DO control_part SMC OD','do_action',4,'p_do_action2','lyaParser.py',598),
  ('do_action -> DO control_part SMC action_statement_list OD','do_action',5,'p_do_action3','lyaParser.py',602),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action4','lyaParser.py',606),
  ('control_part -> for_control','control_part',1,'p_control_part','lyaParser.py',610),
  ('control_part -> while_control','control_part',1,'p_control_part','lyaParser.py',611),
  ('control_part -> for_control while_control','control_part',2,'p_control_part2','lyaParser.py',615),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','lyaParser.py',619),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','lyaParser.py',623),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','lyaParser.py',624),
  ('step_enumeration -> loop_counter EQUALS start_value end_value','step_enumeration',4,'p_step_enumeration','lyaParser.py',628),
  ('step_enumeration -> loop_counter EQUALS start_value step_value end_value','step_enumeration',5,'p_step_enumeration2','lyaParser.py',632),
  ('step_enumeration -> loop_counter EQUALS start_value DOWN end_value','step_enumeration',5,'p_step_enumeration3','lyaParser.py',636),
  ('step_enumeration -> loop_counter EQUALS start_value step_value DOWN end_value','step_enumeration',6,'p_step_enumeration4','lyaParser.py',640),
  ('loop_counter -> ID','loop_counter',1,'p_loop_counter','lyaParser.py',644),
  ('start_value -> discrete_expression','start_value',1,'p_start_value','lyaParser.py',648),
  ('step_value -> BY integer_expression','step_value',2,'p_step_value','lyaParser.py',652),
  ('end_value -> TO discrete_expression','end_value',2,'p_end_value','lyaParser.py',656),
  ('discrete_expression -> expression','discrete_expression',1,'p_discrete_expression','lyaParser.py',660),
  ('range_enumeration -> loop_counter IN discrete_mode','range_enumeration',3,'p_range_enumeration','lyaParser.py',664),
  ('range_enumeration -> loop_counter DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration2','lyaParser.py',668),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','lyaParser.py',672),
  ('procedure_statement -> label COLON procedure_definition SMC','procedure_statement',4,'p_procedure_statement','lyaParser.py',680),
  ('procedure_definition -> PROC LPAREN RPAREN SMC END','procedure_definition',5,'p_procedure_definition1','lyaParser.py',684),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SMC statement_list END','procedure_definition',7,'p_procedure_definition1','lyaParser.py',685),
  ('procedure_definition -> PROC LPAREN RPAREN SMC statement_list END','procedure_definition',6,'p_procedure_definition1','lyaParser.py',686),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SMC END','procedure_definition',6,'p_procedure_definition2','lyaParser.py',695),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SMC END','procedure_definition',7,'p_procedure_definition2','lyaParser.py',696),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SMC statement_list END','procedure_definition',8,'p_procedure_definition2','lyaParser.py',697),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SMC statement_list END','procedure_definition',7,'p_procedure_definition3','lyaParser.py',706),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SMC END','procedure_definition',6,'p_procedure_definition3','lyaParser.py',707),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','lyaParser.py',714),
  ('formal_parameter_list -> formal_parameter COMMA formal_parameter_list','formal_parameter_list',3,'p_formal_parameter_list','lyaParser.py',715),
  ('formal_parameter -> id_list parameter_spec','formal_parameter',2,'p_formal_parameter','lyaParser.py',722),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','lyaParser.py',728),
  ('parameter_spec -> mode parameter_attribute','parameter_spec',2,'p_parameter_spec','lyaParser.py',729),
  ('parameter_attribute -> LOC','parameter_attribute',1,'p_parameter_attribute','lyaParser.py',736),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','lyaParser.py',740),
  ('result_spec -> RETURNS LPAREN mode result_attribute RPAREN','result_spec',5,'p_result_spec','lyaParser.py',741),
  ('result_attribute -> LOC','result_attribute',1,'p_result_attribute','lyaParser.py',748),
  ('call_action -> procedure_call','call_action',1,'p_call_action','lyaParser.py',756),
  ('call_action -> builtin_call','call_action',1,'p_call_action','lyaParser.py',757),
  ('procedure_call -> ID LPAREN RPAREN','procedure_call',3,'p_procedure_call','lyaParser.py',761),
  ('procedure_call -> ID LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','lyaParser.py',762),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','lyaParser.py',769),
  ('parameter_list -> parameter COMMA parameter_list','parameter_list',3,'p_parameter_list','lyaParser.py',770),
  ('parameter -> expression','parameter',1,'p_parameter','lyaParser.py',777),
  ('exit_action -> EXIT label','exit_action',2,'p_exit_action','lyaParser.py',785),
  ('return_action -> RETURN','return_action',1,'p_return_action','lyaParser.py',789),
  ('return_action -> RETURN result','return_action',2,'p_return_action','lyaParser.py',790),
  ('result_action -> RESULT result','result_action',2,'p_result_action','lyaParser.py',797),
  ('result -> expression','result',1,'p_result','lyaParser.py',801),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','lyaParser.py',805),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','lyaParser.py',806),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','lyaParser.py',813),
  ('builtin_name -> PRED','builtin_name',1,'p_builtin_name','lyaParser.py',814),
  ('builtin_name -> SUCC','builtin_name',1,'p_builtin_name','lyaParser.py',815),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','lyaParser.py',816),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','lyaParser.py',817),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','lyaParser.py',818),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','lyaParser.py',819),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','lyaParser.py',820),
  ('integer_expression -> expression','integer_expression',1,'p_integer_expression','lyaParser.py',829),
  ('empty -> <empty>','empty',0,'p_empty','lyaParser.py',836),
]
