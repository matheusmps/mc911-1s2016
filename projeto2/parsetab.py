
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '88743DDA5E3ED2BE09F62C4FACD97C39'
    
_lr_action_items = {'DCL':([0,1,2,3,16,22,23,44,46,115,143,198,203,214,215,294,314,318,319,334,335,337,342,],[14,-6,14,-8,-9,-7,-3,-5,-4,-74,-10,-49,-45,-75,-181,14,14,14,14,14,14,14,14,]),'$end':([0,1,2,3,16,21,22,23,37,44,46,115,143,198,203,214,215,],[-222,-6,-1,-8,-9,-2,-7,-3,0,-5,-4,-74,-10,-49,-45,-75,-181,]),'PRINT':([0,1,2,3,16,17,18,20,22,23,24,44,46,47,48,49,50,52,53,55,58,59,60,61,63,68,72,76,80,89,99,103,104,111,115,116,133,143,163,165,171,173,174,175,178,179,180,181,182,183,184,185,186,187,188,189,190,191,195,198,200,203,207,208,211,214,215,217,221,223,224,226,229,234,236,237,241,248,279,283,285,294,299,302,305,314,318,319,334,335,337,342,],[31,-6,31,-8,-9,31,31,31,-7,-3,31,-5,-4,31,31,-115,-116,-117,-110,-111,31,-84,-112,31,31,-157,31,31,-120,31,31,31,31,-121,-74,31,-85,-10,31,31,-158,31,-109,-108,31,-97,-103,-104,-99,-95,31,-100,-96,-102,-101,-98,-105,31,31,-49,31,-45,31,31,31,-75,-181,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'IN':([6,7,12,19,30,33,38,57,78,79,81,82,83,85,86,87,88,91,93,94,95,96,97,98,100,101,102,105,106,107,108,109,110,132,168,169,192,194,197,205,206,209,210,212,228,230,231,238,243,244,269,280,281,],[-134,-200,-138,-137,-136,-135,-199,-143,-124,-140,-68,-123,-113,-60,-62,-118,-93,179,-55,-66,-65,-56,-58,-122,-61,-63,-69,-59,-67,-57,-139,-64,-106,-201,-173,227,-133,-119,-211,-141,-142,-202,-145,-144,273,-107,-73,-94,-114,-212,-140,-71,-70,]),'CHARS':([66,67,121,146,204,220,257,300,321,],[145,-15,145,145,145,-16,145,145,145,]),'LENGTH':([0,1,2,3,16,17,18,20,22,23,24,44,46,47,48,49,50,52,53,55,58,59,60,61,63,68,72,76,80,89,99,103,104,111,115,116,133,143,163,165,171,173,174,175,178,179,180,181,182,183,184,185,186,187,188,189,190,191,195,198,200,203,207,208,211,214,215,217,221,223,224,226,229,234,236,237,241,248,279,283,285,294,299,302,305,314,318,319,334,335,337,342,],[4,-6,4,-8,-9,4,4,4,-7,-3,4,-5,-4,4,4,-115,-116,-117,-110,-111,4,-84,-112,4,4,-157,4,4,-120,4,4,4,4,-121,-74,4,-85,-10,4,4,-158,4,-109,-108,4,-97,-103,-104,-99,-95,4,-100,-96,-102,-101,-98,-105,4,4,-49,4,-45,4,4,4,-75,-181,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'UPPER':([0,1,2,3,16,17,18,20,22,23,24,44,46,47,48,49,50,52,53,55,58,59,60,61,63,68,72,76,80,89,99,103,104,111,115,116,133,143,163,165,171,173,174,175,178,179,180,181,182,183,184,185,186,187,188,189,190,191,195,198,200,203,207,208,211,214,215,217,221,223,224,226,229,234,236,237,241,248,279,283,285,294,299,302,305,314,318,319,334,335,337,342,],[5,-6,5,-8,-9,5,5,5,-7,-3,5,-5,-4,5,5,-115,-116,-117,-110,-111,5,-84,-112,5,5,-157,5,5,-120,5,5,5,5,-121,-74,5,-85,-10,5,5,-158,5,-109,-108,5,-97,-103,-104,-99,-95,5,-100,-96,-102,-101,-98,-105,5,5,-49,5,-45,5,5,5,-75,-181,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'OR':([6,7,12,19,30,33,38,57,78,79,81,82,83,85,86,87,88,91,93,94,95,96,97,98,100,101,102,105,106,107,108,109,110,132,192,194,197,205,206,209,210,212,230,231,238,243,244,269,280,281,],[-134,-200,-138,-137,-136,-135,-199,-143,-124,-140,-68,-123,-113,-60,-62,-118,-93,182,-55,-66,-65,-56,-58,-122,-61,-63,-69,-59,-67,-57,-139,-64,-106,-201,-133,-119,-211,-141,-142,-202,-145,-144,-107,-73,-94,-114,-212,-140,-71,-70,]),'ID':([0,1,2,3,14,16,17,18,20,22,23,24,36,43,44,45,46,47,48,49,50,52,53,55,58,59,60,61,63,66,67,68,72,75,76,80,89,99,103,104,111,115,116,121,133,142,143,146,152,163,165,171,173,174,175,178,179,180,181,182,183,184,185,186,187,188,189,190,191,195,198,199,200,202,203,204,207,208,211,213,214,215,217,220,221,223,224,226,227,229,234,236,237,241,248,257,273,279,283,285,290,294,299,300,302,305,314,318,319,321,334,335,337,342,],[8,-6,8,-8,67,-9,8,79,79,-7,-3,79,118,67,-5,67,-4,79,79,-115,-116,-117,-110,-111,79,-84,-112,79,138,147,-15,-157,79,168,8,-120,79,79,79,79,-121,-74,79,147,-85,67,-10,147,220,138,8,-158,79,-109,-108,8,-97,-103,-104,-99,-95,79,-100,-96,-102,-101,-98,-105,79,79,-49,67,79,67,-45,147,79,79,79,67,-75,-181,79,-16,79,79,269,8,272,79,79,8,8,79,79,147,272,8,79,79,67,8,269,147,79,79,8,8,8,147,8,8,8,8,]),'OD':([17,68,76,115,165,171,214,226,],[70,-157,172,-74,225,-158,-75,270,]),'MINUS':([6,7,8,10,12,18,19,20,24,30,33,38,41,47,48,49,50,52,53,55,57,58,59,60,61,72,78,79,81,82,83,85,86,87,88,89,93,94,95,96,97,98,100,101,102,103,105,106,107,108,109,110,116,132,133,138,173,174,175,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195,197,200,205,206,207,208,209,210,211,212,217,221,223,224,229,230,231,234,238,241,243,244,248,269,280,281,283,285,299,302,305,],[-134,-200,-140,55,-138,80,-137,80,80,-136,-135,-199,-139,80,80,-115,-116,-117,-110,-111,-143,80,-84,-112,80,80,-124,-140,-68,-123,-113,-60,-62,-118,55,80,-55,-66,-65,-56,-58,-122,-61,-63,-69,80,-59,-67,-57,-139,-64,-106,80,-201,-85,-140,80,-109,-108,-97,-103,-104,-99,-95,80,-100,-96,-102,-101,-98,-105,80,-133,-119,80,-211,80,-141,-142,80,80,-202,-145,80,-144,80,80,80,80,80,-107,-73,80,55,80,-114,-212,80,-140,-71,-70,80,80,80,80,80,]),'LOC':([144,147,148,149,150,151,154,156,157,158,160,161,219,292,296,297,298,323,324,340,],[-23,-22,-19,-21,-35,-24,-20,-26,-36,-27,-18,-25,-34,316,-29,-37,-28,-44,-39,346,]),'STRINGCONST':([18,20,24,47,48,49,50,52,53,55,58,59,60,61,72,80,89,103,104,111,116,133,173,174,175,179,180,181,182,183,184,185,186,187,188,189,190,191,195,200,207,208,211,217,221,223,224,229,234,241,248,283,285,299,302,305,],[81,81,81,81,81,-115,-116,-117,-110,-111,81,-84,-112,81,81,-120,81,81,81,-121,81,-85,81,-109,-108,-97,-103,-104,-99,-95,81,-100,-96,-102,-101,-98,-105,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'BY':([6,7,12,19,30,33,38,57,78,79,81,82,83,84,85,86,87,88,91,93,94,95,96,97,98,100,101,102,105,106,107,108,109,110,132,192,194,197,205,206,209,210,212,230,231,238,243,244,274,275,276,280,281,312,333,],[-134,-200,-138,-137,-136,-135,-199,-143,-124,-140,-68,-123,-113,-92,-60,-62,-118,-93,-91,-55,-66,-65,-56,-58,-122,-61,-63,-69,-59,-67,-57,-139,-64,-106,-201,-133,-119,-211,-141,-142,-202,-145,-144,-107,-73,-94,-114,-212,-177,-174,302,-71,-70,-125,-126,]),'LBRACKET':([6,7,8,10,12,19,30,33,38,41,57,79,81,82,85,86,92,93,94,95,96,97,98,100,101,102,105,106,107,108,109,132,138,145,159,192,197,205,206,209,210,212,231,244,269,280,281,],[47,-200,-140,58,-138,-137,-136,-135,-199,-139,-143,-140,-68,58,-60,-62,191,-55,-66,-65,-56,-58,-72,-61,-63,-69,-59,-67,-57,-139,-64,-201,-140,218,224,58,-211,-141,-142,-202,-145,-144,-73,-212,-140,-71,-70,]),'READ':([0,1,2,3,16,17,18,20,22,23,24,44,46,47,48,49,50,52,53,55,58,59,60,61,63,68,72,76,80,89,99,103,104,111,115,116,133,143,163,165,171,173,174,175,178,179,180,181,182,183,184,185,186,187,188,189,190,191,195,198,200,203,207,208,211,214,215,217,221,223,224,226,229,234,236,237,241,248,279,283,285,294,299,302,305,314,318,319,334,335,337,342,],[9,-6,9,-8,-9,9,9,9,-7,-3,9,-5,-4,9,9,-115,-116,-117,-110,-111,9,-84,-112,9,9,-157,9,9,-120,9,9,9,9,-121,-74,9,-85,-10,9,9,-158,9,-109,-108,9,-97,-103,-104,-99,-95,9,-100,-96,-102,-101,-98,-105,9,9,-49,9,-45,9,9,9,-75,-181,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'SUCC':([0,1,2,3,16,17,18,20,22,23,24,44,46,47,48,49,50,52,53,55,58,59,60,61,63,68,72,76,80,89,99,103,104,111,115,116,133,143,163,165,171,173,174,175,178,179,180,181,182,183,184,185,186,187,188,189,190,191,195,198,200,203,207,208,211,214,215,217,221,223,224,226,229,234,236,237,241,248,279,283,285,294,299,302,305,314,318,319,334,335,337,342,],[11,-6,11,-8,-9,11,11,11,-7,-3,11,-5,-4,11,11,-115,-116,-117,-110,-111,11,-84,-112,11,11,-157,11,11,-120,11,11,11,11,-121,-74,11,-85,-10,11,11,-158,11,-109,-108,11,-97,-103,-104,-99,-95,11,-100,-96,-102,-101,-98,-105,11,11,-49,11,-45,11,11,11,-75,-181,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'ELSE':([6,7,12,19,30,33,38,57,68,78,79,81,82,83,84,85,86,87,88,91,93,94,95,96,97,98,100,101,102,105,106,107,108,109,110,115,132,171,177,178,192,194,197,205,206,209,210,212,214,230,231,237,238,242,243,244,280,281,282,284,286,307,310,312,332,333,],[-134,-200,-138,-137,-136,-135,-199,-143,-157,-124,-140,-68,-123,-113,-92,-60,-62,-118,-93,-91,-55,-66,-65,-56,-58,-122,-61,-63,-69,-59,-67,-57,-139,-64,-106,-74,-201,-158,236,-150,-133,-119,-211,-141,-142,-202,-145,-144,-75,-107,-73,-151,-94,283,-114,-212,-71,-70,-128,-130,283,236,-131,-125,-132,-126,]),'TIMES':([6,7,8,10,12,19,30,33,38,41,57,78,79,81,82,83,85,86,87,93,94,95,96,97,98,100,101,102,105,106,107,108,109,110,132,138,192,194,197,205,206,209,210,212,230,231,243,244,269,280,281,],[-134,-200,-140,49,-138,-137,-136,-135,-199,-139,-143,-124,-140,-68,-123,-113,-60,-62,-118,-55,-66,-65,-56,-58,-122,-61,-63,-69,-59,-67,-57,-139,-64,49,-201,-140,-133,-119,-211,-141,-142,-202,-145,-144,49,-73,-114,-212,-140,-71,-70,]),'FI':([6,7,12,19,30,33,38,57,68,78,79,81,82,83,84,85,86,87,88,91,93,94,95,96,97,98,100,101,102,105,106,107,108,109,110,115,132,171,177,178,192,194,197,205,206,209,210,212,214,230,231,233,235,236,237,238,243,244,279,280,281,287,307,308,311,312,331,333,],[-134,-200,-138,-137,-136,-135,-199,-143,-157,-124,-140,-68,-123,-113,-92,-60,-62,-118,-93,-91,-55,-66,-65,-56,-58,-122,-61,-63,-69,-59,-67,-57,-139,-64,-106,-74,-201,-158,232,-150,-133,-119,-211,-141,-142,-202,-145,-144,-75,-107,-73,-154,278,-152,-151,-94,-114,-212,-153,-71,-70,312,-155,-129,333,-125,-156,-126,]),'DO':([0,1,2,3,16,17,22,23,44,46,63,68,76,115,143,163,165,171,178,198,203,214,215,226,236,237,279,294,314,318,319,334,335,337,342,],[17,-6,17,-8,-9,17,-7,-3,-5,-4,17,-157,17,-74,-10,17,17,-158,17,-49,-45,-75,-181,17,17,17,17,17,17,17,17,17,17,17,17,]),'WHILE':([6,7,12,17,19,30,33,38,57,69,78,79,81,82,83,84,85,86,87,88,91,93,94,95,96,97,98,100,101,102,105,106,107,108,109,110,132,144,151,156,158,161,166,167,170,192,194,197,205,206,209,210,212,230,231,238,243,244,271,274,280,281,296,298,301,304,312,327,328,330,333,341,],[-134,-200,-138,72,-137,-136,-135,-199,-143,72,-124,-140,-68,-123,-113,-92,-60,-62,-118,-93,-91,-55,-66,-65,-56,-58,-122,-61,-63,-69,-59,-67,-57,-139,-64,-106,-201,-23,-24,-26,-27,-25,-166,-167,-168,-133,-119,-211,-141,-142,-202,-145,-144,-107,-73,-94,-114,-212,-178,-177,-71,-70,-29,-28,-179,-169,-125,-171,-176,-170,-126,-172,]),'BOOL':([66,67,121,146,204,220,224,227,257,273,299,300,321,],[156,-15,156,156,156,-16,156,156,156,156,156,156,156,]),'DIV':([6,7,8,10,12,19,30,33,38,41,57,78,79,81,82,83,85,86,87,93,94,95,96,97,98,100,101,102,105,106,107,108,109,110,132,138,192,194,197,205,206,209,210,212,230,231,243,244,269,280,281,],[-134,-200,-140,50,-138,-137,-136,-135,-199,-139,-143,-124,-140,-68,-123,-113,-60,-62,-118,-55,-66,-65,-56,-58,-122,-61,-63,-69,-59,-67,-57,-139,-64,50,-201,-140,-133,-119,-211,-141,-142,-202,-145,-144,50,-73,-114,-212,-140,-71,-70,]),'CHAR':([66,67,121,146,204,220,224,227,257,273,299,300,321,],[158,-15,158,158,158,-16,158,158,158,158,158,158,158,]),'SMC':([6,7,12,15,19,24,25,27,30,32,33,34,35,38,39,40,41,57,64,65,69,70,73,74,77,78,79,81,82,83,84,85,86,87,88,91,93,94,95,96,97,98,100,101,102,105,106,107,108,109,110,112,113,114,117,118,119,120,122,123,132,137,140,141,144,147,148,149,150,151,154,155,156,157,158,160,161,162,164,166,167,170,172,192,194,197,205,206,209,210,212,216,219,222,225,230,231,232,238,243,244,245,246,247,249,250,258,264,270,271,274,278,280,281,288,289,293,296,297,298,301,304,312,313,320,323,324,327,328,330,333,336,338,339,341,343,344,345,348,349,350,],[-134,-200,-138,-80,-137,-207,115,-77,-136,-146,-135,-147,-78,-199,-82,-81,-79,-143,-11,143,-163,-159,-164,165,-127,-124,-140,-68,-123,-113,-92,-60,-62,-118,-93,-91,-55,-66,-65,-56,-58,-122,-61,-63,-69,-59,-67,-57,-139,-64,-106,-210,-209,-208,-206,-76,-50,198,-46,203,-201,-83,214,215,-23,-22,-19,-21,-35,-24,-20,-14,-26,-36,-27,-18,-25,-165,-180,-166,-167,-168,-162,-133,-119,-211,-141,-142,-202,-145,-144,-12,-34,-13,-160,-107,-73,-148,-94,-114,-212,-51,-54,-52,-47,-48,294,-17,-161,-178,-177,-149,-71,-70,-53,314,318,-29,-37,-28,-179,-169,-125,334,-182,-44,-39,-171,-176,-170,-126,-185,-189,-184,-172,-186,-183,-188,-196,-187,-197,]),'ISEQUAL':([6,7,12,19,30,33,38,57,78,79,81,82,83,85,86,87,88,91,93,94,95,96,97,98,100,101,102,105,106,107,108,109,110,132,192,194,197,205,206,209,210,212,230,231,238,243,244,269,280,281,],[-134,-200,-138,-137,-136,-135,-199,-143,-124,-140,-68,-123,-113,-60,-62,-118,-93,185,-55,-66,-65,-56,-58,-122,-61,-63,-69,-59,-67,-57,-139,-64,-106,-201,-133,-119,-211,-141,-142,-202,-145,-144,-107,-73,-94,-114,-212,-140,-71,-70,]),'RESULT':([0,1,2,3,16,17,22,23,44,46,63,68,76,115,143,163,165,171,178,198,203,214,215,226,236,237,279,294,314,318,319,334,335,337,342,],[20,-6,20,-8,-9,20,-7,-3,-5,-4,20,-157,20,-74,-10,20,20,-158,20,-49,-45,-75,-181,20,20,20,20,20,20,20,20,20,20,20,20,]),'END':([1,3,16,22,23,44,46,115,143,198,203,214,215,294,314,318,319,334,335,337,342,],[-6,-8,-9,-7,-3,-5,-4,-74,-10,-49,-45,-75,-181,320,336,338,339,343,344,345,349,]),'LPAREN':([4,5,8,9,11,18,20,24,26,28,29,31,42,47,48,49,50,52,53,55,58,59,60,61,72,79,80,89,103,104,111,116,133,138,139,144,147,153,156,158,161,173,174,175,179,180,181,182,183,184,185,186,187,188,189,190,191,195,200,207,208,211,217,221,223,224,229,234,241,248,269,272,283,285,295,299,302,305,],[-218,-216,48,-219,-215,89,89,89,-213,116,-214,-220,-217,89,89,-115,-116,-117,-110,-111,89,-84,-112,89,89,48,-120,89,89,89,-121,89,-85,48,213,217,-30,221,-26,-27,-25,89,-109,-108,-97,-103,-104,-99,-95,89,-100,-96,-102,-101,-98,-105,89,89,89,89,89,89,89,89,89,89,89,89,89,89,48,-30,89,89,321,89,89,89,]),'ARRAY':([66,67,121,146,204,220,257,300,321,],[159,-15,159,159,159,-16,159,159,159,]),'DOWN':([6,7,12,19,30,33,38,57,78,79,81,82,83,84,85,86,87,88,91,93,94,95,96,97,98,100,101,102,105,106,107,108,109,110,132,168,169,192,194,197,205,206,209,210,212,230,231,238,243,244,274,275,276,280,281,306,312,325,326,333,],[-134,-200,-138,-137,-136,-135,-199,-143,-124,-140,-68,-123,-113,-92,-60,-62,-118,-93,-91,-55,-66,-65,-56,-58,-122,-61,-63,-69,-59,-67,-57,-139,-64,-106,-201,-173,228,-133,-119,-211,-141,-142,-202,-145,-144,-107,-73,-94,-114,-212,-177,-174,303,-71,-70,329,-125,-221,-175,-126,]),'RBRACKET':([6,7,12,19,30,33,38,57,78,79,81,82,83,84,85,86,87,88,91,93,94,95,96,97,98,100,101,102,105,106,107,108,109,110,125,126,127,132,134,135,136,144,151,156,158,161,192,194,197,205,206,209,210,212,230,231,238,239,240,243,244,251,252,254,261,262,265,266,267,268,280,281,296,298,312,322,333,],[-134,-200,-138,-137,-136,-135,-199,-143,-124,-140,-68,-123,-113,-92,-60,-62,-118,-93,-91,-55,-66,-65,-56,-58,-122,-61,-63,-69,-59,-67,-57,-139,-64,-106,-221,205,206,-201,-89,210,212,-23,-24,-26,-27,-25,-133,-119,-211,-141,-142,-202,-145,-144,-107,-73,-94,280,281,-114,-212,-33,-31,-90,297,-38,300,-43,-42,-40,-71,-70,-29,-28,-125,-41,-126,]),'INTCONST':([18,20,24,47,48,49,50,52,53,55,58,59,60,61,72,80,89,103,104,111,116,133,173,174,175,179,180,181,182,183,184,185,186,187,188,189,190,191,195,200,207,208,211,217,218,221,223,224,229,234,241,248,283,285,299,302,305,],[109,109,109,109,109,-115,-116,-117,-110,-111,109,-84,-112,109,109,-120,109,109,109,-121,109,-85,109,-109,-108,-97,-103,-104,-99,-95,109,-100,-96,-102,-101,-98,-105,109,109,109,109,109,109,109,262,109,109,109,109,109,109,109,109,109,109,109,109,]),'NOTEQUAL':([6,7,12,19,30,33,38,57,78,79,81,82,83,85,86,87,88,91,93,94,95,96,97,98,100,101,102,105,106,107,108,109,110,132,192,194,197,205,206,209,210,212,230,231,238,243,244,269,280,281,],[-134,-200,-138,-137,-136,-135,-199,-143,-124,-140,-68,-123,-113,-60,-62,-118,-93,188,-55,-66,-65,-56,-58,-122,-61,-63,-69,-59,-67,-57,-139,-64,-106,-201,-133,-119,-211,-141,-142,-202,-145,-144,-107,-73,-94,-114,-212,-140,-71,-70,]),'AND':([6,7,12,19,30,33,38,57,78,79,81,82,83,85,86,87,88,91,93,94,95,96,97,98,100,101,102,105,106,107,108,109,110,132,192,194,197,205,206,209,210,212,230,231,238,243,244,269,280,281,],[-134,-200,-138,-137,-136,-135,-199,-143,-124,-140,-68,-123,-113,-60,-62,-118,-93,189,-55,-66,-65,-56,-58,-122,-61,-63,-69,-59,-67,-57,-139,-64,-106,-201,-133,-119,-211,-141,-142,-202,-145,-144,-107,-73,-94,-114,-212,-140,-71,-70,]),'LE':([6,7,12,19,30,33,38,57,78,79,81,82,83,85,86,87,88,91,93,94,95,96,97,98,100,101,102,105,106,107,108,109,110,132,192,194,197,205,206,209,210,212,230,231,238,243,244,269,280,281,],[-134,-200,-138,-137,-136,-135,-199,-143,-124,-140,-68,-123,-113,-60,-62,-118,-93,190,-55,-66,-65,-56,-58,-122,-61,-63,-69,-59,-67,-57,-139,-64,-106,-201,-133,-119,-211,-141,-142,-202,-145,-144,-107,-73,-94,-114,-212,-140,-71,-70,]),'RETURN':([0,1,2,3,16,17,22,23,44,46,63,68,76,115,143,163,165,171,178,198,203,214,215,226,236,237,279,294,314,318,319,334,335,337,342,],[24,-6,24,-8,-9,24,-7,-3,-5,-4,24,-157,24,-74,-10,24,24,-158,24,-49,-45,-75,-181,24,24,24,24,24,24,24,24,24,24,24,24,]),'INT':([66,67,121,146,204,220,224,227,257,273,299,300,321,],[161,-15,161,161,161,-16,161,161,161,161,161,161,161,]),'TRUE':([18,20,24,47,48,49,50,52,53,55,58,59,60,61,72,80,89,103,104,111,116,133,173,174,175,179,180,181,182,183,184,185,186,187,188,189,190,191,195,200,207,208,211,217,221,223,224,229,234,241,248,283,285,299,302,305,],[94,94,94,94,94,-115,-116,-117,-110,-111,94,-84,-112,94,94,-120,94,94,94,-121,94,-85,94,-109,-108,-97,-103,-104,-99,-95,94,-100,-96,-102,-101,-98,-105,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'NUM':([0,1,2,3,16,17,18,20,22,23,24,44,46,47,48,49,50,52,53,55,58,59,60,61,63,68,72,76,80,89,99,103,104,111,115,116,133,143,163,165,171,173,174,175,178,179,180,181,182,183,184,185,186,187,188,189,190,191,195,198,200,203,207,208,211,214,215,217,221,223,224,226,229,234,236,237,241,248,279,283,285,294,299,302,305,314,318,319,334,335,337,342,],[26,-6,26,-8,-9,26,26,26,-7,-3,26,-5,-4,26,26,-115,-116,-117,-110,-111,26,-84,-112,26,26,-157,26,26,-120,26,26,26,26,-121,-74,26,-85,-10,26,26,-158,26,-109,-108,26,-97,-103,-104,-99,-95,26,-100,-96,-102,-101,-98,-105,26,26,-49,26,-45,26,26,26,-75,-181,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'MOD':([6,7,8,10,12,19,30,33,38,41,57,78,79,81,82,83,85,86,87,93,94,95,96,97,98,100,101,102,105,106,107,108,109,110,132,138,192,194,197,205,206,209,210,212,230,231,243,244,269,280,281,],[-134,-200,-140,52,-138,-137,-136,-135,-199,-139,-143,-124,-140,-68,-123,-113,-60,-62,-118,-55,-66,-65,-56,-58,-122,-61,-63,-69,-59,-67,-57,-139,-64,52,-201,-140,-133,-119,-211,-141,-142,-202,-145,-144,52,-73,-114,-212,-140,-71,-70,]),'REF':([66,67,121,146,204,220,257,300,321,],[146,-15,146,146,146,-16,146,146,146,]),'TO':([6,7,12,19,30,33,38,57,78,79,81,82,83,84,85,86,87,88,91,93,94,95,96,97,98,100,101,102,105,106,107,108,109,110,132,192,194,197,205,206,209,210,212,230,231,238,243,244,274,275,276,280,281,303,306,312,325,326,329,333,],[-134,-200,-138,-137,-136,-135,-199,-143,-124,-140,-68,-123,-113,-92,-60,-62,-118,-93,-91,-55,-66,-65,-56,-58,-122,-61,-63,-69,-59,-67,-57,-139,-64,-106,-201,-133,-119,-211,-141,-142,-202,-145,-144,-107,-73,-94,-114,-212,-177,-174,305,-71,-70,305,305,-125,-221,-175,305,-126,]),'FALSE':([18,20,24,47,48,49,50,52,53,55,58,59,60,61,72,80,89,103,104,111,116,133,173,174,175,179,180,181,182,183,184,185,186,187,188,189,190,191,195,200,207,208,211,217,221,223,224,229,234,241,248,283,285,299,302,305,],[95,95,95,95,95,-115,-116,-117,-110,-111,95,-84,-112,95,95,-120,95,95,95,-121,95,-85,95,-109,-108,-97,-103,-104,-99,-95,95,-100,-96,-102,-101,-98,-105,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'THEN':([6,7,12,19,30,33,38,57,77,78,79,81,82,83,84,85,86,87,88,90,91,93,94,95,96,97,98,100,101,102,105,106,107,108,109,110,132,192,193,194,197,205,206,209,210,212,230,231,238,243,244,277,280,281,309,312,333,],[-134,-200,-138,-137,-136,-135,-199,-143,-127,-124,-140,-68,-123,-113,-92,-60,-62,-118,-93,178,-91,-55,-66,-65,-56,-58,-122,-61,-63,-69,-59,-67,-57,-139,-64,-106,-201,-133,241,-119,-211,-141,-142,-202,-145,-144,-107,-73,-94,-114,-212,178,-71,-70,241,-125,-126,]),'PRED':([0,1,2,3,16,17,18,20,22,23,24,44,46,47,48,49,50,52,53,55,58,59,60,61,63,68,72,76,80,89,99,103,104,111,115,116,133,143,163,165,171,173,174,175,178,179,180,181,182,183,184,185,186,187,188,189,190,191,195,198,200,203,207,208,211,214,215,217,221,223,224,226,229,234,236,237,241,248,279,283,285,294,299,302,305,314,318,319,334,335,337,342,],[29,-6,29,-8,-9,29,29,29,-7,-3,29,-5,-4,29,29,-115,-116,-117,-110,-111,29,-84,-112,29,29,-157,29,29,-120,29,29,29,29,-121,-74,29,-85,-10,29,29,-158,29,-109,-108,29,-97,-103,-104,-99,-95,29,-100,-96,-102,-101,-98,-105,29,29,-49,29,-45,29,29,29,-75,-181,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'ARROW':([6,7,8,10,12,18,19,20,24,30,33,38,41,47,48,49,50,52,53,55,57,58,59,60,61,72,79,80,82,89,103,104,108,111,116,132,133,138,173,174,175,179,180,181,182,183,184,185,186,187,188,189,190,191,192,195,197,200,205,206,207,208,209,210,211,212,217,221,223,224,229,234,241,244,248,269,283,285,299,302,305,],[-134,-200,-140,57,-138,99,-137,99,99,-136,-135,-199,-139,99,99,-115,-116,-117,-110,-111,-143,99,-84,-112,99,99,-140,-120,57,99,99,99,-139,-121,99,-201,-85,-140,99,-109,-108,-97,-103,-104,-99,-95,99,-100,-96,-102,-101,-98,-105,99,57,99,-211,99,-141,-142,99,99,-202,-145,99,-144,99,99,99,99,99,99,99,-212,99,-140,99,99,99,99,99,]),'STRCONC':([6,7,8,10,12,19,30,33,38,41,57,78,79,81,82,83,85,86,87,88,93,94,95,96,97,98,100,101,102,105,106,107,108,109,110,132,138,192,194,197,205,206,209,210,212,230,231,238,243,244,269,280,281,],[-134,-200,-140,60,-138,-137,-136,-135,-199,-139,-143,-124,-140,-68,-123,-113,-60,-62,-118,60,-55,-66,-65,-56,-58,-122,-61,-63,-69,-59,-67,-57,-139,-64,-106,-201,-140,-133,-119,-211,-141,-142,-202,-145,-144,-107,-73,60,-114,-212,-140,-71,-70,]),'GT':([6,7,12,19,30,33,38,57,78,79,81,82,83,85,86,87,88,91,93,94,95,96,97,98,100,101,102,105,106,107,108,109,110,132,192,194,197,205,206,209,210,212,230,231,238,243,244,269,280,281,],[-134,-200,-138,-137,-136,-135,-199,-143,-124,-140,-68,-123,-113,-60,-62,-118,-93,187,-55,-66,-65,-56,-58,-122,-61,-63,-69,-59,-67,-57,-139,-64,-106,-201,-133,-119,-211,-141,-142,-202,-145,-144,-107,-73,-94,-114,-212,-140,-71,-70,]),'EQUALS':([6,7,8,10,12,19,30,33,38,41,49,50,51,52,53,54,55,56,57,60,62,67,121,124,132,138,144,147,148,149,150,151,154,155,156,157,158,160,161,168,169,197,201,205,206,209,210,212,219,220,244,296,297,298,323,324,],[-134,-200,-140,59,-138,-137,-136,-135,-199,-139,-115,-116,-86,-117,-110,-87,-111,133,-143,-112,-88,-15,200,204,-201,-140,-23,-22,-19,-21,-35,-24,-20,223,-26,-36,-27,-18,-25,-173,229,-211,248,-141,-142,-202,-145,-144,-34,-16,-212,-29,-37,-28,-44,-39,]),'FOR':([17,],[75,]),'COMMA':([6,7,12,19,30,33,38,57,64,65,66,67,78,79,81,82,83,84,85,86,87,88,91,93,94,95,96,97,98,100,101,102,105,106,107,108,109,110,119,120,121,122,123,124,129,130,132,134,136,144,147,148,149,150,151,154,155,156,157,158,160,161,192,194,197,205,206,209,210,212,216,219,220,222,230,231,238,240,243,244,245,246,247,249,250,251,252,254,256,257,264,265,266,267,268,280,281,288,291,292,296,297,298,312,316,317,322,323,324,333,],[-134,-200,-138,-137,-136,-135,-199,-143,-11,142,152,-15,-124,-140,-68,-123,-113,-92,-60,-62,-118,-93,-91,-55,-66,-65,-56,-58,-122,-61,-63,-69,-59,-67,-57,-139,-64,-106,-50,199,152,-46,202,152,-205,208,-201,-89,211,-23,-22,-19,-21,-35,-24,-20,-14,-26,-36,-27,-18,-25,-133,-119,-211,-141,-142,-202,-145,-144,-12,-34,-16,-13,-107,-73,-94,211,-114,-212,-51,-54,-52,-47,-48,-33,-31,-90,290,152,-17,299,-43,-42,-40,-71,-70,-53,-192,-193,-29,-37,-28,-125,-195,-194,-41,-44,-39,-126,]),'EXIT':([0,1,2,3,16,17,22,23,44,46,63,68,76,115,143,163,165,171,178,198,203,214,215,226,236,237,279,294,314,318,319,334,335,337,342,],[36,-6,36,-8,-9,36,-7,-3,-5,-4,36,-157,36,-74,-10,36,36,-158,36,-49,-45,-75,-181,36,36,36,36,36,36,36,36,36,36,36,36,]),'NULL':([18,20,24,47,48,49,50,52,53,55,58,59,60,61,72,80,89,103,104,111,116,133,173,174,175,179,180,181,182,183,184,185,186,187,188,189,190,191,195,200,207,208,211,217,221,223,224,229,234,241,248,283,285,299,302,305,],[102,102,102,102,102,-115,-116,-117,-110,-111,102,-84,-112,102,102,-120,102,102,102,-121,102,-85,102,-109,-108,-97,-103,-104,-99,-95,102,-100,-96,-102,-101,-98,-105,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'IF':([0,1,2,3,16,17,18,20,22,23,24,44,46,47,48,58,59,61,63,68,72,76,89,103,115,116,133,143,163,165,171,178,191,198,200,203,207,208,211,214,215,217,221,223,224,226,229,234,236,237,241,248,279,283,285,294,299,302,305,314,318,319,334,335,337,342,],[18,-6,18,-8,-9,18,103,103,-7,-3,103,-5,-4,103,103,103,-84,103,18,-157,103,18,103,103,-74,103,-85,-10,18,18,-158,18,103,-49,103,-45,103,103,103,-75,-181,103,103,103,103,18,103,103,18,18,103,103,18,103,103,18,103,103,103,18,18,18,18,18,18,18,]),'LT':([6,7,12,19,30,33,38,57,78,79,81,82,83,85,86,87,88,91,93,94,95,96,97,98,100,101,102,105,106,107,108,109,110,132,192,194,197,205,206,209,210,212,230,231,238,243,244,269,280,281,],[-134,-200,-138,-137,-136,-135,-199,-143,-124,-140,-68,-123,-113,-60,-62,-118,-93,181,-55,-66,-65,-56,-58,-122,-61,-63,-69,-59,-67,-57,-139,-64,-106,-201,-133,-119,-211,-141,-142,-202,-145,-144,-107,-73,-94,-114,-212,-140,-71,-70,]),'PLUS':([6,7,8,10,12,19,30,33,38,41,57,78,79,81,82,83,85,86,87,88,93,94,95,96,97,98,100,101,102,105,106,107,108,109,110,132,138,192,194,197,205,206,209,210,212,230,231,238,243,244,269,280,281,],[-134,-200,-140,53,-138,-137,-136,-135,-199,-139,-143,-124,-140,-68,-123,-113,-60,-62,-118,53,-55,-66,-65,-56,-58,-122,-61,-63,-69,-59,-67,-57,-139,-64,-106,-201,-140,-133,-119,-211,-141,-142,-202,-145,-144,-107,-73,53,-114,-212,-140,-71,-70,]),'COLON':([6,7,8,12,13,19,30,33,38,57,71,78,79,81,82,83,84,85,86,87,88,91,93,94,95,96,97,98,100,101,102,105,106,107,108,109,110,125,128,132,134,192,194,197,205,206,209,210,212,230,231,238,243,244,259,269,280,281,312,333,],[-134,-200,-76,-138,63,-137,-136,-135,-199,-143,163,-124,-140,-68,-123,-113,-92,-60,-62,-118,-93,-91,-55,-66,-65,-56,-58,-122,-61,-63,-69,-59,-67,-57,-139,-64,-106,-32,207,-201,-32,-133,-119,-211,-141,-142,-202,-145,-144,-107,-73,-94,-114,-212,-32,-140,-71,-70,-125,-126,]),'CHARCONST':([18,20,24,47,48,49,50,52,53,55,58,59,60,61,72,80,89,103,104,111,116,133,173,174,175,179,180,181,182,183,184,185,186,187,188,189,190,191,195,200,207,208,211,217,221,223,224,229,234,241,248,283,285,299,302,305,],[106,106,106,106,106,-115,-116,-117,-110,-111,106,-84,-112,106,106,-120,106,106,106,-121,106,-85,106,-109,-108,-97,-103,-104,-99,-95,106,-100,-96,-102,-101,-98,-105,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,]),'GE':([6,7,12,19,30,33,38,57,78,79,81,82,83,85,86,87,88,91,93,94,95,96,97,98,100,101,102,105,106,107,108,109,110,132,192,194,197,205,206,209,210,212,230,231,238,243,244,269,280,281,],[-134,-200,-138,-137,-136,-135,-199,-143,-124,-140,-68,-123,-113,-60,-62,-118,-93,180,-55,-66,-65,-56,-58,-122,-61,-63,-69,-59,-67,-57,-139,-64,-106,-201,-133,-119,-211,-141,-142,-202,-145,-144,-107,-73,-94,-114,-212,-140,-71,-70,]),'ELSIF':([6,7,12,19,30,33,38,57,68,78,79,81,82,83,84,85,86,87,88,91,93,94,95,96,97,98,100,101,102,105,106,107,108,109,110,115,132,171,177,178,192,194,197,205,206,209,210,212,214,230,231,237,238,242,243,244,280,281,282,284,286,307,310,312,332,333,],[-134,-200,-138,-137,-136,-135,-199,-143,-157,-124,-140,-68,-123,-113,-92,-60,-62,-118,-93,-91,-55,-66,-65,-56,-58,-122,-61,-63,-69,-59,-67,-57,-139,-64,-106,-74,-201,-158,234,-150,-133,-119,-211,-141,-142,-202,-145,-144,-75,-107,-73,-151,-94,285,-114,-212,-71,-70,-128,-130,285,234,-131,-125,-132,-126,]),'LOWER':([0,1,2,3,16,17,18,20,22,23,24,44,46,47,48,49,50,52,53,55,58,59,60,61,63,68,72,76,80,89,99,103,104,111,115,116,133,143,163,165,171,173,174,175,178,179,180,181,182,183,184,185,186,187,188,189,190,191,195,198,200,203,207,208,211,214,215,217,221,223,224,226,229,234,236,237,241,248,279,283,285,294,299,302,305,314,318,319,334,335,337,342,],[42,-6,42,-8,-9,42,42,42,-7,-3,42,-5,-4,42,42,-115,-116,-117,-110,-111,42,-84,-112,42,42,-157,42,42,-120,42,42,42,42,-121,-74,42,-85,-10,42,42,-158,42,-109,-108,42,-97,-103,-104,-99,-95,42,-100,-96,-102,-101,-98,-105,42,42,-49,42,-45,42,42,42,-75,-181,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'RETURNS':([258,289,],[295,295,]),'SYN':([0,1,2,3,16,22,23,44,46,115,143,198,203,214,215,294,314,318,319,334,335,337,342,],[43,-6,43,-8,-9,-7,-3,-5,-4,-74,-10,-49,-45,-75,-181,43,43,43,43,43,43,43,43,]),'PROC':([63,],[139,]),'TYPE':([0,1,2,3,16,22,23,44,46,115,143,198,203,214,215,294,314,318,319,334,335,337,342,],[45,-6,45,-8,-9,-7,-3,-5,-4,-74,-10,-49,-45,-75,-181,45,45,45,45,45,45,45,45,]),'RPAREN':([6,7,12,19,30,33,38,48,57,78,79,81,82,83,84,85,86,87,88,91,93,94,95,96,97,98,100,101,102,105,106,107,108,109,110,116,129,130,131,132,144,147,148,149,150,151,154,156,157,158,160,161,176,192,194,196,197,205,206,209,210,212,213,219,230,231,238,243,244,251,252,253,255,256,260,263,280,281,291,292,296,297,298,312,315,316,317,323,324,333,340,346,347,],[-134,-200,-138,-137,-136,-135,-199,132,-143,-124,-140,-68,-123,-113,-92,-60,-62,-118,-93,-91,-55,-66,-65,-56,-58,-122,-61,-63,-69,-59,-67,-57,-139,-64,-106,197,-205,-203,209,-201,-23,-22,-19,-21,-35,-24,-20,-26,-36,-27,-18,-25,231,-133,-119,244,-211,-141,-142,-202,-145,-144,258,-34,-107,-73,-94,-114,-212,-33,-31,-204,289,-190,296,298,-71,-70,-192,-193,-29,-37,-28,-125,-191,-195,-194,-44,-39,-126,348,-198,350,]),'NOT':([18,20,24,47,48,49,50,52,53,55,58,59,60,61,72,89,103,116,133,173,174,175,179,180,181,182,183,184,185,186,187,188,189,190,191,195,200,207,208,211,217,221,223,224,229,234,241,248,283,285,299,302,305,],[111,111,111,111,111,-115,-116,-117,-110,-111,111,-84,-112,111,111,111,111,111,-85,111,-109,-108,-97,-103,-104,-99,-95,111,-100,-96,-102,-101,-98,-105,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'newmode_statement':([0,2,294,314,318,319,334,335,337,342,],[1,1,1,1,1,1,1,1,1,1,]),'statement_list':([0,294,314,318,334,],[2,319,335,337,342,]),'action_statement':([0,2,17,76,165,178,226,236,237,279,294,314,318,319,334,335,337,342,],[3,3,68,171,68,68,171,68,171,171,3,3,3,3,3,3,3,3,]),'referenced_location':([18,20,24,47,48,58,61,72,89,103,104,116,173,184,191,195,200,207,208,211,217,221,223,224,229,234,241,248,283,285,299,302,305,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'string_concatenation_operator':([10,88,238,],[62,174,174,]),'location_name':([0,2,17,18,20,24,47,48,58,61,63,72,76,89,99,103,104,116,163,165,173,178,184,191,195,200,207,208,211,217,221,223,224,226,229,234,236,237,241,248,279,283,285,294,299,302,305,314,318,319,334,335,337,342,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'step_enumeration':([75,],[167,]),'id_list':([14,43,45,142,199,202,213,290,],[66,121,124,66,121,124,257,257,]),'loop_counter':([75,],[169,]),'location':([0,2,17,18,20,24,47,48,58,61,63,72,76,89,99,103,104,116,163,165,173,178,184,191,195,200,207,208,211,217,221,223,224,226,229,234,236,237,241,248,279,283,285,294,299,302,305,314,318,319,334,335,337,342,],[10,10,10,82,82,82,82,82,82,82,10,82,10,82,192,82,82,82,10,10,82,10,82,82,82,82,82,82,82,82,82,82,82,10,82,82,10,10,82,82,10,82,82,10,82,82,82,10,10,10,10,10,10,10,]),'array_slice':([0,2,17,18,20,24,47,48,58,61,63,72,76,89,99,103,104,116,163,165,173,178,184,191,195,200,207,208,211,217,221,223,224,226,229,234,236,237,241,248,279,283,285,294,299,302,305,314,318,319,334,335,337,342,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'label':([0,2,17,36,76,165,178,226,236,237,279,294,314,318,319,334,335,337,342,],[13,13,71,117,71,71,71,71,71,71,71,13,13,13,13,13,13,13,13,]),'string_mode':([66,121,146,204,257,300,321,],[150,150,150,150,150,150,150,]),'boolean_literal':([18,20,24,47,48,58,61,72,89,103,104,116,173,184,191,195,200,207,208,211,217,221,223,224,229,234,241,248,283,285,299,302,305,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'exit_action':([0,2,17,63,76,163,165,178,226,236,237,279,294,314,318,319,334,335,337,342,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'integer_expression':([47,302,],[126,326,]),'else_clause':([177,307,],[235,331,]),'formal_parameter':([213,290,],[256,256,]),'action_statement_list':([17,165,178,236,],[76,226,237,279,]),'mode_name':([66,121,146,204,257,300,321,],[160,160,160,160,160,160,160,]),'array_element':([0,2,17,18,20,24,47,48,58,61,63,72,76,89,99,103,104,116,163,165,173,178,184,191,195,200,207,208,211,217,221,223,224,226,229,234,236,237,241,248,279,283,285,294,299,302,305,314,318,319,334,335,337,342,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'operand4':([18,20,24,47,48,58,61,72,89,103,104,116,173,184,191,195,200,207,208,211,217,221,223,224,229,234,241,248,283,285,299,302,305,],[87,87,87,87,87,87,87,87,87,87,194,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'operator2':([88,238,],[173,173,]),'array_mode':([66,121,146,204,257,300,321,],[157,157,157,157,157,157,157,]),'membership_operator':([91,],[186,]),'lower_bound':([47,58,191,217,221,224,299,],[128,128,128,128,128,128,128,]),'boolean_expression':([18,72,103,234,285,],[90,164,193,277,309,]),'literal':([18,20,24,47,48,58,61,72,89,103,104,116,173,184,191,195,200,207,208,211,217,221,223,224,229,234,241,248,283,285,299,302,305,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'else_expression':([242,286,],[287,311,]),'syn_definition':([43,199,],[119,245,]),'basic_mode':([66,121,146,204,224,227,257,273,299,300,321,],[144,144,144,144,144,144,144,144,144,144,144,]),'string_length':([218,],[261,]),'parameter':([48,116,208,],[130,130,130,]),'parenthesized_expression':([18,20,24,47,48,58,61,72,89,103,104,116,173,184,191,195,200,207,208,211,217,221,223,224,229,234,241,248,283,285,299,302,305,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'primitive_value':([18,20,24,47,48,58,61,72,89,103,104,116,173,184,191,195,200,207,208,211,217,221,223,224,229,234,241,248,283,285,299,302,305,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'while_control':([17,69,],[73,162,]),'dereferenced_reference':([0,2,17,18,20,24,47,48,58,61,63,72,76,89,99,103,104,116,163,165,173,178,184,191,195,200,207,208,211,217,221,223,224,226,229,234,236,237,241,248,279,283,285,294,299,302,305,314,318,319,334,335,337,342,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'result':([20,24,],[113,114,]),'control_part':([17,],[74,]),'procedure_definition':([63,],[141,]),'if_action':([0,2,17,63,76,163,165,178,226,236,237,279,294,314,318,319,334,335,337,342,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'string_reference':([0,2,17,18,20,24,47,48,58,61,63,72,76,89,99,103,104,116,163,165,173,178,184,191,195,200,207,208,211,217,221,223,224,226,229,234,236,237,241,248,279,283,285,294,299,302,305,314,318,319,334,335,337,342,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'array_primitive_value':([18,20,24,47,48,58,61,72,89,103,104,116,173,184,191,195,200,207,208,211,217,221,223,224,229,234,241,248,283,285,299,302,305,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'do_action':([0,2,17,63,76,163,165,178,226,236,237,279,294,314,318,319,334,335,337,342,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'declaration_list':([14,],[65,]),'formal_parameter_list':([213,290,],[255,315,]),'bracketed_action':([0,2,17,63,76,163,165,178,226,236,237,279,294,314,318,319,334,335,337,342,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'value_array_slice':([18,20,24,47,48,58,61,72,89,103,104,116,173,184,191,195,200,207,208,211,217,221,223,224,229,234,241,248,283,285,299,302,305,],[107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,]),'assigning_operator':([10,],[61,]),'reference_mode':([66,121,146,204,257,300,321,],[154,154,154,154,154,154,154,]),'empty':([0,],[21,]),'parameter_attribute':([292,],[317,]),'then_expression':([193,309,],[242,332,]),'declaration_statement':([0,2,294,314,318,319,334,335,337,342,],[44,44,44,44,44,44,44,44,44,44,]),'operand2':([18,20,24,47,48,58,61,72,89,103,116,173,184,191,200,207,208,211,217,221,223,224,229,234,241,248,283,285,299,302,305,],[110,110,110,110,110,110,110,110,110,110,110,230,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,]),'assignment_action':([0,2,17,63,76,163,165,178,226,236,237,279,294,314,318,319,334,335,337,342,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'expression':([18,20,24,47,48,58,61,72,89,103,116,191,200,207,208,211,217,221,223,224,229,234,241,248,283,285,299,302,305,],[77,112,112,125,129,134,137,77,176,77,129,134,246,251,129,254,259,259,264,259,274,77,282,246,308,77,259,325,274,]),'for_control':([17,],[69,]),'initialization':([155,],[222,]),'result_spec':([258,289,],[293,313,]),'builtin_call':([0,2,17,18,20,24,47,48,58,61,63,72,76,89,99,103,104,116,163,165,173,178,184,191,195,200,207,208,211,217,221,223,224,226,229,234,236,237,241,248,279,283,285,294,299,302,305,314,318,319,334,335,337,342,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'operator1':([91,],[184,]),'index_mode_list':([224,],[265,]),'composite_mode':([66,121,146,204,257,300,321,],[149,149,149,149,149,149,149,]),'elseif_expression_list':([242,],[286,]),'parameter_spec':([257,],[291,]),'operand3':([18,20,24,47,48,58,61,72,89,103,116,173,184,191,195,200,207,208,211,217,221,223,224,229,234,241,248,283,285,299,302,305,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,243,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'conditional_expression':([18,20,24,47,48,58,61,72,89,103,116,191,200,207,208,211,217,221,223,224,229,234,241,248,283,285,299,302,305,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'iteration':([75,],[166,]),'procedure_statement':([0,2,294,314,318,319,334,335,337,342,],[16,16,16,16,16,16,16,16,16,16,]),'discrete_mode_name':([66,121,146,204,224,227,257,273,299,300,321,],[153,153,153,153,153,153,153,153,153,153,153,]),'literal_range':([47,58,191,217,221,224,299,],[127,135,239,260,263,266,266,]),'empty_literal':([18,20,24,47,48,58,61,72,89,103,104,116,173,184,191,195,200,207,208,211,217,221,223,224,229,234,241,248,283,285,299,302,305,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'syn_list':([43,],[120,]),'discrete_mode':([66,121,146,204,224,227,257,273,299,300,321,],[148,148,148,148,267,271,148,301,267,148,148,]),'operand1':([18,20,24,47,48,58,61,72,89,103,116,184,191,200,207,208,211,217,221,223,224,229,234,241,248,283,285,299,302,305,],[88,88,88,88,88,88,88,88,88,88,88,238,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'closed_dyadic_operator':([10,],[56,]),'call_action':([0,2,17,18,20,24,47,48,58,61,63,72,76,89,99,103,104,116,163,165,173,178,184,191,195,200,207,208,211,217,221,223,224,226,229,234,236,237,241,248,279,283,285,294,299,302,305,314,318,319,334,335,337,342,],[41,41,41,108,108,108,108,108,108,108,41,108,41,108,108,108,108,108,41,41,108,41,108,108,108,108,108,108,108,108,108,108,108,41,108,108,41,41,108,108,41,108,108,41,108,108,108,41,41,41,41,41,41,41,]),'end_value':([276,303,306,329,],[304,327,330,341,]),'operand0':([18,20,24,47,48,58,61,72,89,103,116,191,200,207,208,211,217,221,223,224,229,234,241,248,283,285,299,302,305,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'synonym_statement':([0,2,294,314,318,319,334,335,337,342,],[22,22,22,22,22,22,22,22,22,22,]),'index_mode':([224,299,],[268,322,]),'constant_expression':([200,248,],[247,288,]),'statement':([0,2,294,314,318,319,334,335,337,342,],[23,46,23,23,23,46,23,46,46,46,]),'declaration':([14,142,],[64,216,]),'value_array_element':([18,20,24,47,48,58,61,72,89,103,104,116,173,184,191,195,200,207,208,211,217,221,223,224,229,234,241,248,283,285,299,302,305,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'range_enumeration':([75,],[170,]),'result_attribute':([340,],[347,]),'upper_bound':([207,],[252,]),'builtin_name':([0,2,17,18,20,24,47,48,58,61,63,72,76,89,99,103,104,116,163,165,173,178,184,191,195,200,207,208,211,217,221,223,224,226,229,234,236,237,241,248,279,283,285,294,299,302,305,314,318,319,334,335,337,342,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'mode_definition':([45,202,],[122,249,]),'discrete_expression':([229,305,],[275,328,]),'arithmetic_additive_operator':([10,88,238,],[51,175,175,]),'newmode_list':([45,],[123,]),'start_value':([229,],[276,]),'step_value':([276,],[306,]),'discrete_range_mode':([66,121,146,204,224,227,257,273,299,300,321,],[151,151,151,151,151,151,151,151,151,151,151,]),'char_literal':([18,20,24,47,48,58,61,72,89,103,104,116,173,184,191,195,200,207,208,211,217,221,223,224,229,234,241,248,283,285,299,302,305,],[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'expression_list':([58,191,],[136,240,]),'element_node':([300,],[324,]),'string_literal':([18,20,24,47,48,58,61,72,89,103,104,116,173,184,191,195,200,207,208,211,217,221,223,224,229,234,241,248,283,285,299,302,305,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'program':([0,],[37,]),'parameter_list':([48,116,208,],[131,196,253,]),'procedure_call':([0,2,17,18,20,24,47,48,58,61,63,72,76,89,99,103,104,116,163,165,173,178,184,191,195,200,207,208,211,217,221,223,224,226,229,234,236,237,241,248,279,283,285,294,299,302,305,314,318,319,334,335,337,342,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'monadic_operator':([18,20,24,47,48,58,61,72,89,103,116,173,184,191,195,200,207,208,211,217,221,223,224,229,234,241,248,283,285,299,302,305,],[104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,]),'mode':([66,121,146,204,257,300,321,],[155,201,219,250,292,323,340,]),'result_action':([0,2,17,63,76,163,165,178,226,236,237,279,294,314,318,319,334,335,337,342,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'integer_literal':([18,20,24,47,48,58,61,72,89,103,104,116,173,184,191,195,200,207,208,211,217,221,223,224,229,234,241,248,283,285,299,302,305,],[105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'return_action':([0,2,17,63,76,163,165,178,226,236,237,279,294,314,318,319,334,335,337,342,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'relational_operator':([91,],[183,]),'action':([0,2,17,63,76,163,165,178,226,236,237,279,294,314,318,319,334,335,337,342,],[25,25,25,140,25,140,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'elseif_expression':([242,286,],[284,310,]),'elseif_clause':([177,307,],[233,233,]),'arithmetic_multiplicative_operator':([10,110,230,],[54,195,195,]),'then_clause':([90,277,],[177,307,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','lyaParser.py',64),
  ('program -> empty','program',1,'p_program','lyaParser.py',65),
  ('statement_list -> statement','statement_list',1,'p_statement_list1','lyaParser.py',72),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list1','lyaParser.py',73),
  ('statement -> declaration_statement','statement',1,'p_statement','lyaParser.py',80),
  ('statement -> newmode_statement','statement',1,'p_statement','lyaParser.py',81),
  ('statement -> synonym_statement','statement',1,'p_statement','lyaParser.py',82),
  ('statement -> action_statement','statement',1,'p_statement','lyaParser.py',83),
  ('statement -> procedure_statement','statement',1,'p_statement','lyaParser.py',84),
  ('declaration_statement -> DCL declaration_list SMC','declaration_statement',3,'p_declaration_statement','lyaParser.py',92),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','lyaParser.py',96),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','lyaParser.py',97),
  ('declaration -> id_list mode initialization','declaration',3,'p_declaration1','lyaParser.py',104),
  ('declaration -> id_list mode','declaration',2,'p_declaration2','lyaParser.py',108),
  ('id_list -> ID','id_list',1,'p_id_list','lyaParser.py',112),
  ('id_list -> id_list COMMA ID','id_list',3,'p_id_list','lyaParser.py',113),
  ('initialization -> EQUALS expression','initialization',2,'p_initialization','lyaParser.py',120),
  ('mode -> mode_name','mode',1,'p_mode','lyaParser.py',128),
  ('mode -> discrete_mode','mode',1,'p_mode','lyaParser.py',129),
  ('mode -> reference_mode','mode',1,'p_mode','lyaParser.py',130),
  ('mode -> composite_mode','mode',1,'p_mode','lyaParser.py',131),
  ('mode_name -> ID','mode_name',1,'p_mode_name','lyaParser.py',135),
  ('discrete_mode -> basic_mode','discrete_mode',1,'p_discrete_mode','lyaParser.py',139),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','lyaParser.py',140),
  ('basic_mode -> INT','basic_mode',1,'p_basic_mode','lyaParser.py',144),
  ('basic_mode -> BOOL','basic_mode',1,'p_basic_mode','lyaParser.py',145),
  ('basic_mode -> CHAR','basic_mode',1,'p_basic_mode','lyaParser.py',146),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaParser.py',150),
  ('discrete_range_mode -> basic_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaParser.py',151),
  ('discrete_mode_name -> ID','discrete_mode_name',1,'p_discrete_mode_name','lyaParser.py',155),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_litereal_range','lyaParser.py',159),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','lyaParser.py',163),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','lyaParser.py',167),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','lyaParser.py',171),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','lyaParser.py',175),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','lyaParser.py',176),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','lyaParser.py',180),
  ('string_length -> INTCONST','string_length',1,'p_string_length','lyaParser.py',184),
  ('array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_node','array_mode',5,'p_array_mode','lyaParser.py',188),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','lyaParser.py',193),
  ('index_mode_list -> index_mode_list COMMA index_mode','index_mode_list',3,'p_index_mode_list','lyaParser.py',194),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','lyaParser.py',201),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','lyaParser.py',202),
  ('element_node -> mode','element_node',1,'p_element_node','lyaParser.py',206),
  ('newmode_statement -> TYPE newmode_list SMC','newmode_statement',3,'p_newmode_statement','lyaParser.py',214),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','lyaParser.py',218),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','lyaParser.py',219),
  ('mode_definition -> id_list EQUALS mode','mode_definition',3,'p_mode_definition','lyaParser.py',226),
  ('synonym_statement -> SYN syn_list SMC','synonym_statement',3,'p_synonym_statement','lyaParser.py',230),
  ('syn_list -> syn_definition','syn_list',1,'p_syn_list','lyaParser.py',238),
  ('syn_list -> syn_list COMMA syn_definition','syn_list',3,'p_syn_list','lyaParser.py',239),
  ('syn_definition -> id_list EQUALS constant_expression','syn_definition',3,'p_syn_definition','lyaParser.py',246),
  ('syn_definition -> id_list mode EQUALS constant_expression','syn_definition',4,'p_syn_definition2','lyaParser.py',250),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','lyaParser.py',254),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','lyaParser.py',262),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','lyaParser.py',263),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','lyaParser.py',264),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','lyaParser.py',265),
  ('literal -> integer_literal','literal',1,'p_literal','lyaParser.py',269),
  ('literal -> boolean_literal','literal',1,'p_literal','lyaParser.py',270),
  ('literal -> char_literal','literal',1,'p_literal','lyaParser.py',271),
  ('literal -> empty_literal','literal',1,'p_literal','lyaParser.py',272),
  ('literal -> string_literal','literal',1,'p_literal','lyaParser.py',273),
  ('integer_literal -> INTCONST','integer_literal',1,'p_integer_literal','lyaParser.py',277),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','lyaParser.py',281),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','lyaParser.py',282),
  ('char_literal -> CHARCONST','char_literal',1,'p_char_literal','lyaParser.py',286),
  ('string_literal -> STRINGCONST','string_literal',1,'p_string_literal','lyaParser.py',290),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','lyaParser.py',294),
  ('value_array_element -> array_primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','lyaParser.py',298),
  ('value_array_slice -> array_primitive_value LBRACKET literal_range RBRACKET','value_array_slice',4,'p_value_array_slice','lyaParser.py',302),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','lyaParser.py',306),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','lyaParser.py',310),
  ('action_statement -> action SMC','action_statement',2,'p_action_statement','lyaParser.py',318),
  ('action_statement -> label COLON action SMC','action_statement',4,'p_action_statement','lyaParser.py',319),
  ('label -> ID','label',1,'p_label','lyaParser.py',326),
  ('action -> assignment_action','action',1,'p_action','lyaParser.py',330),
  ('action -> bracketed_action','action',1,'p_action','lyaParser.py',331),
  ('action -> call_action','action',1,'p_action','lyaParser.py',332),
  ('action -> exit_action','action',1,'p_action','lyaParser.py',333),
  ('action -> return_action','action',1,'p_action','lyaParser.py',334),
  ('action -> result_action','action',1,'p_action','lyaParser.py',335),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','lyaParser.py',343),
  ('assigning_operator -> EQUALS','assigning_operator',1,'p_assigning_operator','lyaParser.py',347),
  ('assigning_operator -> closed_dyadic_operator EQUALS','assigning_operator',2,'p_assigning_operator','lyaParser.py',348),
  ('closed_dyadic_operator -> arithmetic_additive_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','lyaParser.py',355),
  ('closed_dyadic_operator -> arithmetic_multiplicative_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','lyaParser.py',356),
  ('closed_dyadic_operator -> string_concatenation_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','lyaParser.py',357),
  ('expression_list -> expression','expression_list',1,'p_expression_list','lyaParser.py',361),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','lyaParser.py',362),
  ('expression -> operand0','expression',1,'p_expression','lyaParser.py',369),
  ('expression -> conditional_expression','expression',1,'p_expression','lyaParser.py',370),
  ('operand0 -> operand1','operand0',1,'p_operand0','lyaParser.py',374),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','lyaParser.py',375),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','lyaParser.py',382),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','lyaParser.py',383),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','lyaParser.py',387),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','lyaParser.py',391),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','lyaParser.py',392),
  ('relational_operator -> ISEQUAL','relational_operator',1,'p_relational_operator','lyaParser.py',393),
  ('relational_operator -> NOTEQUAL','relational_operator',1,'p_relational_operator','lyaParser.py',394),
  ('relational_operator -> GT','relational_operator',1,'p_relational_operator','lyaParser.py',395),
  ('relational_operator -> GE','relational_operator',1,'p_relational_operator','lyaParser.py',396),
  ('relational_operator -> LT','relational_operator',1,'p_relational_operator','lyaParser.py',397),
  ('relational_operator -> LE','relational_operator',1,'p_relational_operator','lyaParser.py',398),
  ('operand1 -> operand2','operand1',1,'p_operand1','lyaParser.py',402),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1','lyaParser.py',403),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','lyaParser.py',410),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','lyaParser.py',411),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','lyaParser.py',415),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','lyaParser.py',416),
  ('string_concatenation_operator -> STRCONC','string_concatenation_operator',1,'p_string_concatenation_operator','lyaParser.py',420),
  ('operand2 -> operand3','operand2',1,'p_operand2','lyaParser.py',424),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','lyaParser.py',425),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaParser.py',432),
  ('arithmetic_multiplicative_operator -> DIV','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaParser.py',433),
  ('arithmetic_multiplicative_operator -> MOD','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaParser.py',434),
  ('operand3 -> operand4','operand3',1,'p_operand3','lyaParser.py',438),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','lyaParser.py',439),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','lyaParser.py',446),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','lyaParser.py',447),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','lyaParser.py',451),
  ('operand4 -> location','operand4',1,'p_operand4','lyaParser.py',452),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','lyaParser.py',453),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','lyaParser.py',459),
  ('conditional_expression -> IF boolean_expression then_expression elseif_expression_list else_expression FI','conditional_expression',6,'p_conditional_expression2','lyaParser.py',463),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','lyaParser.py',467),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','lyaParser.py',471),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','lyaParser.py',475),
  ('elseif_expression_list -> elseif_expression','elseif_expression_list',1,'p_elseif_expression_list','lyaParser.py',479),
  ('elseif_expression_list -> elseif_expression_list elseif_expression','elseif_expression_list',2,'p_elseif_expression_list','lyaParser.py',480),
  ('elseif_expression -> ELSIF boolean_expression then_expression','elseif_expression',3,'p_elseif_expression','lyaParser.py',487),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','lyaParser.py',495),
  ('location -> location_name','location',1,'p_location','lyaParser.py',499),
  ('location -> string_reference','location',1,'p_location','lyaParser.py',500),
  ('location -> dereferenced_reference','location',1,'p_location','lyaParser.py',501),
  ('location -> array_element','location',1,'p_location','lyaParser.py',502),
  ('location -> array_slice','location',1,'p_location','lyaParser.py',503),
  ('location -> call_action','location',1,'p_location','lyaParser.py',504),
  ('location_name -> ID','location_name',1,'p_location_name','lyaParser.py',508),
  ('string_reference -> location_name LBRACKET integer_expression RBRACKET','string_reference',4,'p_string_reference','lyaParser.py',512),
  ('string_reference -> location_name LBRACKET literal_range RBRACKET','string_reference',4,'p_string_reference2','lyaParser.py',516),
  ('dereferenced_reference -> location ARROW','dereferenced_reference',2,'p_dereferenced_reference','lyaParser.py',520),
  ('array_element -> location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','lyaParser.py',524),
  ('array_slice -> location LBRACKET literal_range RBRACKET','array_slice',4,'p_array_slice','lyaParser.py',528),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','lyaParser.py',536),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','lyaParser.py',537),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','lyaParser.py',545),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action2','lyaParser.py',549),
  ('then_clause -> THEN','then_clause',1,'p_then_clause','lyaParser.py',553),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','lyaParser.py',554),
  ('else_clause -> ELSE','else_clause',1,'p_else_clause','lyaParser.py',561),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','lyaParser.py',562),
  ('else_clause -> elseif_clause','else_clause',1,'p_else_clause2','lyaParser.py',569),
  ('elseif_clause -> ELSIF boolean_expression then_clause','elseif_clause',3,'p_elseif_clause','lyaParser.py',573),
  ('elseif_clause -> ELSIF boolean_expression then_clause else_clause','elseif_clause',4,'p_elseif_clause2','lyaParser.py',577),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','lyaParser.py',582),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','lyaParser.py',583),
  ('do_action -> DO OD','do_action',2,'p_do_action','lyaParser.py',594),
  ('do_action -> DO control_part SMC OD','do_action',4,'p_do_action2','lyaParser.py',598),
  ('do_action -> DO control_part SMC action_statement_list OD','do_action',5,'p_do_action3','lyaParser.py',602),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action4','lyaParser.py',606),
  ('control_part -> for_control','control_part',1,'p_control_part','lyaParser.py',610),
  ('control_part -> while_control','control_part',1,'p_control_part','lyaParser.py',611),
  ('control_part -> for_control while_control','control_part',2,'p_control_part2','lyaParser.py',615),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','lyaParser.py',619),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','lyaParser.py',623),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','lyaParser.py',624),
  ('step_enumeration -> loop_counter EQUALS start_value end_value','step_enumeration',4,'p_step_enumeration','lyaParser.py',628),
  ('step_enumeration -> loop_counter EQUALS start_value step_value end_value','step_enumeration',5,'p_step_enumeration2','lyaParser.py',632),
  ('step_enumeration -> loop_counter EQUALS start_value DOWN end_value','step_enumeration',5,'p_step_enumeration3','lyaParser.py',636),
  ('step_enumeration -> loop_counter EQUALS start_value step_value DOWN end_value','step_enumeration',6,'p_step_enumeration4','lyaParser.py',640),
  ('loop_counter -> ID','loop_counter',1,'p_loop_counter','lyaParser.py',644),
  ('start_value -> discrete_expression','start_value',1,'p_start_value','lyaParser.py',648),
  ('step_value -> BY integer_expression','step_value',2,'p_step_value','lyaParser.py',652),
  ('end_value -> TO discrete_expression','end_value',2,'p_end_value','lyaParser.py',656),
  ('discrete_expression -> expression','discrete_expression',1,'p_discrete_expression','lyaParser.py',660),
  ('range_enumeration -> loop_counter IN discrete_mode','range_enumeration',3,'p_range_enumeration','lyaParser.py',664),
  ('range_enumeration -> loop_counter DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration2','lyaParser.py',668),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','lyaParser.py',672),
  ('procedure_statement -> label COLON procedure_definition SMC','procedure_statement',4,'p_procedure_statement','lyaParser.py',680),
  ('procedure_definition -> PROC LPAREN RPAREN SMC END','procedure_definition',5,'p_procedure_definition1','lyaParser.py',684),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SMC statement_list END','procedure_definition',7,'p_procedure_definition1','lyaParser.py',685),
  ('procedure_definition -> PROC LPAREN RPAREN SMC statement_list END','procedure_definition',6,'p_procedure_definition1','lyaParser.py',686),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SMC END','procedure_definition',6,'p_procedure_definition2','lyaParser.py',695),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SMC END','procedure_definition',7,'p_procedure_definition2','lyaParser.py',696),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SMC statement_list END','procedure_definition',8,'p_procedure_definition2','lyaParser.py',697),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SMC statement_list END','procedure_definition',7,'p_procedure_definition3','lyaParser.py',706),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SMC END','procedure_definition',6,'p_procedure_definition3','lyaParser.py',707),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','lyaParser.py',714),
  ('formal_parameter_list -> formal_parameter COMMA formal_parameter_list','formal_parameter_list',3,'p_formal_parameter_list','lyaParser.py',715),
  ('formal_parameter -> id_list parameter_spec','formal_parameter',2,'p_formal_parameter','lyaParser.py',722),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','lyaParser.py',726),
  ('parameter_spec -> mode parameter_attribute','parameter_spec',2,'p_parameter_spec','lyaParser.py',727),
  ('parameter_attribute -> LOC','parameter_attribute',1,'p_parameter_attribute','lyaParser.py',734),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','lyaParser.py',738),
  ('result_spec -> RETURNS LPAREN mode result_attribute RPAREN','result_spec',5,'p_result_spec','lyaParser.py',739),
  ('result_attribute -> LOC','result_attribute',1,'p_result_attribute','lyaParser.py',746),
  ('call_action -> procedure_call','call_action',1,'p_call_action','lyaParser.py',754),
  ('call_action -> builtin_call','call_action',1,'p_call_action','lyaParser.py',755),
  ('procedure_call -> ID LPAREN RPAREN','procedure_call',3,'p_procedure_call','lyaParser.py',759),
  ('procedure_call -> ID LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','lyaParser.py',760),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','lyaParser.py',767),
  ('parameter_list -> parameter COMMA parameter_list','parameter_list',3,'p_parameter_list','lyaParser.py',768),
  ('parameter -> expression','parameter',1,'p_parameter','lyaParser.py',775),
  ('exit_action -> EXIT label','exit_action',2,'p_exit_action','lyaParser.py',783),
  ('return_action -> RETURN','return_action',1,'p_return_action','lyaParser.py',787),
  ('return_action -> RETURN result','return_action',2,'p_return_action','lyaParser.py',788),
  ('result_action -> RESULT result','result_action',2,'p_result_action','lyaParser.py',795),
  ('result -> expression','result',1,'p_result','lyaParser.py',799),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','lyaParser.py',803),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','lyaParser.py',804),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','lyaParser.py',811),
  ('builtin_name -> PRED','builtin_name',1,'p_builtin_name','lyaParser.py',812),
  ('builtin_name -> SUCC','builtin_name',1,'p_builtin_name','lyaParser.py',813),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','lyaParser.py',814),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','lyaParser.py',815),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','lyaParser.py',816),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','lyaParser.py',817),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','lyaParser.py',818),
  ('integer_expression -> expression','integer_expression',1,'p_integer_expression','lyaParser.py',827),
  ('empty -> <empty>','empty',0,'p_empty','lyaParser.py',834),
]
