
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '46A5EEF061EF2A7511D66CE2ECB9275F'
    
_lr_action_items = {'NUM':([0,3,8,16,20,26,29,35,36,37,43,44,48,51,56,61,75,77,81,82,83,86,87,88,89,90,92,93,94,101,102,103,106,107,109,110,126,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,157,159,172,174,176,183,199,203,205,211,214,216,220,221,222,224,229,234,237,240,242,244,245,249,252,254,260,298,305,307,308,316,321,323,335,336,340,344,],[1,1,-9,-8,1,-5,1,1,-7,1,-3,-6,1,1,1,-121,1,-120,1,-74,-117,-84,1,-112,-111,-116,1,-115,-110,1,1,1,-4,1,1,-157,1,1,1,1,-108,-109,-105,-98,-99,-95,-96,-103,-100,1,-101,-104,-102,-97,-85,-45,1,-158,1,-49,1,-10,1,1,1,1,-181,-75,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'CHAR':([99,121,124,160,189,228,238,240,263,271,308,309,322,],[-15,184,184,184,184,-16,184,184,184,184,184,184,184,]),'ARRAY':([99,121,124,160,189,228,263,309,322,],[-15,185,185,185,185,-16,185,185,185,]),'PLUS':([5,10,13,14,17,19,22,27,39,42,46,47,49,50,52,53,54,55,57,58,59,62,63,64,66,68,69,70,71,72,74,76,79,80,95,127,147,151,164,167,207,208,217,218,223,225,230,231,232,233,257,258,278,],[-138,94,-140,-200,-136,-134,-199,-139,-137,-135,-56,-61,-106,-118,-69,-59,-65,-123,-60,-140,-113,-68,-62,-57,-67,-124,94,-64,-63,-139,-58,-66,-55,-122,-143,-133,-119,-140,-201,-211,-114,-73,-107,94,-144,-145,-202,-212,-142,-141,-70,-71,-140,]),'OR':([5,14,17,19,22,39,42,46,47,49,50,52,53,54,55,57,58,59,62,63,64,66,68,69,70,71,72,73,74,76,79,80,95,127,147,164,167,207,208,217,218,223,225,230,231,232,233,257,258,278,],[-138,-200,-136,-134,-199,-137,-135,-56,-61,-106,-118,-69,-59,-65,-123,-60,-140,-113,-68,-62,-57,-67,-124,-93,-64,-63,-139,137,-58,-66,-55,-122,-143,-133,-119,-201,-211,-114,-73,-107,-94,-144,-145,-202,-212,-142,-141,-70,-71,-140,]),'PROC':([81,],[148,]),'TIMES':([5,10,13,14,17,19,22,27,39,42,46,47,49,50,52,53,54,55,57,58,59,62,63,64,66,68,70,71,72,74,76,79,80,95,127,147,151,164,167,207,208,217,223,225,230,231,232,233,257,258,278,],[-138,93,-140,-200,-136,-134,-199,-139,-137,-135,-56,-61,93,-118,-69,-59,-65,-123,-60,-140,-113,-68,-62,-57,-67,-124,-64,-63,-139,-58,-66,-55,-122,-143,-133,-119,-140,-201,-211,-114,-73,93,-144,-145,-202,-212,-142,-141,-70,-71,-140,]),'REF':([99,121,124,160,189,228,263,309,322,],[-15,189,189,189,189,-16,189,189,189,]),'FALSE':([3,20,37,48,56,61,75,77,83,86,87,88,89,90,92,93,94,101,102,103,107,126,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,157,199,205,211,222,224,229,237,240,242,244,245,249,252,254,305,307,308,],[54,54,54,54,54,-121,54,-120,-117,-84,54,-112,-111,-116,54,-115,-110,54,54,54,54,54,54,54,-108,-109,-105,-98,-99,-95,-96,-103,-100,54,-101,-104,-102,-97,-85,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'INTCONST':([3,20,37,48,56,61,75,77,83,86,87,88,89,90,92,93,94,101,102,103,107,126,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,157,199,205,211,222,224,229,237,240,241,242,244,245,249,252,254,305,307,308,],[70,70,70,70,70,-121,70,-120,-117,-84,70,-112,-111,-116,70,-115,-110,70,70,70,70,70,70,70,-108,-109,-105,-98,-99,-95,-96,-103,-100,70,-101,-104,-102,-97,-85,70,70,70,70,70,70,70,70,284,70,70,70,70,70,70,70,70,70,]),'COLON':([5,7,13,14,17,19,22,39,42,46,47,49,50,52,53,54,55,57,58,59,60,62,63,64,66,68,69,70,71,72,73,74,76,79,80,95,108,127,147,154,156,164,167,170,207,208,217,218,223,225,230,231,232,233,257,258,278,279,293,314,],[-138,81,-76,-200,-136,-134,-199,-137,-135,-56,-61,-106,-118,-69,-59,-65,-123,-60,-140,-113,-92,-68,-62,-57,-67,-124,-93,-64,-63,-139,-91,-58,-66,-55,-122,-143,172,-133,-119,224,-32,-201,-211,-32,-114,-73,-107,-94,-144,-145,-202,-212,-142,-141,-70,-71,-140,-32,-125,-126,]),'DIV':([5,10,13,14,17,19,22,27,39,42,46,47,49,50,52,53,54,55,57,58,59,62,63,64,66,68,70,71,72,74,76,79,80,95,127,147,151,164,167,207,208,217,223,225,230,231,232,233,257,258,278,],[-138,90,-140,-200,-136,-134,-199,-139,-137,-135,-56,-61,90,-118,-69,-59,-65,-123,-60,-140,-113,-68,-62,-57,-67,-124,-64,-63,-139,-58,-66,-55,-122,-143,-133,-119,-140,-201,-211,-114,-73,90,-144,-145,-202,-212,-142,-141,-70,-71,-140,]),'IF':([0,3,8,16,20,26,29,35,36,37,43,44,48,56,81,82,86,87,92,101,102,103,106,107,109,110,129,131,157,159,172,174,176,183,199,203,205,211,214,216,220,221,222,224,229,234,237,240,242,244,245,249,252,254,260,298,305,307,308,316,321,323,335,336,340,344,],[3,48,-9,-8,48,-5,3,3,-7,48,-3,-6,48,48,3,-74,-84,48,48,48,48,48,-4,48,3,-157,48,3,-85,-45,3,-158,3,-49,48,-10,48,48,3,3,-181,-75,48,48,48,3,48,48,48,48,48,48,48,48,3,3,48,48,48,3,3,3,3,3,3,3,]),'MOD':([5,10,13,14,17,19,22,27,39,42,46,47,49,50,52,53,54,55,57,58,59,62,63,64,66,68,70,71,72,74,76,79,80,95,127,147,151,164,167,207,208,217,223,225,230,231,232,233,257,258,278,],[-138,83,-140,-200,-136,-134,-199,-139,-137,-135,-56,-61,83,-118,-69,-59,-65,-123,-60,-140,-113,-68,-62,-57,-67,-124,-64,-63,-139,-58,-66,-55,-122,-143,-133,-119,-140,-201,-211,-114,-73,83,-144,-145,-202,-212,-142,-141,-70,-71,-140,]),'PRINT':([0,3,8,16,20,26,29,35,36,37,43,44,48,51,56,61,75,77,81,82,83,86,87,88,89,90,92,93,94,101,102,103,106,107,109,110,126,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,157,159,172,174,176,183,199,203,205,211,214,216,220,221,222,224,229,234,237,240,242,244,245,249,252,254,260,298,305,307,308,316,321,323,335,336,340,344,],[6,6,-9,-8,6,-5,6,6,-7,6,-3,-6,6,6,6,-121,6,-120,6,-74,-117,-84,6,-112,-111,-116,6,-115,-110,6,6,6,-4,6,6,-157,6,6,6,6,-108,-109,-105,-98,-99,-95,-96,-103,-100,6,-101,-104,-102,-97,-85,-45,6,-158,6,-49,6,-10,6,6,6,6,-181,-75,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'LT':([5,14,17,19,22,39,42,46,47,49,50,52,53,54,55,57,58,59,62,63,64,66,68,69,70,71,72,73,74,76,79,80,95,127,147,164,167,207,208,217,218,223,225,230,231,232,233,257,258,278,],[-138,-200,-136,-134,-199,-137,-135,-56,-61,-106,-118,-69,-59,-65,-123,-60,-140,-113,-68,-62,-57,-67,-124,-93,-64,-63,-139,144,-58,-66,-55,-122,-143,-133,-119,-201,-211,-114,-73,-107,-94,-144,-145,-202,-212,-142,-141,-70,-71,-140,]),'NULL':([3,20,37,48,56,61,75,77,83,86,87,88,89,90,92,93,94,101,102,103,107,126,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,157,199,205,211,222,224,229,237,240,242,244,245,249,252,254,305,307,308,],[52,52,52,52,52,-121,52,-120,-117,-84,52,-112,-111,-116,52,-115,-110,52,52,52,52,52,52,52,-108,-109,-105,-98,-99,-95,-96,-103,-100,52,-101,-104,-102,-97,-85,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'BY':([5,14,17,19,22,39,42,46,47,49,50,52,53,54,55,57,58,59,60,62,63,64,66,68,69,70,71,72,73,74,76,79,80,95,127,147,164,167,207,208,217,218,223,225,230,231,232,233,257,258,272,273,274,293,314,],[-138,-200,-136,-134,-199,-137,-135,-56,-61,-106,-118,-69,-59,-65,-123,-60,-140,-113,-92,-68,-62,-57,-67,-124,-93,-64,-63,-139,-91,-58,-66,-55,-122,-143,-133,-119,-201,-211,-114,-73,-107,-94,-144,-145,-202,-212,-142,-141,-70,-71,-174,307,-177,-125,-126,]),'END':([8,16,26,36,43,44,82,106,159,183,203,220,221,298,316,321,323,335,336,340,344,],[-9,-8,-5,-7,-3,-6,-74,-4,-45,-49,-10,-181,-75,320,334,337,339,342,343,348,349,]),'WHILE':([5,14,17,19,22,35,39,42,46,47,49,50,52,53,54,55,57,58,59,60,62,63,64,66,68,69,70,71,72,73,74,76,79,80,95,112,127,147,164,167,177,180,181,184,190,191,196,197,207,208,217,218,223,225,230,231,232,233,257,258,274,276,293,302,306,311,312,314,325,327,328,341,],[-138,-200,-136,-134,-199,107,-137,-135,-56,-61,-106,-118,-69,-59,-65,-123,-60,-140,-113,-92,-68,-62,-57,-67,-124,-93,-64,-63,-139,-91,-58,-66,-55,-122,-143,107,-133,-119,-201,-211,-168,-167,-166,-27,-23,-24,-26,-25,-114,-73,-107,-94,-144,-145,-202,-212,-142,-141,-70,-71,-177,-178,-125,-179,-169,-29,-28,-126,-171,-170,-176,-172,]),'LPAREN':([1,3,6,11,13,18,20,21,32,33,34,37,40,48,56,58,61,75,77,83,86,87,88,89,90,92,93,94,101,102,103,107,126,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,148,151,157,184,190,193,195,196,197,199,205,211,222,224,229,237,240,242,244,245,249,252,254,275,278,299,305,307,308,],[-213,56,-220,-219,101,102,56,-217,-215,-218,-216,56,-214,56,56,101,-121,56,-120,-117,-84,56,-112,-111,-116,56,-115,-110,56,56,56,56,56,56,56,-108,-109,-105,-98,-99,-95,-96,-103,-100,56,-101,-104,-102,-97,219,101,-85,-27,244,245,-30,-26,-25,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-30,101,322,56,56,56,]),'READ':([0,3,8,16,20,26,29,35,36,37,43,44,48,51,56,61,75,77,81,82,83,86,87,88,89,90,92,93,94,101,102,103,106,107,109,110,126,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,157,159,172,174,176,183,199,203,205,211,214,216,220,221,222,224,229,234,237,240,242,244,245,249,252,254,260,298,305,307,308,316,321,323,335,336,340,344,],[11,11,-9,-8,11,-5,11,11,-7,11,-3,-6,11,11,11,-121,11,-120,11,-74,-117,-84,11,-112,-111,-116,11,-115,-110,11,11,11,-4,11,11,-157,11,11,11,11,-108,-109,-105,-98,-99,-95,-96,-103,-100,11,-101,-104,-102,-97,-85,-45,11,-158,11,-49,11,-10,11,11,11,11,-181,-75,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'TYPE':([0,8,16,26,29,36,43,44,82,106,159,183,203,220,221,298,316,321,323,335,336,340,344,],[12,-9,-8,-5,12,-7,-3,-6,-74,-4,-45,-49,-10,-181,-75,12,12,12,12,12,12,12,12,]),'SMC':([2,4,5,9,14,15,17,19,20,22,23,24,25,27,31,39,42,46,47,49,50,52,53,54,55,57,58,59,60,62,63,64,66,68,69,70,71,72,73,74,76,78,79,80,95,97,100,104,105,111,112,113,114,116,117,118,119,120,122,123,127,147,149,150,152,164,167,171,173,175,177,180,181,184,188,190,191,192,194,195,196,197,198,200,201,204,207,208,213,217,218,223,225,226,227,230,231,232,233,235,239,243,246,247,248,250,257,258,261,264,270,274,276,285,288,293,295,300,302,306,310,311,312,314,317,320,325,327,328,332,333,334,337,339,341,342,343,345,348,349,350,],[-146,-77,-138,82,-200,-81,-136,-134,-207,-199,-82,-80,-78,-79,-147,-137,-135,-56,-61,-106,-118,-69,-59,-65,-123,-60,-140,-113,-92,-68,-62,-57,-67,-124,-93,-64,-63,-139,-91,-58,-66,-127,-55,-122,-143,159,-46,-208,-210,-159,-163,176,-164,-209,-206,-76,183,-50,203,-11,-133,-119,220,221,-83,-201,-211,-180,-162,-165,-168,-167,-166,-27,-20,-23,-24,-21,-36,-22,-26,-25,-19,-35,-18,-14,-114,-73,-148,-107,-94,-144,-145,-47,-48,-202,-212,-142,-141,-160,-51,-34,-52,-54,-12,-13,-70,-71,-149,298,-161,-177,-178,-53,-17,-125,316,323,-179,-169,-37,-29,-28,-126,336,-182,-171,-170,-176,-44,-39,-185,-184,-189,-172,-183,-186,-196,-188,-187,-197,]),'ID':([0,3,8,12,16,20,26,29,35,36,37,38,41,43,44,45,48,51,56,61,75,77,81,82,83,86,87,88,89,90,92,93,94,99,101,102,103,106,107,109,110,115,121,124,126,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,157,158,159,160,161,172,174,176,182,183,189,199,202,203,205,211,214,216,219,220,221,222,224,228,229,234,237,238,240,242,244,245,249,252,254,260,263,271,298,301,305,307,308,309,316,321,322,323,335,336,340,344,],[13,58,-9,99,-8,58,-5,13,13,-7,58,118,99,-3,-6,99,58,58,58,-121,58,-120,151,-74,-117,-84,58,-112,-111,-116,58,-115,-110,-15,58,58,58,-4,58,13,-157,178,195,195,58,58,13,58,-108,-109,-105,-98,-99,-95,-96,-103,-100,58,-101,-104,-102,-97,-85,99,-45,195,228,151,-158,13,99,-49,195,58,99,-10,58,58,13,13,99,-181,-75,58,58,-16,58,13,58,275,278,58,58,58,58,58,58,13,195,275,13,99,58,58,278,195,13,13,195,13,13,13,13,13,]),'SYN':([0,8,16,26,29,36,43,44,82,106,159,183,203,220,221,298,316,321,323,335,336,340,344,],[41,-9,-8,-5,41,-7,-3,-6,-74,-4,-45,-49,-10,-181,-75,41,41,41,41,41,41,41,41,]),'ELSIF':([5,14,17,19,22,39,42,46,47,49,50,52,53,54,55,57,58,59,60,62,63,64,66,68,69,70,71,72,73,74,76,79,80,82,95,110,127,130,131,147,164,167,174,206,207,208,216,217,218,221,223,225,230,231,232,233,251,253,255,257,258,291,293,294,313,314,],[-138,-200,-136,-134,-199,-137,-135,-56,-61,-106,-118,-69,-59,-65,-123,-60,-140,-113,-92,-68,-62,-57,-67,-124,-93,-64,-63,-139,-91,-58,-66,-55,-122,-74,-143,-157,-133,211,-150,-119,-201,-211,-158,252,-114,-73,-151,-107,-94,-75,-144,-145,-202,-212,-142,-141,-128,-130,252,-70,-71,-131,-125,211,-132,-126,]),'NOT':([3,20,37,48,56,83,86,87,88,89,90,92,93,94,101,102,103,107,126,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,157,199,205,211,222,224,229,237,240,242,244,245,249,252,254,305,307,308,],[61,61,61,61,61,-117,-84,61,-112,-111,-116,61,-115,-110,61,61,61,61,61,61,61,-108,-109,-105,-98,-99,-95,-96,-103,-100,61,-101,-104,-102,-97,-85,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'ISEQUAL':([5,14,17,19,22,39,42,46,47,49,50,52,53,54,55,57,58,59,62,63,64,66,68,69,70,71,72,73,74,76,79,80,95,127,147,164,167,207,208,217,218,223,225,230,231,232,233,257,258,278,],[-138,-200,-136,-134,-199,-137,-135,-56,-61,-106,-118,-69,-59,-65,-123,-60,-140,-113,-68,-62,-57,-67,-124,-93,-64,-63,-139,141,-58,-66,-55,-122,-143,-133,-119,-201,-211,-114,-73,-107,-94,-144,-145,-202,-212,-142,-141,-70,-71,-140,]),'STRINGCONST':([3,20,37,48,56,61,75,77,83,86,87,88,89,90,92,93,94,101,102,103,107,126,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,157,199,205,211,222,224,229,237,240,242,244,245,249,252,254,305,307,308,],[62,62,62,62,62,-121,62,-120,-117,-84,62,-112,-111,-116,62,-115,-110,62,62,62,62,62,62,62,-108,-109,-105,-98,-99,-95,-96,-103,-100,62,-101,-104,-102,-97,-85,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'PRED':([0,3,8,16,20,26,29,35,36,37,43,44,48,51,56,61,75,77,81,82,83,86,87,88,89,90,92,93,94,101,102,103,106,107,109,110,126,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,157,159,172,174,176,183,199,203,205,211,214,216,220,221,222,224,229,234,237,240,242,244,245,249,252,254,260,298,305,307,308,316,321,323,335,336,340,344,],[40,40,-9,-8,40,-5,40,40,-7,40,-3,-6,40,40,40,-121,40,-120,40,-74,-117,-84,40,-112,-111,-116,40,-115,-110,40,40,40,-4,40,40,-157,40,40,40,40,-108,-109,-105,-98,-99,-95,-96,-103,-100,40,-101,-104,-102,-97,-85,-45,40,-158,40,-49,40,-10,40,40,40,40,-181,-75,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'INT':([99,121,124,160,189,228,238,240,263,271,308,309,322,],[-15,197,197,197,197,-16,197,197,197,197,197,197,197,]),'UPPER':([0,3,8,16,20,26,29,35,36,37,43,44,48,51,56,61,75,77,81,82,83,86,87,88,89,90,92,93,94,101,102,103,106,107,109,110,126,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,157,159,172,174,176,183,199,203,205,211,214,216,220,221,222,224,229,234,237,240,242,244,245,249,252,254,260,298,305,307,308,316,321,323,335,336,340,344,],[34,34,-9,-8,34,-5,34,34,-7,34,-3,-6,34,34,34,-121,34,-120,34,-74,-117,-84,34,-112,-111,-116,34,-115,-110,34,34,34,-4,34,34,-157,34,34,34,34,-108,-109,-105,-98,-99,-95,-96,-103,-100,34,-101,-104,-102,-97,-85,-45,34,-158,34,-49,34,-10,34,34,34,34,-181,-75,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'LBRACKET':([5,10,13,14,17,19,22,27,39,42,46,47,52,53,54,55,57,58,62,63,64,65,66,70,71,72,74,76,79,80,95,127,151,164,167,185,186,208,223,225,230,231,232,233,257,258,278,],[-138,92,-140,-200,-136,103,-199,-139,-137,-135,-56,-61,-69,-59,-65,92,-60,-140,-68,-62,-57,129,-67,-64,-63,-139,-58,-66,-55,-72,-143,92,-140,-201,-211,240,241,-73,-144,-145,-202,-212,-142,-141,-70,-71,-140,]),'OD':([35,82,109,110,174,176,221,234,],[111,-74,173,-157,-158,235,-75,270,]),'GT':([5,14,17,19,22,39,42,46,47,49,50,52,53,54,55,57,58,59,62,63,64,66,68,69,70,71,72,73,74,76,79,80,95,127,147,164,167,207,208,217,218,223,225,230,231,232,233,257,258,278,],[-138,-200,-136,-134,-199,-137,-135,-56,-61,-106,-118,-69,-59,-65,-123,-60,-140,-113,-68,-62,-57,-67,-124,-93,-64,-63,-139,145,-58,-66,-55,-122,-143,-133,-119,-201,-211,-114,-73,-107,-94,-144,-145,-202,-212,-142,-141,-70,-71,-140,]),'CHARCONST':([3,20,37,48,56,61,75,77,83,86,87,88,89,90,92,93,94,101,102,103,107,126,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,157,199,205,211,222,224,229,237,240,242,244,245,249,252,254,305,307,308,],[66,66,66,66,66,-121,66,-120,-117,-84,66,-112,-111,-116,66,-115,-110,66,66,66,66,66,66,66,-108,-109,-105,-98,-99,-95,-96,-103,-100,66,-101,-104,-102,-97,-85,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'RBRACKET':([5,14,17,19,22,39,42,46,47,49,50,52,53,54,55,57,58,59,60,62,63,64,66,68,69,70,71,72,73,74,76,79,80,95,127,147,153,155,156,164,167,168,169,170,184,190,191,196,197,207,208,209,210,217,218,223,225,230,231,232,233,257,258,266,267,268,277,280,281,282,283,284,293,311,312,314,331,],[-138,-200,-136,-134,-199,-137,-135,-56,-61,-106,-118,-69,-59,-65,-123,-60,-140,-113,-92,-68,-62,-57,-67,-124,-93,-64,-63,-139,-91,-58,-66,-55,-122,-143,-133,-119,223,225,-89,-201,-211,232,233,-221,-27,-23,-24,-26,-25,-114,-73,257,258,-107,-94,-144,-145,-202,-212,-142,-141,-70,-71,-90,-31,-33,-43,-42,-40,309,310,-38,-125,-29,-28,-126,-41,]),'RETURN':([0,8,16,26,29,35,36,43,44,81,82,106,109,110,131,159,172,174,176,183,203,214,216,220,221,234,260,298,316,321,323,335,336,340,344,],[20,-9,-8,-5,20,20,-7,-3,-6,20,-74,-4,20,-157,20,-45,20,-158,20,-49,-10,20,20,-181,-75,20,20,20,20,20,20,20,20,20,20,]),'LOWER':([0,3,8,16,20,26,29,35,36,37,43,44,48,51,56,61,75,77,81,82,83,86,87,88,89,90,92,93,94,101,102,103,106,107,109,110,126,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,157,159,172,174,176,183,199,203,205,211,214,216,220,221,222,224,229,234,237,240,242,244,245,249,252,254,260,298,305,307,308,316,321,323,335,336,340,344,],[21,21,-9,-8,21,-5,21,21,-7,21,-3,-6,21,21,21,-121,21,-120,21,-74,-117,-84,21,-112,-111,-116,21,-115,-110,21,21,21,-4,21,21,-157,21,21,21,21,-108,-109,-105,-98,-99,-95,-96,-103,-100,21,-101,-104,-102,-97,-85,-45,21,-158,21,-49,21,-10,21,21,21,21,-181,-75,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'LE':([5,14,17,19,22,39,42,46,47,49,50,52,53,54,55,57,58,59,62,63,64,66,68,69,70,71,72,73,74,76,79,80,95,127,147,164,167,207,208,217,218,223,225,230,231,232,233,257,258,278,],[-138,-200,-136,-134,-199,-137,-135,-56,-61,-106,-118,-69,-59,-65,-123,-60,-140,-113,-68,-62,-57,-67,-124,-93,-64,-63,-139,135,-58,-66,-55,-122,-143,-133,-119,-201,-211,-114,-73,-107,-94,-144,-145,-202,-212,-142,-141,-70,-71,-140,]),'CHARS':([99,121,124,160,189,228,263,309,322,],[-15,186,186,186,186,-16,186,186,186,]),'GE':([5,14,17,19,22,39,42,46,47,49,50,52,53,54,55,57,58,59,62,63,64,66,68,69,70,71,72,73,74,76,79,80,95,127,147,164,167,207,208,217,218,223,225,230,231,232,233,257,258,278,],[-138,-200,-136,-134,-199,-137,-135,-56,-61,-106,-118,-69,-59,-65,-123,-60,-140,-113,-68,-62,-57,-67,-124,-93,-64,-63,-139,140,-58,-66,-55,-122,-143,-133,-119,-201,-211,-114,-73,-107,-94,-144,-145,-202,-212,-142,-141,-70,-71,-140,]),'DOWN':([5,14,17,19,22,39,42,46,47,49,50,52,53,54,55,57,58,59,60,62,63,64,66,68,69,70,71,72,73,74,76,79,80,95,127,147,164,167,178,179,207,208,217,218,223,225,230,231,232,233,257,258,272,273,274,293,304,314,329,330,],[-138,-200,-136,-134,-199,-137,-135,-56,-61,-106,-118,-69,-59,-65,-123,-60,-140,-113,-92,-68,-62,-57,-67,-124,-93,-64,-63,-139,-91,-58,-66,-55,-122,-143,-133,-119,-201,-211,-173,236,-114,-73,-107,-94,-144,-145,-202,-212,-142,-141,-70,-71,-174,303,-177,-125,326,-126,-175,-221,]),'COMMA':([5,14,17,19,22,39,42,46,47,49,50,52,53,54,55,57,58,59,60,62,63,64,66,68,69,70,71,72,73,74,76,79,80,95,97,98,99,100,119,120,121,122,123,124,127,147,153,156,162,164,165,167,184,188,190,191,192,194,195,196,197,198,200,201,204,207,208,209,217,218,223,225,226,227,228,230,231,232,233,239,243,246,247,248,250,257,258,263,265,266,267,268,277,280,281,282,285,288,293,296,297,310,311,312,314,318,319,331,332,333,],[-138,-200,-136,-134,-199,-137,-135,-56,-61,-106,-118,-69,-59,-65,-123,-60,-140,-113,-92,-68,-62,-57,-67,-124,-93,-64,-63,-139,-91,-58,-66,-55,-122,-143,158,161,-15,-46,182,-50,161,202,-11,161,-133,-119,222,-89,229,-201,-205,-211,-27,-20,-23,-24,-21,-36,-22,-26,-25,-19,-35,-18,-14,-114,-73,222,-107,-94,-144,-145,-47,-48,-16,-202,-212,-142,-141,-51,-34,-52,-54,-12,-13,-70,-71,161,301,-90,-31,-33,-43,-42,-40,308,-53,-17,-125,-193,-192,-37,-29,-28,-126,-194,-195,-41,-44,-39,]),'TO':([5,14,17,19,22,39,42,46,47,49,50,52,53,54,55,57,58,59,60,62,63,64,66,68,69,70,71,72,73,74,76,79,80,95,127,147,164,167,207,208,217,218,223,225,230,231,232,233,257,258,272,273,274,293,303,304,314,326,329,330,],[-138,-200,-136,-134,-199,-137,-135,-56,-61,-106,-118,-69,-59,-65,-123,-60,-140,-113,-92,-68,-62,-57,-67,-124,-93,-64,-63,-139,-91,-58,-66,-55,-122,-143,-133,-119,-201,-211,-114,-73,-107,-94,-144,-145,-202,-212,-142,-141,-70,-71,-174,305,-177,-125,305,305,-126,305,-175,-221,]),'$end':([0,8,16,26,28,29,30,36,43,44,82,106,159,183,203,220,221,],[-222,-9,-8,-5,-2,-1,0,-7,-3,-6,-74,-4,-45,-49,-10,-181,-75,]),'NOTEQUAL':([5,14,17,19,22,39,42,46,47,49,50,52,53,54,55,57,58,59,62,63,64,66,68,69,70,71,72,73,74,76,79,80,95,127,147,164,167,207,208,217,218,223,225,230,231,232,233,257,258,278,],[-138,-200,-136,-134,-199,-137,-135,-56,-61,-106,-118,-69,-59,-65,-123,-60,-140,-113,-68,-62,-57,-67,-124,-93,-64,-63,-139,143,-58,-66,-55,-122,-143,-133,-119,-201,-211,-114,-73,-107,-94,-144,-145,-202,-212,-142,-141,-70,-71,-140,]),'LOC':([184,188,190,191,192,194,195,196,197,198,200,201,243,296,310,311,312,332,333,338,],[-27,-20,-23,-24,-21,-36,-22,-26,-25,-19,-35,-18,-34,319,-37,-29,-28,-44,-39,347,]),'SUCC':([0,3,8,16,20,26,29,35,36,37,43,44,48,51,56,61,75,77,81,82,83,86,87,88,89,90,92,93,94,101,102,103,106,107,109,110,126,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,157,159,172,174,176,183,199,203,205,211,214,216,220,221,222,224,229,234,237,240,242,244,245,249,252,254,260,298,305,307,308,316,321,323,335,336,340,344,],[32,32,-9,-8,32,-5,32,32,-7,32,-3,-6,32,32,32,-121,32,-120,32,-74,-117,-84,32,-112,-111,-116,32,-115,-110,32,32,32,-4,32,32,-157,32,32,32,32,-108,-109,-105,-98,-99,-95,-96,-103,-100,32,-101,-104,-102,-97,-85,-45,32,-158,32,-49,32,-10,32,32,32,32,-181,-75,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'IN':([5,14,17,19,22,39,42,46,47,49,50,52,53,54,55,57,58,59,62,63,64,66,68,69,70,71,72,73,74,76,79,80,95,127,147,164,167,178,179,207,208,217,218,223,225,230,231,232,233,236,257,258,278,],[-138,-200,-136,-134,-199,-137,-135,-56,-61,-106,-118,-69,-59,-65,-123,-60,-140,-113,-68,-62,-57,-67,-124,-93,-64,-63,-139,146,-58,-66,-55,-122,-143,-133,-119,-201,-211,-173,238,-114,-73,-107,-94,-144,-145,-202,-212,-142,-141,271,-70,-71,-140,]),'EQUALS':([5,10,13,14,17,19,22,27,39,42,83,84,85,88,89,90,91,93,94,95,96,98,99,121,151,164,167,178,179,184,187,188,190,191,192,194,195,196,197,198,200,201,204,223,225,228,230,231,232,233,243,310,311,312,332,333,],[-138,86,-140,-200,-136,-134,-199,-139,-137,-135,-117,-87,-86,-112,-111,-116,-88,-115,-110,-143,157,160,-15,199,-140,-201,-211,-173,237,-27,242,-20,-23,-24,-21,-36,-22,-26,-25,-19,-35,-18,249,-144,-145,-16,-202,-212,-142,-141,-34,-37,-29,-28,-44,-39,]),'BOOL':([99,121,124,160,189,228,238,240,263,271,308,309,322,],[-15,196,196,196,196,-16,196,196,196,196,196,196,196,]),'AND':([5,14,17,19,22,39,42,46,47,49,50,52,53,54,55,57,58,59,62,63,64,66,68,69,70,71,72,73,74,76,79,80,95,127,147,164,167,207,208,217,218,223,225,230,231,232,233,257,258,278,],[-138,-200,-136,-134,-199,-137,-135,-56,-61,-106,-118,-69,-59,-65,-123,-60,-140,-113,-68,-62,-57,-67,-124,-93,-64,-63,-139,136,-58,-66,-55,-122,-143,-133,-119,-201,-211,-114,-73,-107,-94,-144,-145,-202,-212,-142,-141,-70,-71,-140,]),'RPAREN':([5,14,17,19,22,39,42,46,47,49,50,52,53,54,55,57,58,59,60,62,63,64,66,68,69,70,71,72,73,74,76,79,80,95,101,102,127,128,147,162,163,164,165,166,167,184,188,190,191,192,194,195,196,197,198,200,201,207,208,217,218,219,223,225,230,231,232,233,243,257,258,262,265,267,268,269,286,287,293,296,297,310,311,312,314,318,319,324,332,333,338,346,347,],[-138,-200,-136,-134,-199,-137,-135,-56,-61,-106,-118,-69,-59,-65,-123,-60,-140,-113,-92,-68,-62,-57,-67,-124,-93,-64,-63,-139,-91,-58,-66,-55,-122,-143,164,167,-133,208,-119,-203,230,-201,-205,231,-211,-27,-20,-23,-24,-21,-36,-22,-26,-25,-19,-35,-18,-114,-73,-107,-94,264,-144,-145,-202,-212,-142,-141,-34,-70,-71,295,-190,-31,-33,-204,311,312,-125,-193,-192,-37,-29,-28,-126,-194,-195,-191,-44,-39,345,350,-198,]),'FI':([5,14,17,19,22,39,42,46,47,49,50,52,53,54,55,57,58,59,60,62,63,64,66,68,69,70,71,72,73,74,76,79,80,82,95,110,127,130,131,147,164,167,174,207,208,212,214,215,216,217,218,221,223,225,230,231,232,233,256,257,258,260,290,292,293,294,314,315,],[-138,-200,-136,-134,-199,-137,-135,-56,-61,-106,-118,-69,-59,-65,-123,-60,-140,-113,-92,-68,-62,-57,-67,-124,-93,-64,-63,-139,-91,-58,-66,-55,-122,-74,-143,-157,-133,213,-150,-119,-201,-211,-158,-114,-73,-154,-152,261,-151,-107,-94,-75,-144,-145,-202,-212,-142,-141,293,-70,-71,-153,-129,314,-125,-155,-126,-156,]),'TRUE':([3,20,37,48,56,61,75,77,83,86,87,88,89,90,92,93,94,101,102,103,107,126,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,157,199,205,211,222,224,229,237,240,242,244,245,249,252,254,305,307,308,],[76,76,76,76,76,-121,76,-120,-117,-84,76,-112,-111,-116,76,-115,-110,76,76,76,76,76,76,76,-108,-109,-105,-98,-99,-95,-96,-103,-100,76,-101,-104,-102,-97,-85,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'DO':([0,8,16,26,29,35,36,43,44,81,82,106,109,110,131,159,172,174,176,183,203,214,216,220,221,234,260,298,316,321,323,335,336,340,344,],[35,-9,-8,-5,35,35,-7,-3,-6,35,-74,-4,35,-157,35,-45,35,-158,35,-49,-10,35,35,-181,-75,35,35,35,35,35,35,35,35,35,35,]),'MINUS':([3,5,10,13,14,17,19,20,22,27,37,39,42,46,47,48,49,50,52,53,54,55,56,57,58,59,62,63,64,66,68,69,70,71,72,74,76,79,80,83,86,87,88,89,90,92,93,94,95,101,102,103,107,126,127,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,151,157,164,167,199,205,207,208,211,217,218,222,223,224,225,229,230,231,232,233,237,240,242,244,245,249,252,254,257,258,278,305,307,308,],[77,-138,89,-140,-200,-136,-134,77,-199,-139,77,-137,-135,-56,-61,77,-106,-118,-69,-59,-65,-123,77,-60,-140,-113,-68,-62,-57,-67,-124,89,-64,-63,-139,-58,-66,-55,-122,-117,-84,77,-112,-111,-116,77,-115,-110,-143,77,77,77,77,77,-133,77,77,-108,-109,-105,-98,-99,-95,-96,-103,-100,77,-101,-104,-102,-97,-119,-140,-85,-201,-211,77,77,-114,-73,77,-107,89,77,-144,77,-145,77,-202,-212,-142,-141,77,77,77,77,77,77,77,77,-70,-71,-140,77,77,77,]),'RETURNS':([264,295,],[299,299,]),'FOR':([35,],[115,]),'RESULT':([0,8,16,26,29,35,36,43,44,81,82,106,109,110,131,159,172,174,176,183,203,214,216,220,221,234,260,298,316,321,323,335,336,340,344,],[37,-9,-8,-5,37,37,-7,-3,-6,37,-74,-4,37,-157,37,-45,37,-158,37,-49,-10,37,37,-181,-75,37,37,37,37,37,37,37,37,37,37,]),'STRCONC':([5,10,13,14,17,19,22,27,39,42,46,47,49,50,52,53,54,55,57,58,59,62,63,64,66,68,69,70,71,72,74,76,79,80,95,127,147,151,164,167,207,208,217,218,223,225,230,231,232,233,257,258,278,],[-138,88,-140,-200,-136,-134,-199,-139,-137,-135,-56,-61,-106,-118,-69,-59,-65,-123,-60,-140,-113,-68,-62,-57,-67,-124,88,-64,-63,-139,-58,-66,-55,-122,-143,-133,-119,-140,-201,-211,-114,-73,-107,88,-144,-145,-202,-212,-142,-141,-70,-71,-140,]),'EXIT':([0,8,16,26,29,35,36,43,44,81,82,106,109,110,131,159,172,174,176,183,203,214,216,220,221,234,260,298,316,321,323,335,336,340,344,],[38,-9,-8,-5,38,38,-7,-3,-6,38,-74,-4,38,-157,38,-45,38,-158,38,-49,-10,38,38,-181,-75,38,38,38,38,38,38,38,38,38,38,]),'ELSE':([5,14,17,19,22,39,42,46,47,49,50,52,53,54,55,57,58,59,60,62,63,64,66,68,69,70,71,72,73,74,76,79,80,82,95,110,127,130,131,147,164,167,174,206,207,208,216,217,218,221,223,225,230,231,232,233,251,253,255,257,258,291,293,294,313,314,],[-138,-200,-136,-134,-199,-137,-135,-56,-61,-106,-118,-69,-59,-65,-123,-60,-140,-113,-92,-68,-62,-57,-67,-124,-93,-64,-63,-139,-91,-58,-66,-55,-122,-74,-143,-157,-133,214,-150,-119,-201,-211,-158,254,-114,-73,-151,-107,-94,-75,-144,-145,-202,-212,-142,-141,-128,-130,254,-70,-71,-131,-125,214,-132,-126,]),'THEN':([5,14,17,19,22,39,42,46,47,49,50,52,53,54,55,57,58,59,60,62,63,64,66,67,68,69,70,71,72,73,74,76,78,79,80,95,125,127,147,164,167,207,208,217,218,223,225,230,231,232,233,257,258,259,289,293,314,],[-138,-200,-136,-134,-199,-137,-135,-56,-61,-106,-118,-69,-59,-65,-123,-60,-140,-113,-92,-68,-62,-57,-67,131,-124,-93,-64,-63,-139,-91,-58,-66,-127,-55,-122,-143,205,-133,-119,-201,-211,-114,-73,-107,-94,-144,-145,-202,-212,-142,-141,-70,-71,131,205,-125,-126,]),'ARROW':([3,5,10,13,14,17,19,20,22,27,37,39,42,48,55,56,58,61,72,75,77,83,86,87,88,89,90,92,93,94,95,101,102,103,107,126,127,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,151,157,164,167,199,205,211,222,223,224,225,229,230,231,232,233,237,240,242,244,245,249,252,254,278,305,307,308,],[51,-138,95,-140,-200,-136,-134,51,-199,-139,51,-137,-135,51,95,51,-140,-121,-139,51,-120,-117,-84,51,-112,-111,-116,51,-115,-110,-143,51,51,51,51,51,95,51,51,-108,-109,-105,-98,-99,-95,-96,-103,-100,51,-101,-104,-102,-97,-140,-85,-201,-211,51,51,51,51,-144,51,-145,51,-202,-212,-142,-141,51,51,51,51,51,51,51,51,-140,51,51,51,]),'DCL':([0,8,16,26,29,36,43,44,82,106,159,183,203,220,221,298,316,321,323,335,336,340,344,],[45,-9,-8,-5,45,-7,-3,-6,-74,-4,-45,-49,-10,-181,-75,45,45,45,45,45,45,45,45,]),'LENGTH':([0,3,8,16,20,26,29,35,36,37,43,44,48,51,56,61,75,77,81,82,83,86,87,88,89,90,92,93,94,101,102,103,106,107,109,110,126,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,157,159,172,174,176,183,199,203,205,211,214,216,220,221,222,224,229,234,237,240,242,244,245,249,252,254,260,298,305,307,308,316,321,323,335,336,340,344,],[33,33,-9,-8,33,-5,33,33,-7,33,-3,-6,33,33,33,-121,33,-120,33,-74,-117,-84,33,-112,-111,-116,33,-115,-110,33,33,33,-4,33,33,-157,33,33,33,33,-108,-109,-105,-98,-99,-95,-96,-103,-100,33,-101,-104,-102,-97,-85,-45,33,-158,33,-49,33,-10,33,33,33,33,-181,-75,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'parameter':([101,102,229,],[162,162,162,]),'basic_mode':([121,124,160,189,238,240,263,271,308,309,322,],[190,190,190,190,190,190,190,190,190,190,190,]),'assigning_operator':([10,],[87,]),'char_literal':([3,20,37,48,56,75,87,92,101,102,103,107,126,129,132,142,199,205,211,222,224,229,237,240,242,244,245,249,252,254,305,307,308,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'then_clause':([67,259,],[130,294,]),'assignment_action':([0,29,35,81,109,131,172,176,214,216,234,260,298,316,321,323,335,336,340,344,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'procedure_definition':([81,],[149,]),'array_slice':([0,3,20,29,35,37,48,51,56,75,81,87,92,101,102,103,107,109,126,129,131,132,142,172,176,199,205,211,214,216,222,224,229,234,237,240,242,244,245,249,252,254,260,298,305,307,308,316,321,323,335,336,340,344,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'literal_range':([92,103,129,240,244,245,308,],[155,168,210,277,286,287,277,]),'label':([0,29,35,38,109,131,176,214,216,234,260,298,316,321,323,335,336,340,344,],[7,7,108,117,108,108,108,108,108,108,108,7,7,7,7,7,7,7,7,]),'procedure_statement':([0,29,298,316,321,323,335,336,340,344,],[8,8,8,8,8,8,8,8,8,8,]),'action_statement_list':([35,131,176,214,],[109,216,234,260,]),'location':([0,3,20,29,35,37,48,51,56,75,81,87,92,101,102,103,107,109,126,129,131,132,142,172,176,199,205,211,214,216,222,224,229,234,237,240,242,244,245,249,252,254,260,298,305,307,308,316,321,323,335,336,340,344,],[10,55,55,10,10,55,55,127,55,55,10,55,55,55,55,55,55,10,55,55,10,55,55,10,10,55,55,55,10,10,55,55,55,10,55,55,55,55,55,55,55,55,10,10,55,55,55,10,10,10,10,10,10,10,]),'composite_mode':([121,124,160,189,263,309,322,],[192,192,192,192,192,192,192,]),'arithmetic_additive_operator':([10,69,218,],[85,133,133,]),'boolean_literal':([3,20,37,48,56,75,87,92,101,102,103,107,126,129,132,142,199,205,211,222,224,229,237,240,242,244,245,249,252,254,305,307,308,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'integer_expression':([103,307,],[169,329,]),'index_mode':([240,308,],[281,331,]),'conditional_expression':([3,20,37,48,56,87,92,101,102,103,107,129,199,205,211,222,224,229,237,240,242,244,245,249,252,254,305,307,308,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'parameter_spec':([263,],[297,]),'string_length':([241,],[283,]),'empty_literal':([3,20,37,48,56,75,87,92,101,102,103,107,126,129,132,142,199,205,211,222,224,229,237,240,242,244,245,249,252,254,305,307,308,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'dereferenced_reference':([0,3,20,29,35,37,48,51,56,75,81,87,92,101,102,103,107,109,126,129,131,132,142,172,176,199,205,211,214,216,222,224,229,234,237,240,242,244,245,249,252,254,260,298,305,307,308,316,321,323,335,336,340,344,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'result':([20,37,],[104,116,]),'value_array_slice':([3,20,37,48,56,75,87,92,101,102,103,107,126,129,132,142,199,205,211,222,224,229,237,240,242,244,245,249,252,254,305,307,308,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'array_primitive_value':([3,20,37,48,56,75,87,92,101,102,103,107,126,129,132,142,199,205,211,222,224,229,237,240,242,244,245,249,252,254,305,307,308,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'step_enumeration':([115,],[180,]),'boolean_expression':([3,48,107,211,252,],[67,125,171,259,289,]),'program':([0,],[30,]),'primitive_value':([3,20,37,48,56,75,87,92,101,102,103,107,126,129,132,142,199,205,211,222,224,229,237,240,242,244,245,249,252,254,305,307,308,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'procedure_call':([0,3,20,29,35,37,48,51,56,75,81,87,92,101,102,103,107,109,126,129,131,132,142,172,176,199,205,211,214,216,222,224,229,234,237,240,242,244,245,249,252,254,260,298,305,307,308,316,321,323,335,336,340,344,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'result_action':([0,29,35,81,109,131,172,176,214,216,234,260,298,316,321,323,335,336,340,344,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'start_value':([237,],[273,]),'empty':([0,],[28,]),'id_list':([12,41,45,158,182,202,219,301,],[98,121,124,98,121,124,263,263,]),'operator2':([69,218,],[132,132,]),'builtin_name':([0,3,20,29,35,37,48,51,56,75,81,87,92,101,102,103,107,109,126,129,131,132,142,172,176,199,205,211,214,216,222,224,229,234,237,240,242,244,245,249,252,254,260,298,305,307,308,316,321,323,335,336,340,344,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'initialization':([204,],[250,]),'step_value':([273,],[304,]),'operator1':([73,],[142,]),'operand0':([3,20,37,48,56,87,92,101,102,103,107,129,199,205,211,222,224,229,237,240,242,244,245,249,252,254,305,307,308,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'do_action':([0,29,35,81,109,131,172,176,214,216,234,260,298,316,321,323,335,336,340,344,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'discrete_range_mode':([121,124,160,189,238,240,263,271,308,309,322,],[191,191,191,191,191,191,191,191,191,191,191,]),'newmode_list':([12,],[97,]),'parenthesized_expression':([3,20,37,48,56,75,87,92,101,102,103,107,126,129,132,142,199,205,211,222,224,229,237,240,242,244,245,249,252,254,305,307,308,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'operand2':([3,20,37,48,56,87,92,101,102,103,107,129,132,142,199,205,211,222,224,229,237,240,242,244,245,249,252,254,305,307,308,],[49,49,49,49,49,49,49,49,49,49,49,49,217,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'monadic_operator':([3,20,37,48,56,87,92,101,102,103,107,126,129,132,142,199,205,211,222,224,229,237,240,242,244,245,249,252,254,305,307,308,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'while_control':([35,112,],[114,175,]),'expression':([3,20,37,48,56,87,92,101,102,103,107,129,199,205,211,222,224,229,237,240,242,244,245,249,252,254,305,307,308,],[78,105,105,78,128,152,156,165,165,170,78,156,247,251,78,266,268,165,274,279,247,279,279,288,78,290,274,330,279,]),'referenced_location':([3,20,37,48,56,75,87,92,101,102,103,107,126,129,132,142,199,205,211,222,224,229,237,240,242,244,245,249,252,254,305,307,308,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'discrete_mode':([121,124,160,189,238,240,263,271,308,309,322,],[198,198,198,198,276,280,198,302,280,198,198,]),'array_element':([0,3,20,29,35,37,48,51,56,75,81,87,92,101,102,103,107,109,126,129,131,132,142,172,176,199,205,211,214,216,222,224,229,234,237,240,242,244,245,249,252,254,260,298,305,307,308,316,321,323,335,336,340,344,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'formal_parameter_list':([219,301,],[262,324,]),'operand1':([3,20,37,48,56,87,92,101,102,103,107,129,142,199,205,211,222,224,229,237,240,242,244,245,249,252,254,305,307,308,],[69,69,69,69,69,69,69,69,69,69,69,69,218,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'then_expression':([125,289,],[206,313,]),'string_reference':([0,3,20,29,35,37,48,51,56,75,81,87,92,101,102,103,107,109,126,129,131,132,142,172,176,199,205,211,214,216,222,224,229,234,237,240,242,244,245,249,252,254,260,298,305,307,308,316,321,323,335,336,340,344,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'iteration':([115,],[181,]),'statement':([0,29,298,316,321,323,335,336,340,344,],[43,106,43,43,106,43,106,43,106,106,]),'closed_dyadic_operator':([10,],[96,]),'result_spec':([264,295,],[300,317,]),'string_mode':([121,124,160,189,263,309,322,],[200,200,200,200,200,200,200,]),'value_array_element':([3,20,37,48,56,75,87,92,101,102,103,107,126,129,132,142,199,205,211,222,224,229,237,240,242,244,245,249,252,254,305,307,308,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'expression_list':([92,129,],[153,209,]),'elseif_expression':([206,255,],[253,291,]),'mode':([121,124,160,189,263,309,322,],[187,204,227,243,296,332,338,]),'parameter_attribute':([296,],[318,]),'if_action':([0,29,35,81,109,131,172,176,214,216,234,260,298,316,321,323,335,336,340,344,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'string_literal':([3,20,37,48,56,75,87,92,101,102,103,107,126,129,132,142,199,205,211,222,224,229,237,240,242,244,245,249,252,254,305,307,308,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'declaration_list':([45,],[122,]),'loop_counter':([115,],[179,]),'operand4':([3,20,37,48,56,75,87,92,101,102,103,107,126,129,132,142,199,205,211,222,224,229,237,240,242,244,245,249,252,254,305,307,308,],[50,50,50,50,50,147,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'integer_literal':([3,20,37,48,56,75,87,92,101,102,103,107,126,129,132,142,199,205,211,222,224,229,237,240,242,244,245,249,252,254,305,307,308,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'elseif_expression_list':([206,],[255,]),'action':([0,29,35,81,109,131,172,176,214,216,234,260,298,316,321,323,335,336,340,344,],[9,9,9,150,9,9,150,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'else_expression':([206,255,],[256,292,]),'result_attribute':([338,],[346,]),'discrete_mode_name':([121,124,160,189,238,240,263,271,308,309,322,],[193,193,193,193,193,193,193,193,193,193,193,]),'array_mode':([121,124,160,189,263,309,322,],[194,194,194,194,194,194,194,]),'operand3':([3,20,37,48,56,87,92,101,102,103,107,126,129,132,142,199,205,211,222,224,229,237,240,242,244,245,249,252,254,305,307,308,],[59,59,59,59,59,59,59,59,59,59,59,207,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'builtin_call':([0,3,20,29,35,37,48,51,56,75,81,87,92,101,102,103,107,109,126,129,131,132,142,172,176,199,205,211,214,216,222,224,229,234,237,240,242,244,245,249,252,254,260,298,305,307,308,316,321,323,335,336,340,344,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'parameter_list':([101,102,229,],[163,166,269,]),'exit_action':([0,29,35,81,109,131,172,176,214,216,234,260,298,316,321,323,335,336,340,344,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'return_action':([0,29,35,81,109,131,172,176,214,216,234,260,298,316,321,323,335,336,340,344,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'action_statement':([0,29,35,109,131,176,214,216,234,260,298,316,321,323,335,336,340,344,],[16,16,110,174,110,110,110,174,174,174,16,16,16,16,16,16,16,16,]),'upper_bound':([224,],[267,]),'constant_expression':([199,242,],[246,285,]),'location_name':([0,3,20,29,35,37,48,51,56,75,81,87,92,101,102,103,107,109,126,129,131,132,142,172,176,199,205,211,214,216,222,224,229,234,237,240,242,244,245,249,252,254,260,298,305,307,308,316,321,323,335,336,340,344,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'mode_name':([121,124,160,189,263,309,322,],[201,201,201,201,201,201,201,]),'syn_definition':([41,182,],[120,239,]),'range_enumeration':([115,],[177,]),'elseif_clause':([130,294,],[212,212,]),'reference_mode':([121,124,160,189,263,309,322,],[188,188,188,188,188,188,188,]),'relational_operator':([73,],[138,]),'bracketed_action':([0,29,35,81,109,131,172,176,214,216,234,260,298,316,321,323,335,336,340,344,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'end_value':([273,303,304,326,],[306,325,327,341,]),'membership_operator':([73,],[139,]),'call_action':([0,3,20,29,35,37,48,51,56,75,81,87,92,101,102,103,107,109,126,129,131,132,142,172,176,199,205,211,214,216,222,224,229,234,237,240,242,244,245,249,252,254,260,298,305,307,308,316,321,323,335,336,340,344,],[27,72,72,27,27,72,72,72,72,72,27,72,72,72,72,72,72,27,72,72,27,72,72,27,27,72,72,72,27,27,72,72,72,27,72,72,72,72,72,72,72,72,27,27,72,72,72,27,27,27,27,27,27,27,]),'for_control':([35,],[112,]),'mode_definition':([12,158,],[100,226,]),'statement_list':([0,298,316,323,336,],[29,321,335,340,344,]),'discrete_expression':([237,305,],[272,328,]),'control_part':([35,],[113,]),'literal':([3,20,37,48,56,75,87,92,101,102,103,107,126,129,132,142,199,205,211,222,224,229,237,240,242,244,245,249,252,254,305,307,308,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'else_clause':([130,294,],[215,315,]),'syn_list':([41,],[119,]),'arithmetic_multiplicative_operator':([10,49,217,],[84,126,126,]),'declaration':([45,202,],[123,248,]),'formal_parameter':([219,301,],[265,265,]),'index_mode_list':([240,],[282,]),'synonym_statement':([0,29,298,316,321,323,335,336,340,344,],[36,36,36,36,36,36,36,36,36,36,]),'string_concatenation_operator':([10,69,218,],[91,134,134,]),'declaration_statement':([0,29,298,316,321,323,335,336,340,344,],[26,26,26,26,26,26,26,26,26,26,]),'lower_bound':([92,103,129,240,244,245,308,],[154,154,154,154,154,154,154,]),'newmode_statement':([0,29,298,316,321,323,335,336,340,344,],[44,44,44,44,44,44,44,44,44,44,]),'element_node':([309,],[333,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','lyaParser.py',64),
  ('program -> empty','program',1,'p_program','lyaParser.py',65),
  ('statement_list -> statement','statement_list',1,'p_statement_list1','lyaParser.py',72),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list1','lyaParser.py',73),
  ('statement -> declaration_statement','statement',1,'p_statement','lyaParser.py',80),
  ('statement -> newmode_statement','statement',1,'p_statement','lyaParser.py',81),
  ('statement -> synonym_statement','statement',1,'p_statement','lyaParser.py',82),
  ('statement -> action_statement','statement',1,'p_statement','lyaParser.py',83),
  ('statement -> procedure_statement','statement',1,'p_statement','lyaParser.py',84),
  ('declaration_statement -> DCL declaration_list SMC','declaration_statement',3,'p_declaration_statement','lyaParser.py',92),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','lyaParser.py',96),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','lyaParser.py',97),
  ('declaration -> id_list mode initialization','declaration',3,'p_declaration1','lyaParser.py',104),
  ('declaration -> id_list mode','declaration',2,'p_declaration2','lyaParser.py',108),
  ('id_list -> ID','id_list',1,'p_id_list','lyaParser.py',112),
  ('id_list -> id_list COMMA ID','id_list',3,'p_id_list','lyaParser.py',113),
  ('initialization -> EQUALS expression','initialization',2,'p_initialization','lyaParser.py',120),
  ('mode -> mode_name','mode',1,'p_mode','lyaParser.py',128),
  ('mode -> discrete_mode','mode',1,'p_mode','lyaParser.py',129),
  ('mode -> reference_mode','mode',1,'p_mode','lyaParser.py',130),
  ('mode -> composite_mode','mode',1,'p_mode','lyaParser.py',131),
  ('mode_name -> ID','mode_name',1,'p_mode_name','lyaParser.py',135),
  ('discrete_mode -> basic_mode','discrete_mode',1,'p_discrete_mode','lyaParser.py',139),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','lyaParser.py',140),
  ('basic_mode -> INT','basic_mode',1,'p_basic_mode','lyaParser.py',144),
  ('basic_mode -> BOOL','basic_mode',1,'p_basic_mode','lyaParser.py',145),
  ('basic_mode -> CHAR','basic_mode',1,'p_basic_mode','lyaParser.py',146),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaParser.py',150),
  ('discrete_range_mode -> basic_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaParser.py',151),
  ('discrete_mode_name -> ID','discrete_mode_name',1,'p_discrete_mode_name','lyaParser.py',155),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_litereal_range','lyaParser.py',159),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','lyaParser.py',163),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','lyaParser.py',167),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','lyaParser.py',171),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','lyaParser.py',175),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','lyaParser.py',176),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','lyaParser.py',180),
  ('string_length -> INTCONST','string_length',1,'p_string_length','lyaParser.py',184),
  ('array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_node','array_mode',5,'p_array_mode','lyaParser.py',188),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','lyaParser.py',193),
  ('index_mode_list -> index_mode_list COMMA index_mode','index_mode_list',3,'p_index_mode_list','lyaParser.py',194),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','lyaParser.py',201),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','lyaParser.py',202),
  ('element_node -> mode','element_node',1,'p_element_node','lyaParser.py',206),
  ('newmode_statement -> TYPE newmode_list SMC','newmode_statement',3,'p_newmode_statement','lyaParser.py',214),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','lyaParser.py',218),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','lyaParser.py',219),
  ('mode_definition -> id_list EQUALS mode','mode_definition',3,'p_mode_definition','lyaParser.py',226),
  ('synonym_statement -> SYN syn_list SMC','synonym_statement',3,'p_synonym_statement','lyaParser.py',230),
  ('syn_list -> syn_definition','syn_list',1,'p_syn_list','lyaParser.py',238),
  ('syn_list -> syn_list COMMA syn_definition','syn_list',3,'p_syn_list','lyaParser.py',239),
  ('syn_definition -> id_list EQUALS constant_expression','syn_definition',3,'p_syn_definition','lyaParser.py',246),
  ('syn_definition -> id_list mode EQUALS constant_expression','syn_definition',4,'p_syn_definition2','lyaParser.py',250),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','lyaParser.py',254),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','lyaParser.py',262),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','lyaParser.py',263),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','lyaParser.py',264),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','lyaParser.py',265),
  ('literal -> integer_literal','literal',1,'p_literal','lyaParser.py',269),
  ('literal -> boolean_literal','literal',1,'p_literal','lyaParser.py',270),
  ('literal -> char_literal','literal',1,'p_literal','lyaParser.py',271),
  ('literal -> empty_literal','literal',1,'p_literal','lyaParser.py',272),
  ('literal -> string_literal','literal',1,'p_literal','lyaParser.py',273),
  ('integer_literal -> INTCONST','integer_literal',1,'p_integer_literal','lyaParser.py',277),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','lyaParser.py',281),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','lyaParser.py',282),
  ('char_literal -> CHARCONST','char_literal',1,'p_char_literal','lyaParser.py',286),
  ('string_literal -> STRINGCONST','string_literal',1,'p_string_literal','lyaParser.py',290),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','lyaParser.py',294),
  ('value_array_element -> array_primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','lyaParser.py',298),
  ('value_array_slice -> array_primitive_value LBRACKET literal_range RBRACKET','value_array_slice',4,'p_value_array_slice','lyaParser.py',302),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','lyaParser.py',306),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','lyaParser.py',310),
  ('action_statement -> action SMC','action_statement',2,'p_action_statement','lyaParser.py',318),
  ('action_statement -> label COLON action SMC','action_statement',4,'p_action_statement','lyaParser.py',319),
  ('label -> ID','label',1,'p_label','lyaParser.py',326),
  ('action -> assignment_action','action',1,'p_action','lyaParser.py',330),
  ('action -> bracketed_action','action',1,'p_action','lyaParser.py',331),
  ('action -> call_action','action',1,'p_action','lyaParser.py',332),
  ('action -> exit_action','action',1,'p_action','lyaParser.py',333),
  ('action -> return_action','action',1,'p_action','lyaParser.py',334),
  ('action -> result_action','action',1,'p_action','lyaParser.py',335),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','lyaParser.py',343),
  ('assigning_operator -> EQUALS','assigning_operator',1,'p_assigning_operator','lyaParser.py',347),
  ('assigning_operator -> closed_dyadic_operator EQUALS','assigning_operator',2,'p_assigning_operator','lyaParser.py',348),
  ('closed_dyadic_operator -> arithmetic_additive_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','lyaParser.py',355),
  ('closed_dyadic_operator -> arithmetic_multiplicative_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','lyaParser.py',356),
  ('closed_dyadic_operator -> string_concatenation_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','lyaParser.py',357),
  ('expression_list -> expression','expression_list',1,'p_expression_list','lyaParser.py',361),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','lyaParser.py',362),
  ('expression -> operand0','expression',1,'p_expression','lyaParser.py',369),
  ('expression -> conditional_expression','expression',1,'p_expression','lyaParser.py',370),
  ('operand0 -> operand1','operand0',1,'p_operand0','lyaParser.py',374),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','lyaParser.py',375),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','lyaParser.py',382),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','lyaParser.py',383),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','lyaParser.py',387),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','lyaParser.py',391),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','lyaParser.py',392),
  ('relational_operator -> ISEQUAL','relational_operator',1,'p_relational_operator','lyaParser.py',393),
  ('relational_operator -> NOTEQUAL','relational_operator',1,'p_relational_operator','lyaParser.py',394),
  ('relational_operator -> GT','relational_operator',1,'p_relational_operator','lyaParser.py',395),
  ('relational_operator -> GE','relational_operator',1,'p_relational_operator','lyaParser.py',396),
  ('relational_operator -> LT','relational_operator',1,'p_relational_operator','lyaParser.py',397),
  ('relational_operator -> LE','relational_operator',1,'p_relational_operator','lyaParser.py',398),
  ('operand1 -> operand2','operand1',1,'p_operand1','lyaParser.py',402),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1','lyaParser.py',403),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','lyaParser.py',410),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','lyaParser.py',411),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','lyaParser.py',415),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','lyaParser.py',416),
  ('string_concatenation_operator -> STRCONC','string_concatenation_operator',1,'p_string_concatenation_operator','lyaParser.py',420),
  ('operand2 -> operand3','operand2',1,'p_operand2','lyaParser.py',424),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','lyaParser.py',425),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaParser.py',432),
  ('arithmetic_multiplicative_operator -> DIV','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaParser.py',433),
  ('arithmetic_multiplicative_operator -> MOD','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaParser.py',434),
  ('operand3 -> operand4','operand3',1,'p_operand3','lyaParser.py',438),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','lyaParser.py',439),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','lyaParser.py',446),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','lyaParser.py',447),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','lyaParser.py',451),
  ('operand4 -> location','operand4',1,'p_operand4','lyaParser.py',452),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','lyaParser.py',453),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','lyaParser.py',459),
  ('conditional_expression -> IF boolean_expression then_expression elseif_expression_list else_expression FI','conditional_expression',6,'p_conditional_expression2','lyaParser.py',463),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','lyaParser.py',467),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','lyaParser.py',471),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','lyaParser.py',475),
  ('elseif_expression_list -> elseif_expression','elseif_expression_list',1,'p_elseif_expression_list','lyaParser.py',479),
  ('elseif_expression_list -> elseif_expression_list elseif_expression','elseif_expression_list',2,'p_elseif_expression_list','lyaParser.py',480),
  ('elseif_expression -> ELSIF boolean_expression then_expression','elseif_expression',3,'p_elseif_expression','lyaParser.py',487),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','lyaParser.py',495),
  ('location -> location_name','location',1,'p_location','lyaParser.py',499),
  ('location -> string_reference','location',1,'p_location','lyaParser.py',500),
  ('location -> dereferenced_reference','location',1,'p_location','lyaParser.py',501),
  ('location -> array_element','location',1,'p_location','lyaParser.py',502),
  ('location -> array_slice','location',1,'p_location','lyaParser.py',503),
  ('location -> call_action','location',1,'p_location','lyaParser.py',504),
  ('location_name -> ID','location_name',1,'p_location_name','lyaParser.py',508),
  ('string_reference -> location_name LBRACKET integer_expression RBRACKET','string_reference',4,'p_string_reference','lyaParser.py',512),
  ('string_reference -> location_name LBRACKET literal_range RBRACKET','string_reference',4,'p_string_reference2','lyaParser.py',516),
  ('dereferenced_reference -> location ARROW','dereferenced_reference',2,'p_dereferenced_reference','lyaParser.py',520),
  ('array_element -> location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','lyaParser.py',524),
  ('array_slice -> location LBRACKET literal_range RBRACKET','array_slice',4,'p_array_slice','lyaParser.py',528),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','lyaParser.py',536),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','lyaParser.py',537),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','lyaParser.py',545),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action2','lyaParser.py',549),
  ('then_clause -> THEN','then_clause',1,'p_then_clause','lyaParser.py',553),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','lyaParser.py',554),
  ('else_clause -> ELSE','else_clause',1,'p_else_clause','lyaParser.py',561),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','lyaParser.py',562),
  ('else_clause -> elseif_clause','else_clause',1,'p_else_clause2','lyaParser.py',569),
  ('elseif_clause -> ELSIF boolean_expression then_clause','elseif_clause',3,'p_elseif_clause','lyaParser.py',573),
  ('elseif_clause -> ELSIF boolean_expression then_clause else_clause','elseif_clause',4,'p_elseif_clause2','lyaParser.py',577),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','lyaParser.py',582),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','lyaParser.py',583),
  ('do_action -> DO OD','do_action',2,'p_do_action','lyaParser.py',594),
  ('do_action -> DO control_part SMC OD','do_action',4,'p_do_action2','lyaParser.py',598),
  ('do_action -> DO control_part SMC action_statement_list OD','do_action',5,'p_do_action3','lyaParser.py',602),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action4','lyaParser.py',606),
  ('control_part -> for_control','control_part',1,'p_control_part','lyaParser.py',610),
  ('control_part -> while_control','control_part',1,'p_control_part','lyaParser.py',611),
  ('control_part -> for_control while_control','control_part',2,'p_control_part2','lyaParser.py',615),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','lyaParser.py',619),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','lyaParser.py',623),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','lyaParser.py',624),
  ('step_enumeration -> loop_counter EQUALS start_value end_value','step_enumeration',4,'p_step_enumeration','lyaParser.py',628),
  ('step_enumeration -> loop_counter EQUALS start_value step_value end_value','step_enumeration',5,'p_step_enumeration2','lyaParser.py',632),
  ('step_enumeration -> loop_counter EQUALS start_value DOWN end_value','step_enumeration',5,'p_step_enumeration3','lyaParser.py',636),
  ('step_enumeration -> loop_counter EQUALS start_value step_value DOWN end_value','step_enumeration',6,'p_step_enumeration4','lyaParser.py',640),
  ('loop_counter -> ID','loop_counter',1,'p_loop_counter','lyaParser.py',644),
  ('start_value -> discrete_expression','start_value',1,'p_start_value','lyaParser.py',648),
  ('step_value -> BY integer_expression','step_value',2,'p_step_value','lyaParser.py',652),
  ('end_value -> TO discrete_expression','end_value',2,'p_end_value','lyaParser.py',656),
  ('discrete_expression -> expression','discrete_expression',1,'p_discrete_expression','lyaParser.py',660),
  ('range_enumeration -> loop_counter IN discrete_mode','range_enumeration',3,'p_range_enumeration','lyaParser.py',664),
  ('range_enumeration -> loop_counter DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration2','lyaParser.py',668),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','lyaParser.py',672),
  ('procedure_statement -> label COLON procedure_definition SMC','procedure_statement',4,'p_procedure_statement','lyaParser.py',680),
  ('procedure_definition -> PROC LPAREN RPAREN SMC END','procedure_definition',5,'p_procedure_definition1','lyaParser.py',684),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SMC statement_list END','procedure_definition',7,'p_procedure_definition1','lyaParser.py',685),
  ('procedure_definition -> PROC LPAREN RPAREN SMC statement_list END','procedure_definition',6,'p_procedure_definition1','lyaParser.py',686),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SMC END','procedure_definition',6,'p_procedure_definition2','lyaParser.py',695),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SMC END','procedure_definition',7,'p_procedure_definition2','lyaParser.py',696),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SMC statement_list END','procedure_definition',8,'p_procedure_definition2','lyaParser.py',697),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SMC statement_list END','procedure_definition',7,'p_procedure_definition3','lyaParser.py',706),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SMC END','procedure_definition',6,'p_procedure_definition3','lyaParser.py',707),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','lyaParser.py',714),
  ('formal_parameter_list -> formal_parameter COMMA formal_parameter_list','formal_parameter_list',3,'p_formal_parameter_list','lyaParser.py',715),
  ('formal_parameter -> id_list parameter_spec','formal_parameter',2,'p_formal_parameter','lyaParser.py',722),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','lyaParser.py',728),
  ('parameter_spec -> mode parameter_attribute','parameter_spec',2,'p_parameter_spec','lyaParser.py',729),
  ('parameter_attribute -> LOC','parameter_attribute',1,'p_parameter_attribute','lyaParser.py',736),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','lyaParser.py',740),
  ('result_spec -> RETURNS LPAREN mode result_attribute RPAREN','result_spec',5,'p_result_spec','lyaParser.py',741),
  ('result_attribute -> LOC','result_attribute',1,'p_result_attribute','lyaParser.py',748),
  ('call_action -> procedure_call','call_action',1,'p_call_action','lyaParser.py',756),
  ('call_action -> builtin_call','call_action',1,'p_call_action','lyaParser.py',757),
  ('procedure_call -> ID LPAREN RPAREN','procedure_call',3,'p_procedure_call','lyaParser.py',761),
  ('procedure_call -> ID LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','lyaParser.py',762),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','lyaParser.py',769),
  ('parameter_list -> parameter COMMA parameter_list','parameter_list',3,'p_parameter_list','lyaParser.py',770),
  ('parameter -> expression','parameter',1,'p_parameter','lyaParser.py',777),
  ('exit_action -> EXIT label','exit_action',2,'p_exit_action','lyaParser.py',785),
  ('return_action -> RETURN','return_action',1,'p_return_action','lyaParser.py',789),
  ('return_action -> RETURN result','return_action',2,'p_return_action','lyaParser.py',790),
  ('result_action -> RESULT result','result_action',2,'p_result_action','lyaParser.py',797),
  ('result -> expression','result',1,'p_result','lyaParser.py',801),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','lyaParser.py',805),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','lyaParser.py',806),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','lyaParser.py',813),
  ('builtin_name -> PRED','builtin_name',1,'p_builtin_name','lyaParser.py',814),
  ('builtin_name -> SUCC','builtin_name',1,'p_builtin_name','lyaParser.py',815),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','lyaParser.py',816),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','lyaParser.py',817),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','lyaParser.py',818),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','lyaParser.py',819),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','lyaParser.py',820),
  ('integer_expression -> expression','integer_expression',1,'p_integer_expression','lyaParser.py',829),
  ('empty -> <empty>','empty',0,'p_empty','lyaParser.py',836),
]
