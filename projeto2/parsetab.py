
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '7009D0F82DD8A007F5699F69CD14AF01'
    
_lr_action_items = {'EXIT':([0,3,9,13,15,22,38,39,45,49,55,92,99,118,125,126,133,161,183,190,197,206,218,219,234,236,283,304,322,327,328,336,337,340,344,],[1,1,-9,1,-6,-8,-5,-7,-3,-157,1,1,-4,-74,1,1,-158,-49,1,-45,-10,1,-181,-75,1,1,1,1,1,1,1,1,1,1,1,]),'BY':([16,18,20,29,35,42,44,57,59,60,61,63,65,66,67,68,69,70,71,72,74,75,76,77,79,80,82,83,85,86,87,89,91,101,151,156,193,200,212,215,216,217,238,239,243,248,249,250,252,253,254,264,265,297,319,],[-137,-200,-135,-136,-199,-134,-138,-57,-66,-113,-122,-106,-55,-123,-65,-92,-69,-64,-139,-68,-61,-91,-140,-60,-62,-58,-118,-63,-56,-67,-93,-124,-59,-143,-133,-119,-201,-211,-114,-94,-107,-73,-145,-144,-202,-212,-141,-142,-174,-177,293,-71,-70,-125,-126,]),'BOOL':([94,95,121,168,192,209,229,230,255,268,310,311,329,],[164,-15,164,164,164,164,-16,164,164,164,164,164,164,]),'DO':([0,3,9,13,15,22,38,39,45,49,55,92,99,118,125,126,133,161,183,190,197,206,218,219,234,236,283,304,322,327,328,336,337,340,344,],[3,3,-9,3,-6,-8,-5,-7,-3,-157,3,3,-4,-74,3,3,-158,-49,3,-45,-10,3,-181,-75,3,3,3,3,3,3,3,3,3,3,3,]),'$end':([0,9,13,15,21,22,38,39,40,45,99,118,161,190,197,218,219,],[-222,-9,-1,-6,-2,-8,-5,-7,0,-3,-4,-74,-49,-45,-10,-181,-75,]),'SUCC':([0,3,7,9,12,13,15,22,28,38,39,45,49,52,55,58,62,81,84,88,90,92,99,104,105,106,107,109,110,111,112,113,118,119,123,124,125,126,133,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,154,161,169,183,184,190,197,206,207,210,218,219,225,227,228,230,231,234,236,237,240,244,246,262,263,283,291,293,304,311,322,327,328,336,337,340,344,],[23,23,23,-9,23,23,-6,-8,23,-5,-7,-3,-157,23,23,-120,23,23,-121,23,23,23,-4,-111,-110,23,-84,-112,23,-117,-116,-115,-74,23,23,23,23,23,-158,23,23,-99,23,-105,-97,-95,-101,-104,-96,-98,-103,-100,-102,-108,-109,23,-49,23,23,-85,-45,-10,23,23,23,-181,-75,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'PRINT':([0,3,7,9,12,13,15,22,28,38,39,45,49,52,55,58,62,81,84,88,90,92,99,104,105,106,107,109,110,111,112,113,118,119,123,124,125,126,133,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,154,161,169,183,184,190,197,206,207,210,218,219,225,227,228,230,231,234,236,237,240,244,246,262,263,283,291,293,304,311,322,327,328,336,337,340,344,],[4,4,4,-9,4,4,-6,-8,4,-5,-7,-3,-157,4,4,-120,4,4,-121,4,4,4,-4,-111,-110,4,-84,-112,4,-117,-116,-115,-74,4,4,4,4,4,-158,4,4,-99,4,-105,-97,-95,-101,-104,-96,-98,-103,-100,-102,-108,-109,4,-49,4,4,-85,-45,-10,4,4,4,-181,-75,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'TRUE':([7,12,28,52,58,62,84,88,90,104,105,106,107,109,110,111,112,113,119,123,124,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,154,169,184,207,210,225,227,228,230,231,237,240,244,246,262,263,291,293,311,],[59,59,59,59,-120,59,-121,59,59,-111,-110,59,-84,-112,59,-117,-116,-115,59,59,59,59,59,-99,59,-105,-97,-95,-101,-104,-96,-98,-103,-100,-102,-108,-109,59,59,-85,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'CHARCONST':([7,12,28,52,58,62,84,88,90,104,105,106,107,109,110,111,112,113,119,123,124,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,154,169,184,207,210,225,227,228,230,231,237,240,244,246,262,263,291,293,311,],[86,86,86,86,-120,86,-121,86,86,-111,-110,86,-84,-112,86,-117,-116,-115,86,86,86,86,86,-99,86,-105,-97,-95,-101,-104,-96,-98,-103,-100,-102,-108,-109,86,86,-85,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'RPAREN':([16,18,20,29,35,42,44,57,59,60,61,63,65,66,67,68,69,70,71,72,74,75,76,77,79,80,82,83,85,86,87,89,91,101,119,123,151,155,156,163,164,165,166,167,172,173,174,175,177,179,181,193,194,195,196,200,201,212,215,216,217,220,222,238,239,243,248,249,250,264,265,266,267,271,274,284,285,287,297,302,303,307,308,309,319,321,324,325,330,331,341,346,347,],[-137,-200,-135,-136,-199,-134,-138,-57,-66,-113,-122,-106,-55,-123,-65,-92,-69,-64,-139,-68,-61,-91,-140,-60,-62,-58,-118,-63,-56,-67,-93,-124,-59,-143,193,200,-133,217,-119,-35,-26,-20,-22,-19,-23,-18,-25,-24,-36,-27,-21,-201,243,-205,-203,-211,248,-114,-94,-107,-73,269,-34,-145,-144,-202,-212,-141,-142,-71,-70,-190,301,307,309,-31,-33,-204,-125,-193,-192,-28,-37,-29,-126,-191,-195,-194,-39,-44,348,350,-198,]),'REF':([94,95,121,168,192,229,268,310,329,],[168,-15,168,168,168,-16,168,168,168,]),'LT':([16,18,20,29,35,42,44,57,59,60,61,63,65,66,67,69,70,71,72,74,75,76,77,79,80,82,83,85,86,87,89,91,101,151,156,193,200,212,215,216,217,238,239,243,248,249,250,264,265,278,],[-137,-200,-135,-136,-199,-134,-138,-57,-66,-113,-122,-106,-55,-123,-65,-69,-64,-139,-68,-61,145,-140,-60,-62,-58,-118,-63,-56,-67,-93,-124,-59,-143,-133,-119,-201,-211,-114,-94,-107,-73,-145,-144,-202,-212,-141,-142,-71,-70,-140,]),'RESULT':([0,3,9,13,15,22,38,39,45,49,55,92,99,118,125,126,133,161,183,190,197,206,218,219,234,236,283,304,322,327,328,336,337,340,344,],[7,7,-9,7,-6,-8,-5,-7,-3,-157,7,7,-4,-74,7,7,-158,-49,7,-45,-10,7,-181,-75,7,7,7,7,7,7,7,7,7,7,7,]),'DIV':([16,17,18,20,24,29,31,35,42,44,57,59,60,61,63,65,66,67,69,70,71,72,74,76,77,79,80,82,83,85,86,89,91,101,151,156,159,193,200,212,216,217,238,239,243,248,249,250,264,265,278,],[-137,112,-200,-135,-139,-136,-140,-199,-134,-138,-57,-66,-113,-122,112,-55,-123,-65,-69,-64,-139,-68,-61,-140,-60,-62,-58,-118,-63,-56,-67,-124,-59,-143,-133,-119,-140,-201,-211,-114,112,-73,-145,-144,-202,-212,-141,-142,-71,-70,-140,]),'GT':([16,18,20,29,35,42,44,57,59,60,61,63,65,66,67,69,70,71,72,74,75,76,77,79,80,82,83,85,86,87,89,91,101,151,156,193,200,212,215,216,217,238,239,243,248,249,250,264,265,278,],[-137,-200,-135,-136,-199,-134,-138,-57,-66,-113,-122,-106,-55,-123,-65,-69,-64,-139,-68,-61,150,-140,-60,-62,-58,-118,-63,-56,-67,-93,-124,-59,-143,-133,-119,-201,-211,-114,-94,-107,-73,-145,-144,-202,-212,-141,-142,-71,-70,-140,]),'SYN':([0,9,13,15,22,38,39,45,99,118,161,190,197,218,219,304,322,327,328,336,337,340,344,],[10,-9,10,-6,-8,-5,-7,-3,-4,-74,-49,-45,-10,-181,-75,10,10,10,10,10,10,10,10,]),'RBRACKET':([16,18,20,29,35,42,44,57,59,60,61,63,65,66,67,68,69,70,71,72,74,75,76,77,79,80,82,83,85,86,87,89,91,101,151,156,164,172,174,175,179,186,187,188,193,200,202,203,204,212,213,214,215,216,217,238,239,243,248,249,250,264,265,272,273,276,277,279,280,284,285,286,297,307,309,319,332,],[-137,-200,-135,-136,-199,-134,-138,-57,-66,-113,-122,-106,-55,-123,-65,-92,-69,-64,-139,-68,-61,-91,-140,-60,-62,-58,-118,-63,-56,-67,-93,-124,-59,-143,-133,-119,-26,-23,-25,-24,-27,-89,238,239,-201,-211,-221,249,250,-114,264,265,-94,-107,-73,-145,-144,-202,-212,-141,-142,-71,-70,-38,308,-42,-40,310,-43,-31,-33,-90,-125,-28,-29,-126,-41,]),'WHILE':([3,16,18,20,29,35,42,44,56,57,59,60,61,63,65,66,67,68,69,70,71,72,74,75,76,77,79,80,82,83,85,86,87,89,91,101,128,130,132,151,156,164,172,174,175,179,193,200,212,215,216,217,238,239,243,248,249,250,253,257,264,265,289,294,297,307,309,313,315,316,319,334,],[52,-137,-200,-135,-136,-199,-134,-138,52,-57,-66,-113,-122,-106,-55,-123,-65,-92,-69,-64,-139,-68,-61,-91,-140,-60,-62,-58,-118,-63,-56,-67,-93,-124,-59,-143,-168,-166,-167,-133,-119,-26,-23,-25,-24,-27,-201,-211,-114,-94,-107,-73,-145,-144,-202,-212,-141,-142,-177,-178,-71,-70,-169,-179,-125,-28,-29,-170,-176,-171,-126,-172,]),'LE':([16,18,20,29,35,42,44,57,59,60,61,63,65,66,67,69,70,71,72,74,75,76,77,79,80,82,83,85,86,87,89,91,101,151,156,193,200,212,215,216,217,238,239,243,248,249,250,264,265,278,],[-137,-200,-135,-136,-199,-134,-138,-57,-66,-113,-122,-106,-55,-123,-65,-69,-64,-139,-68,-61,141,-140,-60,-62,-58,-118,-63,-56,-67,-93,-124,-59,-143,-133,-119,-201,-211,-114,-94,-107,-73,-145,-144,-202,-212,-141,-142,-71,-70,-140,]),'IF':([0,3,7,9,12,13,15,22,28,38,39,45,49,52,55,62,88,92,99,106,107,110,118,119,123,124,125,126,133,138,161,169,183,184,190,197,206,207,210,218,219,225,227,228,230,231,234,236,237,240,244,246,262,263,283,291,293,304,311,322,327,328,336,337,340,344,],[12,12,62,-9,62,12,-6,-8,62,-5,-7,-3,-157,62,12,62,62,12,-4,62,-84,62,-74,62,62,62,12,12,-158,62,-49,62,12,-85,-45,-10,12,62,62,-181,-75,62,62,62,62,62,12,12,62,62,62,62,62,62,12,62,62,12,62,12,12,12,12,12,12,12,]),'END':([9,15,22,38,39,45,99,118,161,190,197,218,219,304,322,327,328,336,337,340,344,],[-9,-6,-8,-5,-7,-3,-4,-74,-49,-45,-10,-181,-75,326,335,338,339,342,343,345,349,]),'CHARS':([94,95,121,168,192,229,268,310,329,],[171,-15,171,171,171,-16,171,171,171,]),'THEN':([16,18,20,29,35,42,44,57,59,60,61,63,65,66,67,68,69,70,71,72,74,75,76,77,79,80,82,83,85,86,87,89,91,97,98,101,136,151,156,193,200,212,215,216,217,238,239,243,248,249,250,264,265,281,297,298,319,],[-137,-200,-135,-136,-199,-134,-138,-57,-66,-113,-122,-106,-55,-123,-65,-92,-69,-64,-139,-68,-61,-91,-140,-60,-62,-58,-118,-63,-56,-67,-93,-124,-59,183,-127,-143,210,-133,-119,-201,-211,-114,-94,-107,-73,-145,-144,-202,-212,-141,-142,-71,-70,183,-125,210,-126,]),'PLUS':([16,17,18,20,24,29,31,35,42,44,57,59,60,61,63,65,66,67,69,70,71,72,74,76,77,79,80,82,83,85,86,87,89,91,101,151,156,159,193,200,212,215,216,217,238,239,243,248,249,250,264,265,278,],[-137,105,-200,-135,-139,-136,-140,-199,-134,-138,-57,-66,-113,-122,-106,-55,-123,-65,-69,-64,-139,-68,-61,-140,-60,-62,-58,-118,-63,-56,-67,105,-124,-59,-143,-133,-119,-140,-201,-211,-114,105,-107,-73,-145,-144,-202,-212,-141,-142,-71,-70,-140,]),'ELSIF':([16,18,20,29,35,42,44,49,57,59,60,61,63,65,66,67,68,69,70,71,72,74,75,76,77,79,80,82,83,85,86,87,89,91,101,118,133,151,156,182,183,193,200,211,212,215,216,217,219,236,238,239,243,248,249,250,258,259,260,264,265,295,297,312,319,320,],[-137,-200,-135,-136,-199,-134,-138,-157,-57,-66,-113,-122,-106,-55,-123,-65,-92,-69,-64,-139,-68,-61,-91,-140,-60,-62,-58,-118,-63,-56,-67,-93,-124,-59,-143,-74,-158,-133,-119,231,-150,-201,-211,262,-114,-94,-107,-73,-75,-151,-145,-144,-202,-212,-141,-142,-128,-130,262,-71,-70,-131,-125,231,-126,-132,]),'LOC':([163,164,165,166,167,172,173,174,175,177,179,181,222,302,307,308,309,330,331,341,],[-35,-26,-20,-22,-19,-23,-18,-25,-24,-36,-27,-21,-34,324,-28,-37,-29,-39,-44,347,]),'COMMA':([16,18,20,29,35,42,44,57,59,60,61,63,65,66,67,68,69,70,71,72,74,75,76,77,79,80,82,83,85,86,87,89,91,93,94,95,96,101,114,115,116,120,121,122,151,156,163,164,165,166,167,172,173,174,175,177,179,181,186,188,193,195,196,199,200,212,214,215,216,217,221,222,223,224,229,238,239,241,242,243,245,247,248,249,250,264,265,266,268,275,276,277,279,280,284,285,286,288,297,302,303,307,308,309,319,324,325,330,331,332,],[-137,-200,-135,-136,-199,-134,-138,-57,-66,-113,-122,-106,-55,-123,-65,-92,-69,-64,-139,-68,-61,-91,-140,-60,-62,-58,-118,-63,-56,-67,-93,-124,-59,162,178,-15,-50,-143,191,178,-46,198,178,-11,-133,-119,-35,-26,-20,-22,-19,-23,-18,-25,-24,-36,-27,-21,-89,240,-201,-205,244,-14,-211,-114,240,-94,-107,-73,-51,-34,-52,-54,-16,-145,-144,-47,-48,-202,-12,-13,-212,-141,-142,-71,-70,300,178,-53,-42,-40,311,-43,-31,-33,-90,-17,-125,-193,-192,-28,-37,-29,-126,-195,-194,-39,-44,-41,]),'ELSE':([16,18,20,29,35,42,44,49,57,59,60,61,63,65,66,67,68,69,70,71,72,74,75,76,77,79,80,82,83,85,86,87,89,91,101,118,133,151,156,182,183,193,200,211,212,215,216,217,219,236,238,239,243,248,249,250,258,259,260,264,265,295,297,312,319,320,],[-137,-200,-135,-136,-199,-134,-138,-157,-57,-66,-113,-122,-106,-55,-123,-65,-92,-69,-64,-139,-68,-61,-91,-140,-60,-62,-58,-118,-63,-56,-67,-93,-124,-59,-143,-74,-158,-133,-119,234,-150,-201,-211,263,-114,-94,-107,-73,-75,-151,-145,-144,-202,-212,-141,-142,-128,-130,263,-71,-70,-131,-125,234,-126,-132,]),'AND':([16,18,20,29,35,42,44,57,59,60,61,63,65,66,67,69,70,71,72,74,75,76,77,79,80,82,83,85,86,87,89,91,101,151,156,193,200,212,215,216,217,238,239,243,248,249,250,264,265,278,],[-137,-200,-135,-136,-199,-134,-138,-57,-66,-113,-122,-106,-55,-123,-65,-69,-64,-139,-68,-61,147,-140,-60,-62,-58,-118,-63,-56,-67,-93,-124,-59,-143,-133,-119,-201,-211,-114,-94,-107,-73,-145,-144,-202,-212,-141,-142,-71,-70,-140,]),'FALSE':([7,12,28,52,58,62,84,88,90,104,105,106,107,109,110,111,112,113,119,123,124,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,154,169,184,207,210,225,227,228,230,231,237,240,244,246,262,263,291,293,311,],[67,67,67,67,-120,67,-121,67,67,-111,-110,67,-84,-112,67,-117,-116,-115,67,67,67,67,67,-99,67,-105,-97,-95,-101,-104,-96,-98,-103,-100,-102,-108,-109,67,67,-85,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'MINUS':([7,12,16,17,18,20,24,28,29,31,35,42,44,52,57,59,60,61,62,63,65,66,67,69,70,71,72,74,76,77,79,80,82,83,85,86,87,88,89,91,101,104,105,106,107,109,110,111,112,113,119,123,124,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,159,169,184,193,200,207,210,212,215,216,217,225,227,228,230,231,237,238,239,240,243,244,246,248,249,250,262,263,264,265,278,291,293,311,],[58,58,-137,104,-200,-135,-139,58,-136,-140,-199,-134,-138,58,-57,-66,-113,-122,58,-106,-55,-123,-65,-69,-64,-139,-68,-61,-140,-60,-62,-58,-118,-63,-56,-67,104,58,-124,-59,-143,-111,-110,58,-84,-112,58,-117,-116,-115,58,58,58,58,58,-99,58,-105,-97,-95,-101,-104,-96,-98,-103,-100,-102,-133,-108,-109,58,-119,-140,58,-85,-201,-211,58,58,-114,104,-107,-73,58,58,58,58,58,58,-145,-144,58,-202,58,58,-212,-141,-142,58,58,-71,-70,-140,58,58,58,]),'MOD':([16,17,18,20,24,29,31,35,42,44,57,59,60,61,63,65,66,67,69,70,71,72,74,76,77,79,80,82,83,85,86,89,91,101,151,156,159,193,200,212,216,217,238,239,243,248,249,250,264,265,278,],[-137,111,-200,-135,-139,-136,-140,-199,-134,-138,-57,-66,-113,-122,111,-55,-123,-65,-69,-64,-139,-68,-61,-140,-60,-62,-58,-118,-63,-56,-67,-124,-59,-143,-133,-119,-140,-201,-211,-114,111,-73,-145,-144,-202,-212,-141,-142,-71,-70,-140,]),'NULL':([7,12,28,52,58,62,84,88,90,104,105,106,107,109,110,111,112,113,119,123,124,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,154,169,184,207,210,225,227,228,230,231,237,240,244,246,262,263,291,293,311,],[69,69,69,69,-120,69,-121,69,69,-111,-110,69,-84,-112,69,-117,-116,-115,69,69,69,69,69,-99,69,-105,-97,-95,-101,-104,-96,-98,-103,-100,-102,-108,-109,69,69,-85,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'DOWN':([16,18,20,29,35,42,44,57,59,60,61,63,65,66,67,68,69,70,71,72,74,75,76,77,79,80,82,83,85,86,87,89,91,101,129,131,151,156,193,200,212,215,216,217,238,239,243,248,249,250,252,253,254,264,265,290,297,317,318,319,],[-137,-200,-135,-136,-199,-134,-138,-57,-66,-113,-122,-106,-55,-123,-65,-92,-69,-64,-139,-68,-61,-91,-140,-60,-62,-58,-118,-63,-56,-67,-93,-124,-59,-143,-173,208,-133,-119,-201,-211,-114,-94,-107,-73,-145,-144,-202,-212,-141,-142,-174,-177,292,-71,-70,314,-125,-221,-175,-126,]),'COLON':([8,16,18,20,29,31,35,42,44,50,57,59,60,61,63,65,66,67,68,69,70,71,72,74,75,76,77,79,80,82,83,85,86,87,89,91,101,151,156,185,186,193,200,202,212,215,216,217,238,239,243,248,249,250,264,265,270,278,297,319,],[92,-137,-200,-135,-136,-76,-199,-134,-138,126,-57,-66,-113,-122,-106,-55,-123,-65,-92,-69,-64,-139,-68,-61,-91,-140,-60,-62,-58,-118,-63,-56,-67,-93,-124,-59,-143,-133,-119,237,-32,-201,-211,-32,-114,-94,-107,-73,-145,-144,-202,-212,-141,-142,-71,-70,-32,-140,-125,-126,]),'TYPE':([0,9,13,15,22,38,39,45,99,118,161,190,197,218,219,304,322,327,328,336,337,340,344,],[25,-9,25,-6,-8,-5,-7,-3,-4,-74,-49,-45,-10,-181,-75,25,25,25,25,25,25,25,25,]),'INT':([94,95,121,168,192,209,229,230,255,268,310,311,329,],[174,-15,174,174,174,174,-16,174,174,174,174,174,174,]),'OR':([16,18,20,29,35,42,44,57,59,60,61,63,65,66,67,69,70,71,72,74,75,76,77,79,80,82,83,85,86,87,89,91,101,151,156,193,200,212,215,216,217,238,239,243,248,249,250,264,265,278,],[-137,-200,-135,-136,-199,-134,-138,-57,-66,-113,-122,-106,-55,-123,-65,-69,-64,-139,-68,-61,139,-140,-60,-62,-58,-118,-63,-56,-67,-93,-124,-59,-143,-133,-119,-201,-211,-114,-94,-107,-73,-145,-144,-202,-212,-141,-142,-71,-70,-140,]),'PRED':([0,3,7,9,12,13,15,22,28,38,39,45,49,52,55,58,62,81,84,88,90,92,99,104,105,106,107,109,110,111,112,113,118,119,123,124,125,126,133,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,154,161,169,183,184,190,197,206,207,210,218,219,225,227,228,230,231,234,236,237,240,244,246,262,263,283,291,293,304,311,322,327,328,336,337,340,344,],[27,27,27,-9,27,27,-6,-8,27,-5,-7,-3,-157,27,27,-120,27,27,-121,27,27,27,-4,-111,-110,27,-84,-112,27,-117,-116,-115,-74,27,27,27,27,27,-158,27,27,-99,27,-105,-97,-95,-101,-104,-96,-98,-103,-100,-102,-108,-109,27,-49,27,27,-85,-45,-10,27,27,27,-181,-75,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'RETURN':([0,3,9,13,15,22,38,39,45,49,55,92,99,118,125,126,133,161,183,190,197,206,218,219,234,236,283,304,322,327,328,336,337,340,344,],[28,28,-9,28,-6,-8,-5,-7,-3,-157,28,28,-4,-74,28,28,-158,-49,28,-45,-10,28,-181,-75,28,28,28,28,28,28,28,28,28,28,28,]),'IN':([16,18,20,29,35,42,44,57,59,60,61,63,65,66,67,69,70,71,72,74,75,76,77,79,80,82,83,85,86,87,89,91,101,129,131,151,156,193,200,208,212,215,216,217,238,239,243,248,249,250,264,265,278,],[-137,-200,-135,-136,-199,-134,-138,-57,-66,-113,-122,-106,-55,-123,-65,-69,-64,-139,-68,-61,142,-140,-60,-62,-58,-118,-63,-56,-67,-93,-124,-59,-143,-173,209,-133,-119,-201,-211,255,-114,-94,-107,-73,-145,-144,-202,-212,-141,-142,-71,-70,-140,]),'TO':([16,18,20,29,35,42,44,57,59,60,61,63,65,66,67,68,69,70,71,72,74,75,76,77,79,80,82,83,85,86,87,89,91,101,151,156,193,200,212,215,216,217,238,239,243,248,249,250,252,253,254,264,265,290,292,297,314,317,318,319,],[-137,-200,-135,-136,-199,-134,-138,-57,-66,-113,-122,-106,-55,-123,-65,-92,-69,-64,-139,-68,-61,-91,-140,-60,-62,-58,-118,-63,-56,-67,-93,-124,-59,-143,-133,-119,-201,-211,-114,-94,-107,-73,-145,-144,-202,-212,-141,-142,-174,-177,291,-71,-70,291,291,-125,291,-221,-175,-126,]),'NOTEQUAL':([16,18,20,29,35,42,44,57,59,60,61,63,65,66,67,69,70,71,72,74,75,76,77,79,80,82,83,85,86,87,89,91,101,151,156,193,200,212,215,216,217,238,239,243,248,249,250,264,265,278,],[-137,-200,-135,-136,-199,-134,-138,-57,-66,-113,-122,-106,-55,-123,-65,-69,-64,-139,-68,-61,144,-140,-60,-62,-58,-118,-63,-56,-67,-93,-124,-59,-143,-133,-119,-201,-211,-114,-94,-107,-73,-145,-144,-202,-212,-141,-142,-71,-70,-140,]),'ID':([0,1,3,7,9,10,12,13,15,22,25,28,33,38,39,45,49,52,53,55,58,62,81,84,88,90,92,94,95,99,104,105,106,107,109,110,111,112,113,118,119,121,123,124,125,126,133,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,154,161,162,168,169,178,183,184,190,191,192,197,198,206,207,209,210,218,219,220,225,227,228,229,230,231,234,236,237,240,244,246,255,262,263,268,283,291,293,300,304,310,311,322,327,328,329,336,337,340,344,],[31,46,31,76,-9,95,76,31,-6,-8,95,76,95,-5,-7,-3,-157,76,129,31,-120,76,76,-121,76,76,159,166,-15,-4,-111,-110,76,-84,-112,76,-117,-116,-115,-74,76,166,76,76,31,159,-158,76,76,-99,76,-105,-97,-95,-101,-104,-96,-98,-103,-100,-102,-108,-109,76,-49,95,166,76,229,31,-85,-45,95,166,-10,95,31,76,256,76,-181,-75,95,76,76,76,-16,278,76,31,31,76,76,76,76,256,76,76,166,31,76,76,95,31,166,278,31,31,31,166,31,31,31,31,]),'NUM':([0,3,7,9,12,13,15,22,28,38,39,45,49,52,55,58,62,81,84,88,90,92,99,104,105,106,107,109,110,111,112,113,118,119,123,124,125,126,133,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,154,161,169,183,184,190,197,206,207,210,218,219,225,227,228,230,231,234,236,237,240,244,246,262,263,283,291,293,304,311,322,327,328,336,337,340,344,],[32,32,32,-9,32,32,-6,-8,32,-5,-7,-3,-157,32,32,-120,32,32,-121,32,32,32,-4,-111,-110,32,-84,-112,32,-117,-116,-115,-74,32,32,32,32,32,-158,32,32,-99,32,-105,-97,-95,-101,-104,-96,-98,-103,-100,-102,-108,-109,32,-49,32,32,-85,-45,-10,32,32,32,-181,-75,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'LBRACKET':([16,17,18,20,24,29,31,35,42,44,57,59,61,64,65,66,67,69,70,71,72,74,76,77,79,80,83,85,86,91,101,151,159,171,180,193,200,217,238,239,243,248,249,250,264,265,278,],[-137,106,-200,-135,-139,-136,-140,-199,124,-138,-57,-66,-72,138,-55,106,-65,-69,-64,-139,-68,-61,-140,-60,-62,-58,-63,-56,-67,-59,-143,106,-140,226,230,-201,-211,-73,-145,-144,-202,-212,-141,-142,-71,-70,-140,]),'EQUALS':([16,17,18,20,24,29,31,35,42,44,94,95,100,101,102,103,104,105,108,109,111,112,113,115,129,131,159,163,164,165,166,167,172,173,174,175,176,177,179,181,193,199,200,222,229,238,239,243,248,249,250,307,308,309,330,331,],[-137,107,-200,-135,-139,-136,-140,-199,-134,-138,169,-15,184,-143,-87,-88,-111,-110,-86,-112,-117,-116,-115,192,-173,207,-140,-35,-26,-20,-22,-19,-23,-18,-25,-24,228,-36,-27,-21,-201,246,-211,-34,-16,-145,-144,-202,-212,-141,-142,-28,-37,-29,-39,-44,]),'SMC':([6,16,18,19,20,24,26,28,29,30,34,35,36,41,42,43,44,46,47,48,51,54,56,57,59,60,61,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,85,86,87,89,91,93,96,98,101,114,116,117,120,122,127,128,130,132,134,135,151,156,157,158,163,164,165,166,167,172,173,174,175,177,179,181,189,193,199,200,205,212,215,216,217,221,222,223,224,233,238,239,241,242,243,245,247,248,249,250,251,253,257,264,265,269,275,282,288,289,294,297,301,305,307,308,309,313,315,316,319,323,326,330,331,334,335,338,339,342,343,345,348,349,350,],[-78,-137,-200,-80,-135,-79,-81,-207,-136,118,-147,-199,-77,-146,-134,-82,-138,-76,-206,125,-164,-159,-163,-57,-66,-113,-122,-106,-55,-123,-65,-92,-69,-64,-139,-68,-210,-61,-91,-140,-60,-209,-62,-58,-118,-63,-56,-67,-93,-124,-59,161,-50,-127,-143,190,-46,-208,197,-11,-180,-168,-166,-167,-162,-165,-133,-119,218,219,-35,-26,-20,-22,-19,-23,-18,-25,-24,-36,-27,-21,-83,-201,-14,-211,-160,-114,-94,-107,-73,-51,-34,-52,-54,-148,-145,-144,-47,-48,-202,-12,-13,-212,-141,-142,-161,-177,-178,-71,-70,304,-53,-149,-17,-169,-179,-125,322,328,-28,-37,-29,-170,-176,-171,-126,337,-182,-39,-44,-172,-185,-184,-189,-183,-186,-188,-196,-187,-197,]),'UPPER':([0,3,7,9,12,13,15,22,28,38,39,45,49,52,55,58,62,81,84,88,90,92,99,104,105,106,107,109,110,111,112,113,118,119,123,124,125,126,133,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,154,161,169,183,184,190,197,206,207,210,218,219,225,227,228,230,231,234,236,237,240,244,246,262,263,283,291,293,304,311,322,327,328,336,337,340,344,],[11,11,11,-9,11,11,-6,-8,11,-5,-7,-3,-157,11,11,-120,11,11,-121,11,11,11,-4,-111,-110,11,-84,-112,11,-117,-116,-115,-74,11,11,11,11,11,-158,11,11,-99,11,-105,-97,-95,-101,-104,-96,-98,-103,-100,-102,-108,-109,11,-49,11,11,-85,-45,-10,11,11,11,-181,-75,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'CHAR':([94,95,121,168,192,209,229,230,255,268,310,311,329,],[179,-15,179,179,179,179,-16,179,179,179,179,179,179,]),'OD':([3,49,55,118,125,133,206,219,],[54,-157,134,-74,205,-158,251,-75,]),'GE':([16,18,20,29,35,42,44,57,59,60,61,63,65,66,67,69,70,71,72,74,75,76,77,79,80,82,83,85,86,87,89,91,101,151,156,193,200,212,215,216,217,238,239,243,248,249,250,264,265,278,],[-137,-200,-135,-136,-199,-134,-138,-57,-66,-113,-122,-106,-55,-123,-65,-69,-64,-139,-68,-61,148,-140,-60,-62,-58,-118,-63,-56,-67,-93,-124,-59,-143,-133,-119,-201,-211,-114,-94,-107,-73,-145,-144,-202,-212,-141,-142,-71,-70,-140,]),'INTCONST':([7,12,28,52,58,62,84,88,90,104,105,106,107,109,110,111,112,113,119,123,124,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,154,169,184,207,210,225,226,227,228,230,231,237,240,244,246,262,263,291,293,311,],[70,70,70,70,-120,70,-121,70,70,-111,-110,70,-84,-112,70,-117,-116,-115,70,70,70,70,70,-99,70,-105,-97,-95,-101,-104,-96,-98,-103,-100,-102,-108,-109,70,70,-85,70,70,70,272,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'FI':([16,18,20,29,35,42,44,49,57,59,60,61,63,65,66,67,68,69,70,71,72,74,75,76,77,79,80,82,83,85,86,87,89,91,101,118,133,151,156,182,183,193,200,212,215,216,217,219,232,234,235,236,238,239,243,248,249,250,261,264,265,283,296,297,299,312,319,333,],[-137,-200,-135,-136,-199,-134,-138,-157,-57,-66,-113,-122,-106,-55,-123,-65,-92,-69,-64,-139,-68,-61,-91,-140,-60,-62,-58,-118,-63,-56,-67,-93,-124,-59,-143,-74,-158,-133,-119,233,-150,-201,-211,-114,-94,-107,-73,-75,282,-152,-154,-151,-145,-144,-202,-212,-141,-142,297,-71,-70,-153,319,-125,-129,-155,-126,-156,]),'READ':([0,3,7,9,12,13,15,22,28,38,39,45,49,52,55,58,62,81,84,88,90,92,99,104,105,106,107,109,110,111,112,113,118,119,123,124,125,126,133,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,154,161,169,183,184,190,197,206,207,210,218,219,225,227,228,230,231,234,236,237,240,244,246,262,263,283,291,293,304,311,322,327,328,336,337,340,344,],[14,14,14,-9,14,14,-6,-8,14,-5,-7,-3,-157,14,14,-120,14,14,-121,14,14,14,-4,-111,-110,14,-84,-112,14,-117,-116,-115,-74,14,14,14,14,14,-158,14,14,-99,14,-105,-97,-95,-101,-104,-96,-98,-103,-100,-102,-108,-109,14,-49,14,14,-85,-45,-10,14,14,14,-181,-75,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'RETURNS':([269,301,],[306,306,]),'STRCONC':([16,17,18,20,24,29,31,35,42,44,57,59,60,61,63,65,66,67,69,70,71,72,74,76,77,79,80,82,83,85,86,87,89,91,101,151,156,159,193,200,212,215,216,217,238,239,243,248,249,250,264,265,278,],[-137,109,-200,-135,-139,-136,-140,-199,-134,-138,-57,-66,-113,-122,-106,-55,-123,-65,-69,-64,-139,-68,-61,-140,-60,-62,-58,-118,-63,-56,-67,109,-124,-59,-143,-133,-119,-140,-201,-211,-114,109,-107,-73,-145,-144,-202,-212,-141,-142,-71,-70,-140,]),'ARROW':([7,12,16,17,18,20,24,28,29,31,35,42,44,52,58,62,66,71,76,84,88,90,101,104,105,106,107,109,110,111,112,113,119,123,124,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,159,169,184,193,200,207,210,225,227,228,230,231,237,238,239,240,243,244,246,248,249,250,262,263,278,291,293,311,],[81,81,-137,101,-200,-135,-139,81,-136,-140,-199,-134,-138,81,-120,81,101,-139,-140,-121,81,81,-143,-111,-110,81,-84,-112,81,-117,-116,-115,81,81,81,81,81,-99,81,-105,-97,-95,-101,-104,-96,-98,-103,-100,-102,101,-108,-109,81,-140,81,-85,-201,-211,81,81,81,81,81,81,81,81,-145,-144,81,-202,81,81,-212,-141,-142,81,81,-140,81,81,81,]),'PROC':([92,],[160,]),'NOT':([7,12,28,52,62,88,104,105,106,107,109,110,111,112,113,119,123,124,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,154,169,184,207,210,225,227,228,230,231,237,240,244,246,262,263,291,293,311,],[84,84,84,84,84,84,-111,-110,84,-84,-112,84,-117,-116,-115,84,84,84,84,84,-99,84,-105,-97,-95,-101,-104,-96,-98,-103,-100,-102,-108,-109,84,84,-85,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'ARRAY':([94,95,121,168,192,229,268,310,329,],[180,-15,180,180,180,-16,180,180,180,]),'STRINGCONST':([7,12,28,52,58,62,84,88,90,104,105,106,107,109,110,111,112,113,119,123,124,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,154,169,184,207,210,225,227,228,230,231,237,240,244,246,262,263,291,293,311,],[72,72,72,72,-120,72,-121,72,72,-111,-110,72,-84,-112,72,-117,-116,-115,72,72,72,72,72,-99,72,-105,-97,-95,-101,-104,-96,-98,-103,-100,-102,-108,-109,72,72,-85,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'LPAREN':([2,4,5,7,11,12,14,23,27,28,31,32,37,52,58,62,76,84,88,90,104,105,106,107,109,110,111,112,113,119,123,124,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,154,159,160,164,166,169,170,172,174,179,184,207,210,225,227,228,230,231,237,240,244,246,256,262,263,278,291,293,306,311,],[-217,-220,-218,88,-216,88,-219,-215,-214,88,119,-213,123,88,-120,88,119,-121,88,88,-111,-110,88,-84,-112,88,-117,-116,-115,88,88,88,88,88,-99,88,-105,-97,-95,-101,-104,-96,-98,-103,-100,-102,-108,-109,88,119,220,-26,-30,88,225,227,-25,-27,-85,88,88,88,88,88,88,88,88,88,88,88,-30,88,88,119,88,88,329,88,]),'DCL':([0,9,13,15,22,38,39,45,99,118,161,190,197,218,219,304,322,327,328,336,337,340,344,],[33,-9,33,-6,-8,-5,-7,-3,-4,-74,-49,-45,-10,-181,-75,33,33,33,33,33,33,33,33,]),'LOWER':([0,3,7,9,12,13,15,22,28,38,39,45,49,52,55,58,62,81,84,88,90,92,99,104,105,106,107,109,110,111,112,113,118,119,123,124,125,126,133,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,154,161,169,183,184,190,197,206,207,210,218,219,225,227,228,230,231,234,236,237,240,244,246,262,263,283,291,293,304,311,322,327,328,336,337,340,344,],[2,2,2,-9,2,2,-6,-8,2,-5,-7,-3,-157,2,2,-120,2,2,-121,2,2,2,-4,-111,-110,2,-84,-112,2,-117,-116,-115,-74,2,2,2,2,2,-158,2,2,-99,2,-105,-97,-95,-101,-104,-96,-98,-103,-100,-102,-108,-109,2,-49,2,2,-85,-45,-10,2,2,2,-181,-75,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'ISEQUAL':([16,18,20,29,35,42,44,57,59,60,61,63,65,66,67,69,70,71,72,74,75,76,77,79,80,82,83,85,86,87,89,91,101,151,156,193,200,212,215,216,217,238,239,243,248,249,250,264,265,278,],[-137,-200,-135,-136,-199,-134,-138,-57,-66,-113,-122,-106,-55,-123,-65,-69,-64,-139,-68,-61,149,-140,-60,-62,-58,-118,-63,-56,-67,-93,-124,-59,-143,-133,-119,-201,-211,-114,-94,-107,-73,-145,-144,-202,-212,-141,-142,-71,-70,-140,]),'FOR':([3,],[53,]),'LENGTH':([0,3,7,9,12,13,15,22,28,38,39,45,49,52,55,58,62,81,84,88,90,92,99,104,105,106,107,109,110,111,112,113,118,119,123,124,125,126,133,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,154,161,169,183,184,190,197,206,207,210,218,219,225,227,228,230,231,234,236,237,240,244,246,262,263,283,291,293,304,311,322,327,328,336,337,340,344,],[5,5,5,-9,5,5,-6,-8,5,-5,-7,-3,-157,5,5,-120,5,5,-121,5,5,5,-4,-111,-110,5,-84,-112,5,-117,-116,-115,-74,5,5,5,5,5,-158,5,5,-99,5,-105,-97,-95,-101,-104,-96,-98,-103,-100,-102,-108,-109,5,-49,5,5,-85,-45,-10,5,5,5,-181,-75,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'TIMES':([16,17,18,20,24,29,31,35,42,44,57,59,60,61,63,65,66,67,69,70,71,72,74,76,77,79,80,82,83,85,86,89,91,101,151,156,159,193,200,212,216,217,238,239,243,248,249,250,264,265,278,],[-137,113,-200,-135,-139,-136,-140,-199,-134,-138,-57,-66,-113,-122,113,-55,-123,-65,-69,-64,-139,-68,-61,-140,-60,-62,-58,-118,-63,-56,-67,-124,-59,-143,-133,-119,-140,-201,-211,-114,113,-73,-145,-144,-202,-212,-141,-142,-71,-70,-140,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'discrete_expression':([207,291,],[252,315,]),'elseif_expression_list':([211,],[260,]),'value_array_slice':([7,12,28,52,62,88,90,106,110,119,123,124,137,138,140,154,169,207,210,225,227,228,230,231,237,240,244,246,262,263,291,293,311,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'operator1':([75,],[140,]),'discrete_mode':([94,121,168,192,209,230,255,268,310,311,329,],[167,167,167,167,257,276,294,167,167,276,167,]),'boolean_expression':([12,52,62,231,262,],[97,127,136,281,298,]),'basic_mode':([94,121,168,192,209,230,255,268,310,311,329,],[172,172,172,172,172,172,172,172,172,172,172,]),'step_value':([254,],[290,]),'label':([0,1,3,13,55,125,183,206,234,236,283,304,322,327,328,336,337,340,344,],[8,47,50,8,50,50,50,50,50,50,50,8,8,8,8,8,8,8,8,]),'procedure_statement':([0,13,304,322,327,328,336,337,340,344,],[9,9,9,9,9,9,9,9,9,9,]),'procedure_definition':([92,],[157,]),'operator2':([87,215,],[154,154,]),'declaration':([33,198,],[122,245,]),'syn_list':([10,],[93,]),'end_value':([254,290,292,314,],[289,313,316,334,]),'newmode_statement':([0,13,304,322,327,328,336,337,340,344,],[15,15,15,15,15,15,15,15,15,15,]),'range_enumeration':([53,],[128,]),'array_element':([0,3,7,12,13,28,52,55,62,81,88,90,92,106,110,119,123,124,125,126,137,138,140,154,169,183,206,207,210,225,227,228,230,231,234,236,237,240,244,246,262,263,283,291,293,304,311,322,327,328,336,337,340,344,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'location':([0,3,7,12,13,28,52,55,62,81,88,90,92,106,110,119,123,124,125,126,137,138,140,154,169,183,206,207,210,225,227,228,230,231,234,236,237,240,244,246,262,263,283,291,293,304,311,322,327,328,336,337,340,344,],[17,17,66,66,17,66,66,17,66,151,66,66,17,66,66,66,66,66,17,17,66,66,66,66,66,17,17,66,66,66,66,66,66,66,17,17,66,66,66,66,66,66,17,66,66,17,66,17,17,17,17,17,17,17,]),'elseif_clause':([182,312,],[235,235,]),'exit_action':([0,3,13,55,92,125,126,183,206,234,236,283,304,322,327,328,336,337,340,344,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'location_name':([0,3,7,12,13,28,52,55,62,81,88,90,92,106,110,119,123,124,125,126,137,138,140,154,169,183,206,207,210,225,227,228,230,231,234,236,237,240,244,246,262,263,283,291,293,304,311,322,327,328,336,337,340,344,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'conditional_expression':([7,12,28,52,62,88,106,110,119,123,124,138,169,207,210,225,227,228,230,231,237,240,244,246,262,263,291,293,311,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'else_clause':([182,312,],[232,333,]),'parameter_list':([119,123,244,],[194,201,287,]),'syn_definition':([10,162,],[96,221,]),'call_action':([0,3,7,12,13,28,52,55,62,81,88,90,92,106,110,119,123,124,125,126,137,138,140,154,169,183,206,207,210,225,227,228,230,231,234,236,237,240,244,246,262,263,283,291,293,304,311,322,327,328,336,337,340,344,],[24,24,71,71,24,71,71,24,71,71,71,71,24,71,71,71,71,71,24,24,71,71,71,71,71,24,24,71,71,71,71,71,71,71,24,24,71,71,71,71,71,71,24,71,71,24,71,24,24,24,24,24,24,24,]),'formal_parameter':([220,300,],[266,266,]),'operand3':([7,12,28,52,62,88,106,110,119,123,124,137,138,140,154,169,207,210,225,227,228,230,231,237,240,244,246,262,263,291,293,311,],[60,60,60,60,60,60,60,60,60,60,60,212,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'then_clause':([97,281,],[182,312,]),'reference_mode':([94,121,168,192,268,310,329,],[165,165,165,165,165,165,165,]),'integer_expression':([124,293,],[203,318,]),'iteration':([53,],[130,]),'discrete_range_mode':([94,121,168,192,209,230,255,268,310,311,329,],[175,175,175,175,175,175,175,175,175,175,175,]),'discrete_mode_name':([94,121,168,192,209,230,255,268,310,311,329,],[170,170,170,170,170,170,170,170,170,170,170,]),'string_reference':([0,3,7,12,13,28,52,55,62,81,88,90,92,106,110,119,123,124,125,126,137,138,140,154,169,183,206,207,210,225,227,228,230,231,234,236,237,240,244,246,262,263,283,291,293,304,311,322,327,328,336,337,340,344,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'index_mode':([230,311,],[277,332,]),'empty_literal':([7,12,28,52,62,88,90,106,110,119,123,124,137,138,140,154,169,207,210,225,227,228,230,231,237,240,244,246,262,263,291,293,311,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'operand0':([7,12,28,52,62,88,106,110,119,123,124,138,169,207,210,225,227,228,230,231,237,240,244,246,262,263,291,293,311,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'do_action':([0,3,13,55,92,125,126,183,206,234,236,283,304,322,327,328,336,337,340,344,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'procedure_call':([0,3,7,12,13,28,52,55,62,81,88,90,92,106,110,119,123,124,125,126,137,138,140,154,169,183,206,207,210,225,227,228,230,231,234,236,237,240,244,246,262,263,283,291,293,304,311,322,327,328,336,337,340,344,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'assignment_action':([0,3,13,55,92,125,126,183,206,234,236,283,304,322,327,328,336,337,340,344,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'mode_name':([94,121,168,192,268,310,329,],[173,173,173,173,173,173,173,]),'parameter':([119,123,244,],[196,196,196,]),'builtin_name':([0,3,7,12,13,28,52,55,62,81,88,90,92,106,110,119,123,124,125,126,137,138,140,154,169,183,206,207,210,225,227,228,230,231,234,236,237,240,244,246,262,263,283,291,293,304,311,322,327,328,336,337,340,344,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'parenthesized_expression':([7,12,28,52,62,88,90,106,110,119,123,124,137,138,140,154,169,207,210,225,227,228,230,231,237,240,244,246,262,263,291,293,311,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'parameter_spec':([268,],[303,]),'value_array_element':([7,12,28,52,62,88,90,106,110,119,123,124,137,138,140,154,169,207,210,225,227,228,230,231,237,240,244,246,262,263,291,293,311,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'string_literal':([7,12,28,52,62,88,90,106,110,119,123,124,137,138,140,154,169,207,210,225,227,228,230,231,237,240,244,246,262,263,291,293,311,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'if_action':([0,3,13,55,92,125,126,183,206,234,236,283,304,322,327,328,336,337,340,344,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'formal_parameter_list':([220,300,],[267,321,]),'result_spec':([269,301,],[305,323,]),'operand1':([7,12,28,52,62,88,106,110,119,123,124,138,140,169,207,210,225,227,228,230,231,237,240,244,246,262,263,291,293,311,],[87,87,87,87,87,87,87,87,87,87,87,87,215,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'composite_mode':([94,121,168,192,268,310,329,],[181,181,181,181,181,181,181,]),'assigning_operator':([17,],[110,]),'result_action':([0,3,13,55,92,125,126,183,206,234,236,283,304,322,327,328,336,337,340,344,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'step_enumeration':([53,],[132,]),'array_slice':([0,3,7,12,13,28,52,55,62,81,88,90,92,106,110,119,123,124,125,126,137,138,140,154,169,183,206,207,210,225,227,228,230,231,234,236,237,240,244,246,262,263,283,291,293,304,311,322,327,328,336,337,340,344,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'referenced_location':([7,12,28,52,62,88,90,106,110,119,123,124,137,138,140,154,169,207,210,225,227,228,230,231,237,240,244,246,262,263,291,293,311,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'synonym_statement':([0,13,304,322,327,328,336,337,340,344,],[39,39,39,39,39,39,39,39,39,39,]),'integer_literal':([7,12,28,52,62,88,90,106,110,119,123,124,137,138,140,154,169,207,210,225,227,228,230,231,237,240,244,246,262,263,291,293,311,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'constant_expression':([169,228,],[223,275,]),'string_concatenation_operator':([17,87,215,],[103,153,153,]),'arithmetic_multiplicative_operator':([17,63,216,],[102,137,137,]),'relational_operator':([75,],[143,]),'else_expression':([211,260,],[261,296,]),'control_part':([3,],[48,]),'loop_counter':([53,],[131,]),'arithmetic_additive_operator':([17,87,215,],[108,152,152,]),'bracketed_action':([0,3,13,55,92,125,126,183,206,234,236,283,304,322,327,328,336,337,340,344,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'while_control':([3,56,],[51,135,]),'primitive_value':([7,12,28,52,62,88,90,106,110,119,123,124,137,138,140,154,169,207,210,225,227,228,230,231,237,240,244,246,262,263,291,293,311,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'then_expression':([136,298,],[211,320,]),'elseif_expression':([211,260,],[259,295,]),'operand2':([7,12,28,52,62,88,106,110,119,123,124,138,140,154,169,207,210,225,227,228,230,231,237,240,244,246,262,263,291,293,311,],[63,63,63,63,63,63,63,63,63,63,63,63,63,216,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'statement_list':([0,304,322,328,337,],[13,327,336,340,344,]),'array_primitive_value':([7,12,28,52,62,88,90,106,110,119,123,124,137,138,140,154,169,207,210,225,227,228,230,231,237,240,244,246,262,263,291,293,311,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'literal':([7,12,28,52,62,88,90,106,110,119,123,124,137,138,140,154,169,207,210,225,227,228,230,231,237,240,244,246,262,263,291,293,311,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'builtin_call':([0,3,7,12,13,28,52,55,62,81,88,90,92,106,110,119,123,124,125,126,137,138,140,154,169,183,206,207,210,225,227,228,230,231,234,236,237,240,244,246,262,263,283,291,293,304,311,322,327,328,336,337,340,344,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'lower_bound':([106,124,138,225,227,230,311,],[185,185,185,185,185,185,185,]),'empty':([0,],[21,]),'action_statement':([0,3,13,55,125,183,206,234,236,283,304,322,327,328,336,337,340,344,],[22,49,22,133,49,49,133,49,133,133,22,22,22,22,22,22,22,22,]),'result_attribute':([341,],[346,]),'string_mode':([94,121,168,192,268,310,329,],[163,163,163,163,163,163,163,]),'expression':([7,12,28,52,62,88,106,110,119,123,124,138,169,207,210,225,227,228,230,231,237,240,244,246,262,263,291,293,311,],[73,98,73,98,98,155,186,189,195,195,202,186,224,253,258,270,270,224,270,98,285,286,195,288,98,299,253,317,270,]),'return_action':([0,3,13,55,92,125,126,183,206,234,236,283,304,322,327,328,336,337,340,344,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'dereferenced_reference':([0,3,7,12,13,28,52,55,62,81,88,90,92,106,110,119,123,124,125,126,137,138,140,154,169,183,206,207,210,225,227,228,230,231,234,236,237,240,244,246,262,263,283,291,293,304,311,322,327,328,336,337,340,344,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'char_literal':([7,12,28,52,62,88,90,106,110,119,123,124,137,138,140,154,169,207,210,225,227,228,230,231,237,240,244,246,262,263,291,293,311,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'action':([0,3,13,55,92,125,126,183,206,234,236,283,304,322,327,328,336,337,340,344,],[30,30,30,30,158,30,158,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'monadic_operator':([7,12,28,52,62,88,106,110,119,123,124,137,138,140,154,169,207,210,225,227,228,230,231,237,240,244,246,262,263,291,293,311,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'boolean_literal':([7,12,28,52,62,88,90,106,110,119,123,124,137,138,140,154,169,207,210,225,227,228,230,231,237,240,244,246,262,263,291,293,311,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'index_mode_list':([230,],[279,]),'newmode_list':([25,],[114,]),'membership_operator':([75,],[146,]),'id_list':([10,25,33,162,191,198,220,300,],[94,115,121,94,115,121,268,268,]),'initialization':([199,],[247,]),'string_length':([226,],[273,]),'literal_range':([106,124,138,225,227,230,311,],[187,204,213,271,274,280,280,]),'closed_dyadic_operator':([17,],[100,]),'upper_bound':([237,],[284,]),'operand4':([7,12,28,52,62,88,90,106,110,119,123,124,137,138,140,154,169,207,210,225,227,228,230,231,237,240,244,246,262,263,291,293,311,],[82,82,82,82,82,82,156,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'result':([7,28,],[78,117,]),'declaration_statement':([0,13,304,322,327,328,336,337,340,344,],[38,38,38,38,38,38,38,38,38,38,]),'program':([0,],[40,]),'array_mode':([94,121,168,192,268,310,329,],[177,177,177,177,177,177,177,]),'expression_list':([106,138,],[188,214,]),'mode_definition':([25,191,],[116,241,]),'declaration_list':([33,],[120,]),'action_statement_list':([3,125,183,234,],[55,206,236,283,]),'parameter_attribute':([302,],[325,]),'start_value':([207,],[254,]),'element_node':([310,],[330,]),'for_control':([3,],[56,]),'statement':([0,13,304,322,327,328,336,337,340,344,],[45,99,45,45,99,45,99,45,99,99,]),'mode':([94,121,168,192,268,310,329,],[176,199,222,242,302,331,341,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','lyaParser.py',64),
  ('program -> empty','program',1,'p_program','lyaParser.py',65),
  ('statement_list -> statement','statement_list',1,'p_statement_list1','lyaParser.py',72),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list1','lyaParser.py',73),
  ('statement -> declaration_statement','statement',1,'p_statement','lyaParser.py',80),
  ('statement -> newmode_statement','statement',1,'p_statement','lyaParser.py',81),
  ('statement -> synonym_statement','statement',1,'p_statement','lyaParser.py',82),
  ('statement -> action_statement','statement',1,'p_statement','lyaParser.py',83),
  ('statement -> procedure_statement','statement',1,'p_statement','lyaParser.py',84),
  ('declaration_statement -> DCL declaration_list SMC','declaration_statement',3,'p_declaration_statement','lyaParser.py',92),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','lyaParser.py',96),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','lyaParser.py',97),
  ('declaration -> id_list mode initialization','declaration',3,'p_declaration1','lyaParser.py',104),
  ('declaration -> id_list mode','declaration',2,'p_declaration2','lyaParser.py',108),
  ('id_list -> ID','id_list',1,'p_id_list','lyaParser.py',112),
  ('id_list -> id_list COMMA ID','id_list',3,'p_id_list','lyaParser.py',113),
  ('initialization -> EQUALS expression','initialization',2,'p_initialization','lyaParser.py',120),
  ('mode -> mode_name','mode',1,'p_mode','lyaParser.py',128),
  ('mode -> discrete_mode','mode',1,'p_mode','lyaParser.py',129),
  ('mode -> reference_mode','mode',1,'p_mode','lyaParser.py',130),
  ('mode -> composite_mode','mode',1,'p_mode','lyaParser.py',131),
  ('mode_name -> ID','mode_name',1,'p_mode_name','lyaParser.py',135),
  ('discrete_mode -> basic_mode','discrete_mode',1,'p_discrete_mode','lyaParser.py',139),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','lyaParser.py',140),
  ('basic_mode -> INT','basic_mode',1,'p_basic_mode','lyaParser.py',144),
  ('basic_mode -> BOOL','basic_mode',1,'p_basic_mode','lyaParser.py',145),
  ('basic_mode -> CHAR','basic_mode',1,'p_basic_mode','lyaParser.py',146),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaParser.py',150),
  ('discrete_range_mode -> basic_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaParser.py',151),
  ('discrete_mode_name -> ID','discrete_mode_name',1,'p_discrete_mode_name','lyaParser.py',155),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_litereal_range','lyaParser.py',159),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','lyaParser.py',163),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','lyaParser.py',167),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','lyaParser.py',171),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','lyaParser.py',175),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','lyaParser.py',176),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','lyaParser.py',180),
  ('string_length -> INTCONST','string_length',1,'p_string_length','lyaParser.py',184),
  ('array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_node','array_mode',5,'p_array_mode','lyaParser.py',188),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','lyaParser.py',193),
  ('index_mode_list -> index_mode_list COMMA index_mode','index_mode_list',3,'p_index_mode_list','lyaParser.py',194),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','lyaParser.py',201),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','lyaParser.py',202),
  ('element_node -> mode','element_node',1,'p_element_node','lyaParser.py',206),
  ('newmode_statement -> TYPE newmode_list SMC','newmode_statement',3,'p_newmode_statement','lyaParser.py',214),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','lyaParser.py',218),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','lyaParser.py',219),
  ('mode_definition -> id_list EQUALS mode','mode_definition',3,'p_mode_definition','lyaParser.py',226),
  ('synonym_statement -> SYN syn_list SMC','synonym_statement',3,'p_synonym_statement','lyaParser.py',230),
  ('syn_list -> syn_definition','syn_list',1,'p_syn_list','lyaParser.py',238),
  ('syn_list -> syn_list COMMA syn_definition','syn_list',3,'p_syn_list','lyaParser.py',239),
  ('syn_definition -> id_list EQUALS constant_expression','syn_definition',3,'p_syn_definition','lyaParser.py',246),
  ('syn_definition -> id_list mode EQUALS constant_expression','syn_definition',4,'p_syn_definition2','lyaParser.py',250),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','lyaParser.py',254),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','lyaParser.py',262),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','lyaParser.py',263),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','lyaParser.py',264),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','lyaParser.py',265),
  ('literal -> integer_literal','literal',1,'p_literal','lyaParser.py',269),
  ('literal -> boolean_literal','literal',1,'p_literal','lyaParser.py',270),
  ('literal -> char_literal','literal',1,'p_literal','lyaParser.py',271),
  ('literal -> empty_literal','literal',1,'p_literal','lyaParser.py',272),
  ('literal -> string_literal','literal',1,'p_literal','lyaParser.py',273),
  ('integer_literal -> INTCONST','integer_literal',1,'p_integer_literal','lyaParser.py',277),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','lyaParser.py',281),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','lyaParser.py',282),
  ('char_literal -> CHARCONST','char_literal',1,'p_char_literal','lyaParser.py',286),
  ('string_literal -> STRINGCONST','string_literal',1,'p_string_literal','lyaParser.py',290),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','lyaParser.py',294),
  ('value_array_element -> array_primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','lyaParser.py',298),
  ('value_array_slice -> array_primitive_value LBRACKET literal_range RBRACKET','value_array_slice',4,'p_value_array_slice','lyaParser.py',302),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','lyaParser.py',306),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','lyaParser.py',310),
  ('action_statement -> action SMC','action_statement',2,'p_action_statement','lyaParser.py',318),
  ('action_statement -> label COLON action SMC','action_statement',4,'p_action_statement','lyaParser.py',319),
  ('label -> ID','label',1,'p_label','lyaParser.py',326),
  ('action -> assignment_action','action',1,'p_action','lyaParser.py',330),
  ('action -> bracketed_action','action',1,'p_action','lyaParser.py',331),
  ('action -> call_action','action',1,'p_action','lyaParser.py',332),
  ('action -> exit_action','action',1,'p_action','lyaParser.py',333),
  ('action -> return_action','action',1,'p_action','lyaParser.py',334),
  ('action -> result_action','action',1,'p_action','lyaParser.py',335),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','lyaParser.py',343),
  ('assigning_operator -> EQUALS','assigning_operator',1,'p_assigning_operator','lyaParser.py',347),
  ('assigning_operator -> closed_dyadic_operator EQUALS','assigning_operator',2,'p_assigning_operator','lyaParser.py',348),
  ('closed_dyadic_operator -> arithmetic_additive_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','lyaParser.py',355),
  ('closed_dyadic_operator -> arithmetic_multiplicative_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','lyaParser.py',356),
  ('closed_dyadic_operator -> string_concatenation_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','lyaParser.py',357),
  ('expression_list -> expression','expression_list',1,'p_expression_list','lyaParser.py',361),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','lyaParser.py',362),
  ('expression -> operand0','expression',1,'p_expression','lyaParser.py',369),
  ('expression -> conditional_expression','expression',1,'p_expression','lyaParser.py',370),
  ('operand0 -> operand1','operand0',1,'p_operand0','lyaParser.py',374),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','lyaParser.py',375),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','lyaParser.py',382),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','lyaParser.py',383),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','lyaParser.py',387),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','lyaParser.py',391),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','lyaParser.py',392),
  ('relational_operator -> ISEQUAL','relational_operator',1,'p_relational_operator','lyaParser.py',393),
  ('relational_operator -> NOTEQUAL','relational_operator',1,'p_relational_operator','lyaParser.py',394),
  ('relational_operator -> GT','relational_operator',1,'p_relational_operator','lyaParser.py',395),
  ('relational_operator -> GE','relational_operator',1,'p_relational_operator','lyaParser.py',396),
  ('relational_operator -> LT','relational_operator',1,'p_relational_operator','lyaParser.py',397),
  ('relational_operator -> LE','relational_operator',1,'p_relational_operator','lyaParser.py',398),
  ('operand1 -> operand2','operand1',1,'p_operand1','lyaParser.py',402),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1','lyaParser.py',403),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','lyaParser.py',410),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','lyaParser.py',411),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','lyaParser.py',415),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','lyaParser.py',416),
  ('string_concatenation_operator -> STRCONC','string_concatenation_operator',1,'p_string_concatenation_operator','lyaParser.py',420),
  ('operand2 -> operand3','operand2',1,'p_operand2','lyaParser.py',424),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','lyaParser.py',425),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaParser.py',432),
  ('arithmetic_multiplicative_operator -> DIV','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaParser.py',433),
  ('arithmetic_multiplicative_operator -> MOD','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaParser.py',434),
  ('operand3 -> operand4','operand3',1,'p_operand3','lyaParser.py',438),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','lyaParser.py',439),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','lyaParser.py',446),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','lyaParser.py',447),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','lyaParser.py',451),
  ('operand4 -> location','operand4',1,'p_operand4','lyaParser.py',452),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','lyaParser.py',453),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','lyaParser.py',459),
  ('conditional_expression -> IF boolean_expression then_expression elseif_expression_list else_expression FI','conditional_expression',6,'p_conditional_expression2','lyaParser.py',463),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','lyaParser.py',467),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','lyaParser.py',471),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','lyaParser.py',475),
  ('elseif_expression_list -> elseif_expression','elseif_expression_list',1,'p_elseif_expression_list','lyaParser.py',479),
  ('elseif_expression_list -> elseif_expression_list elseif_expression','elseif_expression_list',2,'p_elseif_expression_list','lyaParser.py',480),
  ('elseif_expression -> ELSIF boolean_expression then_expression','elseif_expression',3,'p_elseif_expression','lyaParser.py',487),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','lyaParser.py',495),
  ('location -> location_name','location',1,'p_location','lyaParser.py',499),
  ('location -> string_reference','location',1,'p_location','lyaParser.py',500),
  ('location -> dereferenced_reference','location',1,'p_location','lyaParser.py',501),
  ('location -> array_element','location',1,'p_location','lyaParser.py',502),
  ('location -> array_slice','location',1,'p_location','lyaParser.py',503),
  ('location -> call_action','location',1,'p_location','lyaParser.py',504),
  ('location_name -> ID','location_name',1,'p_location_name','lyaParser.py',508),
  ('string_reference -> location_name LBRACKET integer_expression RBRACKET','string_reference',4,'p_string_reference','lyaParser.py',512),
  ('string_reference -> location_name LBRACKET literal_range RBRACKET','string_reference',4,'p_string_reference2','lyaParser.py',516),
  ('dereferenced_reference -> location ARROW','dereferenced_reference',2,'p_dereferenced_reference','lyaParser.py',520),
  ('array_element -> location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','lyaParser.py',524),
  ('array_slice -> location LBRACKET literal_range RBRACKET','array_slice',4,'p_array_slice','lyaParser.py',528),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','lyaParser.py',536),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','lyaParser.py',537),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','lyaParser.py',545),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action2','lyaParser.py',549),
  ('then_clause -> THEN','then_clause',1,'p_then_clause','lyaParser.py',553),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','lyaParser.py',554),
  ('else_clause -> ELSE','else_clause',1,'p_else_clause','lyaParser.py',561),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','lyaParser.py',562),
  ('else_clause -> elseif_clause','else_clause',1,'p_else_clause2','lyaParser.py',569),
  ('elseif_clause -> ELSIF boolean_expression then_clause','elseif_clause',3,'p_elseif_clause','lyaParser.py',573),
  ('elseif_clause -> ELSIF boolean_expression then_clause else_clause','elseif_clause',4,'p_elseif_clause2','lyaParser.py',577),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','lyaParser.py',582),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','lyaParser.py',583),
  ('do_action -> DO OD','do_action',2,'p_do_action','lyaParser.py',594),
  ('do_action -> DO control_part SMC OD','do_action',4,'p_do_action2','lyaParser.py',598),
  ('do_action -> DO control_part SMC action_statement_list OD','do_action',5,'p_do_action3','lyaParser.py',602),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action4','lyaParser.py',606),
  ('control_part -> for_control','control_part',1,'p_control_part','lyaParser.py',610),
  ('control_part -> while_control','control_part',1,'p_control_part','lyaParser.py',611),
  ('control_part -> for_control while_control','control_part',2,'p_control_part2','lyaParser.py',615),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','lyaParser.py',619),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','lyaParser.py',623),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','lyaParser.py',624),
  ('step_enumeration -> loop_counter EQUALS start_value end_value','step_enumeration',4,'p_step_enumeration','lyaParser.py',628),
  ('step_enumeration -> loop_counter EQUALS start_value step_value end_value','step_enumeration',5,'p_step_enumeration2','lyaParser.py',632),
  ('step_enumeration -> loop_counter EQUALS start_value DOWN end_value','step_enumeration',5,'p_step_enumeration3','lyaParser.py',636),
  ('step_enumeration -> loop_counter EQUALS start_value step_value DOWN end_value','step_enumeration',6,'p_step_enumeration4','lyaParser.py',640),
  ('loop_counter -> ID','loop_counter',1,'p_loop_counter','lyaParser.py',644),
  ('start_value -> discrete_expression','start_value',1,'p_start_value','lyaParser.py',648),
  ('step_value -> BY integer_expression','step_value',2,'p_step_value','lyaParser.py',652),
  ('end_value -> TO discrete_expression','end_value',2,'p_end_value','lyaParser.py',656),
  ('discrete_expression -> expression','discrete_expression',1,'p_discrete_expression','lyaParser.py',660),
  ('range_enumeration -> loop_counter IN discrete_mode','range_enumeration',3,'p_range_enumeration','lyaParser.py',664),
  ('range_enumeration -> loop_counter DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration2','lyaParser.py',668),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','lyaParser.py',672),
  ('procedure_statement -> label COLON procedure_definition SMC','procedure_statement',4,'p_procedure_statement','lyaParser.py',680),
  ('procedure_definition -> PROC LPAREN RPAREN SMC END','procedure_definition',5,'p_procedure_definition1','lyaParser.py',684),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SMC statement_list END','procedure_definition',7,'p_procedure_definition1','lyaParser.py',685),
  ('procedure_definition -> PROC LPAREN RPAREN SMC statement_list END','procedure_definition',6,'p_procedure_definition1','lyaParser.py',686),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SMC END','procedure_definition',6,'p_procedure_definition2','lyaParser.py',695),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SMC END','procedure_definition',7,'p_procedure_definition2','lyaParser.py',696),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SMC statement_list END','procedure_definition',8,'p_procedure_definition2','lyaParser.py',697),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SMC statement_list END','procedure_definition',7,'p_procedure_definition3','lyaParser.py',706),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SMC END','procedure_definition',6,'p_procedure_definition3','lyaParser.py',707),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','lyaParser.py',714),
  ('formal_parameter_list -> formal_parameter COMMA formal_parameter_list','formal_parameter_list',3,'p_formal_parameter_list','lyaParser.py',715),
  ('formal_parameter -> id_list parameter_spec','formal_parameter',2,'p_formal_parameter','lyaParser.py',722),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','lyaParser.py',728),
  ('parameter_spec -> mode parameter_attribute','parameter_spec',2,'p_parameter_spec','lyaParser.py',729),
  ('parameter_attribute -> LOC','parameter_attribute',1,'p_parameter_attribute','lyaParser.py',736),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','lyaParser.py',740),
  ('result_spec -> RETURNS LPAREN mode result_attribute RPAREN','result_spec',5,'p_result_spec','lyaParser.py',741),
  ('result_attribute -> LOC','result_attribute',1,'p_result_attribute','lyaParser.py',748),
  ('call_action -> procedure_call','call_action',1,'p_call_action','lyaParser.py',756),
  ('call_action -> builtin_call','call_action',1,'p_call_action','lyaParser.py',757),
  ('procedure_call -> ID LPAREN RPAREN','procedure_call',3,'p_procedure_call','lyaParser.py',761),
  ('procedure_call -> ID LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','lyaParser.py',762),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','lyaParser.py',769),
  ('parameter_list -> parameter COMMA parameter_list','parameter_list',3,'p_parameter_list','lyaParser.py',770),
  ('parameter -> expression','parameter',1,'p_parameter','lyaParser.py',777),
  ('exit_action -> EXIT label','exit_action',2,'p_exit_action','lyaParser.py',785),
  ('return_action -> RETURN','return_action',1,'p_return_action','lyaParser.py',789),
  ('return_action -> RETURN result','return_action',2,'p_return_action','lyaParser.py',790),
  ('result_action -> RESULT result','result_action',2,'p_result_action','lyaParser.py',797),
  ('result -> expression','result',1,'p_result','lyaParser.py',801),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','lyaParser.py',805),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','lyaParser.py',806),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','lyaParser.py',813),
  ('builtin_name -> PRED','builtin_name',1,'p_builtin_name','lyaParser.py',814),
  ('builtin_name -> SUCC','builtin_name',1,'p_builtin_name','lyaParser.py',815),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','lyaParser.py',816),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','lyaParser.py',817),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','lyaParser.py',818),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','lyaParser.py',819),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','lyaParser.py',820),
  ('integer_expression -> expression','integer_expression',1,'p_integer_expression','lyaParser.py',829),
  ('empty -> <empty>','empty',0,'p_empty','lyaParser.py',836),
]
