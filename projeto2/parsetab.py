
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'F7A46C189431A3351898E577224B45DD'
    
_lr_action_items = {'PRED':([0,3,4,11,16,24,25,31,32,34,37,40,48,50,54,55,67,69,73,74,78,83,98,99,100,104,107,110,111,115,116,117,118,119,120,124,125,133,135,140,145,163,165,169,170,171,172,173,174,175,176,177,178,179,180,181,183,184,185,190,192,196,206,209,211,218,219,220,221,227,230,231,234,237,238,243,246,248,273,274,279,293,294,298,309,326,327,329,335,336,338,342,],[1,-5,1,-7,1,1,-8,-3,1,-6,-9,1,-157,1,1,1,1,-120,1,1,-121,1,1,-74,-4,1,-112,-117,-116,-115,-110,1,-84,1,-111,1,1,1,-158,-45,-10,1,1,-103,-104,-95,-97,-102,-100,1,-99,-98,-105,-101,-96,1,-109,1,-108,-49,1,-85,1,1,1,1,1,1,1,1,1,1,1,-181,-75,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'OD':([4,48,54,99,133,135,209,238,],[46,-157,134,-74,208,-158,257,-75,]),'MOD':([5,6,19,23,27,30,35,39,42,45,63,64,65,66,68,70,72,75,76,77,79,80,81,85,86,87,90,91,92,94,95,96,97,112,138,166,168,186,195,210,223,224,236,244,245,247,249,250,266,270,271,],[-199,-137,-135,-138,-139,-140,110,-136,-134,-200,110,-64,-61,-140,-59,-62,-68,-67,-65,-56,-66,-60,-69,-118,-113,-58,-63,-55,-123,-124,-57,-122,-139,-143,-211,-119,-133,-140,-201,-212,-114,-73,110,-202,-145,-144,-142,-141,-140,-71,-70,]),'STRINGCONST':([16,32,40,50,55,67,69,73,74,78,104,107,110,111,115,116,117,118,119,120,124,163,165,169,170,171,172,173,174,175,176,177,178,179,180,183,184,185,192,196,206,211,218,219,220,221,227,231,243,246,248,273,274,293,294,298,],[72,72,72,72,72,72,-120,72,72,-121,72,-112,-117,-116,-115,-110,72,-84,72,-111,72,72,72,-103,-104,-95,-97,-102,-100,72,-99,-98,-105,-101,-96,-109,72,-108,72,-85,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'THEN':([5,6,19,23,39,42,45,63,64,65,66,68,70,72,75,76,77,79,80,81,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,112,138,166,167,168,195,210,223,224,229,236,244,245,247,249,250,270,271,278,301,302,323,],[-199,-137,-135,-138,-136,-134,-200,-106,-64,-61,-140,-59,-62,-68,-67,-65,-56,-66,-60,-69,-92,-91,-118,-113,-58,-127,181,-63,-55,-123,-93,-124,-57,-122,-139,-143,-211,-119,227,-133,-201,-212,-114,-73,-94,-107,-202,-145,-144,-142,-141,-71,-70,181,227,-125,-126,]),'INT':([56,62,103,142,147,207,214,220,251,283,298,299,328,],[-15,146,146,146,146,146,-16,146,146,146,146,146,146,]),'NULL':([16,32,40,50,55,67,69,73,74,78,104,107,110,111,115,116,117,118,119,120,124,163,165,169,170,171,172,173,174,175,176,177,178,179,180,183,184,185,192,196,206,211,218,219,220,221,227,231,243,246,248,273,274,293,294,298,],[81,81,81,81,81,81,-120,81,81,-121,81,-112,-117,-116,-115,-110,81,-84,81,-111,81,81,81,-103,-104,-95,-97,-102,-100,81,-99,-98,-105,-101,-96,-109,81,-108,81,-85,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'TRUE':([16,32,40,50,55,67,69,73,74,78,104,107,110,111,115,116,117,118,119,120,124,163,165,169,170,171,172,173,174,175,176,177,178,179,180,183,184,185,192,196,206,211,218,219,220,221,227,231,243,246,248,273,274,293,294,298,],[79,79,79,79,79,79,-120,79,79,-121,79,-112,-117,-116,-115,-110,79,-84,79,-111,79,79,79,-103,-104,-95,-97,-102,-100,79,-99,-98,-105,-101,-96,-109,79,-108,79,-85,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'DIV':([5,6,19,23,27,30,35,39,42,45,63,64,65,66,68,70,72,75,76,77,79,80,81,85,86,87,90,91,92,94,95,96,97,112,138,166,168,186,195,210,223,224,236,244,245,247,249,250,266,270,271,],[-199,-137,-135,-138,-139,-140,111,-136,-134,-200,111,-64,-61,-140,-59,-62,-68,-67,-65,-56,-66,-60,-69,-118,-113,-58,-63,-55,-123,-124,-57,-122,-139,-143,-211,-119,-133,-140,-201,-212,-114,-73,111,-202,-145,-144,-142,-141,-140,-71,-70,]),'ELSE':([5,6,19,23,39,42,45,48,63,64,65,66,68,70,72,75,76,77,79,80,81,82,84,85,86,87,90,91,92,93,94,95,96,97,99,112,135,138,166,168,181,182,195,210,223,224,228,229,230,236,238,244,245,247,249,250,270,271,272,276,277,302,304,305,322,323,],[-199,-137,-135,-138,-136,-134,-200,-157,-106,-64,-61,-140,-59,-62,-68,-67,-65,-56,-66,-60,-69,-92,-91,-118,-113,-58,-63,-55,-123,-93,-124,-57,-122,-139,-74,-143,-158,-211,-119,-133,-150,234,-201,-212,-114,-73,273,-94,-151,-107,-75,-202,-145,-144,-142,-141,-71,-70,-128,273,-130,-125,-131,234,-132,-126,]),'SUCC':([0,3,4,11,16,24,25,31,32,34,37,40,48,50,54,55,67,69,73,74,78,83,98,99,100,104,107,110,111,115,116,117,118,119,120,124,125,133,135,140,145,163,165,169,170,171,172,173,174,175,176,177,178,179,180,181,183,184,185,190,192,196,206,209,211,218,219,220,221,227,230,231,234,237,238,243,246,248,273,274,279,293,294,298,309,326,327,329,335,336,338,342,],[10,-5,10,-7,10,10,-8,-3,10,-6,-9,10,-157,10,10,10,10,-120,10,10,-121,10,10,-74,-4,10,-112,-117,-116,-115,-110,10,-84,10,-111,10,10,10,-158,-45,-10,10,10,-103,-104,-95,-97,-102,-100,10,-99,-98,-105,-101,-96,10,-109,10,-108,-49,10,-85,10,10,10,10,10,10,10,10,10,10,10,-181,-75,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'PLUS':([5,6,19,23,27,30,35,39,42,45,63,64,65,66,68,70,72,75,76,77,79,80,81,85,86,87,90,91,92,93,94,95,96,97,112,138,166,168,186,195,210,223,224,229,236,244,245,247,249,250,266,270,271,],[-199,-137,-135,-138,-139,-140,116,-136,-134,-200,-106,-64,-61,-140,-59,-62,-68,-67,-65,-56,-66,-60,-69,-118,-113,-58,-63,-55,-123,116,-124,-57,-122,-139,-143,-211,-119,-133,-140,-201,-212,-114,-73,116,-107,-202,-145,-144,-142,-141,-140,-71,-70,]),'EQUALS':([5,6,19,23,27,30,35,39,42,45,56,59,103,107,108,109,110,111,112,113,114,115,116,120,130,131,138,146,148,150,151,152,154,156,157,158,159,160,161,162,186,193,195,210,214,216,244,245,247,249,250,295,296,297,320,321,],[-199,-137,-135,-138,-139,-140,118,-136,-134,-200,-15,142,192,-112,-87,-86,-117,-116,-143,-88,196,-115,-110,-111,206,-173,-211,-25,-19,-24,-22,-23,-36,-18,-27,-26,-35,-20,-21,221,-140,243,-201,-212,-16,-34,-202,-145,-144,-142,-141,-37,-29,-28,-39,-44,]),'TYPE':([0,3,11,24,25,31,34,37,99,100,140,145,190,237,238,309,326,327,329,335,336,338,342,],[12,-5,-7,12,-8,-3,-6,-9,-74,-4,-45,-10,-49,-181,-75,12,12,12,12,12,12,12,12,]),'$end':([0,3,8,11,24,25,31,33,34,37,99,100,140,145,190,237,238,],[-222,-5,0,-7,-1,-8,-3,-2,-6,-9,-74,-4,-45,-10,-49,-181,-75,]),'NOT':([16,32,40,50,55,67,74,104,107,110,111,115,116,117,118,119,120,124,163,165,169,170,171,172,173,174,175,176,177,178,179,180,183,184,185,192,196,206,211,218,219,220,221,227,231,243,246,248,273,274,293,294,298,],[78,78,78,78,78,78,78,78,-112,-117,-116,-115,-110,78,-84,78,-111,78,78,78,-103,-104,-95,-97,-102,-100,78,-99,-98,-105,-101,-96,-109,78,-108,78,-85,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'DCL':([0,3,11,24,25,31,34,37,99,100,140,145,190,237,238,309,326,327,329,335,336,338,342,],[13,-5,-7,13,-8,-3,-6,-9,-74,-4,-45,-10,-49,-181,-75,13,13,13,13,13,13,13,13,]),'MINUS':([5,6,16,19,23,27,30,32,35,39,40,42,45,50,55,63,64,65,66,67,68,70,72,74,75,76,77,79,80,81,85,86,87,90,91,92,93,94,95,96,97,104,107,110,111,112,115,116,117,118,119,120,124,138,163,165,166,168,169,170,171,172,173,174,175,176,177,178,179,180,183,184,185,186,192,195,196,206,210,211,218,219,220,221,223,224,227,229,231,236,243,244,245,246,247,248,249,250,266,270,271,273,274,293,294,298,],[-199,-137,69,-135,-138,-139,-140,69,120,-136,69,-134,-200,69,69,-106,-64,-61,-140,69,-59,-62,-68,69,-67,-65,-56,-66,-60,-69,-118,-113,-58,-63,-55,-123,120,-124,-57,-122,-139,69,-112,-117,-116,-143,-115,-110,69,-84,69,-111,69,-211,69,69,-119,-133,-103,-104,-95,-97,-102,-100,69,-99,-98,-105,-101,-96,-109,69,-108,-140,69,-201,-85,69,-212,69,69,69,69,69,-114,-73,69,120,69,-107,69,-202,-145,69,-144,69,-142,-141,-140,-71,-70,69,69,69,69,69,]),'LENGTH':([0,3,4,11,16,24,25,31,32,34,37,40,48,50,54,55,67,69,73,74,78,83,98,99,100,104,107,110,111,115,116,117,118,119,120,124,125,133,135,140,145,163,165,169,170,171,172,173,174,175,176,177,178,179,180,181,183,184,185,190,192,196,206,209,211,218,219,220,221,227,230,231,234,237,238,243,246,248,273,274,279,293,294,298,309,326,327,329,335,336,338,342,],[15,-5,15,-7,15,15,-8,-3,15,-6,-9,15,-157,15,15,15,15,-120,15,15,-121,15,15,-74,-4,15,-112,-117,-116,-115,-110,15,-84,15,-111,15,15,15,-158,-45,-10,15,15,-103,-104,-95,-97,-102,-100,15,-99,-98,-105,-101,-96,15,-109,15,-108,-49,15,-85,15,15,15,15,15,15,15,15,15,15,15,-181,-75,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'IN':([5,6,19,23,39,42,45,63,64,65,66,68,70,72,75,76,77,79,80,81,84,85,86,87,90,91,92,93,94,95,96,97,112,130,131,138,166,168,195,205,210,223,224,229,236,244,245,247,249,250,266,270,271,],[-199,-137,-135,-138,-136,-134,-200,-106,-64,-61,-140,-59,-62,-68,-67,-65,-56,-66,-60,-69,172,-118,-113,-58,-63,-55,-123,-93,-124,-57,-122,-139,-143,207,-173,-211,-119,-133,-201,251,-212,-114,-73,-94,-107,-202,-145,-144,-142,-141,-140,-71,-70,]),'IF':([0,3,4,11,16,24,25,31,32,34,37,40,48,50,54,55,67,74,98,99,100,104,117,118,119,124,125,133,135,140,145,165,181,190,192,196,206,209,211,218,219,220,221,227,230,231,234,237,238,243,246,248,273,274,279,293,294,298,309,326,327,329,335,336,338,342,],[16,-5,16,-7,74,16,-8,-3,74,-6,-9,74,-157,74,16,74,74,74,16,-74,-4,74,74,-84,74,74,16,16,-158,-45,-10,74,16,-49,74,-85,74,16,74,74,74,74,74,74,16,74,16,-181,-75,74,74,74,74,74,16,74,74,74,16,16,16,16,16,16,16,16,]),'COMMA':([5,6,19,23,39,42,45,56,57,58,59,60,61,62,63,64,65,66,68,70,72,75,76,77,79,80,81,82,84,85,86,87,90,91,92,93,94,95,96,97,101,102,103,112,137,138,139,146,148,150,151,152,154,156,157,158,159,160,161,162,166,168,195,198,199,210,212,213,214,215,216,222,223,224,226,229,236,240,241,242,244,245,247,249,250,264,265,267,268,269,270,271,283,284,285,286,287,288,295,296,297,302,310,311,319,320,321,323,331,332,],[-199,-137,-135,-138,-136,-134,-200,-15,141,-46,143,144,-11,143,-106,-64,-61,-140,-59,-62,-68,-67,-65,-56,-66,-60,-69,-92,-91,-118,-113,-58,-63,-55,-123,-93,-124,-57,-122,-139,-50,191,143,-143,211,-211,-205,-25,-19,-24,-22,-23,-36,-18,-27,-26,-35,-20,-21,-14,-119,-133,-201,246,-89,-212,-47,-48,-16,-12,-34,-13,-114,-73,246,-94,-107,-51,-54,-52,-202,-145,-144,-142,-141,-43,-42,-40,298,-17,-71,-70,143,312,-53,-90,-33,-31,-37,-29,-28,-125,-192,-193,-41,-39,-44,-126,-194,-195,]),'ISEQUAL':([5,6,19,23,39,42,45,63,64,65,66,68,70,72,75,76,77,79,80,81,84,85,86,87,90,91,92,93,94,95,96,97,112,138,166,168,195,210,223,224,229,236,244,245,247,249,250,266,270,271,],[-199,-137,-135,-138,-136,-134,-200,-106,-64,-61,-140,-59,-62,-68,-67,-65,-56,-66,-60,-69,174,-118,-113,-58,-63,-55,-123,-93,-124,-57,-122,-139,-143,-211,-119,-133,-201,-212,-114,-73,-94,-107,-202,-145,-144,-142,-141,-140,-71,-70,]),'CHARCONST':([16,32,40,50,55,67,69,73,74,78,104,107,110,111,115,116,117,118,119,120,124,163,165,169,170,171,172,173,174,175,176,177,178,179,180,183,184,185,192,196,206,211,218,219,220,221,227,231,243,246,248,273,274,293,294,298,],[75,75,75,75,75,75,-120,75,75,-121,75,-112,-117,-116,-115,-110,75,-84,75,-111,75,75,75,-103,-104,-95,-97,-102,-100,75,-99,-98,-105,-101,-96,-109,75,-108,75,-85,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'GT':([5,6,19,23,39,42,45,63,64,65,66,68,70,72,75,76,77,79,80,81,84,85,86,87,90,91,92,93,94,95,96,97,112,138,166,168,195,210,223,224,229,236,244,245,247,249,250,266,270,271,],[-199,-137,-135,-138,-136,-134,-200,-106,-64,-61,-140,-59,-62,-68,-67,-65,-56,-66,-60,-69,173,-118,-113,-58,-63,-55,-123,-93,-124,-57,-122,-139,-143,-211,-119,-133,-201,-212,-114,-73,-94,-107,-202,-145,-144,-142,-141,-140,-71,-70,]),'BY':([5,6,19,23,39,42,45,63,64,65,66,68,70,72,75,76,77,79,80,81,82,84,85,86,87,90,91,92,93,94,95,96,97,112,138,166,168,195,210,223,224,229,236,244,245,247,249,250,252,253,254,270,271,302,323,],[-199,-137,-135,-138,-136,-134,-200,-106,-64,-61,-140,-59,-62,-68,-67,-65,-56,-66,-60,-69,-92,-91,-118,-113,-58,-63,-55,-123,-93,-124,-57,-122,-139,-143,-211,-119,-133,-201,-212,-114,-73,-94,-107,-202,-145,-144,-142,-141,-177,-174,293,-71,-70,-125,-126,]),'DO':([0,3,4,11,24,25,31,34,37,48,54,98,99,100,125,133,135,140,145,181,190,209,230,234,237,238,279,309,326,327,329,335,336,338,342,],[4,-5,4,-7,4,-8,-3,-6,-9,-157,4,4,-74,-4,4,4,-158,-45,-10,4,-49,4,4,4,-181,-75,4,4,4,4,4,4,4,4,4,]),'FALSE':([16,32,40,50,55,67,69,73,74,78,104,107,110,111,115,116,117,118,119,120,124,163,165,169,170,171,172,173,174,175,176,177,178,179,180,183,184,185,192,196,206,211,218,219,220,221,227,231,243,246,248,273,274,293,294,298,],[76,76,76,76,76,76,-120,76,76,-121,76,-112,-117,-116,-115,-110,76,-84,76,-111,76,76,76,-103,-104,-95,-97,-102,-100,76,-99,-98,-105,-101,-96,-109,76,-108,76,-85,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'LBRACKET':([5,6,19,23,27,30,35,39,42,45,64,65,66,68,70,71,72,75,76,77,79,80,81,87,90,91,92,95,96,97,112,138,149,155,168,186,195,210,224,244,245,247,249,250,266,270,271,],[-199,-137,-135,-138,-139,-140,117,-136,124,-200,-64,-61,-140,-59,-62,165,-68,-67,-65,-56,-66,-60,-69,-58,-63,-55,117,-57,-72,-139,-143,-211,217,220,117,-140,-201,-212,-73,-202,-145,-144,-142,-141,-140,-71,-70,]),'FI':([5,6,19,23,39,42,45,48,63,64,65,66,68,70,72,75,76,77,79,80,81,82,84,85,86,87,90,91,92,93,94,95,96,97,99,112,135,138,166,168,181,182,195,210,223,224,229,230,233,234,235,236,238,244,245,247,249,250,270,271,275,279,300,302,303,305,323,324,],[-199,-137,-135,-138,-136,-134,-200,-157,-106,-64,-61,-140,-59,-62,-68,-67,-65,-56,-66,-60,-69,-92,-91,-118,-113,-58,-63,-55,-123,-93,-124,-57,-122,-139,-74,-143,-158,-211,-119,-133,-150,232,-201,-212,-114,-73,-94,-151,-154,-152,280,-107,-75,-202,-145,-144,-142,-141,-71,-70,302,-153,-129,-125,323,-155,-126,-156,]),'ARROW':([5,6,16,19,23,27,30,32,35,39,40,42,45,50,55,66,67,69,73,74,78,92,97,104,107,110,111,112,115,116,117,118,119,120,124,138,163,165,168,169,170,171,172,173,174,175,176,177,178,179,180,183,184,185,186,192,195,196,206,210,211,218,219,220,221,227,231,243,244,245,246,247,248,249,250,266,273,274,293,294,298,],[-199,-137,83,-135,-138,-139,-140,83,112,-136,83,-134,-200,83,83,-140,83,-120,83,83,-121,112,-139,83,-112,-117,-116,-143,-115,-110,83,-84,83,-111,83,-211,83,83,112,-103,-104,-95,-97,-102,-100,83,-99,-98,-105,-101,-96,-109,83,-108,-140,83,-201,-85,83,-212,83,83,83,83,83,83,83,83,-202,-145,83,-144,83,-142,-141,-140,83,83,83,83,83,]),'UPPER':([0,3,4,11,16,24,25,31,32,34,37,40,48,50,54,55,67,69,73,74,78,83,98,99,100,104,107,110,111,115,116,117,118,119,120,124,125,133,135,140,145,163,165,169,170,171,172,173,174,175,176,177,178,179,180,181,183,184,185,190,192,196,206,209,211,218,219,220,221,227,230,231,234,237,238,243,246,248,273,274,279,293,294,298,309,326,327,329,335,336,338,342,],[38,-5,38,-7,38,38,-8,-3,38,-6,-9,38,-157,38,38,38,38,-120,38,38,-121,38,38,-74,-4,38,-112,-117,-116,-115,-110,38,-84,38,-111,38,38,38,-158,-45,-10,38,38,-103,-104,-95,-97,-102,-100,38,-99,-98,-105,-101,-96,38,-109,38,-108,-49,38,-85,38,38,38,38,38,38,38,38,38,38,38,-181,-75,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'RESULT':([0,3,4,11,24,25,31,34,37,48,54,98,99,100,125,133,135,140,145,181,190,209,230,234,237,238,279,309,326,327,329,335,336,338,342,],[32,-5,32,-7,32,-8,-3,-6,-9,-157,32,32,-74,-4,32,32,-158,-45,-10,32,-49,32,32,32,-181,-75,32,32,32,32,32,32,32,32,32,]),'CHARS':([56,62,103,142,147,214,283,299,328,],[-15,149,149,149,149,-16,149,149,149,]),'LT':([5,6,19,23,39,42,45,63,64,65,66,68,70,72,75,76,77,79,80,81,84,85,86,87,90,91,92,93,94,95,96,97,112,138,166,168,195,210,223,224,229,236,244,245,247,249,250,266,270,271,],[-199,-137,-135,-138,-136,-134,-200,-106,-64,-61,-140,-59,-62,-68,-67,-65,-56,-66,-60,-69,170,-118,-113,-58,-63,-55,-123,-93,-124,-57,-122,-139,-143,-211,-119,-133,-201,-212,-114,-73,-94,-107,-202,-145,-144,-142,-141,-140,-71,-70,]),'LPAREN':([1,9,10,14,15,16,20,28,30,32,36,38,40,50,55,66,67,69,73,74,78,104,107,110,111,115,116,117,118,119,120,124,146,151,152,153,157,158,163,165,169,170,171,172,173,174,175,176,177,178,179,180,183,184,185,186,189,192,196,206,211,218,219,220,221,227,231,243,246,248,256,266,273,274,293,294,298,308,],[-214,55,-215,-217,-218,67,-219,-213,104,67,-220,-216,67,67,67,104,67,-120,67,67,-121,67,-112,-117,-116,-115,-110,67,-84,67,-111,67,-25,-30,218,219,-27,-26,67,67,-103,-104,-95,-97,-102,-100,67,-99,-98,-105,-101,-96,-109,67,-108,104,239,67,-85,67,67,67,67,67,67,67,67,67,67,67,-30,104,67,67,67,67,67,328,]),'WHILE':([4,5,6,19,23,39,42,45,51,63,64,65,66,68,70,72,75,76,77,79,80,81,82,84,85,86,87,90,91,92,93,94,95,96,97,112,128,129,132,138,146,150,152,157,158,166,168,195,210,223,224,229,236,244,245,247,249,250,252,255,270,271,289,290,296,297,302,313,315,318,323,334,],[50,-199,-137,-135,-138,-136,-134,-200,50,-106,-64,-61,-140,-59,-62,-68,-67,-65,-56,-66,-60,-69,-92,-91,-118,-113,-58,-63,-55,-123,-93,-124,-57,-122,-139,-143,-166,-167,-168,-211,-25,-24,-23,-27,-26,-119,-133,-201,-212,-114,-73,-94,-107,-202,-145,-144,-142,-141,-177,-178,-71,-70,-179,-169,-29,-28,-125,-170,-171,-176,-126,-172,]),'RPAREN':([5,6,19,23,39,42,45,55,63,64,65,66,68,70,72,75,76,77,79,80,81,82,84,85,86,87,90,91,92,93,94,95,96,97,104,112,136,137,138,139,146,148,150,151,152,154,156,157,158,159,160,161,164,166,168,194,195,210,216,223,224,229,236,239,244,245,247,249,250,258,261,263,270,271,281,284,287,288,295,296,297,302,310,311,320,321,323,331,332,333,340,346,347,],[-199,-137,-135,-138,-136,-134,-200,138,-106,-64,-61,-140,-59,-62,-68,-67,-65,-56,-66,-60,-69,-92,-91,-118,-113,-58,-63,-55,-123,-93,-124,-57,-122,-139,195,-143,210,-203,-211,-205,-25,-19,-24,-22,-23,-36,-18,-27,-26,-35,-20,-21,224,-119,-133,244,-201,-212,-34,-114,-73,-94,-107,282,-202,-145,-144,-142,-141,-204,296,297,-71,-70,306,-190,-33,-31,-37,-29,-28,-125,-192,-193,-39,-44,-126,-194,-195,-191,348,-198,350,]),'OR':([5,6,19,23,39,42,45,63,64,65,66,68,70,72,75,76,77,79,80,81,84,85,86,87,90,91,92,93,94,95,96,97,112,138,166,168,195,210,223,224,229,236,244,245,247,249,250,266,270,271,],[-199,-137,-135,-138,-136,-134,-200,-106,-64,-61,-140,-59,-62,-68,-67,-65,-56,-66,-60,-69,176,-118,-113,-58,-63,-55,-123,-93,-124,-57,-122,-139,-143,-211,-119,-133,-201,-212,-114,-73,-94,-107,-202,-145,-144,-142,-141,-140,-71,-70,]),'REF':([56,62,103,142,147,214,283,299,328,],[-15,147,147,147,147,-16,147,147,147,]),'READ':([0,3,4,11,16,24,25,31,32,34,37,40,48,50,54,55,67,69,73,74,78,83,98,99,100,104,107,110,111,115,116,117,118,119,120,124,125,133,135,140,145,163,165,169,170,171,172,173,174,175,176,177,178,179,180,181,183,184,185,190,192,196,206,209,211,218,219,220,221,227,230,231,234,237,238,243,246,248,273,274,279,293,294,298,309,326,327,329,335,336,338,342,],[20,-5,20,-7,20,20,-8,-3,20,-6,-9,20,-157,20,20,20,20,-120,20,20,-121,20,20,-74,-4,20,-112,-117,-116,-115,-110,20,-84,20,-111,20,20,20,-158,-45,-10,20,20,-103,-104,-95,-97,-102,-100,20,-99,-98,-105,-101,-96,20,-109,20,-108,-49,20,-85,20,20,20,20,20,20,20,20,20,20,20,-181,-75,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'INTCONST':([16,32,40,50,55,67,69,73,74,78,104,107,110,111,115,116,117,118,119,120,124,163,165,169,170,171,172,173,174,175,176,177,178,179,180,183,184,185,192,196,206,211,217,218,219,220,221,227,231,243,246,248,273,274,293,294,298,],[64,64,64,64,64,64,-120,64,64,-121,64,-112,-117,-116,-115,-110,64,-84,64,-111,64,64,64,-103,-104,-95,-97,-102,-100,64,-99,-98,-105,-101,-96,-109,64,-108,64,-85,64,64,259,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'NUM':([0,3,4,11,16,24,25,31,32,34,37,40,48,50,54,55,67,69,73,74,78,83,98,99,100,104,107,110,111,115,116,117,118,119,120,124,125,133,135,140,145,163,165,169,170,171,172,173,174,175,176,177,178,179,180,181,183,184,185,190,192,196,206,209,211,218,219,220,221,227,230,231,234,237,238,243,246,248,273,274,279,293,294,298,309,326,327,329,335,336,338,342,],[28,-5,28,-7,28,28,-8,-3,28,-6,-9,28,-157,28,28,28,28,-120,28,28,-121,28,28,-74,-4,28,-112,-117,-116,-115,-110,28,-84,28,-111,28,28,28,-158,-45,-10,28,28,-103,-104,-95,-97,-102,-100,28,-99,-98,-105,-101,-96,28,-109,28,-108,-49,28,-85,28,28,28,28,28,28,28,28,28,28,28,-181,-75,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'CHAR':([56,62,103,142,147,207,214,220,251,283,298,299,328,],[-15,157,157,157,157,157,-16,157,157,157,157,157,157,]),'SYN':([0,3,11,24,25,31,34,37,99,100,140,145,190,237,238,309,326,327,329,335,336,338,342,],[29,-5,-7,29,-8,-3,-6,-9,-74,-4,-45,-10,-49,-181,-75,29,29,29,29,29,29,29,29,]),'ID':([0,3,4,11,12,13,16,24,25,29,31,32,34,37,40,41,48,50,52,54,55,56,62,67,69,73,74,78,83,98,99,100,103,104,107,110,111,115,116,117,118,119,120,124,125,133,135,140,141,142,143,144,145,147,163,165,169,170,171,172,173,174,175,176,177,178,179,180,181,183,184,185,190,191,192,196,206,207,209,211,214,218,219,220,221,227,230,231,234,237,238,239,243,246,248,251,273,274,279,283,293,294,298,299,309,312,326,327,328,329,335,336,338,342,],[30,-5,30,-7,56,56,66,30,-8,56,-3,66,-6,-9,66,123,-157,66,131,30,66,-15,151,66,-120,66,66,-121,66,186,-74,-4,151,66,-112,-117,-116,-115,-110,66,-84,66,-111,66,186,30,-158,-45,56,151,214,56,-10,151,66,66,-103,-104,-95,-97,-102,-100,66,-99,-98,-105,-101,-96,30,-109,66,-108,-49,56,66,-85,66,256,30,66,-16,66,66,266,66,66,30,66,30,-181,-75,56,66,66,66,256,66,66,30,151,66,66,266,151,30,56,30,30,151,30,30,30,30,30,]),'RETURNS':([282,306,],[308,308,]),'LOWER':([0,3,4,11,16,24,25,31,32,34,37,40,48,50,54,55,67,69,73,74,78,83,98,99,100,104,107,110,111,115,116,117,118,119,120,124,125,133,135,140,145,163,165,169,170,171,172,173,174,175,176,177,178,179,180,181,183,184,185,190,192,196,206,209,211,218,219,220,221,227,230,231,234,237,238,243,246,248,273,274,279,293,294,298,309,326,327,329,335,336,338,342,],[14,-5,14,-7,14,14,-8,-3,14,-6,-9,14,-157,14,14,14,14,-120,14,14,-121,14,14,-74,-4,14,-112,-117,-116,-115,-110,14,-84,14,-111,14,14,14,-158,-45,-10,14,14,-103,-104,-95,-97,-102,-100,14,-99,-98,-105,-101,-96,14,-109,14,-108,-49,14,-85,14,14,14,14,14,14,14,14,14,14,14,-181,-75,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'NOTEQUAL':([5,6,19,23,39,42,45,63,64,65,66,68,70,72,75,76,77,79,80,81,84,85,86,87,90,91,92,93,94,95,96,97,112,138,166,168,195,210,223,224,229,236,244,245,247,249,250,266,270,271,],[-199,-137,-135,-138,-136,-134,-200,-106,-64,-61,-140,-59,-62,-68,-67,-65,-56,-66,-60,-69,179,-118,-113,-58,-63,-55,-123,-93,-124,-57,-122,-139,-143,-211,-119,-133,-201,-212,-114,-73,-94,-107,-202,-145,-144,-142,-141,-140,-71,-70,]),'LE':([5,6,19,23,39,42,45,63,64,65,66,68,70,72,75,76,77,79,80,81,84,85,86,87,90,91,92,93,94,95,96,97,112,138,166,168,195,210,223,224,229,236,244,245,247,249,250,266,270,271,],[-199,-137,-135,-138,-136,-134,-200,-106,-64,-61,-140,-59,-62,-68,-67,-65,-56,-66,-60,-69,178,-118,-113,-58,-63,-55,-123,-93,-124,-57,-122,-139,-143,-211,-119,-133,-201,-212,-114,-73,-94,-107,-202,-145,-144,-142,-141,-140,-71,-70,]),'BOOL':([56,62,103,142,147,207,214,220,251,283,298,299,328,],[-15,158,158,158,158,158,-16,158,158,158,158,158,158,]),'STRCONC':([5,6,19,23,27,30,35,39,42,45,63,64,65,66,68,70,72,75,76,77,79,80,81,85,86,87,90,91,92,93,94,95,96,97,112,138,166,168,186,195,210,223,224,229,236,244,245,247,249,250,266,270,271,],[-199,-137,-135,-138,-139,-140,107,-136,-134,-200,-106,-64,-61,-140,-59,-62,-68,-67,-65,-56,-66,-60,-69,-118,-113,-58,-63,-55,-123,107,-124,-57,-122,-139,-143,-211,-119,-133,-140,-201,-212,-114,-73,107,-107,-202,-145,-144,-142,-141,-140,-71,-70,]),'DOWN':([5,6,19,23,39,42,45,63,64,65,66,68,70,72,75,76,77,79,80,81,82,84,85,86,87,90,91,92,93,94,95,96,97,112,130,131,138,166,168,195,210,223,224,229,236,244,245,247,249,250,252,253,254,270,271,291,302,316,317,323,],[-199,-137,-135,-138,-136,-134,-200,-106,-64,-61,-140,-59,-62,-68,-67,-65,-56,-66,-60,-69,-92,-91,-118,-113,-58,-63,-55,-123,-93,-124,-57,-122,-139,-143,205,-173,-211,-119,-133,-201,-212,-114,-73,-94,-107,-202,-145,-144,-142,-141,-177,-174,292,-71,-70,314,-125,-175,-221,-126,]),'PROC':([98,],[189,]),'ELSIF':([5,6,19,23,39,42,45,48,63,64,65,66,68,70,72,75,76,77,79,80,81,82,84,85,86,87,90,91,92,93,94,95,96,97,99,112,135,138,166,168,181,182,195,210,223,224,228,229,230,236,238,244,245,247,249,250,270,271,272,276,277,302,304,305,322,323,],[-199,-137,-135,-138,-136,-134,-200,-157,-106,-64,-61,-140,-59,-62,-68,-67,-65,-56,-66,-60,-69,-92,-91,-118,-113,-58,-63,-55,-123,-93,-124,-57,-122,-139,-74,-143,-158,-211,-119,-133,-150,231,-201,-212,-114,-73,274,-94,-151,-107,-75,-202,-145,-144,-142,-141,-71,-70,-128,274,-130,-125,-131,231,-132,-126,]),'FOR':([4,],[52,]),'GE':([5,6,19,23,39,42,45,63,64,65,66,68,70,72,75,76,77,79,80,81,84,85,86,87,90,91,92,93,94,95,96,97,112,138,166,168,195,210,223,224,229,236,244,245,247,249,250,266,270,271,],[-199,-137,-135,-138,-136,-134,-200,-106,-64,-61,-140,-59,-62,-68,-67,-65,-56,-66,-60,-69,169,-118,-113,-58,-63,-55,-123,-93,-124,-57,-122,-139,-143,-211,-119,-133,-201,-212,-114,-73,-94,-107,-202,-145,-144,-142,-141,-140,-71,-70,]),'END':([3,11,25,31,34,37,99,100,140,145,190,237,238,309,326,327,329,335,336,338,342,],[-5,-7,-8,-3,-6,-9,-74,-4,-45,-10,-49,-181,-75,330,337,339,341,343,344,345,349,]),'RBRACKET':([5,6,19,23,39,42,45,63,64,65,66,68,70,72,75,76,77,79,80,81,82,84,85,86,87,90,91,92,93,94,95,96,97,112,138,146,150,152,157,158,166,168,195,197,198,199,202,203,204,210,223,224,225,226,229,236,244,245,247,249,250,259,260,264,265,267,268,270,271,286,287,288,296,297,302,319,323,],[-199,-137,-135,-138,-136,-134,-200,-106,-64,-61,-140,-59,-62,-68,-67,-65,-56,-66,-60,-69,-92,-91,-118,-113,-58,-63,-55,-123,-93,-124,-57,-122,-139,-143,-211,-25,-24,-23,-27,-26,-119,-133,-201,245,247,-89,249,250,-221,-212,-114,-73,270,271,-94,-107,-202,-145,-144,-142,-141,-38,295,-43,-42,-40,299,-71,-70,-90,-33,-31,-29,-28,-125,-41,-126,]),'SMC':([2,5,6,7,17,19,21,22,23,26,27,39,40,42,43,44,45,46,49,51,53,57,58,60,61,63,64,65,66,68,70,72,75,76,77,79,80,81,82,84,85,86,87,88,90,91,92,93,94,95,96,97,101,102,105,106,112,121,122,123,126,127,128,129,132,134,138,146,148,150,151,152,154,156,157,158,159,160,161,162,166,168,187,188,195,201,208,210,212,213,215,216,222,223,224,229,232,236,240,241,242,244,245,247,249,250,252,255,257,269,270,271,280,282,285,289,290,295,296,297,302,306,307,313,315,318,320,321,323,325,330,334,337,339,341,343,344,345,348,349,350,],[-78,-199,-137,-146,-80,-135,-77,99,-138,-147,-79,-136,-207,-134,-81,-82,-200,-159,-164,-163,133,140,-46,145,-11,-106,-64,-61,-140,-59,-62,-68,-67,-65,-56,-66,-60,-69,-92,-91,-118,-113,-58,-127,-63,-55,-123,-93,-124,-57,-122,-139,-50,190,-209,-210,-143,-208,-206,-76,-180,-165,-166,-167,-168,-162,-211,-25,-19,-24,-22,-23,-36,-18,-27,-26,-35,-20,-21,-14,-119,-133,237,238,-201,-83,-160,-212,-47,-48,-12,-34,-13,-114,-73,-94,-148,-107,-51,-54,-52,-202,-145,-144,-142,-141,-177,-178,-161,-17,-71,-70,-149,309,-53,-179,-169,-37,-29,-28,-125,326,327,-170,-171,-176,-39,-44,-126,335,-182,-172,-185,-189,-184,-186,-183,-188,-196,-187,-197,]),'TO':([5,6,19,23,39,42,45,63,64,65,66,68,70,72,75,76,77,79,80,81,82,84,85,86,87,90,91,92,93,94,95,96,97,112,138,166,168,195,210,223,224,229,236,244,245,247,249,250,252,253,254,270,271,291,292,302,314,316,317,323,],[-199,-137,-135,-138,-136,-134,-200,-106,-64,-61,-140,-59,-62,-68,-67,-65,-56,-66,-60,-69,-92,-91,-118,-113,-58,-63,-55,-123,-93,-124,-57,-122,-139,-143,-211,-119,-133,-201,-212,-114,-73,-94,-107,-202,-145,-144,-142,-141,-177,-174,294,-71,-70,294,294,-125,294,-175,-221,-126,]),'RETURN':([0,3,4,11,24,25,31,34,37,48,54,98,99,100,125,133,135,140,145,181,190,209,230,234,237,238,279,309,326,327,329,335,336,338,342,],[40,-5,40,-7,40,-8,-3,-6,-9,-157,40,40,-74,-4,40,40,-158,-45,-10,40,-49,40,40,40,-181,-75,40,40,40,40,40,40,40,40,40,]),'TIMES':([5,6,19,23,27,30,35,39,42,45,63,64,65,66,68,70,72,75,76,77,79,80,81,85,86,87,90,91,92,94,95,96,97,112,138,166,168,186,195,210,223,224,236,244,245,247,249,250,266,270,271,],[-199,-137,-135,-138,-139,-140,115,-136,-134,-200,115,-64,-61,-140,-59,-62,-68,-67,-65,-56,-66,-60,-69,-118,-113,-58,-63,-55,-123,-124,-57,-122,-139,-143,-211,-119,-133,-140,-201,-212,-114,-73,115,-202,-145,-144,-142,-141,-140,-71,-70,]),'EXIT':([0,3,4,11,24,25,31,34,37,48,54,98,99,100,125,133,135,140,145,181,190,209,230,234,237,238,279,309,326,327,329,335,336,338,342,],[41,-5,41,-7,41,-8,-3,-6,-9,-157,41,41,-74,-4,41,41,-158,-45,-10,41,-49,41,41,41,-181,-75,41,41,41,41,41,41,41,41,41,]),'AND':([5,6,19,23,39,42,45,63,64,65,66,68,70,72,75,76,77,79,80,81,84,85,86,87,90,91,92,93,94,95,96,97,112,138,166,168,195,210,223,224,229,236,244,245,247,249,250,266,270,271,],[-199,-137,-135,-138,-136,-134,-200,-106,-64,-61,-140,-59,-62,-68,-67,-65,-56,-66,-60,-69,177,-118,-113,-58,-63,-55,-123,-93,-124,-57,-122,-139,-143,-211,-119,-133,-201,-212,-114,-73,-94,-107,-202,-145,-144,-142,-141,-140,-71,-70,]),'COLON':([5,6,18,19,23,30,39,42,45,47,63,64,65,66,68,70,72,75,76,77,79,80,81,82,84,85,86,87,90,91,92,93,94,95,96,97,112,138,166,168,195,199,200,204,210,223,224,229,236,244,245,247,249,250,262,266,270,271,302,323,],[-199,-137,98,-135,-138,-76,-136,-134,-200,125,-106,-64,-61,-140,-59,-62,-68,-67,-65,-56,-66,-60,-69,-92,-91,-118,-113,-58,-63,-55,-123,-93,-124,-57,-122,-139,-143,-211,-119,-133,-201,-32,248,-32,-212,-114,-73,-94,-107,-202,-145,-144,-142,-141,-32,-140,-71,-70,-125,-126,]),'ARRAY':([56,62,103,142,147,214,283,299,328,],[-15,155,155,155,155,-16,155,155,155,]),'PRINT':([0,3,4,11,16,24,25,31,32,34,37,40,48,50,54,55,67,69,73,74,78,83,98,99,100,104,107,110,111,115,116,117,118,119,120,124,125,133,135,140,145,163,165,169,170,171,172,173,174,175,176,177,178,179,180,181,183,184,185,190,192,196,206,209,211,218,219,220,221,227,230,231,234,237,238,243,246,248,273,274,279,293,294,298,309,326,327,329,335,336,338,342,],[36,-5,36,-7,36,36,-8,-3,36,-6,-9,36,-157,36,36,36,36,-120,36,36,-121,36,36,-74,-4,36,-112,-117,-116,-115,-110,36,-84,36,-111,36,36,36,-158,-45,-10,36,36,-103,-104,-95,-97,-102,-100,36,-99,-98,-105,-101,-96,36,-109,36,-108,-49,36,-85,36,36,36,36,36,36,36,36,36,36,36,-181,-75,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'LOC':([146,148,150,151,152,154,156,157,158,159,160,161,216,295,296,297,311,320,321,340,],[-25,-19,-24,-22,-23,-36,-18,-27,-26,-35,-20,-21,-34,-37,-29,-28,332,-39,-44,346,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'step_value':([254,],[291,]),'newmode_list':([12,],[57,]),'bracketed_action':([0,4,24,54,98,125,133,181,209,230,234,279,309,326,327,329,335,336,338,342,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'upper_bound':([248,],[288,]),'value_array_element':([16,32,40,50,55,67,73,74,104,117,119,124,163,165,175,184,192,206,211,218,219,220,221,227,231,243,246,248,273,274,293,294,298,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'array_element':([0,4,16,24,32,40,50,54,55,67,73,74,83,98,104,117,119,124,125,133,163,165,175,181,184,192,206,209,211,218,219,220,221,227,230,231,234,243,246,248,273,274,279,293,294,298,309,326,327,329,335,336,338,342,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'result_spec':([282,306,],[307,325,]),'literal_range':([117,124,165,218,219,220,298,],[197,202,225,261,263,264,264,]),'declaration_list':([13,],[60,]),'initialization':([162,],[222,]),'builtin_name':([0,4,16,24,32,40,50,54,55,67,73,74,83,98,104,117,119,124,125,133,163,165,175,181,184,192,206,209,211,218,219,220,221,227,230,231,234,243,246,248,273,274,279,293,294,298,309,326,327,329,335,336,338,342,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'procedure_call':([0,4,16,24,32,40,50,54,55,67,73,74,83,98,104,117,119,124,125,133,163,165,175,181,184,192,206,209,211,218,219,220,221,227,230,231,234,243,246,248,273,274,279,293,294,298,309,326,327,329,335,336,338,342,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'integer_expression':([124,293,],[203,316,]),'array_primitive_value':([16,32,40,50,55,67,73,74,104,117,119,124,163,165,175,184,192,206,211,218,219,220,221,227,231,243,246,248,273,274,293,294,298,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'monadic_operator':([16,32,40,50,55,67,74,104,117,119,124,163,165,175,184,192,206,211,218,219,220,221,227,231,243,246,248,273,274,293,294,298,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'formal_parameter_list':([239,312,],[281,333,]),'step_enumeration':([52,],[129,]),'exit_action':([0,4,24,54,98,125,133,181,209,230,234,279,309,326,327,329,335,336,338,342,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'parameter_list':([55,104,211,],[136,194,258,]),'assignment_action':([0,4,24,54,98,125,133,181,209,230,234,279,309,326,327,329,335,336,338,342,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'array_slice':([0,4,16,24,32,40,50,54,55,67,73,74,83,98,104,117,119,124,125,133,163,165,175,181,184,192,206,209,211,218,219,220,221,227,230,231,234,243,246,248,273,274,279,293,294,298,309,326,327,329,335,336,338,342,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'declaration':([13,144,],[61,215,]),'operand3':([16,32,40,50,55,67,74,104,117,119,124,163,165,175,184,192,206,211,218,219,220,221,227,231,243,246,248,273,274,293,294,298,],[86,86,86,86,86,86,86,86,86,86,86,223,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'result_action':([0,4,24,54,98,125,133,181,209,230,234,279,309,326,327,329,335,336,338,342,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'range_enumeration':([52,],[132,]),'operator2':([93,229,],[184,184,]),'if_action':([0,4,24,54,98,125,133,181,209,230,234,279,309,326,327,329,335,336,338,342,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'constant_expression':([192,243,],[242,285,]),'empty':([0,],[33,]),'parameter':([55,104,211,],[137,137,137,]),'else_clause':([182,305,],[235,324,]),'discrete_expression':([206,294,],[253,318,]),'operand0':([16,32,40,50,55,67,74,104,117,119,124,165,192,206,211,218,219,220,221,227,231,243,246,248,273,274,293,294,298,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'operand4':([16,32,40,50,55,67,73,74,104,117,119,124,163,165,175,184,192,206,211,218,219,220,221,227,231,243,246,248,273,274,293,294,298,],[85,85,85,85,85,85,166,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'string_concatenation_operator':([35,93,229,],[113,183,183,]),'start_value':([206,],[254,]),'parenthesized_expression':([16,32,40,50,55,67,73,74,104,117,119,124,163,165,175,184,192,206,211,218,219,220,221,227,231,243,246,248,273,274,293,294,298,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'expression':([16,32,40,50,55,67,74,104,117,119,124,165,192,206,211,218,219,220,221,227,231,243,246,248,273,274,293,294,298,],[88,106,106,88,139,164,88,139,199,201,204,199,241,252,139,262,262,262,269,272,88,241,286,287,300,88,317,252,262,]),'for_control':([4,],[51,]),'boolean_expression':([16,50,74,231,274,],[89,126,167,278,301,]),'relational_operator':([84,],[171,]),'arithmetic_multiplicative_operator':([35,63,236,],[108,163,163,]),'operand1':([16,32,40,50,55,67,74,104,117,119,124,165,175,192,206,211,218,219,220,221,227,231,243,246,248,273,274,293,294,298,],[93,93,93,93,93,93,93,93,93,93,93,93,229,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'newmode_statement':([0,24,309,326,327,329,335,336,338,342,],[34,34,34,34,34,34,34,34,34,34,]),'location':([0,4,16,24,32,40,50,54,55,67,73,74,83,98,104,117,119,124,125,133,163,165,175,181,184,192,206,209,211,218,219,220,221,227,230,231,234,243,246,248,273,274,279,293,294,298,309,326,327,329,335,336,338,342,],[35,35,92,35,92,92,92,35,92,92,92,92,168,35,92,92,92,92,35,35,92,92,92,35,92,92,92,35,92,92,92,92,92,92,35,92,35,92,92,92,92,92,35,92,92,92,35,35,35,35,35,35,35,35,]),'mode_definition':([12,141,],[58,212,]),'mode_name':([62,103,142,147,283,299,328,],[156,156,156,156,156,156,156,]),'string_mode':([62,103,142,147,283,299,328,],[159,159,159,159,159,159,159,]),'dereferenced_reference':([0,4,16,24,32,40,50,54,55,67,73,74,83,98,104,117,119,124,125,133,163,165,175,181,184,192,206,209,211,218,219,220,221,227,230,231,234,243,246,248,273,274,279,293,294,298,309,326,327,329,335,336,338,342,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'statement_list':([0,309,326,327,335,],[24,329,336,338,342,]),'syn_definition':([29,191,],[101,240,]),'reference_mode':([62,103,142,147,283,299,328,],[160,160,160,160,160,160,160,]),'return_action':([0,4,24,54,98,125,133,181,209,230,234,279,309,326,327,329,335,336,338,342,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'referenced_location':([16,32,40,50,55,67,73,74,104,117,119,124,163,165,175,184,192,206,211,218,219,220,221,227,231,243,246,248,273,274,293,294,298,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'value_array_slice':([16,32,40,50,55,67,73,74,104,117,119,124,163,165,175,184,192,206,211,218,219,220,221,227,231,243,246,248,273,274,293,294,298,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'elseif_clause':([182,305,],[233,233,]),'call_action':([0,4,16,24,32,40,50,54,55,67,73,74,83,98,104,117,119,124,125,133,163,165,175,181,184,192,206,209,211,218,219,220,221,227,230,231,234,243,246,248,273,274,279,293,294,298,309,326,327,329,335,336,338,342,],[27,27,97,27,97,97,97,27,97,97,97,97,97,27,97,97,97,97,27,27,97,97,97,27,97,97,97,27,97,97,97,97,97,97,27,97,27,97,97,97,97,97,27,97,97,97,27,27,27,27,27,27,27,27,]),'index_mode_list':([220,],[268,]),'index_mode':([220,298,],[267,319,]),'operand2':([16,32,40,50,55,67,74,104,117,119,124,165,175,184,192,206,211,218,219,220,221,227,231,243,246,248,273,274,293,294,298,],[63,63,63,63,63,63,63,63,63,63,63,63,63,236,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'operator1':([84,],[175,]),'declaration_statement':([0,24,309,326,327,329,335,336,338,342,],[3,3,3,3,3,3,3,3,3,3,]),'char_literal':([16,32,40,50,55,67,73,74,104,117,119,124,163,165,175,184,192,206,211,218,219,220,221,227,231,243,246,248,273,274,293,294,298,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'result_attribute':([340,],[347,]),'loop_counter':([52,],[130,]),'discrete_mode':([62,103,142,147,207,220,251,283,298,299,328,],[148,148,148,148,255,265,289,148,265,148,148,]),'program':([0,],[8,]),'end_value':([254,291,292,314,],[290,313,315,334,]),'procedure_definition':([98,],[187,]),'discrete_range_mode':([62,103,142,147,207,220,251,283,298,299,328,],[150,150,150,150,150,150,150,150,150,150,150,]),'synonym_statement':([0,24,309,326,327,329,335,336,338,342,],[11,11,11,11,11,11,11,11,11,11,]),'integer_literal':([16,32,40,50,55,67,73,74,104,117,119,124,163,165,175,184,192,206,211,218,219,220,221,227,231,243,246,248,273,274,293,294,298,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'elseif_expression_list':([228,],[276,]),'empty_literal':([16,32,40,50,55,67,73,74,104,117,119,124,163,165,175,184,192,206,211,218,219,220,221,227,231,243,246,248,273,274,293,294,298,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'parameter_spec':([283,],[310,]),'basic_mode':([62,103,142,147,207,220,251,283,298,299,328,],[152,152,152,152,152,152,152,152,152,152,152,]),'array_mode':([62,103,142,147,283,299,328,],[154,154,154,154,154,154,154,]),'arithmetic_additive_operator':([35,93,229,],[109,185,185,]),'then_clause':([89,278,],[182,305,]),'label':([0,4,24,41,54,133,181,209,230,234,279,309,326,327,329,335,336,338,342,],[18,47,18,122,47,47,47,47,47,47,47,18,18,18,18,18,18,18,18,]),'string_reference':([0,4,16,24,32,40,50,54,55,67,73,74,83,98,104,117,119,124,125,133,163,165,175,181,184,192,206,209,211,218,219,220,221,227,230,231,234,243,246,248,273,274,279,293,294,298,309,326,327,329,335,336,338,342,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'expression_list':([117,165,],[198,226,]),'action':([0,4,24,54,98,125,133,181,209,230,234,279,309,326,327,329,335,336,338,342,],[22,22,22,22,188,188,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'boolean_literal':([16,32,40,50,55,67,73,74,104,117,119,124,163,165,175,184,192,206,211,218,219,220,221,227,231,243,246,248,273,274,293,294,298,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'assigning_operator':([35,],[119,]),'lower_bound':([117,124,165,218,219,220,298,],[200,200,200,200,200,200,200,]),'action_statement':([0,4,24,54,133,181,209,230,234,279,309,326,327,329,335,336,338,342,],[25,48,25,135,48,48,135,135,48,135,25,25,25,25,25,25,25,25,]),'while_control':([4,51,],[49,127,]),'result':([32,40,],[105,121,]),'string_length':([217,],[260,]),'iteration':([52,],[128,]),'location_name':([0,4,16,24,32,40,50,54,55,67,73,74,83,98,104,117,119,124,125,133,163,165,175,181,184,192,206,209,211,218,219,220,221,227,230,231,234,243,246,248,273,274,279,293,294,298,309,326,327,329,335,336,338,342,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'do_action':([0,4,24,54,98,125,133,181,209,230,234,279,309,326,327,329,335,336,338,342,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'conditional_expression':([16,32,40,50,55,67,74,104,117,119,124,165,192,206,211,218,219,220,221,227,231,243,246,248,273,274,293,294,298,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'else_expression':([228,276,],[275,303,]),'element_node':([299,],[320,]),'id_list':([12,13,29,141,144,191,239,312,],[59,62,103,59,62,103,283,283,]),'statement':([0,24,309,326,327,329,335,336,338,342,],[31,100,31,31,31,100,31,100,100,100,]),'syn_list':([29,],[102,]),'formal_parameter':([239,312,],[284,284,]),'membership_operator':([84,],[180,]),'string_literal':([16,32,40,50,55,67,73,74,104,117,119,124,163,165,175,184,192,206,211,218,219,220,221,227,231,243,246,248,273,274,293,294,298,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'literal':([16,32,40,50,55,67,73,74,104,117,119,124,163,165,175,184,192,206,211,218,219,220,221,227,231,243,246,248,273,274,293,294,298,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'discrete_mode_name':([62,103,142,147,207,220,251,283,298,299,328,],[153,153,153,153,153,153,153,153,153,153,153,]),'procedure_statement':([0,24,309,326,327,329,335,336,338,342,],[37,37,37,37,37,37,37,37,37,37,]),'control_part':([4,],[53,]),'elseif_expression':([228,276,],[277,304,]),'action_statement_list':([4,133,181,234,],[54,209,230,279,]),'parameter_attribute':([311,],[331,]),'then_expression':([167,301,],[228,322,]),'composite_mode':([62,103,142,147,283,299,328,],[161,161,161,161,161,161,161,]),'closed_dyadic_operator':([35,],[114,]),'mode':([62,103,142,147,283,299,328,],[162,193,213,216,311,321,340,]),'primitive_value':([16,32,40,50,55,67,73,74,104,117,119,124,163,165,175,184,192,206,211,218,219,220,221,227,231,243,246,248,273,274,293,294,298,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'builtin_call':([0,4,16,24,32,40,50,54,55,67,73,74,83,98,104,117,119,124,125,133,163,165,175,181,184,192,206,209,211,218,219,220,221,227,230,231,234,243,246,248,273,274,279,293,294,298,309,326,327,329,335,336,338,342,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','lyaParser.py',64),
  ('program -> empty','program',1,'p_program','lyaParser.py',65),
  ('statement_list -> statement','statement_list',1,'p_statement_list1','lyaParser.py',72),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list1','lyaParser.py',73),
  ('statement -> declaration_statement','statement',1,'p_statement','lyaParser.py',80),
  ('statement -> newmode_statement','statement',1,'p_statement','lyaParser.py',81),
  ('statement -> synonym_statement','statement',1,'p_statement','lyaParser.py',82),
  ('statement -> action_statement','statement',1,'p_statement','lyaParser.py',83),
  ('statement -> procedure_statement','statement',1,'p_statement','lyaParser.py',84),
  ('declaration_statement -> DCL declaration_list SMC','declaration_statement',3,'p_declaration_statement','lyaParser.py',92),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','lyaParser.py',96),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','lyaParser.py',97),
  ('declaration -> id_list mode initialization','declaration',3,'p_declaration1','lyaParser.py',104),
  ('declaration -> id_list mode','declaration',2,'p_declaration2','lyaParser.py',108),
  ('id_list -> ID','id_list',1,'p_id_list','lyaParser.py',112),
  ('id_list -> id_list COMMA ID','id_list',3,'p_id_list','lyaParser.py',113),
  ('initialization -> EQUALS expression','initialization',2,'p_initialization','lyaParser.py',120),
  ('mode -> mode_name','mode',1,'p_mode','lyaParser.py',128),
  ('mode -> discrete_mode','mode',1,'p_mode','lyaParser.py',129),
  ('mode -> reference_mode','mode',1,'p_mode','lyaParser.py',130),
  ('mode -> composite_mode','mode',1,'p_mode','lyaParser.py',131),
  ('mode_name -> ID','mode_name',1,'p_mode_name','lyaParser.py',135),
  ('discrete_mode -> basic_mode','discrete_mode',1,'p_discrete_mode','lyaParser.py',139),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','lyaParser.py',140),
  ('basic_mode -> INT','basic_mode',1,'p_basic_mode','lyaParser.py',144),
  ('basic_mode -> BOOL','basic_mode',1,'p_basic_mode','lyaParser.py',145),
  ('basic_mode -> CHAR','basic_mode',1,'p_basic_mode','lyaParser.py',146),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaParser.py',150),
  ('discrete_range_mode -> basic_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaParser.py',151),
  ('discrete_mode_name -> ID','discrete_mode_name',1,'p_discrete_mode_name','lyaParser.py',155),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_litereal_range','lyaParser.py',159),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','lyaParser.py',163),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','lyaParser.py',167),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','lyaParser.py',171),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','lyaParser.py',175),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','lyaParser.py',176),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','lyaParser.py',180),
  ('string_length -> INTCONST','string_length',1,'p_string_length','lyaParser.py',184),
  ('array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_node','array_mode',5,'p_array_mode','lyaParser.py',188),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','lyaParser.py',193),
  ('index_mode_list -> index_mode_list COMMA index_mode','index_mode_list',3,'p_index_mode_list','lyaParser.py',194),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','lyaParser.py',201),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','lyaParser.py',202),
  ('element_node -> mode','element_node',1,'p_element_node','lyaParser.py',206),
  ('newmode_statement -> TYPE newmode_list SMC','newmode_statement',3,'p_newmode_statement','lyaParser.py',214),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','lyaParser.py',218),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','lyaParser.py',219),
  ('mode_definition -> id_list EQUALS mode','mode_definition',3,'p_mode_definition','lyaParser.py',226),
  ('synonym_statement -> SYN syn_list SMC','synonym_statement',3,'p_synonym_statement','lyaParser.py',230),
  ('syn_list -> syn_definition','syn_list',1,'p_syn_list','lyaParser.py',238),
  ('syn_list -> syn_list COMMA syn_definition','syn_list',3,'p_syn_list','lyaParser.py',239),
  ('syn_definition -> id_list EQUALS constant_expression','syn_definition',3,'p_syn_definition','lyaParser.py',246),
  ('syn_definition -> id_list mode EQUALS constant_expression','syn_definition',4,'p_syn_definition2','lyaParser.py',250),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','lyaParser.py',254),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','lyaParser.py',262),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','lyaParser.py',263),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','lyaParser.py',264),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','lyaParser.py',265),
  ('literal -> integer_literal','literal',1,'p_literal','lyaParser.py',269),
  ('literal -> boolean_literal','literal',1,'p_literal','lyaParser.py',270),
  ('literal -> char_literal','literal',1,'p_literal','lyaParser.py',271),
  ('literal -> empty_literal','literal',1,'p_literal','lyaParser.py',272),
  ('literal -> string_literal','literal',1,'p_literal','lyaParser.py',273),
  ('integer_literal -> INTCONST','integer_literal',1,'p_integer_literal','lyaParser.py',277),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','lyaParser.py',281),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','lyaParser.py',282),
  ('char_literal -> CHARCONST','char_literal',1,'p_char_literal','lyaParser.py',286),
  ('string_literal -> STRINGCONST','string_literal',1,'p_string_literal','lyaParser.py',290),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','lyaParser.py',294),
  ('value_array_element -> array_primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','lyaParser.py',298),
  ('value_array_slice -> array_primitive_value LBRACKET literal_range RBRACKET','value_array_slice',4,'p_value_array_slice','lyaParser.py',302),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','lyaParser.py',306),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','lyaParser.py',310),
  ('action_statement -> action SMC','action_statement',2,'p_action_statement','lyaParser.py',318),
  ('action_statement -> label COLON action SMC','action_statement',4,'p_action_statement','lyaParser.py',319),
  ('label -> ID','label',1,'p_label','lyaParser.py',326),
  ('action -> assignment_action','action',1,'p_action','lyaParser.py',330),
  ('action -> bracketed_action','action',1,'p_action','lyaParser.py',331),
  ('action -> call_action','action',1,'p_action','lyaParser.py',332),
  ('action -> exit_action','action',1,'p_action','lyaParser.py',333),
  ('action -> return_action','action',1,'p_action','lyaParser.py',334),
  ('action -> result_action','action',1,'p_action','lyaParser.py',335),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','lyaParser.py',343),
  ('assigning_operator -> EQUALS','assigning_operator',1,'p_assigning_operator','lyaParser.py',347),
  ('assigning_operator -> closed_dyadic_operator EQUALS','assigning_operator',2,'p_assigning_operator','lyaParser.py',348),
  ('closed_dyadic_operator -> arithmetic_additive_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','lyaParser.py',355),
  ('closed_dyadic_operator -> arithmetic_multiplicative_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','lyaParser.py',356),
  ('closed_dyadic_operator -> string_concatenation_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','lyaParser.py',357),
  ('expression_list -> expression','expression_list',1,'p_expression_list','lyaParser.py',361),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','lyaParser.py',362),
  ('expression -> operand0','expression',1,'p_expression','lyaParser.py',369),
  ('expression -> conditional_expression','expression',1,'p_expression','lyaParser.py',370),
  ('operand0 -> operand1','operand0',1,'p_operand0','lyaParser.py',374),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','lyaParser.py',375),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','lyaParser.py',382),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','lyaParser.py',383),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','lyaParser.py',387),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','lyaParser.py',391),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','lyaParser.py',392),
  ('relational_operator -> ISEQUAL','relational_operator',1,'p_relational_operator','lyaParser.py',393),
  ('relational_operator -> NOTEQUAL','relational_operator',1,'p_relational_operator','lyaParser.py',394),
  ('relational_operator -> GT','relational_operator',1,'p_relational_operator','lyaParser.py',395),
  ('relational_operator -> GE','relational_operator',1,'p_relational_operator','lyaParser.py',396),
  ('relational_operator -> LT','relational_operator',1,'p_relational_operator','lyaParser.py',397),
  ('relational_operator -> LE','relational_operator',1,'p_relational_operator','lyaParser.py',398),
  ('operand1 -> operand2','operand1',1,'p_operand1','lyaParser.py',402),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1','lyaParser.py',403),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','lyaParser.py',410),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','lyaParser.py',411),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','lyaParser.py',415),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','lyaParser.py',416),
  ('string_concatenation_operator -> STRCONC','string_concatenation_operator',1,'p_string_concatenation_operator','lyaParser.py',420),
  ('operand2 -> operand3','operand2',1,'p_operand2','lyaParser.py',424),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','lyaParser.py',425),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaParser.py',432),
  ('arithmetic_multiplicative_operator -> DIV','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaParser.py',433),
  ('arithmetic_multiplicative_operator -> MOD','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaParser.py',434),
  ('operand3 -> operand4','operand3',1,'p_operand3','lyaParser.py',438),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','lyaParser.py',439),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','lyaParser.py',446),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','lyaParser.py',447),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','lyaParser.py',451),
  ('operand4 -> location','operand4',1,'p_operand4','lyaParser.py',452),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','lyaParser.py',453),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','lyaParser.py',459),
  ('conditional_expression -> IF boolean_expression then_expression elseif_expression_list else_expression FI','conditional_expression',6,'p_conditional_expression2','lyaParser.py',463),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','lyaParser.py',467),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','lyaParser.py',471),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','lyaParser.py',475),
  ('elseif_expression_list -> elseif_expression','elseif_expression_list',1,'p_elseif_expression_list','lyaParser.py',479),
  ('elseif_expression_list -> elseif_expression_list elseif_expression','elseif_expression_list',2,'p_elseif_expression_list','lyaParser.py',480),
  ('elseif_expression -> ELSIF boolean_expression then_expression','elseif_expression',3,'p_elseif_expression','lyaParser.py',487),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','lyaParser.py',495),
  ('location -> location_name','location',1,'p_location','lyaParser.py',499),
  ('location -> string_reference','location',1,'p_location','lyaParser.py',500),
  ('location -> dereferenced_reference','location',1,'p_location','lyaParser.py',501),
  ('location -> array_element','location',1,'p_location','lyaParser.py',502),
  ('location -> array_slice','location',1,'p_location','lyaParser.py',503),
  ('location -> call_action','location',1,'p_location','lyaParser.py',504),
  ('location_name -> ID','location_name',1,'p_location_name','lyaParser.py',508),
  ('string_reference -> location_name LBRACKET integer_expression RBRACKET','string_reference',4,'p_string_reference','lyaParser.py',512),
  ('string_reference -> location_name LBRACKET literal_range RBRACKET','string_reference',4,'p_string_reference2','lyaParser.py',516),
  ('dereferenced_reference -> location ARROW','dereferenced_reference',2,'p_dereferenced_reference','lyaParser.py',520),
  ('array_element -> location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','lyaParser.py',524),
  ('array_slice -> location LBRACKET literal_range RBRACKET','array_slice',4,'p_array_slice','lyaParser.py',528),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','lyaParser.py',536),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','lyaParser.py',537),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','lyaParser.py',545),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action2','lyaParser.py',549),
  ('then_clause -> THEN','then_clause',1,'p_then_clause','lyaParser.py',553),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','lyaParser.py',554),
  ('else_clause -> ELSE','else_clause',1,'p_else_clause','lyaParser.py',561),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','lyaParser.py',562),
  ('else_clause -> elseif_clause','else_clause',1,'p_else_clause2','lyaParser.py',569),
  ('elseif_clause -> ELSIF boolean_expression then_clause','elseif_clause',3,'p_elseif_clause','lyaParser.py',573),
  ('elseif_clause -> ELSIF boolean_expression then_clause else_clause','elseif_clause',4,'p_elseif_clause2','lyaParser.py',577),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','lyaParser.py',582),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','lyaParser.py',583),
  ('do_action -> DO OD','do_action',2,'p_do_action','lyaParser.py',594),
  ('do_action -> DO control_part SMC OD','do_action',4,'p_do_action2','lyaParser.py',598),
  ('do_action -> DO control_part SMC action_statement_list OD','do_action',5,'p_do_action3','lyaParser.py',602),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action4','lyaParser.py',606),
  ('control_part -> for_control','control_part',1,'p_control_part','lyaParser.py',610),
  ('control_part -> while_control','control_part',1,'p_control_part','lyaParser.py',611),
  ('control_part -> for_control while_control','control_part',2,'p_control_part2','lyaParser.py',615),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','lyaParser.py',619),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','lyaParser.py',623),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','lyaParser.py',624),
  ('step_enumeration -> loop_counter EQUALS start_value end_value','step_enumeration',4,'p_step_enumeration','lyaParser.py',628),
  ('step_enumeration -> loop_counter EQUALS start_value step_value end_value','step_enumeration',5,'p_step_enumeration2','lyaParser.py',632),
  ('step_enumeration -> loop_counter EQUALS start_value DOWN end_value','step_enumeration',5,'p_step_enumeration3','lyaParser.py',636),
  ('step_enumeration -> loop_counter EQUALS start_value step_value DOWN end_value','step_enumeration',6,'p_step_enumeration4','lyaParser.py',640),
  ('loop_counter -> ID','loop_counter',1,'p_loop_counter','lyaParser.py',644),
  ('start_value -> discrete_expression','start_value',1,'p_start_value','lyaParser.py',648),
  ('step_value -> BY integer_expression','step_value',2,'p_step_value','lyaParser.py',652),
  ('end_value -> TO discrete_expression','end_value',2,'p_end_value','lyaParser.py',656),
  ('discrete_expression -> expression','discrete_expression',1,'p_discrete_expression','lyaParser.py',660),
  ('range_enumeration -> loop_counter IN discrete_mode','range_enumeration',3,'p_range_enumeration','lyaParser.py',664),
  ('range_enumeration -> loop_counter DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration2','lyaParser.py',668),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','lyaParser.py',672),
  ('procedure_statement -> label COLON procedure_definition SMC','procedure_statement',4,'p_procedure_statement','lyaParser.py',680),
  ('procedure_definition -> PROC LPAREN RPAREN SMC END','procedure_definition',5,'p_procedure_definition1','lyaParser.py',684),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SMC statement_list END','procedure_definition',7,'p_procedure_definition1','lyaParser.py',685),
  ('procedure_definition -> PROC LPAREN RPAREN SMC statement_list END','procedure_definition',6,'p_procedure_definition1','lyaParser.py',686),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SMC END','procedure_definition',6,'p_procedure_definition2','lyaParser.py',695),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SMC END','procedure_definition',7,'p_procedure_definition2','lyaParser.py',696),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SMC statement_list END','procedure_definition',8,'p_procedure_definition2','lyaParser.py',697),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SMC statement_list END','procedure_definition',7,'p_procedure_definition3','lyaParser.py',706),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SMC END','procedure_definition',6,'p_procedure_definition3','lyaParser.py',707),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','lyaParser.py',714),
  ('formal_parameter_list -> formal_parameter COMMA formal_parameter_list','formal_parameter_list',3,'p_formal_parameter_list','lyaParser.py',715),
  ('formal_parameter -> id_list parameter_spec','formal_parameter',2,'p_formal_parameter','lyaParser.py',722),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','lyaParser.py',728),
  ('parameter_spec -> mode parameter_attribute','parameter_spec',2,'p_parameter_spec','lyaParser.py',729),
  ('parameter_attribute -> LOC','parameter_attribute',1,'p_parameter_attribute','lyaParser.py',736),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','lyaParser.py',740),
  ('result_spec -> RETURNS LPAREN mode result_attribute RPAREN','result_spec',5,'p_result_spec','lyaParser.py',741),
  ('result_attribute -> LOC','result_attribute',1,'p_result_attribute','lyaParser.py',748),
  ('call_action -> procedure_call','call_action',1,'p_call_action','lyaParser.py',756),
  ('call_action -> builtin_call','call_action',1,'p_call_action','lyaParser.py',757),
  ('procedure_call -> ID LPAREN RPAREN','procedure_call',3,'p_procedure_call','lyaParser.py',761),
  ('procedure_call -> ID LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','lyaParser.py',762),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','lyaParser.py',769),
  ('parameter_list -> parameter COMMA parameter_list','parameter_list',3,'p_parameter_list','lyaParser.py',770),
  ('parameter -> expression','parameter',1,'p_parameter','lyaParser.py',777),
  ('exit_action -> EXIT label','exit_action',2,'p_exit_action','lyaParser.py',785),
  ('return_action -> RETURN','return_action',1,'p_return_action','lyaParser.py',789),
  ('return_action -> RETURN result','return_action',2,'p_return_action','lyaParser.py',790),
  ('result_action -> RESULT result','result_action',2,'p_result_action','lyaParser.py',797),
  ('result -> expression','result',1,'p_result','lyaParser.py',801),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','lyaParser.py',805),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','lyaParser.py',806),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','lyaParser.py',813),
  ('builtin_name -> PRED','builtin_name',1,'p_builtin_name','lyaParser.py',814),
  ('builtin_name -> SUCC','builtin_name',1,'p_builtin_name','lyaParser.py',815),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','lyaParser.py',816),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','lyaParser.py',817),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','lyaParser.py',818),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','lyaParser.py',819),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','lyaParser.py',820),
  ('integer_expression -> expression','integer_expression',1,'p_integer_expression','lyaParser.py',829),
  ('empty -> <empty>','empty',0,'p_empty','lyaParser.py',836),
]
