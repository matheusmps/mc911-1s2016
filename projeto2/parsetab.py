
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'C98017919ACEB6E9E2483800AEFAD9D0'
    
_lr_action_items = {'STRINGCONST':([5,17,23,46,57,64,72,74,78,88,98,101,102,103,104,106,107,108,109,111,118,149,150,153,154,155,156,157,158,159,160,161,162,163,164,167,168,169,181,200,207,208,210,211,214,220,227,231,233,238,248,268,269,290,300,301,],[53,53,53,53,-121,-120,53,53,53,53,-116,53,-111,-117,-84,-110,53,-112,-115,53,53,53,53,-96,-102,53,-101,-103,-104,-105,-95,-100,-98,-97,-99,-109,53,-108,-85,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'EXIT':([0,4,6,16,19,30,31,40,44,89,90,115,116,117,147,171,173,174,190,199,202,225,235,236,241,242,281,310,328,330,332,335,337,339,343,],[3,-3,3,-8,-7,3,-9,-5,-6,3,-157,-74,3,-4,-10,-158,3,3,3,-49,-45,3,3,3,-181,-75,3,3,3,3,3,3,3,3,3,]),'CHARS':([47,48,121,146,204,213,284,291,333,],[140,-15,140,140,140,-16,140,140,140,]),'EQUALS':([1,7,9,11,15,21,27,32,36,43,48,97,98,99,100,102,103,105,106,108,109,110,121,124,129,130,131,132,133,134,136,137,138,139,141,143,144,176,177,189,192,197,201,205,206,213,215,230,232,234,244,289,292,293,314,315,],[-134,104,-136,-140,-137,-200,-199,-138,-135,-139,-15,181,-116,-143,-87,-111,-117,-88,-110,-112,-115,-86,200,204,-27,-25,-24,208,-20,-23,-18,-35,-22,-19,-26,-21,-36,227,-173,-201,-140,-211,248,-141,-142,-16,-34,-144,-145,-202,-212,-29,-37,-28,-39,-44,]),'PLUS':([1,7,9,11,15,21,27,32,36,43,53,54,59,60,61,62,63,65,66,67,69,70,71,73,76,77,80,81,82,83,84,85,86,87,99,165,166,189,192,197,205,206,219,222,223,224,230,232,234,244,258,264,265,],[-134,106,-136,-140,-137,-200,-199,-138,-135,-139,-68,-113,-69,-65,-140,-123,-59,-106,-124,-55,-61,-56,-60,-66,-118,-63,-58,-122,-62,-57,106,-67,-139,-64,-143,-119,-133,-201,-140,-211,-141,-142,-114,-73,106,-107,-144,-145,-202,-212,-140,-70,-71,]),'RESULT':([0,4,6,16,19,30,31,40,44,89,90,115,116,117,147,171,173,174,190,199,202,225,235,236,241,242,281,310,328,330,332,335,337,339,343,],[5,-3,5,-8,-7,5,-9,-5,-6,5,-157,-74,5,-4,-10,-158,5,5,5,-49,-45,5,5,5,-181,-75,5,5,5,5,5,5,5,5,5,]),'LE':([1,9,15,21,27,32,36,53,54,59,60,61,62,63,65,66,67,69,70,71,73,75,76,77,80,81,82,83,84,85,86,87,99,165,166,189,197,205,206,219,222,223,224,230,232,234,244,258,264,265,],[-134,-136,-137,-200,-199,-138,-135,-68,-113,-69,-65,-140,-123,-59,-106,-124,-55,-61,-56,-60,-66,159,-118,-63,-58,-122,-62,-57,-93,-67,-139,-64,-143,-119,-133,-201,-211,-141,-142,-114,-73,-94,-107,-144,-145,-202,-212,-140,-70,-71,]),'SMC':([1,9,13,15,17,20,21,22,26,27,28,32,36,37,39,42,43,49,50,51,52,53,54,55,58,59,60,61,62,63,65,66,67,68,69,70,71,73,75,76,77,80,81,82,83,84,85,86,87,91,93,94,96,99,112,114,119,120,122,123,129,130,131,132,133,134,136,137,138,139,141,143,144,165,166,170,172,175,178,179,180,185,189,193,194,197,205,206,209,215,216,219,222,223,224,226,230,232,234,240,244,245,246,247,249,250,253,264,265,272,274,278,282,287,288,289,292,293,298,302,304,309,311,314,315,316,318,320,323,329,331,334,336,338,340,342,344,345,348,349,350,],[-134,-136,-78,-137,-207,-77,-200,-82,115,-199,-80,-138,-135,-81,-147,-146,-79,147,-11,-76,-206,-68,-113,-92,-209,-69,-65,-140,-123,-59,-106,-124,-55,-210,-61,-56,-60,-66,-91,-118,-63,-58,-122,-62,-57,-93,-67,-139,-64,-164,174,-163,-159,-143,-208,-127,-50,199,-46,202,-27,-25,-24,-14,-20,-23,-18,-35,-22,-19,-26,-21,-36,-119,-133,-180,-162,-165,-166,-168,-167,-83,-201,241,242,-211,-141,-142,-13,-34,-12,-114,-73,-94,-107,-160,-144,-145,-202,-148,-212,-51,-54,-52,-47,-48,-17,-70,-71,-161,-177,-178,-149,310,-53,-29,-37,-28,-125,-169,-179,328,332,-39,-44,-126,-170,-176,-171,337,-182,-172,-185,-184,-189,-183,-186,-188,-196,-187,-197,]),'FOR':([6,],[95,]),'WHILE':([1,6,9,15,21,27,32,36,53,54,55,59,60,61,62,63,65,66,67,69,70,71,73,75,76,77,80,81,82,83,84,85,86,87,94,99,129,130,131,134,141,165,166,178,179,180,189,197,205,206,219,222,223,224,230,232,234,244,264,265,274,278,289,293,298,302,304,316,318,320,323,334,],[-134,88,-136,-137,-200,-199,-138,-135,-68,-113,-92,-69,-65,-140,-123,-59,-106,-124,-55,-61,-56,-60,-66,-91,-118,-63,-58,-122,-62,-57,-93,-67,-139,-64,88,-143,-27,-25,-24,-23,-26,-119,-133,-166,-168,-167,-201,-211,-141,-142,-114,-73,-94,-107,-144,-145,-202,-212,-70,-71,-177,-178,-29,-28,-125,-169,-179,-126,-170,-176,-171,-172,]),'ELSIF':([1,9,15,21,27,32,36,53,54,55,59,60,61,62,63,65,66,67,69,70,71,73,75,76,77,80,81,82,83,84,85,86,87,90,99,115,165,166,171,189,190,191,197,205,206,219,221,222,223,224,230,232,234,235,242,244,264,265,266,267,271,295,298,305,316,317,],[-134,-136,-137,-200,-199,-138,-135,-68,-113,-92,-69,-65,-140,-123,-59,-106,-124,-55,-61,-56,-60,-66,-91,-118,-63,-58,-122,-62,-57,-93,-67,-139,-64,-157,-143,-74,-119,-133,-158,-201,-150,238,-211,-141,-142,-114,269,-73,-94,-107,-144,-145,-202,-151,-75,-212,-70,-71,-128,269,-130,-131,-125,238,-126,-132,]),'MOD':([1,7,9,11,15,21,27,32,36,43,53,54,59,60,61,62,63,65,66,67,69,70,71,73,76,77,80,81,82,83,85,86,87,99,165,166,189,192,197,205,206,219,222,224,230,232,234,244,258,264,265,],[-134,103,-136,-140,-137,-200,-199,-138,-135,-139,-68,-113,-69,-65,-140,-123,-59,103,-124,-55,-61,-56,-60,-66,-118,-63,-58,-122,-62,-57,-67,-139,-64,-143,-119,-133,-201,-140,-211,-141,-142,-114,-73,103,-144,-145,-202,-212,-140,-70,-71,]),'COLON':([1,9,11,15,21,27,29,32,36,53,54,55,59,60,61,62,63,65,66,67,69,70,71,73,75,76,77,80,81,82,83,84,85,86,87,92,99,126,128,165,166,183,189,197,205,206,219,222,223,224,230,232,234,244,254,258,264,265,298,316,],[-134,-136,-76,-137,-200,-199,116,-138,-135,-68,-113,-92,-69,-65,-140,-123,-59,-106,-124,-55,-61,-56,-60,-66,-91,-118,-63,-58,-122,-62,-57,-93,-67,-139,-64,173,-143,-32,207,-119,-133,-32,-201,-211,-141,-142,-114,-73,-94,-107,-144,-145,-202,-212,-32,-140,-70,-71,-125,-126,]),'READ':([0,4,5,6,16,17,19,23,30,31,40,44,46,57,64,72,74,78,79,88,89,90,98,101,102,103,104,106,107,108,109,111,115,116,117,118,147,149,150,153,154,155,156,157,158,159,160,161,162,163,164,167,168,169,171,173,174,181,190,199,200,202,207,208,210,211,214,220,225,227,231,233,235,236,238,241,242,248,268,269,281,290,300,301,310,328,330,332,335,337,339,343,],[8,-3,8,8,-8,8,-7,8,8,-9,-5,-6,8,-121,-120,8,8,8,8,8,8,-157,-116,8,-111,-117,-84,-110,8,-112,-115,8,-74,8,-4,8,-10,8,8,-96,-102,8,-101,-103,-104,-105,-95,-100,-98,-97,-99,-109,8,-108,-158,8,8,-85,8,-49,8,-45,8,8,8,8,8,8,8,8,8,8,8,8,8,-181,-75,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'NULL':([5,17,23,46,57,64,72,74,78,88,98,101,102,103,104,106,107,108,109,111,118,149,150,153,154,155,156,157,158,159,160,161,162,163,164,167,168,169,181,200,207,208,210,211,214,220,227,231,233,238,248,268,269,290,300,301,],[59,59,59,59,-121,-120,59,59,59,59,-116,59,-111,-117,-84,-110,59,-112,-115,59,59,59,59,-96,-102,59,-101,-103,-104,-105,-95,-100,-98,-97,-99,-109,59,-108,-85,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'FALSE':([5,17,23,46,57,64,72,74,78,88,98,101,102,103,104,106,107,108,109,111,118,149,150,153,154,155,156,157,158,159,160,161,162,163,164,167,168,169,181,200,207,208,210,211,214,220,227,231,233,238,248,268,269,290,300,301,],[60,60,60,60,-121,-120,60,60,60,60,-116,60,-111,-117,-84,-110,60,-112,-115,60,60,60,60,-96,-102,60,-101,-103,-104,-105,-95,-100,-98,-97,-99,-109,60,-108,-85,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'LOWER':([0,4,5,6,16,17,19,23,30,31,40,44,46,57,64,72,74,78,79,88,89,90,98,101,102,103,104,106,107,108,109,111,115,116,117,118,147,149,150,153,154,155,156,157,158,159,160,161,162,163,164,167,168,169,171,173,174,181,190,199,200,202,207,208,210,211,214,220,225,227,231,233,235,236,238,241,242,248,268,269,281,290,300,301,310,328,330,332,335,337,339,343,],[10,-3,10,10,-8,10,-7,10,10,-9,-5,-6,10,-121,-120,10,10,10,10,10,10,-157,-116,10,-111,-117,-84,-110,10,-112,-115,10,-74,10,-4,10,-10,10,10,-96,-102,10,-101,-103,-104,-105,-95,-100,-98,-97,-99,-109,10,-108,-158,10,10,-85,10,-49,10,-45,10,10,10,10,10,10,10,10,10,10,10,10,10,-181,-75,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'ID':([0,2,3,4,5,6,16,17,19,23,30,31,35,40,41,44,46,47,48,57,64,72,74,78,79,88,89,90,95,98,101,102,103,104,106,107,108,109,111,115,116,117,118,121,142,146,147,148,149,150,153,154,155,156,157,158,159,160,161,162,163,164,167,168,169,171,173,174,181,190,198,199,200,202,203,204,207,208,210,211,213,214,220,225,227,229,231,233,235,236,238,241,242,243,248,268,269,276,281,284,290,291,300,301,308,310,328,330,332,333,335,337,339,343,],[11,48,51,-3,61,11,-8,61,-7,61,11,-9,48,-5,48,-6,61,138,-15,-121,-120,61,61,61,61,61,11,-157,177,-116,61,-111,-117,-84,-110,61,-112,-115,61,-74,192,-4,61,138,213,138,-10,48,61,61,-96,-102,61,-101,-103,-104,-105,-95,-100,-98,-97,-99,-109,61,-108,-158,192,11,-85,11,48,-49,61,-45,48,138,61,61,61,258,-16,61,61,11,61,277,61,61,11,11,61,-181,-75,48,61,61,61,277,11,138,258,138,61,61,48,11,11,11,11,138,11,11,11,11,]),'NOTEQUAL':([1,9,15,21,27,32,36,53,54,59,60,61,62,63,65,66,67,69,70,71,73,75,76,77,80,81,82,83,84,85,86,87,99,165,166,189,197,205,206,219,222,223,224,230,232,234,244,258,264,265,],[-134,-136,-137,-200,-199,-138,-135,-68,-113,-69,-65,-140,-123,-59,-106,-124,-55,-61,-56,-60,-66,156,-118,-63,-58,-122,-62,-57,-93,-67,-139,-64,-143,-119,-133,-201,-211,-141,-142,-114,-73,-94,-107,-144,-145,-202,-212,-140,-70,-71,]),'ARRAY':([47,48,121,146,204,213,284,291,333,],[135,-15,135,135,135,-16,135,135,135,]),'PRINT':([0,4,5,6,16,17,19,23,30,31,40,44,46,57,64,72,74,78,79,88,89,90,98,101,102,103,104,106,107,108,109,111,115,116,117,118,147,149,150,153,154,155,156,157,158,159,160,161,162,163,164,167,168,169,171,173,174,181,190,199,200,202,207,208,210,211,214,220,225,227,231,233,235,236,238,241,242,248,268,269,281,290,300,301,310,328,330,332,335,337,339,343,],[12,-3,12,12,-8,12,-7,12,12,-9,-5,-6,12,-121,-120,12,12,12,12,12,12,-157,-116,12,-111,-117,-84,-110,12,-112,-115,12,-74,12,-4,12,-10,12,12,-96,-102,12,-101,-103,-104,-105,-95,-100,-98,-97,-99,-109,12,-108,-158,12,12,-85,12,-49,12,-45,12,12,12,12,12,12,12,12,12,12,12,12,12,-181,-75,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'SUCC':([0,4,5,6,16,17,19,23,30,31,40,44,46,57,64,72,74,78,79,88,89,90,98,101,102,103,104,106,107,108,109,111,115,116,117,118,147,149,150,153,154,155,156,157,158,159,160,161,162,163,164,167,168,169,171,173,174,181,190,199,200,202,207,208,210,211,214,220,225,227,231,233,235,236,238,241,242,248,268,269,281,290,300,301,310,328,330,332,335,337,339,343,],[45,-3,45,45,-8,45,-7,45,45,-9,-5,-6,45,-121,-120,45,45,45,45,45,45,-157,-116,45,-111,-117,-84,-110,45,-112,-115,45,-74,45,-4,45,-10,45,45,-96,-102,45,-101,-103,-104,-105,-95,-100,-98,-97,-99,-109,45,-108,-158,45,45,-85,45,-49,45,-45,45,45,45,45,45,45,45,45,45,45,45,45,45,-181,-75,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'BOOL':([47,48,121,146,204,211,213,229,276,284,290,291,333,],[141,-15,141,141,141,141,-16,141,141,141,141,141,141,]),'CHARCONST':([5,17,23,46,57,64,72,74,78,88,98,101,102,103,104,106,107,108,109,111,118,149,150,153,154,155,156,157,158,159,160,161,162,163,164,167,168,169,181,200,207,208,210,211,214,220,227,231,233,238,248,268,269,290,300,301,],[85,85,85,85,-121,-120,85,85,85,85,-116,85,-111,-117,-84,-110,85,-112,-115,85,85,85,85,-96,-102,85,-101,-103,-104,-105,-95,-100,-98,-97,-99,-109,85,-108,-85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'PRED':([0,4,5,6,16,17,19,23,30,31,40,44,46,57,64,72,74,78,79,88,89,90,98,101,102,103,104,106,107,108,109,111,115,116,117,118,147,149,150,153,154,155,156,157,158,159,160,161,162,163,164,167,168,169,171,173,174,181,190,199,200,202,207,208,210,211,214,220,225,227,231,233,235,236,238,241,242,248,268,269,281,290,300,301,310,328,330,332,335,337,339,343,],[14,-3,14,14,-8,14,-7,14,14,-9,-5,-6,14,-121,-120,14,14,14,14,14,14,-157,-116,14,-111,-117,-84,-110,14,-112,-115,14,-74,14,-4,14,-10,14,14,-96,-102,14,-101,-103,-104,-105,-95,-100,-98,-97,-99,-109,14,-108,-158,14,14,-85,14,-49,14,-45,14,14,14,14,14,14,14,14,14,14,14,14,14,-181,-75,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'DOWN':([1,9,15,21,27,32,36,53,54,55,59,60,61,62,63,65,66,67,69,70,71,73,75,76,77,80,81,82,83,84,85,86,87,99,165,166,176,177,189,197,205,206,219,222,223,224,230,232,234,244,264,265,273,274,275,298,299,316,321,322,],[-134,-136,-137,-200,-199,-138,-135,-68,-113,-92,-69,-65,-140,-123,-59,-106,-124,-55,-61,-56,-60,-66,-91,-118,-63,-58,-122,-62,-57,-93,-67,-139,-64,-143,-119,-133,228,-173,-201,-211,-141,-142,-114,-73,-94,-107,-144,-145,-202,-212,-70,-71,-174,-177,303,-125,319,-126,-175,-221,]),'COMMA':([1,9,15,21,27,32,36,47,48,49,50,53,54,55,59,60,61,62,63,65,66,67,69,70,71,73,75,76,77,80,81,82,83,84,85,86,87,99,119,120,121,122,123,124,129,130,131,132,133,134,136,137,138,139,141,143,144,165,166,182,183,186,188,189,197,205,206,209,213,215,216,217,219,222,223,224,230,232,234,244,245,246,247,249,250,251,252,253,256,257,259,260,264,265,279,284,285,288,289,292,293,298,306,307,313,314,315,316,325,326,],[-134,-136,-137,-200,-199,-138,-135,142,-15,148,-11,-68,-113,-92,-69,-65,-140,-123,-59,-106,-124,-55,-61,-56,-60,-66,-91,-118,-63,-58,-122,-62,-57,-93,-67,-139,-64,-143,-50,198,142,-46,203,142,-27,-25,-24,-14,-20,-23,-18,-35,-22,-19,-26,-21,-36,-119,-133,231,-89,233,-205,-201,-211,-141,-142,-13,-16,-34,-12,231,-114,-73,-94,-107,-144,-145,-202,-212,-51,-54,-52,-47,-48,-33,-31,-17,-42,-40,-43,290,-70,-71,-90,142,308,-53,-29,-37,-28,-125,-192,-193,-41,-39,-44,-126,-194,-195,]),'BY':([1,9,15,21,27,32,36,53,54,55,59,60,61,62,63,65,66,67,69,70,71,73,75,76,77,80,81,82,83,84,85,86,87,99,165,166,189,197,205,206,219,222,223,224,230,232,234,244,264,265,273,274,275,298,316,],[-134,-136,-137,-200,-199,-138,-135,-68,-113,-92,-69,-65,-140,-123,-59,-106,-124,-55,-61,-56,-60,-66,-91,-118,-63,-58,-122,-62,-57,-93,-67,-139,-64,-143,-119,-133,-201,-211,-141,-142,-114,-73,-94,-107,-144,-145,-202,-212,-70,-71,-174,-177,301,-125,-126,]),'RETURN':([0,4,6,16,19,30,31,40,44,89,90,115,116,117,147,171,173,174,190,199,202,225,235,236,241,242,281,310,328,330,332,335,337,339,343,],[17,-3,17,-8,-7,17,-9,-5,-6,17,-157,-74,17,-4,-10,-158,17,17,17,-49,-45,17,17,17,-181,-75,17,17,17,17,17,17,17,17,17,]),'TIMES':([1,7,9,11,15,21,27,32,36,43,53,54,59,60,61,62,63,65,66,67,69,70,71,73,76,77,80,81,82,83,85,86,87,99,165,166,189,192,197,205,206,219,222,224,230,232,234,244,258,264,265,],[-134,109,-136,-140,-137,-200,-199,-138,-135,-139,-68,-113,-69,-65,-140,-123,-59,109,-124,-55,-61,-56,-60,-66,-118,-63,-58,-122,-62,-57,-67,-139,-64,-143,-119,-133,-201,-140,-211,-141,-142,-114,-73,109,-144,-145,-202,-212,-140,-70,-71,]),'LOC':([129,130,131,133,134,136,137,138,139,141,143,144,215,289,292,293,307,314,315,341,],[-27,-25,-24,-20,-23,-18,-35,-22,-19,-26,-21,-36,-34,-29,-37,-28,326,-39,-44,346,]),'REF':([47,48,121,146,204,213,284,291,333,],[146,-15,146,146,146,-16,146,146,146,]),'RBRACKET':([1,9,15,21,27,32,36,53,54,55,59,60,61,62,63,65,66,67,69,70,71,73,75,76,77,80,81,82,83,84,85,86,87,99,125,126,127,129,130,131,134,141,165,166,182,183,184,189,197,205,206,217,218,219,222,223,224,230,232,234,244,251,252,256,257,259,260,261,262,264,265,279,289,293,298,313,316,],[-134,-136,-137,-200,-199,-138,-135,-68,-113,-92,-69,-65,-140,-123,-59,-106,-124,-55,-61,-56,-60,-66,-91,-118,-63,-58,-122,-62,-57,-93,-67,-139,-64,-143,205,-221,206,-27,-25,-24,-23,-26,-119,-133,230,-89,232,-201,-211,-141,-142,264,265,-114,-73,-94,-107,-144,-145,-202,-212,-33,-31,-42,-40,-43,291,292,-38,-70,-71,-90,-29,-28,-125,-41,-126,]),'INTCONST':([5,17,23,46,57,64,72,74,78,88,98,101,102,103,104,106,107,108,109,111,118,149,150,153,154,155,156,157,158,159,160,161,162,163,164,167,168,169,181,200,207,208,210,211,212,214,220,227,231,233,238,248,268,269,290,300,301,],[87,87,87,87,-121,-120,87,87,87,87,-116,87,-111,-117,-84,-110,87,-112,-115,87,87,87,87,-96,-102,87,-101,-103,-104,-105,-95,-100,-98,-97,-99,-109,87,-108,-85,87,87,87,87,87,262,87,87,87,87,87,87,87,87,87,87,87,87,]),'LBRACKET':([1,7,9,11,15,21,27,32,36,43,53,56,59,60,61,62,63,67,69,70,71,73,77,80,81,82,83,85,86,87,99,135,140,166,189,192,197,205,206,222,230,232,234,244,258,264,265,],[46,101,-136,-140,-137,-200,-199,-138,-135,-139,-68,149,-69,-65,-140,101,-59,-55,-61,-56,-60,-66,-63,-58,-72,-62,-57,-67,-139,-64,-143,211,212,101,-201,-140,-211,-141,-142,-73,-144,-145,-202,-212,-140,-70,-71,]),'ELSE':([1,9,15,21,27,32,36,53,54,55,59,60,61,62,63,65,66,67,69,70,71,73,75,76,77,80,81,82,83,84,85,86,87,90,99,115,165,166,171,189,190,191,197,205,206,219,221,222,223,224,230,232,234,235,242,244,264,265,266,267,271,295,298,305,316,317,],[-134,-136,-137,-200,-199,-138,-135,-68,-113,-92,-69,-65,-140,-123,-59,-106,-124,-55,-61,-56,-60,-66,-91,-118,-63,-58,-122,-62,-57,-93,-67,-139,-64,-157,-143,-74,-119,-133,-158,-201,-150,236,-211,-141,-142,-114,268,-73,-94,-107,-144,-145,-202,-151,-75,-212,-70,-71,-128,268,-130,-131,-125,236,-126,-132,]),'GT':([1,9,15,21,27,32,36,53,54,59,60,61,62,63,65,66,67,69,70,71,73,75,76,77,80,81,82,83,84,85,86,87,99,165,166,189,197,205,206,219,222,223,224,230,232,234,244,258,264,265,],[-134,-136,-137,-200,-199,-138,-135,-68,-113,-69,-65,-140,-123,-59,-106,-124,-55,-61,-56,-60,-66,154,-118,-63,-58,-122,-62,-57,-93,-67,-139,-64,-143,-119,-133,-201,-211,-141,-142,-114,-73,-94,-107,-144,-145,-202,-212,-140,-70,-71,]),'DO':([0,4,6,16,19,30,31,40,44,89,90,115,116,117,147,171,173,174,190,199,202,225,235,236,241,242,281,310,328,330,332,335,337,339,343,],[6,-3,6,-8,-7,6,-9,-5,-6,6,-157,-74,6,-4,-10,-158,6,6,6,-49,-45,6,6,6,-181,-75,6,6,6,6,6,6,6,6,6,]),'IF':([0,4,5,6,16,17,19,23,30,31,40,44,46,72,74,88,89,90,101,104,107,111,115,116,117,118,147,149,171,173,174,181,190,199,200,202,207,208,210,211,214,220,225,227,231,233,235,236,238,241,242,248,268,269,281,290,300,301,310,328,330,332,335,337,339,343,],[23,-3,72,23,-8,72,-7,72,23,-9,-5,-6,72,72,72,72,23,-157,72,-84,72,72,-74,23,-4,72,-10,72,-158,23,23,-85,23,-49,72,-45,72,72,72,72,72,72,23,72,72,72,23,23,72,-181,-75,72,72,72,23,72,72,72,23,23,23,23,23,23,23,23,]),'CHAR':([47,48,121,146,204,211,213,229,276,284,290,291,333,],[129,-15,129,129,129,129,-16,129,129,129,129,129,129,]),'TRUE':([5,17,23,46,57,64,72,74,78,88,98,101,102,103,104,106,107,108,109,111,118,149,150,153,154,155,156,157,158,159,160,161,162,163,164,167,168,169,181,200,207,208,210,211,214,220,227,231,233,238,248,268,269,290,300,301,],[73,73,73,73,-121,-120,73,73,73,73,-116,73,-111,-117,-84,-110,73,-112,-115,73,73,73,73,-96,-102,73,-101,-103,-104,-105,-95,-100,-98,-97,-99,-109,73,-108,-85,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'$end':([0,4,16,19,25,30,31,33,40,44,115,117,147,199,202,241,242,],[-222,-3,-8,-7,-2,-1,-9,0,-5,-6,-74,-4,-10,-49,-45,-181,-75,]),'IN':([1,9,15,21,27,32,36,53,54,59,60,61,62,63,65,66,67,69,70,71,73,75,76,77,80,81,82,83,84,85,86,87,99,165,166,176,177,189,197,205,206,219,222,223,224,228,230,232,234,244,258,264,265,],[-134,-136,-137,-200,-199,-138,-135,-68,-113,-69,-65,-140,-123,-59,-106,-124,-55,-61,-56,-60,-66,163,-118,-63,-58,-122,-62,-57,-93,-67,-139,-64,-143,-119,-133,229,-173,-201,-211,-141,-142,-114,-73,-94,-107,276,-144,-145,-202,-212,-140,-70,-71,]),'LPAREN':([5,8,10,11,12,14,17,18,23,24,34,38,45,46,57,61,64,72,74,78,88,98,101,102,103,104,106,107,108,109,111,118,129,130,134,138,141,145,149,150,153,154,155,156,157,158,159,160,161,162,163,164,167,168,169,181,192,195,200,207,208,210,211,214,220,227,231,233,238,248,258,268,269,277,290,300,301,312,],[74,-219,-217,111,-220,-214,74,-216,74,-213,118,-218,-215,74,-121,111,-120,74,74,74,74,-116,74,-111,-117,-84,-110,74,-112,-115,74,74,-27,-25,210,-30,-26,214,74,74,-96,-102,74,-101,-103,-104,-105,-95,-100,-98,-97,-99,-109,74,-108,-85,111,243,74,74,74,74,74,74,74,74,74,74,74,74,111,74,74,-30,74,74,74,333,]),'PROC':([116,],[195,]),'NUM':([0,4,5,6,16,17,19,23,30,31,40,44,46,57,64,72,74,78,79,88,89,90,98,101,102,103,104,106,107,108,109,111,115,116,117,118,147,149,150,153,154,155,156,157,158,159,160,161,162,163,164,167,168,169,171,173,174,181,190,199,200,202,207,208,210,211,214,220,225,227,231,233,235,236,238,241,242,248,268,269,281,290,300,301,310,328,330,332,335,337,339,343,],[24,-3,24,24,-8,24,-7,24,24,-9,-5,-6,24,-121,-120,24,24,24,24,24,24,-157,-116,24,-111,-117,-84,-110,24,-112,-115,24,-74,24,-4,24,-10,24,24,-96,-102,24,-101,-103,-104,-105,-95,-100,-98,-97,-99,-109,24,-108,-158,24,24,-85,24,-49,24,-45,24,24,24,24,24,24,24,24,24,24,24,24,24,-181,-75,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'AND':([1,9,15,21,27,32,36,53,54,59,60,61,62,63,65,66,67,69,70,71,73,75,76,77,80,81,82,83,84,85,86,87,99,165,166,189,197,205,206,219,222,223,224,230,232,234,244,258,264,265,],[-134,-136,-137,-200,-199,-138,-135,-68,-113,-69,-65,-140,-123,-59,-106,-124,-55,-61,-56,-60,-66,162,-118,-63,-58,-122,-62,-57,-93,-67,-139,-64,-143,-119,-133,-201,-211,-141,-142,-114,-73,-94,-107,-144,-145,-202,-212,-140,-70,-71,]),'RETURNS':([287,309,],[312,312,]),'RPAREN':([1,9,15,21,27,32,36,53,54,55,59,60,61,62,63,65,66,67,69,70,71,73,75,76,77,80,81,82,83,84,85,86,87,99,111,118,129,130,131,133,134,136,137,138,139,141,143,144,152,165,166,186,187,188,189,196,197,205,206,215,219,222,223,224,230,232,234,243,244,251,252,255,263,264,265,280,285,286,289,292,293,298,306,307,314,315,316,325,326,327,341,346,347,],[-134,-136,-137,-200,-199,-138,-135,-68,-113,-92,-69,-65,-140,-123,-59,-106,-124,-55,-61,-56,-60,-66,-91,-118,-63,-58,-122,-62,-57,-93,-67,-139,-64,-143,189,197,-27,-25,-24,-20,-23,-18,-35,-22,-19,-26,-21,-36,222,-119,-133,-203,234,-205,-201,244,-211,-141,-142,-34,-114,-73,-94,-107,-144,-145,-202,287,-212,-33,-31,289,293,-70,-71,-204,-190,309,-29,-37,-28,-125,-192,-193,-39,-44,-126,-194,-195,-191,348,-198,350,]),'UPPER':([0,4,5,6,16,17,19,23,30,31,40,44,46,57,64,72,74,78,79,88,89,90,98,101,102,103,104,106,107,108,109,111,115,116,117,118,147,149,150,153,154,155,156,157,158,159,160,161,162,163,164,167,168,169,171,173,174,181,190,199,200,202,207,208,210,211,214,220,225,227,231,233,235,236,238,241,242,248,268,269,281,290,300,301,310,328,330,332,335,337,339,343,],[18,-3,18,18,-8,18,-7,18,18,-9,-5,-6,18,-121,-120,18,18,18,18,18,18,-157,-116,18,-111,-117,-84,-110,18,-112,-115,18,-74,18,-4,18,-10,18,18,-96,-102,18,-101,-103,-104,-105,-95,-100,-98,-97,-99,-109,18,-108,-158,18,18,-85,18,-49,18,-45,18,18,18,18,18,18,18,18,18,18,18,18,18,-181,-75,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'DIV':([1,7,9,11,15,21,27,32,36,43,53,54,59,60,61,62,63,65,66,67,69,70,71,73,76,77,80,81,82,83,85,86,87,99,165,166,189,192,197,205,206,219,222,224,230,232,234,244,258,264,265,],[-134,98,-136,-140,-137,-200,-199,-138,-135,-139,-68,-113,-69,-65,-140,-123,-59,98,-124,-55,-61,-56,-60,-66,-118,-63,-58,-122,-62,-57,-67,-139,-64,-143,-119,-133,-201,-140,-211,-141,-142,-114,-73,98,-144,-145,-202,-212,-140,-70,-71,]),'INT':([47,48,121,146,204,211,213,229,276,284,290,291,333,],[130,-15,130,130,130,130,-16,130,130,130,130,130,130,]),'ARROW':([1,5,7,9,11,15,17,21,23,27,32,36,43,46,57,61,62,64,72,74,78,86,88,98,99,101,102,103,104,106,107,108,109,111,118,149,150,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,181,189,192,197,200,205,206,207,208,210,211,214,220,227,230,231,232,233,234,238,244,248,258,268,269,290,300,301,],[-134,79,99,-136,-140,-137,79,-200,79,-199,-138,-135,-139,79,-121,-140,99,-120,79,79,79,-139,79,-116,-143,79,-111,-117,-84,-110,79,-112,-115,79,79,79,79,-96,-102,79,-101,-103,-104,-105,-95,-100,-98,-97,-99,99,-109,79,-108,-85,-201,-140,-211,79,-141,-142,79,79,79,79,79,79,79,-144,79,-145,79,-202,79,-212,79,-140,79,79,79,79,79,]),'SYN':([0,4,16,19,30,31,40,44,115,117,147,199,202,241,242,310,328,330,332,335,337,339,343,],[35,-3,-8,-7,35,-9,-5,-6,-74,-4,-10,-49,-45,-181,-75,35,35,35,35,35,35,35,35,]),'GE':([1,9,15,21,27,32,36,53,54,59,60,61,62,63,65,66,67,69,70,71,73,75,76,77,80,81,82,83,84,85,86,87,99,165,166,189,197,205,206,219,222,223,224,230,232,234,244,258,264,265,],[-134,-136,-137,-200,-199,-138,-135,-68,-113,-69,-65,-140,-123,-59,-106,-124,-55,-61,-56,-60,-66,157,-118,-63,-58,-122,-62,-57,-93,-67,-139,-64,-143,-119,-133,-201,-211,-141,-142,-114,-73,-94,-107,-144,-145,-202,-212,-140,-70,-71,]),'THEN':([1,9,15,21,27,32,36,53,54,55,59,60,61,62,63,65,66,67,69,70,71,73,75,76,77,80,81,82,83,84,85,86,87,99,113,114,151,165,166,189,197,205,206,219,222,223,224,230,232,234,244,264,265,283,297,298,316,],[-134,-136,-137,-200,-199,-138,-135,-68,-113,-92,-69,-65,-140,-123,-59,-106,-124,-55,-61,-56,-60,-66,-91,-118,-63,-58,-122,-62,-57,-93,-67,-139,-64,-143,190,-127,220,-119,-133,-201,-211,-141,-142,-114,-73,-94,-107,-144,-145,-202,-212,-70,-71,190,220,-125,-126,]),'TO':([1,9,15,21,27,32,36,53,54,55,59,60,61,62,63,65,66,67,69,70,71,73,75,76,77,80,81,82,83,84,85,86,87,99,165,166,189,197,205,206,219,222,223,224,230,232,234,244,264,265,273,274,275,298,299,303,316,319,321,322,],[-134,-136,-137,-200,-199,-138,-135,-68,-113,-92,-69,-65,-140,-123,-59,-106,-124,-55,-61,-56,-60,-66,-91,-118,-63,-58,-122,-62,-57,-93,-67,-139,-64,-143,-119,-133,-201,-211,-141,-142,-114,-73,-94,-107,-144,-145,-202,-212,-70,-71,-174,-177,300,-125,300,300,-126,300,-175,-221,]),'LENGTH':([0,4,5,6,16,17,19,23,30,31,40,44,46,57,64,72,74,78,79,88,89,90,98,101,102,103,104,106,107,108,109,111,115,116,117,118,147,149,150,153,154,155,156,157,158,159,160,161,162,163,164,167,168,169,171,173,174,181,190,199,200,202,207,208,210,211,214,220,225,227,231,233,235,236,238,241,242,248,268,269,281,290,300,301,310,328,330,332,335,337,339,343,],[38,-3,38,38,-8,38,-7,38,38,-9,-5,-6,38,-121,-120,38,38,38,38,38,38,-157,-116,38,-111,-117,-84,-110,38,-112,-115,38,-74,38,-4,38,-10,38,38,-96,-102,38,-101,-103,-104,-105,-95,-100,-98,-97,-99,-109,38,-108,-158,38,38,-85,38,-49,38,-45,38,38,38,38,38,38,38,38,38,38,38,38,38,-181,-75,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'DCL':([0,4,16,19,30,31,40,44,115,117,147,199,202,241,242,310,328,330,332,335,337,339,343,],[2,-3,-8,-7,2,-9,-5,-6,-74,-4,-10,-49,-45,-181,-75,2,2,2,2,2,2,2,2,]),'STRCONC':([1,7,9,11,15,21,27,32,36,43,53,54,59,60,61,62,63,65,66,67,69,70,71,73,76,77,80,81,82,83,84,85,86,87,99,165,166,189,192,197,205,206,219,222,223,224,230,232,234,244,258,264,265,],[-134,108,-136,-140,-137,-200,-199,-138,-135,-139,-68,-113,-69,-65,-140,-123,-59,-106,-124,-55,-61,-56,-60,-66,-118,-63,-58,-122,-62,-57,108,-67,-139,-64,-143,-119,-133,-201,-140,-211,-141,-142,-114,-73,108,-107,-144,-145,-202,-212,-140,-70,-71,]),'LT':([1,9,15,21,27,32,36,53,54,59,60,61,62,63,65,66,67,69,70,71,73,75,76,77,80,81,82,83,84,85,86,87,99,165,166,189,197,205,206,219,222,223,224,230,232,234,244,258,264,265,],[-134,-136,-137,-200,-199,-138,-135,-68,-113,-69,-65,-140,-123,-59,-106,-124,-55,-61,-56,-60,-66,158,-118,-63,-58,-122,-62,-57,-93,-67,-139,-64,-143,-119,-133,-201,-211,-141,-142,-114,-73,-94,-107,-144,-145,-202,-212,-140,-70,-71,]),'TYPE':([0,4,16,19,30,31,40,44,115,117,147,199,202,241,242,310,328,330,332,335,337,339,343,],[41,-3,-8,-7,41,-9,-5,-6,-74,-4,-10,-49,-45,-181,-75,41,41,41,41,41,41,41,41,]),'ISEQUAL':([1,9,15,21,27,32,36,53,54,59,60,61,62,63,65,66,67,69,70,71,73,75,76,77,80,81,82,83,84,85,86,87,99,165,166,189,197,205,206,219,222,223,224,230,232,234,244,258,264,265,],[-134,-136,-137,-200,-199,-138,-135,-68,-113,-69,-65,-140,-123,-59,-106,-124,-55,-61,-56,-60,-66,161,-118,-63,-58,-122,-62,-57,-93,-67,-139,-64,-143,-119,-133,-201,-211,-141,-142,-114,-73,-94,-107,-144,-145,-202,-212,-140,-70,-71,]),'OD':([6,89,90,115,171,174,225,242,],[96,172,-157,-74,-158,226,272,-75,]),'MINUS':([1,5,7,9,11,15,17,21,23,27,32,36,43,46,53,54,59,60,61,62,63,65,66,67,69,70,71,72,73,74,76,77,80,81,82,83,84,85,86,87,88,98,99,101,102,103,104,106,107,108,109,111,118,149,150,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,181,189,192,197,200,205,206,207,208,210,211,214,219,220,222,223,224,227,230,231,232,233,234,238,244,248,258,264,265,268,269,290,300,301,],[-134,64,102,-136,-140,-137,64,-200,64,-199,-138,-135,-139,64,-68,-113,-69,-65,-140,-123,-59,-106,-124,-55,-61,-56,-60,64,-66,64,-118,-63,-58,-122,-62,-57,102,-67,-139,-64,64,-116,-143,64,-111,-117,-84,-110,64,-112,-115,64,64,64,64,-96,-102,64,-101,-103,-104,-105,-95,-100,-98,-97,-99,-119,-133,-109,64,-108,-85,-201,-140,-211,64,-141,-142,64,64,64,64,64,-114,64,-73,102,-107,64,-144,64,-145,64,-202,64,-212,64,-140,-70,-71,64,64,64,64,64,]),'FI':([1,9,15,21,27,32,36,53,54,55,59,60,61,62,63,65,66,67,69,70,71,73,75,76,77,80,81,82,83,84,85,86,87,90,99,115,165,166,171,189,190,191,197,205,206,219,222,223,224,230,232,234,235,236,237,239,242,244,264,265,270,281,294,296,298,305,316,324,],[-134,-136,-137,-200,-199,-138,-135,-68,-113,-92,-69,-65,-140,-123,-59,-106,-124,-55,-61,-56,-60,-66,-91,-118,-63,-58,-122,-62,-57,-93,-67,-139,-64,-157,-143,-74,-119,-133,-158,-201,-150,240,-211,-141,-142,-114,-73,-94,-107,-144,-145,-202,-151,-152,282,-154,-75,-212,-70,-71,298,-153,316,-129,-125,-155,-126,-156,]),'NOT':([5,17,23,46,72,74,88,98,101,102,103,104,106,107,108,109,111,118,149,150,153,154,155,156,157,158,159,160,161,162,163,164,167,168,169,181,200,207,208,210,211,214,220,227,231,233,238,248,268,269,290,300,301,],[57,57,57,57,57,57,57,-116,57,-111,-117,-84,-110,57,-112,-115,57,57,57,57,-96,-102,57,-101,-103,-104,-105,-95,-100,-98,-97,-99,-109,57,-108,-85,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'OR':([1,9,15,21,27,32,36,53,54,59,60,61,62,63,65,66,67,69,70,71,73,75,76,77,80,81,82,83,84,85,86,87,99,165,166,189,197,205,206,219,222,223,224,230,232,234,244,258,264,265,],[-134,-136,-137,-200,-199,-138,-135,-68,-113,-69,-65,-140,-123,-59,-106,-124,-55,-61,-56,-60,-66,164,-118,-63,-58,-122,-62,-57,-93,-67,-139,-64,-143,-119,-133,-201,-211,-141,-142,-114,-73,-94,-107,-144,-145,-202,-212,-140,-70,-71,]),'END':([4,16,19,31,40,44,115,117,147,199,202,241,242,310,328,330,332,335,337,339,343,],[-3,-8,-7,-9,-5,-6,-74,-4,-10,-49,-45,-181,-75,331,336,338,340,342,344,345,349,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'membership_operator':([75,],[153,]),'newmode_list':([41,],[123,]),'location':([0,5,6,17,23,30,46,72,74,78,79,88,89,101,107,111,116,118,149,150,155,168,173,174,190,200,207,208,210,211,214,220,225,227,231,233,235,236,238,248,268,269,281,290,300,301,310,328,330,332,335,337,339,343,],[7,62,7,62,62,7,62,62,62,62,166,62,7,62,62,62,7,62,62,62,62,62,7,7,7,62,62,62,62,62,62,62,7,62,62,62,7,7,62,62,62,62,7,62,62,62,7,7,7,7,7,7,7,7,]),'element_node':([291,],[314,]),'id_list':([2,35,41,148,198,203,243,308,],[47,121,124,47,121,124,284,284,]),'index_mode':([211,290,],[257,313,]),'statement':([0,30,310,328,330,332,335,337,339,343,],[4,117,4,4,117,4,117,4,117,117,]),'elseif_expression':([221,267,],[271,295,]),'assigning_operator':([7,],[107,]),'step_value':([275,],[299,]),'then_clause':([113,283,],[191,305,]),'result':([5,17,],[58,112,]),'mode_name':([47,121,146,204,284,291,333,],[136,136,136,136,136,136,136,]),'elseif_clause':([191,305,],[239,239,]),'operand3':([5,17,23,46,72,74,88,101,107,111,118,149,150,155,168,200,207,208,210,211,214,220,227,231,233,238,248,268,269,290,300,301,],[54,54,54,54,54,54,54,54,54,54,54,54,219,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'action_statement_list':([6,174,190,236,],[89,225,235,281,]),'expression_list':([101,149,],[182,217,]),'array_slice':([0,5,6,17,23,30,46,72,74,78,79,88,89,101,107,111,116,118,149,150,155,168,173,174,190,200,207,208,210,211,214,220,225,227,231,233,235,236,238,248,268,269,281,290,300,301,310,328,330,332,335,337,339,343,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'parameter_list':([111,118,233,],[187,196,280,]),'operand2':([5,17,23,46,72,74,88,101,107,111,118,149,155,168,200,207,208,210,211,214,220,227,231,233,238,248,268,269,290,300,301,],[65,65,65,65,65,65,65,65,65,65,65,65,65,224,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'syn_list':([35,],[120,]),'composite_mode':([47,121,146,204,284,291,333,],[143,143,143,143,143,143,143,]),'expression':([5,17,23,46,72,74,88,101,107,111,118,149,200,207,208,210,211,214,220,227,231,233,238,248,268,269,290,300,301,],[68,68,114,126,114,152,114,183,185,188,188,183,246,251,253,254,254,254,266,274,279,188,114,246,296,114,254,274,322,]),'mode_definition':([41,203,],[122,249,]),'array_mode':([47,121,146,204,284,291,333,],[144,144,144,144,144,144,144,]),'value_array_element':([5,17,23,46,72,74,78,88,101,107,111,118,149,150,155,168,200,207,208,210,211,214,220,227,231,233,238,248,268,269,290,300,301,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'discrete_expression':([227,300,],[273,320,]),'builtin_call':([0,5,6,17,23,30,46,72,74,78,79,88,89,101,107,111,116,118,149,150,155,168,173,174,190,200,207,208,210,211,214,220,225,227,231,233,235,236,238,248,268,269,281,290,300,301,310,328,330,332,335,337,339,343,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'loop_counter':([95,],[176,]),'result_action':([0,6,30,89,116,173,174,190,225,235,236,281,310,328,330,332,335,337,339,343,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'empty':([0,],[25,]),'boolean_literal':([5,17,23,46,72,74,78,88,101,107,111,118,149,150,155,168,200,207,208,210,211,214,220,227,231,233,238,248,268,269,290,300,301,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'declaration':([2,148,],[50,216,]),'procedure_call':([0,5,6,17,23,30,46,72,74,78,79,88,89,101,107,111,116,118,149,150,155,168,173,174,190,200,207,208,210,211,214,220,225,227,231,233,235,236,238,248,268,269,281,290,300,301,310,328,330,332,335,337,339,343,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'string_concatenation_operator':([7,84,223,],[105,167,167,]),'initialization':([132,],[209,]),'start_value':([227,],[275,]),'while_control':([6,94,],[91,175,]),'location_name':([0,5,6,17,23,30,46,72,74,78,79,88,89,101,107,111,116,118,149,150,155,168,173,174,190,200,207,208,210,211,214,220,225,227,231,233,235,236,238,248,268,269,281,290,300,301,310,328,330,332,335,337,339,343,],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'end_value':([275,299,303,319,],[302,318,323,334,]),'string_literal':([5,17,23,46,72,74,78,88,101,107,111,118,149,150,155,168,200,207,208,210,211,214,220,227,231,233,238,248,268,269,290,300,301,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'monadic_operator':([5,17,23,46,72,74,88,101,107,111,118,149,150,155,168,200,207,208,210,211,214,220,227,231,233,238,248,268,269,290,300,301,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'string_mode':([47,121,146,204,284,291,333,],[137,137,137,137,137,137,137,]),'arithmetic_multiplicative_operator':([7,65,224,],[100,150,150,]),'operator2':([84,223,],[168,168,]),'string_reference':([0,5,6,17,23,30,46,72,74,78,79,88,89,101,107,111,116,118,149,150,155,168,173,174,190,200,207,208,210,211,214,220,225,227,231,233,235,236,238,248,268,269,281,290,300,301,310,328,330,332,335,337,339,343,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'declaration_statement':([0,30,310,328,330,332,335,337,339,343,],[40,40,40,40,40,40,40,40,40,40,]),'primitive_value':([5,17,23,46,72,74,78,88,101,107,111,118,149,150,155,168,200,207,208,210,211,214,220,227,231,233,238,248,268,269,290,300,301,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'constant_expression':([200,248,],[247,288,]),'declaration_list':([2,],[49,]),'value_array_slice':([5,17,23,46,72,74,78,88,101,107,111,118,149,150,155,168,200,207,208,210,211,214,220,227,231,233,238,248,268,269,290,300,301,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'procedure_definition':([116,],[193,]),'if_action':([0,6,30,89,116,173,174,190,225,235,236,281,310,328,330,332,335,337,339,343,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'for_control':([6,],[94,]),'string_length':([212,],[261,]),'call_action':([0,5,6,17,23,30,46,72,74,78,79,88,89,101,107,111,116,118,149,150,155,168,173,174,190,200,207,208,210,211,214,220,225,227,231,233,235,236,238,248,268,269,281,290,300,301,310,328,330,332,335,337,339,343,],[43,86,43,86,86,43,86,86,86,86,86,86,43,86,86,86,43,86,86,86,86,86,43,43,43,86,86,86,86,86,86,86,43,86,86,86,43,43,86,86,86,86,43,86,86,86,43,43,43,43,43,43,43,43,]),'formal_parameter_list':([243,308,],[286,327,]),'newmode_statement':([0,30,310,328,330,332,335,337,339,343,],[44,44,44,44,44,44,44,44,44,44,]),'closed_dyadic_operator':([7,],[97,]),'else_clause':([191,305,],[237,324,]),'operator1':([75,],[155,]),'result_attribute':([341,],[347,]),'discrete_mode':([47,121,146,204,211,229,276,284,290,291,333,],[139,139,139,139,256,278,304,139,256,139,139,]),'conditional_expression':([5,17,23,46,72,74,88,101,107,111,118,149,200,207,208,210,211,214,220,227,231,233,238,248,268,269,290,300,301,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'array_primitive_value':([5,17,23,46,72,74,78,88,101,107,111,118,149,150,155,168,200,207,208,210,211,214,220,227,231,233,238,248,268,269,290,300,301,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'reference_mode':([47,121,146,204,284,291,333,],[133,133,133,133,133,133,133,]),'boolean_expression':([23,72,88,238,269,],[113,151,170,283,297,]),'upper_bound':([207,],[252,]),'basic_mode':([47,121,146,204,211,229,276,284,290,291,333,],[134,134,134,134,134,134,134,134,134,134,134,]),'statement_list':([0,310,328,332,337,],[30,330,335,339,343,]),'dereferenced_reference':([0,5,6,17,23,30,46,72,74,78,79,88,89,101,107,111,116,118,149,150,155,168,173,174,190,200,207,208,210,211,214,220,225,227,231,233,235,236,238,248,268,269,281,290,300,301,310,328,330,332,335,337,339,343,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'integer_literal':([5,17,23,46,72,74,78,88,101,107,111,118,149,150,155,168,200,207,208,210,211,214,220,227,231,233,238,248,268,269,290,300,301,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'result_spec':([287,309,],[311,329,]),'integer_expression':([46,301,],[125,321,]),'bracketed_action':([0,6,30,89,116,173,174,190,225,235,236,281,310,328,330,332,335,337,339,343,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'array_element':([0,5,6,17,23,30,46,72,74,78,79,88,89,101,107,111,116,118,149,150,155,168,173,174,190,200,207,208,210,211,214,220,225,227,231,233,235,236,238,248,268,269,281,290,300,301,310,328,330,332,335,337,339,343,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'parameter':([111,118,233,],[186,186,186,]),'referenced_location':([5,17,23,46,72,74,78,88,101,107,111,118,149,150,155,168,200,207,208,210,211,214,220,227,231,233,238,248,268,269,290,300,301,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'literal':([5,17,23,46,72,74,78,88,101,107,111,118,149,150,155,168,200,207,208,210,211,214,220,227,231,233,238,248,268,269,290,300,301,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'step_enumeration':([95,],[180,]),'assignment_action':([0,6,30,89,116,173,174,190,225,235,236,281,310,328,330,332,335,337,339,343,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'char_literal':([5,17,23,46,72,74,78,88,101,107,111,118,149,150,155,168,200,207,208,210,211,214,220,227,231,233,238,248,268,269,290,300,301,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'synonym_statement':([0,30,310,328,330,332,335,337,339,343,],[19,19,19,19,19,19,19,19,19,19,]),'action_statement':([0,6,30,89,174,190,225,235,236,281,310,328,330,332,335,337,339,343,],[16,90,16,171,90,90,171,171,90,171,16,16,16,16,16,16,16,16,]),'arithmetic_additive_operator':([7,84,223,],[110,169,169,]),'then_expression':([151,297,],[221,317,]),'elseif_expression_list':([221,],[267,]),'parameter_spec':([284,],[306,]),'discrete_range_mode':([47,121,146,204,211,229,276,284,290,291,333,],[131,131,131,131,131,131,131,131,131,131,131,]),'else_expression':([221,267,],[270,294,]),'action':([0,6,30,89,116,173,174,190,225,235,236,281,310,328,330,332,335,337,339,343,],[26,26,26,26,194,194,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'range_enumeration':([95,],[179,]),'exit_action':([0,6,30,89,116,173,174,190,225,235,236,281,310,328,330,332,335,337,339,343,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'builtin_name':([0,5,6,17,23,30,46,72,74,78,79,88,89,101,107,111,116,118,149,150,155,168,173,174,190,200,207,208,210,211,214,220,225,227,231,233,235,236,238,248,268,269,281,290,300,301,310,328,330,332,335,337,339,343,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'literal_range':([46,101,149,210,211,214,290,],[127,184,218,255,259,263,259,]),'label':([0,3,6,30,89,174,190,225,235,236,281,310,328,330,332,335,337,339,343,],[29,52,92,29,92,92,92,92,92,92,92,29,29,29,29,29,29,29,29,]),'mode':([47,121,146,204,284,291,333,],[132,201,215,250,307,315,341,]),'operand0':([5,17,23,46,72,74,88,101,107,111,118,149,200,207,208,210,211,214,220,227,231,233,238,248,268,269,290,300,301,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'procedure_statement':([0,30,310,328,330,332,335,337,339,343,],[31,31,31,31,31,31,31,31,31,31,]),'operand4':([5,17,23,46,72,74,78,88,101,107,111,118,149,150,155,168,200,207,208,210,211,214,220,227,231,233,238,248,268,269,290,300,301,],[76,76,76,76,76,76,165,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'program':([0,],[33,]),'parameter_attribute':([307,],[325,]),'index_mode_list':([211,],[260,]),'parenthesized_expression':([5,17,23,46,72,74,78,88,101,107,111,118,149,150,155,168,200,207,208,210,211,214,220,227,231,233,238,248,268,269,290,300,301,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'iteration':([95,],[178,]),'empty_literal':([5,17,23,46,72,74,78,88,101,107,111,118,149,150,155,168,200,207,208,210,211,214,220,227,231,233,238,248,268,269,290,300,301,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'return_action':([0,6,30,89,116,173,174,190,225,235,236,281,310,328,330,332,335,337,339,343,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'do_action':([0,6,30,89,116,173,174,190,225,235,236,281,310,328,330,332,335,337,339,343,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'lower_bound':([46,101,149,210,211,214,290,],[128,128,128,128,128,128,128,]),'formal_parameter':([243,308,],[285,285,]),'relational_operator':([75,],[160,]),'operand1':([5,17,23,46,72,74,88,101,107,111,118,149,155,200,207,208,210,211,214,220,227,231,233,238,248,268,269,290,300,301,],[84,84,84,84,84,84,84,84,84,84,84,84,223,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'discrete_mode_name':([47,121,146,204,211,229,276,284,290,291,333,],[145,145,145,145,145,145,145,145,145,145,145,]),'syn_definition':([35,198,],[119,245,]),'control_part':([6,],[93,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','lyaParser.py',64),
  ('program -> empty','program',1,'p_program','lyaParser.py',65),
  ('statement_list -> statement','statement_list',1,'p_statement_list1','lyaParser.py',72),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list1','lyaParser.py',73),
  ('statement -> declaration_statement','statement',1,'p_statement','lyaParser.py',80),
  ('statement -> newmode_statement','statement',1,'p_statement','lyaParser.py',81),
  ('statement -> synonym_statement','statement',1,'p_statement','lyaParser.py',82),
  ('statement -> action_statement','statement',1,'p_statement','lyaParser.py',83),
  ('statement -> procedure_statement','statement',1,'p_statement','lyaParser.py',84),
  ('declaration_statement -> DCL declaration_list SMC','declaration_statement',3,'p_declaration_statement','lyaParser.py',92),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','lyaParser.py',96),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','lyaParser.py',97),
  ('declaration -> id_list mode initialization','declaration',3,'p_declaration1','lyaParser.py',104),
  ('declaration -> id_list mode','declaration',2,'p_declaration2','lyaParser.py',108),
  ('id_list -> ID','id_list',1,'p_id_list','lyaParser.py',112),
  ('id_list -> id_list COMMA ID','id_list',3,'p_id_list','lyaParser.py',113),
  ('initialization -> EQUALS expression','initialization',2,'p_initialization','lyaParser.py',120),
  ('mode -> mode_name','mode',1,'p_mode','lyaParser.py',128),
  ('mode -> discrete_mode','mode',1,'p_mode','lyaParser.py',129),
  ('mode -> reference_mode','mode',1,'p_mode','lyaParser.py',130),
  ('mode -> composite_mode','mode',1,'p_mode','lyaParser.py',131),
  ('mode_name -> ID','mode_name',1,'p_mode_name','lyaParser.py',135),
  ('discrete_mode -> basic_mode','discrete_mode',1,'p_discrete_mode','lyaParser.py',139),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','lyaParser.py',140),
  ('basic_mode -> INT','basic_mode',1,'p_basic_mode','lyaParser.py',144),
  ('basic_mode -> BOOL','basic_mode',1,'p_basic_mode','lyaParser.py',145),
  ('basic_mode -> CHAR','basic_mode',1,'p_basic_mode','lyaParser.py',146),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaParser.py',150),
  ('discrete_range_mode -> basic_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaParser.py',151),
  ('discrete_mode_name -> ID','discrete_mode_name',1,'p_discrete_mode_name','lyaParser.py',155),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_litereal_range','lyaParser.py',159),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','lyaParser.py',163),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','lyaParser.py',167),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','lyaParser.py',171),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','lyaParser.py',175),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','lyaParser.py',176),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','lyaParser.py',180),
  ('string_length -> INTCONST','string_length',1,'p_string_length','lyaParser.py',184),
  ('array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_node','array_mode',5,'p_array_mode','lyaParser.py',188),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','lyaParser.py',193),
  ('index_mode_list -> index_mode_list COMMA index_mode','index_mode_list',3,'p_index_mode_list','lyaParser.py',194),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','lyaParser.py',201),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','lyaParser.py',202),
  ('element_node -> mode','element_node',1,'p_element_node','lyaParser.py',206),
  ('newmode_statement -> TYPE newmode_list SMC','newmode_statement',3,'p_newmode_statement','lyaParser.py',214),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','lyaParser.py',218),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','lyaParser.py',219),
  ('mode_definition -> id_list EQUALS mode','mode_definition',3,'p_mode_definition','lyaParser.py',226),
  ('synonym_statement -> SYN syn_list SMC','synonym_statement',3,'p_synonym_statement','lyaParser.py',230),
  ('syn_list -> syn_definition','syn_list',1,'p_syn_list','lyaParser.py',238),
  ('syn_list -> syn_list COMMA syn_definition','syn_list',3,'p_syn_list','lyaParser.py',239),
  ('syn_definition -> id_list EQUALS constant_expression','syn_definition',3,'p_syn_definition','lyaParser.py',246),
  ('syn_definition -> id_list mode EQUALS constant_expression','syn_definition',4,'p_syn_definition2','lyaParser.py',250),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','lyaParser.py',254),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','lyaParser.py',262),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','lyaParser.py',263),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','lyaParser.py',264),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','lyaParser.py',265),
  ('literal -> integer_literal','literal',1,'p_literal','lyaParser.py',269),
  ('literal -> boolean_literal','literal',1,'p_literal','lyaParser.py',270),
  ('literal -> char_literal','literal',1,'p_literal','lyaParser.py',271),
  ('literal -> empty_literal','literal',1,'p_literal','lyaParser.py',272),
  ('literal -> string_literal','literal',1,'p_literal','lyaParser.py',273),
  ('integer_literal -> INTCONST','integer_literal',1,'p_integer_literal','lyaParser.py',277),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','lyaParser.py',281),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','lyaParser.py',282),
  ('char_literal -> CHARCONST','char_literal',1,'p_char_literal','lyaParser.py',286),
  ('string_literal -> STRINGCONST','string_literal',1,'p_string_literal','lyaParser.py',290),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','lyaParser.py',294),
  ('value_array_element -> array_primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','lyaParser.py',298),
  ('value_array_slice -> array_primitive_value LBRACKET literal_range RBRACKET','value_array_slice',4,'p_value_array_slice','lyaParser.py',302),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','lyaParser.py',306),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','lyaParser.py',310),
  ('action_statement -> action SMC','action_statement',2,'p_action_statement','lyaParser.py',318),
  ('action_statement -> label COLON action SMC','action_statement',4,'p_action_statement','lyaParser.py',319),
  ('label -> ID','label',1,'p_label','lyaParser.py',326),
  ('action -> assignment_action','action',1,'p_action','lyaParser.py',330),
  ('action -> bracketed_action','action',1,'p_action','lyaParser.py',331),
  ('action -> call_action','action',1,'p_action','lyaParser.py',332),
  ('action -> exit_action','action',1,'p_action','lyaParser.py',333),
  ('action -> return_action','action',1,'p_action','lyaParser.py',334),
  ('action -> result_action','action',1,'p_action','lyaParser.py',335),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','lyaParser.py',343),
  ('assigning_operator -> EQUALS','assigning_operator',1,'p_assigning_operator','lyaParser.py',347),
  ('assigning_operator -> closed_dyadic_operator EQUALS','assigning_operator',2,'p_assigning_operator','lyaParser.py',348),
  ('closed_dyadic_operator -> arithmetic_additive_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','lyaParser.py',355),
  ('closed_dyadic_operator -> arithmetic_multiplicative_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','lyaParser.py',356),
  ('closed_dyadic_operator -> string_concatenation_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','lyaParser.py',357),
  ('expression_list -> expression','expression_list',1,'p_expression_list','lyaParser.py',361),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','lyaParser.py',362),
  ('expression -> operand0','expression',1,'p_expression','lyaParser.py',369),
  ('expression -> conditional_expression','expression',1,'p_expression','lyaParser.py',370),
  ('operand0 -> operand1','operand0',1,'p_operand0','lyaParser.py',374),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','lyaParser.py',375),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','lyaParser.py',382),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','lyaParser.py',383),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','lyaParser.py',387),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','lyaParser.py',391),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','lyaParser.py',392),
  ('relational_operator -> ISEQUAL','relational_operator',1,'p_relational_operator','lyaParser.py',393),
  ('relational_operator -> NOTEQUAL','relational_operator',1,'p_relational_operator','lyaParser.py',394),
  ('relational_operator -> GT','relational_operator',1,'p_relational_operator','lyaParser.py',395),
  ('relational_operator -> GE','relational_operator',1,'p_relational_operator','lyaParser.py',396),
  ('relational_operator -> LT','relational_operator',1,'p_relational_operator','lyaParser.py',397),
  ('relational_operator -> LE','relational_operator',1,'p_relational_operator','lyaParser.py',398),
  ('operand1 -> operand2','operand1',1,'p_operand1','lyaParser.py',402),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1','lyaParser.py',403),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','lyaParser.py',410),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','lyaParser.py',411),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','lyaParser.py',415),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','lyaParser.py',416),
  ('string_concatenation_operator -> STRCONC','string_concatenation_operator',1,'p_string_concatenation_operator','lyaParser.py',420),
  ('operand2 -> operand3','operand2',1,'p_operand2','lyaParser.py',424),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','lyaParser.py',425),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaParser.py',432),
  ('arithmetic_multiplicative_operator -> DIV','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaParser.py',433),
  ('arithmetic_multiplicative_operator -> MOD','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaParser.py',434),
  ('operand3 -> operand4','operand3',1,'p_operand3','lyaParser.py',438),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','lyaParser.py',439),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','lyaParser.py',446),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','lyaParser.py',447),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','lyaParser.py',451),
  ('operand4 -> location','operand4',1,'p_operand4','lyaParser.py',452),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','lyaParser.py',453),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','lyaParser.py',459),
  ('conditional_expression -> IF boolean_expression then_expression elseif_expression_list else_expression FI','conditional_expression',6,'p_conditional_expression2','lyaParser.py',463),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','lyaParser.py',467),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','lyaParser.py',471),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','lyaParser.py',475),
  ('elseif_expression_list -> elseif_expression','elseif_expression_list',1,'p_elseif_expression_list','lyaParser.py',479),
  ('elseif_expression_list -> elseif_expression_list elseif_expression','elseif_expression_list',2,'p_elseif_expression_list','lyaParser.py',480),
  ('elseif_expression -> ELSIF boolean_expression then_expression','elseif_expression',3,'p_elseif_expression','lyaParser.py',487),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','lyaParser.py',495),
  ('location -> location_name','location',1,'p_location','lyaParser.py',499),
  ('location -> string_reference','location',1,'p_location','lyaParser.py',500),
  ('location -> dereferenced_reference','location',1,'p_location','lyaParser.py',501),
  ('location -> array_element','location',1,'p_location','lyaParser.py',502),
  ('location -> array_slice','location',1,'p_location','lyaParser.py',503),
  ('location -> call_action','location',1,'p_location','lyaParser.py',504),
  ('location_name -> ID','location_name',1,'p_location_name','lyaParser.py',508),
  ('string_reference -> location_name LBRACKET integer_expression RBRACKET','string_reference',4,'p_string_reference','lyaParser.py',512),
  ('string_reference -> location_name LBRACKET literal_range RBRACKET','string_reference',4,'p_string_reference2','lyaParser.py',516),
  ('dereferenced_reference -> location ARROW','dereferenced_reference',2,'p_dereferenced_reference','lyaParser.py',520),
  ('array_element -> location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','lyaParser.py',524),
  ('array_slice -> location LBRACKET literal_range RBRACKET','array_slice',4,'p_array_slice','lyaParser.py',528),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','lyaParser.py',536),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','lyaParser.py',537),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','lyaParser.py',545),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action2','lyaParser.py',549),
  ('then_clause -> THEN','then_clause',1,'p_then_clause','lyaParser.py',553),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','lyaParser.py',554),
  ('else_clause -> ELSE','else_clause',1,'p_else_clause','lyaParser.py',561),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','lyaParser.py',562),
  ('else_clause -> elseif_clause','else_clause',1,'p_else_clause2','lyaParser.py',569),
  ('elseif_clause -> ELSIF boolean_expression then_clause','elseif_clause',3,'p_elseif_clause','lyaParser.py',573),
  ('elseif_clause -> ELSIF boolean_expression then_clause else_clause','elseif_clause',4,'p_elseif_clause2','lyaParser.py',577),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','lyaParser.py',582),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','lyaParser.py',583),
  ('do_action -> DO OD','do_action',2,'p_do_action','lyaParser.py',594),
  ('do_action -> DO control_part SMC OD','do_action',4,'p_do_action2','lyaParser.py',598),
  ('do_action -> DO control_part SMC action_statement_list OD','do_action',5,'p_do_action3','lyaParser.py',602),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action4','lyaParser.py',606),
  ('control_part -> for_control','control_part',1,'p_control_part','lyaParser.py',610),
  ('control_part -> while_control','control_part',1,'p_control_part','lyaParser.py',611),
  ('control_part -> for_control while_control','control_part',2,'p_control_part2','lyaParser.py',615),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','lyaParser.py',619),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','lyaParser.py',623),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','lyaParser.py',624),
  ('step_enumeration -> loop_counter EQUALS start_value end_value','step_enumeration',4,'p_step_enumeration','lyaParser.py',628),
  ('step_enumeration -> loop_counter EQUALS start_value step_value end_value','step_enumeration',5,'p_step_enumeration2','lyaParser.py',632),
  ('step_enumeration -> loop_counter EQUALS start_value DOWN end_value','step_enumeration',5,'p_step_enumeration3','lyaParser.py',636),
  ('step_enumeration -> loop_counter EQUALS start_value step_value DOWN end_value','step_enumeration',6,'p_step_enumeration4','lyaParser.py',640),
  ('loop_counter -> ID','loop_counter',1,'p_loop_counter','lyaParser.py',644),
  ('start_value -> discrete_expression','start_value',1,'p_start_value','lyaParser.py',648),
  ('step_value -> BY integer_expression','step_value',2,'p_step_value','lyaParser.py',652),
  ('end_value -> TO discrete_expression','end_value',2,'p_end_value','lyaParser.py',656),
  ('discrete_expression -> expression','discrete_expression',1,'p_discrete_expression','lyaParser.py',660),
  ('range_enumeration -> loop_counter IN discrete_mode','range_enumeration',3,'p_range_enumeration','lyaParser.py',664),
  ('range_enumeration -> loop_counter DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration2','lyaParser.py',668),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','lyaParser.py',672),
  ('procedure_statement -> label COLON procedure_definition SMC','procedure_statement',4,'p_procedure_statement','lyaParser.py',680),
  ('procedure_definition -> PROC LPAREN RPAREN SMC END','procedure_definition',5,'p_procedure_definition1','lyaParser.py',684),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SMC statement_list END','procedure_definition',7,'p_procedure_definition1','lyaParser.py',685),
  ('procedure_definition -> PROC LPAREN RPAREN SMC statement_list END','procedure_definition',6,'p_procedure_definition1','lyaParser.py',686),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SMC END','procedure_definition',6,'p_procedure_definition2','lyaParser.py',695),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SMC END','procedure_definition',7,'p_procedure_definition2','lyaParser.py',696),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SMC statement_list END','procedure_definition',8,'p_procedure_definition2','lyaParser.py',697),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SMC statement_list END','procedure_definition',7,'p_procedure_definition3','lyaParser.py',706),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SMC END','procedure_definition',6,'p_procedure_definition3','lyaParser.py',707),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','lyaParser.py',714),
  ('formal_parameter_list -> formal_parameter COMMA formal_parameter_list','formal_parameter_list',3,'p_formal_parameter_list','lyaParser.py',715),
  ('formal_parameter -> id_list parameter_spec','formal_parameter',2,'p_formal_parameter','lyaParser.py',722),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','lyaParser.py',728),
  ('parameter_spec -> mode parameter_attribute','parameter_spec',2,'p_parameter_spec','lyaParser.py',729),
  ('parameter_attribute -> LOC','parameter_attribute',1,'p_parameter_attribute','lyaParser.py',736),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','lyaParser.py',740),
  ('result_spec -> RETURNS LPAREN mode result_attribute RPAREN','result_spec',5,'p_result_spec','lyaParser.py',741),
  ('result_attribute -> LOC','result_attribute',1,'p_result_attribute','lyaParser.py',748),
  ('call_action -> procedure_call','call_action',1,'p_call_action','lyaParser.py',756),
  ('call_action -> builtin_call','call_action',1,'p_call_action','lyaParser.py',757),
  ('procedure_call -> ID LPAREN RPAREN','procedure_call',3,'p_procedure_call','lyaParser.py',761),
  ('procedure_call -> ID LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','lyaParser.py',762),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','lyaParser.py',769),
  ('parameter_list -> parameter COMMA parameter_list','parameter_list',3,'p_parameter_list','lyaParser.py',770),
  ('parameter -> expression','parameter',1,'p_parameter','lyaParser.py',777),
  ('exit_action -> EXIT label','exit_action',2,'p_exit_action','lyaParser.py',785),
  ('return_action -> RETURN','return_action',1,'p_return_action','lyaParser.py',789),
  ('return_action -> RETURN result','return_action',2,'p_return_action','lyaParser.py',790),
  ('result_action -> RESULT result','result_action',2,'p_result_action','lyaParser.py',797),
  ('result -> expression','result',1,'p_result','lyaParser.py',801),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','lyaParser.py',805),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','lyaParser.py',806),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','lyaParser.py',813),
  ('builtin_name -> PRED','builtin_name',1,'p_builtin_name','lyaParser.py',814),
  ('builtin_name -> SUCC','builtin_name',1,'p_builtin_name','lyaParser.py',815),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','lyaParser.py',816),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','lyaParser.py',817),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','lyaParser.py',818),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','lyaParser.py',819),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','lyaParser.py',820),
  ('integer_expression -> expression','integer_expression',1,'p_integer_expression','lyaParser.py',829),
  ('empty -> <empty>','empty',0,'p_empty','lyaParser.py',836),
]
