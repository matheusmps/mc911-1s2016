
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'EF8E623AE00A978F361639905614941B'
    
_lr_action_items = {'RETURNS':([286,306,],[307,307,]),'DO':([0,1,6,16,21,30,35,36,42,49,53,69,70,124,125,128,135,166,171,179,200,205,224,228,248,249,270,309,326,328,329,335,336,339,342,],[1,1,1,-8,-5,-3,-7,-9,-6,1,-157,-4,-74,1,1,-158,1,1,-45,-10,-49,1,1,1,-75,-181,1,1,1,1,1,1,1,1,1,]),'BY':([4,12,15,18,22,38,39,58,74,75,76,77,78,79,82,83,84,85,86,90,91,93,94,95,97,98,99,100,101,102,103,104,105,107,142,146,175,176,211,213,214,215,218,219,222,223,234,235,252,253,254,261,262,295,320,],[-135,-136,-137,-134,-199,-138,-200,-143,-106,-58,-113,-56,-123,-67,-92,-61,-124,-64,-62,-55,-122,-59,-65,-69,-91,-93,-140,-68,-118,-60,-57,-66,-139,-63,-119,-133,-211,-201,-145,-144,-114,-73,-94,-107,-142,-141,-212,-202,-177,291,-174,-71,-70,-125,-126,]),'$end':([0,6,9,16,21,28,30,35,36,42,69,70,171,179,200,248,249,],[-222,-1,-2,-8,-5,0,-3,-7,-9,-6,-4,-74,-45,-10,-49,-75,-181,]),'COLON':([4,12,15,18,22,26,38,39,43,54,58,74,75,76,77,78,79,82,83,84,85,86,90,91,93,94,95,97,98,99,100,101,102,103,104,105,107,138,139,142,146,163,175,176,211,213,214,215,218,219,222,223,234,235,261,262,273,276,295,320,],[-135,-136,-137,-134,-199,-76,-138,-200,124,135,-143,-106,-58,-113,-56,-123,-67,-92,-61,-124,-64,-62,-55,-122,-59,-65,-69,-91,-93,-140,-68,-118,-60,-57,-66,-139,-63,-32,210,-119,-133,-32,-211,-201,-145,-144,-114,-73,-94,-107,-142,-141,-212,-202,-71,-70,-32,-140,-125,-126,]),'OD':([1,49,53,70,125,128,205,248,],[47,127,-157,-74,206,-158,251,-75,]),'LENGTH':([0,1,6,16,17,20,21,27,30,35,36,42,48,49,53,55,56,57,61,62,63,65,66,67,69,70,73,80,87,89,96,106,108,115,116,124,125,128,135,137,143,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,166,171,179,197,200,205,207,210,212,220,224,228,229,233,237,240,241,243,246,248,249,265,267,270,291,293,301,309,326,328,329,335,336,339,342,],[3,3,3,-8,3,3,-5,3,-3,-7,-9,-6,3,3,-157,-84,3,-117,-112,-110,-111,-116,3,-115,-4,-74,3,-121,3,-120,3,3,3,3,3,3,3,-158,3,-85,3,3,-103,3,-97,-101,-99,-105,-98,-96,-102,-95,-100,-104,-109,-108,3,3,-45,-10,3,-49,3,3,3,3,3,3,3,3,3,3,3,3,3,3,-75,-181,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'AND':([4,12,15,18,22,38,39,58,74,75,76,77,78,79,83,84,85,86,90,91,93,94,95,97,98,99,100,101,102,103,104,105,107,142,146,175,176,211,213,214,215,218,219,222,223,234,235,261,262,276,],[-135,-136,-137,-134,-199,-138,-200,-143,-106,-58,-113,-56,-123,-67,-61,-124,-64,-62,-55,-122,-59,-65,-69,153,-93,-140,-68,-118,-60,-57,-66,-139,-63,-119,-133,-211,-201,-145,-144,-114,-73,-94,-107,-142,-141,-212,-202,-71,-70,-140,]),'ISEQUAL':([4,12,15,18,22,38,39,58,74,75,76,77,78,79,83,84,85,86,90,91,93,94,95,97,98,99,100,101,102,103,104,105,107,142,146,175,176,211,213,214,215,218,219,222,223,234,235,261,262,276,],[-135,-136,-137,-134,-199,-138,-200,-143,-106,-58,-113,-56,-123,-67,-61,-124,-64,-62,-55,-122,-59,-65,-69,157,-93,-140,-68,-118,-60,-57,-66,-139,-63,-119,-133,-211,-201,-145,-144,-114,-73,-94,-107,-142,-141,-212,-202,-71,-70,-140,]),'NUM':([0,1,6,16,17,20,21,27,30,35,36,42,48,49,53,55,56,57,61,62,63,65,66,67,69,70,73,80,87,89,96,106,108,115,116,124,125,128,135,137,143,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,166,171,179,197,200,205,207,210,212,220,224,228,229,233,237,240,241,243,246,248,249,265,267,270,291,293,301,309,326,328,329,335,336,339,342,],[5,5,5,-8,5,5,-5,5,-3,-7,-9,-6,5,5,-157,-84,5,-117,-112,-110,-111,-116,5,-115,-4,-74,5,-121,5,-120,5,5,5,5,5,5,5,-158,5,-85,5,5,-103,5,-97,-101,-99,-105,-98,-96,-102,-95,-100,-104,-109,-108,5,5,-45,-10,5,-49,5,5,5,5,5,5,5,5,5,5,5,5,5,5,-75,-181,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'PRED':([0,1,6,16,17,20,21,27,30,35,36,42,48,49,53,55,56,57,61,62,63,65,66,67,69,70,73,80,87,89,96,106,108,115,116,124,125,128,135,137,143,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,166,171,179,197,200,205,207,210,212,220,224,228,229,233,237,240,241,243,246,248,249,265,267,270,291,293,301,309,326,328,329,335,336,339,342,],[32,32,32,-8,32,32,-5,32,-3,-7,-9,-6,32,32,-157,-84,32,-117,-112,-110,-111,-116,32,-115,-4,-74,32,-121,32,-120,32,32,32,32,32,32,32,-158,32,-85,32,32,-103,32,-97,-101,-99,-105,-98,-96,-102,-95,-100,-104,-109,-108,32,32,-45,-10,32,-49,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-75,-181,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'WHILE':([1,4,12,15,18,22,38,39,51,58,74,75,76,77,78,79,82,83,84,85,86,90,91,93,94,95,97,98,99,100,101,102,103,104,105,107,131,133,134,142,146,175,176,180,186,188,192,195,211,213,214,215,218,219,222,223,234,235,252,257,261,262,292,294,295,304,305,314,315,318,320,334,],[48,-135,-136,-137,-134,-199,-138,-200,48,-143,-106,-58,-113,-56,-123,-67,-92,-61,-124,-64,-62,-55,-122,-59,-65,-69,-91,-93,-140,-68,-118,-60,-57,-66,-139,-63,-167,-168,-166,-119,-133,-211,-201,-27,-24,-26,-23,-25,-145,-144,-114,-73,-94,-107,-142,-141,-212,-202,-177,-178,-71,-70,-169,-179,-125,-29,-28,-170,-171,-176,-126,-172,]),'LBRACKET':([2,4,12,15,18,22,26,38,39,40,58,75,77,78,79,83,85,86,90,91,92,93,94,95,99,100,102,103,104,105,107,146,175,176,187,189,204,211,213,215,222,223,234,235,261,262,276,],[66,-135,-136,-137,108,-199,-140,-138,-200,-139,-143,-58,-56,66,-67,-61,-64,-62,-55,-72,145,-59,-65,-69,-140,-68,-60,-57,-66,-139,-63,66,-211,-201,237,238,-140,-145,-144,-73,-142,-141,-212,-202,-71,-70,-140,]),'PRINT':([0,1,6,16,17,20,21,27,30,35,36,42,48,49,53,55,56,57,61,62,63,65,66,67,69,70,73,80,87,89,96,106,108,115,116,124,125,128,135,137,143,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,166,171,179,197,200,205,207,210,212,220,224,228,229,233,237,240,241,243,246,248,249,265,267,270,291,293,301,309,326,328,329,335,336,339,342,],[8,8,8,-8,8,8,-5,8,-3,-7,-9,-6,8,8,-157,-84,8,-117,-112,-110,-111,-116,8,-115,-4,-74,8,-121,8,-120,8,8,8,8,8,8,8,-158,8,-85,8,8,-103,8,-97,-101,-99,-105,-98,-96,-102,-95,-100,-104,-109,-108,8,8,-45,-10,8,-49,8,8,8,8,8,8,8,8,8,8,8,8,8,8,-75,-181,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'TO':([4,12,15,18,22,38,39,58,74,75,76,77,78,79,82,83,84,85,86,90,91,93,94,95,97,98,99,100,101,102,103,104,105,107,142,146,175,176,211,213,214,215,218,219,222,223,234,235,252,253,254,261,262,289,290,295,313,316,317,320,],[-135,-136,-137,-134,-199,-138,-200,-143,-106,-58,-113,-56,-123,-67,-92,-61,-124,-64,-62,-55,-122,-59,-65,-69,-91,-93,-140,-68,-118,-60,-57,-66,-139,-63,-119,-133,-211,-201,-145,-144,-114,-73,-94,-107,-142,-141,-212,-202,-177,293,-174,-71,-70,293,293,-125,293,-221,-175,-126,]),'INTCONST':([17,20,27,48,55,56,57,61,62,63,65,66,67,73,80,87,89,106,108,115,116,137,143,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,197,207,210,212,220,229,233,237,238,240,241,243,246,265,267,291,293,301,],[85,85,85,85,-84,85,-117,-112,-110,-111,-116,85,-115,85,-121,85,-120,85,85,85,85,-85,85,85,-103,85,-97,-101,-99,-105,-98,-96,-102,-95,-100,-104,-109,-108,85,85,85,85,85,85,85,85,85,280,85,85,85,85,85,85,85,85,85,]),'CHARS':([111,120,122,168,193,231,288,302,327,],[-15,189,189,189,189,-16,189,189,189,]),'COMMA':([4,12,15,18,22,38,39,58,74,75,76,77,78,79,82,83,84,85,86,90,91,93,94,95,97,98,99,100,101,102,103,104,105,107,111,112,113,114,118,119,120,121,122,123,138,141,142,146,172,173,175,176,180,181,182,183,184,185,186,188,190,191,192,195,196,211,213,214,215,217,218,219,222,223,230,231,232,234,235,236,239,242,244,245,247,258,259,260,261,262,274,275,277,278,281,284,287,288,295,303,304,305,311,312,320,322,323,324,332,333,],[-135,-136,-137,-134,-199,-138,-200,-143,-106,-58,-113,-56,-123,-67,-92,-61,-124,-64,-62,-55,-122,-59,-65,-69,-91,-93,-140,-68,-118,-60,-57,-66,-139,-63,-15,169,170,-46,-11,178,169,-50,169,199,-89,212,-119,-133,-205,233,-211,-201,-27,-20,-22,-35,-18,-21,-24,-26,-19,-14,-23,-25,-36,-145,-144,-114,-73,212,-94,-107,-142,-141,-48,-16,-47,-212,-202,-12,-13,-34,-54,-52,-51,-33,-31,-90,-71,-70,-43,-40,301,-42,-17,-53,310,169,-125,-37,-29,-28,-192,-193,-126,-41,-39,-44,-195,-194,]),'EQUALS':([2,4,12,15,18,22,26,38,39,40,57,58,59,60,61,62,63,64,65,67,68,111,112,122,130,132,175,176,180,181,182,183,184,185,186,188,190,191,192,195,196,198,204,211,213,222,223,231,234,235,242,303,304,305,323,324,],[55,-135,-136,-137,-134,-199,-140,-138,-200,-139,-117,-143,-87,-86,-112,-110,-111,137,-116,-115,-88,-15,168,197,207,-173,-211,-201,-27,-20,-22,-35,-18,-21,-24,-26,-19,240,-23,-25,-36,246,-140,-145,-144,-142,-141,-16,-212,-202,-34,-37,-29,-28,-39,-44,]),'ELSE':([4,12,15,18,22,38,39,53,58,70,74,75,76,77,78,79,82,83,84,85,86,90,91,93,94,95,97,98,99,100,101,102,103,104,105,107,128,142,146,166,167,175,176,211,213,214,215,218,219,221,222,223,224,234,235,248,261,262,263,266,268,295,299,300,319,320,],[-135,-136,-137,-134,-199,-138,-200,-157,-143,-74,-106,-58,-113,-56,-123,-67,-92,-61,-124,-64,-62,-55,-122,-59,-65,-69,-91,-93,-140,-68,-118,-60,-57,-66,-139,-63,-158,-119,-133,-150,228,-211,-201,-145,-144,-114,-73,-94,-107,267,-142,-141,-151,-212,-202,-75,-71,-70,-128,-130,267,-125,-131,228,-132,-126,]),'DIV':([2,4,12,15,18,22,26,38,39,40,58,74,75,76,77,78,79,83,84,85,86,90,91,93,94,95,99,100,101,102,103,104,105,107,142,146,175,176,204,211,213,214,215,219,222,223,234,235,261,262,276,],[65,-135,-136,-137,-134,-199,-140,-138,-200,-139,-143,65,-58,-113,-56,-123,-67,-61,-124,-64,-62,-55,-122,-59,-65,-69,-140,-68,-118,-60,-57,-66,-139,-63,-119,-133,-211,-201,-140,-145,-144,-114,-73,65,-142,-141,-212,-202,-71,-70,-140,]),'TRUE':([17,20,27,48,55,56,57,61,62,63,65,66,67,73,80,87,89,106,108,115,116,137,143,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,197,207,210,212,220,229,233,237,240,241,243,246,265,267,291,293,301,],[104,104,104,104,-84,104,-117,-112,-110,-111,-116,104,-115,104,-121,104,-120,104,104,104,104,-85,104,104,-103,104,-97,-101,-99,-105,-98,-96,-102,-95,-100,-104,-109,-108,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,]),'FI':([4,12,15,18,22,38,39,53,58,70,74,75,76,77,78,79,82,83,84,85,86,90,91,93,94,95,97,98,99,100,101,102,103,104,105,107,128,142,146,166,167,175,176,211,213,214,215,218,219,222,223,224,225,226,228,234,235,248,261,262,264,270,295,297,298,300,320,321,],[-135,-136,-137,-134,-199,-138,-200,-157,-143,-74,-106,-58,-113,-56,-123,-67,-92,-61,-124,-64,-62,-55,-122,-59,-65,-69,-91,-93,-140,-68,-118,-60,-57,-66,-139,-63,-158,-119,-133,-150,227,-211,-201,-145,-144,-114,-73,-94,-107,-142,-141,-151,-154,269,-152,-212,-202,-75,-71,-70,295,-153,-125,-129,320,-155,-126,-156,]),'PLUS':([2,4,12,15,18,22,26,38,39,40,58,74,75,76,77,78,79,83,84,85,86,90,91,93,94,95,98,99,100,101,102,103,104,105,107,142,146,175,176,204,211,213,214,215,218,219,222,223,234,235,261,262,276,],[62,-135,-136,-137,-134,-199,-140,-138,-200,-139,-143,-106,-58,-113,-56,-123,-67,-61,-124,-64,-62,-55,-122,-59,-65,-69,62,-140,-68,-118,-60,-57,-66,-139,-63,-119,-133,-211,-201,-140,-145,-144,-114,-73,62,-107,-142,-141,-212,-202,-71,-70,-140,]),'RPAREN':([4,12,15,18,22,38,39,58,74,75,76,77,78,79,82,83,84,85,86,90,91,93,94,95,97,98,99,100,101,102,103,104,105,107,115,116,142,144,146,172,173,174,175,176,177,180,181,182,183,184,185,186,188,190,192,195,196,211,213,214,215,218,219,222,223,234,235,242,250,258,259,261,262,272,282,283,285,287,295,303,304,305,311,312,320,323,324,331,332,333,338,346,347,],[-135,-136,-137,-134,-199,-138,-200,-143,-106,-58,-113,-56,-123,-67,-92,-61,-124,-64,-62,-55,-122,-59,-65,-69,-91,-93,-140,-68,-118,-60,-57,-66,-139,-63,175,176,-119,215,-133,-205,-203,234,-211,-201,235,-27,-20,-22,-35,-18,-21,-24,-26,-19,-23,-25,-36,-145,-144,-114,-73,-94,-107,-142,-141,-212,-202,-34,286,-33,-31,-71,-70,-204,304,305,306,-190,-125,-37,-29,-28,-192,-193,-126,-39,-44,-191,-195,-194,345,-198,350,]),'RESULT':([0,1,6,16,21,30,35,36,42,49,53,69,70,124,125,128,135,166,171,179,200,205,224,228,248,249,270,309,326,328,329,335,336,339,342,],[17,17,17,-8,-5,-3,-7,-9,-6,17,-157,-4,-74,17,17,-158,17,17,-45,-10,-49,17,17,17,-75,-181,17,17,17,17,17,17,17,17,17,]),'END':([16,21,30,35,36,42,69,70,171,179,200,248,249,309,326,328,329,335,336,339,342,],[-8,-5,-3,-7,-9,-6,-4,-74,-45,-10,-49,-75,-181,330,337,340,341,343,344,348,349,]),'LOWER':([0,1,6,16,17,20,21,27,30,35,36,42,48,49,53,55,56,57,61,62,63,65,66,67,69,70,73,80,87,89,96,106,108,115,116,124,125,128,135,137,143,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,166,171,179,197,200,205,207,210,212,220,224,228,229,233,237,240,241,243,246,248,249,265,267,270,291,293,301,309,326,328,329,335,336,339,342,],[11,11,11,-8,11,11,-5,11,-3,-7,-9,-6,11,11,-157,-84,11,-117,-112,-110,-111,-116,11,-115,-4,-74,11,-121,11,-120,11,11,11,11,11,11,11,-158,11,-85,11,11,-103,11,-97,-101,-99,-105,-98,-96,-102,-95,-100,-104,-109,-108,11,11,-45,-10,11,-49,11,11,11,11,11,11,11,11,11,11,11,11,11,11,-75,-181,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'READ':([0,1,6,16,17,20,21,27,30,35,36,42,48,49,53,55,56,57,61,62,63,65,66,67,69,70,73,80,87,89,96,106,108,115,116,124,125,128,135,137,143,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,166,171,179,197,200,205,207,210,212,220,224,228,229,233,237,240,241,243,246,248,249,265,267,270,291,293,301,309,326,328,329,335,336,339,342,],[45,45,45,-8,45,45,-5,45,-3,-7,-9,-6,45,45,-157,-84,45,-117,-112,-110,-111,-116,45,-115,-4,-74,45,-121,45,-120,45,45,45,45,45,45,45,-158,45,-85,45,45,-103,45,-97,-101,-99,-105,-98,-96,-102,-95,-100,-104,-109,-108,45,45,-45,-10,45,-49,45,45,45,45,45,45,45,45,45,45,45,45,45,45,-75,-181,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'INT':([111,120,122,168,193,209,231,237,255,288,301,302,327,],[-15,195,195,195,195,195,-16,195,195,195,195,195,195,]),'REF':([111,120,122,168,193,231,288,302,327,],[-15,193,193,193,193,-16,193,193,193,]),'UPPER':([0,1,6,16,17,20,21,27,30,35,36,42,48,49,53,55,56,57,61,62,63,65,66,67,69,70,73,80,87,89,96,106,108,115,116,124,125,128,135,137,143,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,166,171,179,197,200,205,207,210,212,220,224,228,229,233,237,240,241,243,246,248,249,265,267,270,291,293,301,309,326,328,329,335,336,339,342,],[25,25,25,-8,25,25,-5,25,-3,-7,-9,-6,25,25,-157,-84,25,-117,-112,-110,-111,-116,25,-115,-4,-74,25,-121,25,-120,25,25,25,25,25,25,25,-158,25,-85,25,25,-103,25,-97,-101,-99,-105,-98,-96,-102,-95,-100,-104,-109,-108,25,25,-45,-10,25,-49,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-75,-181,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'LPAREN':([3,5,7,8,11,17,20,24,25,26,27,32,45,48,55,56,57,61,62,63,65,66,67,73,80,87,89,99,106,108,115,116,137,143,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,180,182,188,192,194,195,197,203,204,207,210,212,220,229,233,237,240,241,243,246,256,265,267,276,291,293,301,307,],[-218,-213,-215,-220,-217,87,87,115,-216,116,87,-214,-219,87,-84,87,-117,-112,-110,-111,-116,87,-115,87,-121,87,-120,116,87,87,87,87,-85,87,87,-103,87,-97,-101,-99,-105,-98,-96,-102,-95,-100,-104,-109,-108,87,-27,-30,-26,241,243,-25,87,250,116,87,87,87,87,87,87,87,87,87,87,87,-30,87,87,116,87,87,87,327,]),'DOWN':([4,12,15,18,22,38,39,58,74,75,76,77,78,79,82,83,84,85,86,90,91,93,94,95,97,98,99,100,101,102,103,104,105,107,130,132,142,146,175,176,211,213,214,215,218,219,222,223,234,235,252,253,254,261,262,289,295,316,317,320,],[-135,-136,-137,-134,-199,-138,-200,-143,-106,-58,-113,-56,-123,-67,-92,-61,-124,-64,-62,-55,-122,-59,-65,-69,-91,-93,-140,-68,-118,-60,-57,-66,-139,-63,208,-173,-119,-133,-211,-201,-145,-144,-114,-73,-94,-107,-142,-141,-212,-202,-177,290,-174,-71,-70,313,-125,-221,-175,-126,]),'IN':([4,12,15,18,22,38,39,58,74,75,76,77,78,79,83,84,85,86,90,91,93,94,95,97,98,99,100,101,102,103,104,105,107,130,132,142,146,175,176,208,211,213,214,215,218,219,222,223,234,235,261,262,276,],[-135,-136,-137,-134,-199,-138,-200,-143,-106,-58,-113,-56,-123,-67,-61,-124,-64,-62,-55,-122,-59,-65,-69,149,-93,-140,-68,-118,-60,-57,-66,-139,-63,209,-173,-119,-133,-211,-201,255,-145,-144,-114,-73,-94,-107,-142,-141,-212,-202,-71,-70,-140,]),'FALSE':([17,20,27,48,55,56,57,61,62,63,65,66,67,73,80,87,89,106,108,115,116,137,143,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,197,207,210,212,220,229,233,237,240,241,243,246,265,267,291,293,301,],[94,94,94,94,-84,94,-117,-112,-110,-111,-116,94,-115,94,-121,94,-120,94,94,94,94,-85,94,94,-103,94,-97,-101,-99,-105,-98,-96,-102,-95,-100,-104,-109,-108,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'MOD':([2,4,12,15,18,22,26,38,39,40,58,74,75,76,77,78,79,83,84,85,86,90,91,93,94,95,99,100,101,102,103,104,105,107,142,146,175,176,204,211,213,214,215,219,222,223,234,235,261,262,276,],[57,-135,-136,-137,-134,-199,-140,-138,-200,-139,-143,57,-58,-113,-56,-123,-67,-61,-124,-64,-62,-55,-122,-59,-65,-69,-140,-68,-118,-60,-57,-66,-139,-63,-119,-133,-211,-201,-140,-145,-144,-114,-73,57,-142,-141,-212,-202,-71,-70,-140,]),'ARROW':([2,4,12,15,17,18,20,22,26,27,38,39,40,48,55,56,57,58,61,62,63,65,66,67,73,78,80,87,89,99,105,106,108,115,116,137,143,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,175,176,197,204,207,210,211,212,213,220,222,223,229,233,234,235,237,240,241,243,246,265,267,276,291,293,301,],[58,-135,-136,-137,96,-134,96,-199,-140,96,-138,-200,-139,96,-84,96,-117,-143,-112,-110,-111,-116,96,-115,96,58,-121,96,-120,-140,-139,96,96,96,96,-85,96,96,58,-103,96,-97,-101,-99,-105,-98,-96,-102,-95,-100,-104,-109,-108,96,-211,-201,96,-140,96,96,-145,96,-144,96,-142,-141,96,96,-212,-202,96,96,96,96,96,96,96,-140,96,96,96,]),'MINUS':([2,4,12,15,17,18,20,22,26,27,38,39,40,48,55,56,57,58,61,62,63,65,66,67,74,75,76,77,78,79,83,84,85,86,87,90,91,93,94,95,98,99,100,101,102,103,104,105,106,107,108,115,116,137,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,175,176,197,204,207,210,211,212,213,214,215,218,219,220,222,223,229,233,234,235,237,240,241,243,246,261,262,265,267,276,291,293,301,],[63,-135,-136,-137,89,-134,89,-199,-140,89,-138,-200,-139,89,-84,89,-117,-143,-112,-110,-111,-116,89,-115,-106,-58,-113,-56,-123,-67,-61,-124,-64,-62,89,-55,-122,-59,-65,-69,63,-140,-68,-118,-60,-57,-66,-139,89,-63,89,89,89,-85,-119,89,89,-133,-103,89,-97,-101,-99,-105,-98,-96,-102,-95,-100,-104,-109,-108,89,-211,-201,89,-140,89,89,-145,89,-144,-114,-73,63,-107,89,-142,-141,89,89,-212,-202,89,89,89,89,89,-71,-70,89,89,-140,89,89,89,]),'OR':([4,12,15,18,22,38,39,58,74,75,76,77,78,79,83,84,85,86,90,91,93,94,95,97,98,99,100,101,102,103,104,105,107,142,146,175,176,211,213,214,215,218,219,222,223,234,235,261,262,276,],[-135,-136,-137,-134,-199,-138,-200,-143,-106,-58,-113,-56,-123,-67,-61,-124,-64,-62,-55,-122,-59,-65,-69,151,-93,-140,-68,-118,-60,-57,-66,-139,-63,-119,-133,-211,-201,-145,-144,-114,-73,-94,-107,-142,-141,-212,-202,-71,-70,-140,]),'LE':([4,12,15,18,22,38,39,58,74,75,76,77,78,79,83,84,85,86,90,91,93,94,95,97,98,99,100,101,102,103,104,105,107,142,146,175,176,211,213,214,215,218,219,222,223,234,235,261,262,276,],[-135,-136,-137,-134,-199,-138,-200,-143,-106,-58,-113,-56,-123,-67,-61,-124,-64,-62,-55,-122,-59,-65,-69,152,-93,-140,-68,-118,-60,-57,-66,-139,-63,-119,-133,-211,-201,-145,-144,-114,-73,-94,-107,-142,-141,-212,-202,-71,-70,-140,]),'CHAR':([111,120,122,168,193,209,231,237,255,288,301,302,327,],[-15,180,180,180,180,180,-16,180,180,180,180,180,180,]),'PROC':([124,],[203,]),'TYPE':([0,6,16,21,30,35,36,42,69,70,171,179,200,248,249,309,326,328,329,335,336,339,342,],[23,23,-8,-5,-3,-7,-9,-6,-4,-74,-45,-10,-49,-75,-181,23,23,23,23,23,23,23,23,]),'SMC':([4,10,12,13,15,18,19,22,27,29,31,34,37,38,39,40,44,46,47,50,51,58,71,72,74,75,76,77,78,79,81,82,83,84,85,86,88,90,91,93,94,95,97,98,99,100,101,102,103,104,105,107,109,113,114,117,118,119,121,123,126,127,129,131,133,134,136,142,146,175,176,180,181,182,183,184,185,186,188,190,191,192,195,196,201,202,206,211,213,214,215,218,219,222,223,227,230,232,234,235,236,239,242,244,245,247,251,252,257,261,262,269,281,284,286,292,294,295,303,304,305,306,308,314,315,318,320,323,324,325,330,334,337,340,341,343,344,345,348,349,350,],[-135,70,-136,-80,-137,-134,-81,-199,-207,-146,-77,-82,-147,-138,-200,-79,-78,125,-159,-164,-163,-143,-206,-76,-106,-58,-113,-56,-123,-67,-210,-92,-61,-124,-64,-62,-209,-55,-122,-59,-65,-69,-91,-93,-140,-68,-118,-60,-57,-66,-139,-63,-127,171,-46,-208,-11,179,-50,200,-180,-162,-165,-167,-168,-166,-83,-119,-133,-211,-201,-27,-20,-22,-35,-18,-21,-24,-26,-19,-14,-23,-25,-36,248,249,-160,-145,-144,-114,-73,-94,-107,-142,-141,-148,-48,-47,-212,-202,-12,-13,-34,-54,-52,-51,-161,-177,-178,-71,-70,-149,-17,-53,309,-169,-179,-125,-37,-29,-28,326,328,-170,-171,-176,-126,-39,-44,335,-182,-172,-185,-189,-184,-186,-183,-196,-188,-187,-197,]),'ID':([0,1,6,14,16,17,20,21,23,27,30,33,35,36,41,42,48,49,52,53,55,56,57,61,62,63,65,66,67,69,70,73,80,87,89,96,106,108,111,115,116,120,122,124,125,128,135,137,143,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,166,168,169,170,171,178,179,193,197,199,200,205,207,209,210,212,220,224,228,229,231,233,237,240,241,243,246,248,249,250,255,265,267,270,288,291,293,301,302,309,310,326,327,328,329,335,336,339,342,],[26,26,26,72,-8,99,99,-5,111,99,-3,111,-7,-9,111,-6,99,26,132,-157,-84,99,-117,-112,-110,-111,-116,99,-115,-4,-74,99,-121,99,-120,99,99,99,-15,99,99,182,182,204,26,-158,204,-85,99,99,-103,99,-97,-101,-99,-105,-98,-96,-102,-95,-100,-104,-109,-108,99,26,182,231,111,-45,111,-10,182,99,111,-49,26,99,256,99,99,99,26,26,99,-16,99,276,99,99,99,99,-75,-181,111,256,99,99,26,182,99,99,276,182,26,111,26,182,26,26,26,26,26,26,]),'RETURN':([0,1,6,16,21,30,35,36,42,49,53,69,70,124,125,128,135,166,171,179,200,205,224,228,248,249,270,309,326,328,329,335,336,339,342,],[27,27,27,-8,-5,-3,-7,-9,-6,27,-157,-4,-74,27,27,-158,27,27,-45,-10,-49,27,27,27,-75,-181,27,27,27,27,27,27,27,27,27,]),'RBRACKET':([4,12,15,18,22,38,39,58,74,75,76,77,78,79,82,83,84,85,86,90,91,93,94,95,97,98,99,100,101,102,103,104,105,107,138,140,141,142,146,163,164,165,175,176,180,186,188,192,195,211,213,214,215,216,217,218,219,222,223,234,235,258,259,260,261,262,274,275,277,278,279,280,295,304,305,320,322,],[-135,-136,-137,-134,-199,-138,-200,-143,-106,-58,-113,-56,-123,-67,-92,-61,-124,-64,-62,-55,-122,-59,-65,-69,-91,-93,-140,-68,-118,-60,-57,-66,-139,-63,-89,211,213,-119,-133,-221,222,223,-211,-201,-27,-24,-26,-23,-25,-145,-144,-114,-73,261,262,-94,-107,-142,-141,-212,-202,-33,-31,-90,-71,-70,-43,-40,302,-42,303,-38,-125,-29,-28,-126,-41,]),'CHARCONST':([17,20,27,48,55,56,57,61,62,63,65,66,67,73,80,87,89,106,108,115,116,137,143,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,197,207,210,212,220,229,233,237,240,241,243,246,265,267,291,293,301,],[79,79,79,79,-84,79,-117,-112,-110,-111,-116,79,-115,79,-121,79,-120,79,79,79,79,-85,79,79,-103,79,-97,-101,-99,-105,-98,-96,-102,-95,-100,-104,-109,-108,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'NULL':([17,20,27,48,55,56,57,61,62,63,65,66,67,73,80,87,89,106,108,115,116,137,143,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,197,207,210,212,220,229,233,237,240,241,243,246,265,267,291,293,301,],[95,95,95,95,-84,95,-117,-112,-110,-111,-116,95,-115,95,-121,95,-120,95,95,95,95,-85,95,95,-103,95,-97,-101,-99,-105,-98,-96,-102,-95,-100,-104,-109,-108,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'BOOL':([111,120,122,168,193,209,231,237,255,288,301,302,327,],[-15,188,188,188,188,188,-16,188,188,188,188,188,188,]),'LT':([4,12,15,18,22,38,39,58,74,75,76,77,78,79,83,84,85,86,90,91,93,94,95,97,98,99,100,101,102,103,104,105,107,142,146,175,176,211,213,214,215,218,219,222,223,234,235,261,262,276,],[-135,-136,-137,-134,-199,-138,-200,-143,-106,-58,-113,-56,-123,-67,-61,-124,-64,-62,-55,-122,-59,-65,-69,158,-93,-140,-68,-118,-60,-57,-66,-139,-63,-119,-133,-211,-201,-145,-144,-114,-73,-94,-107,-142,-141,-212,-202,-71,-70,-140,]),'NOT':([17,20,27,48,55,56,57,61,62,63,65,66,67,87,106,108,115,116,137,143,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,197,207,210,212,220,229,233,237,240,241,243,246,265,267,291,293,301,],[80,80,80,80,-84,80,-117,-112,-110,-111,-116,80,-115,80,80,80,80,80,-85,80,80,-103,80,-97,-101,-99,-105,-98,-96,-102,-95,-100,-104,-109,-108,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'GE':([4,12,15,18,22,38,39,58,74,75,76,77,78,79,83,84,85,86,90,91,93,94,95,97,98,99,100,101,102,103,104,105,107,142,146,175,176,211,213,214,215,218,219,222,223,234,235,261,262,276,],[-135,-136,-137,-134,-199,-138,-200,-143,-106,-58,-113,-56,-123,-67,-61,-124,-64,-62,-55,-122,-59,-65,-69,147,-93,-140,-68,-118,-60,-57,-66,-139,-63,-119,-133,-211,-201,-145,-144,-114,-73,-94,-107,-142,-141,-212,-202,-71,-70,-140,]),'FOR':([1,],[52,]),'DCL':([0,6,16,21,30,35,36,42,69,70,171,179,200,248,249,309,326,328,329,335,336,339,342,],[33,33,-8,-5,-3,-7,-9,-6,-4,-74,-45,-10,-49,-75,-181,33,33,33,33,33,33,33,33,]),'NOTEQUAL':([4,12,15,18,22,38,39,58,74,75,76,77,78,79,83,84,85,86,90,91,93,94,95,97,98,99,100,101,102,103,104,105,107,142,146,175,176,211,213,214,215,218,219,222,223,234,235,261,262,276,],[-135,-136,-137,-134,-199,-138,-200,-143,-106,-58,-113,-56,-123,-67,-61,-124,-64,-62,-55,-122,-59,-65,-69,150,-93,-140,-68,-118,-60,-57,-66,-139,-63,-119,-133,-211,-201,-145,-144,-114,-73,-94,-107,-142,-141,-212,-202,-71,-70,-140,]),'EXIT':([0,1,6,16,21,30,35,36,42,49,53,69,70,124,125,128,135,166,171,179,200,205,224,228,248,249,270,309,326,328,329,335,336,339,342,],[14,14,14,-8,-5,-3,-7,-9,-6,14,-157,-4,-74,14,14,-158,14,14,-45,-10,-49,14,14,14,-75,-181,14,14,14,14,14,14,14,14,14,]),'STRINGCONST':([17,20,27,48,55,56,57,61,62,63,65,66,67,73,80,87,89,106,108,115,116,137,143,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,197,207,210,212,220,229,233,237,240,241,243,246,265,267,291,293,301,],[100,100,100,100,-84,100,-117,-112,-110,-111,-116,100,-115,100,-121,100,-120,100,100,100,100,-85,100,100,-103,100,-97,-101,-99,-105,-98,-96,-102,-95,-100,-104,-109,-108,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'ELSIF':([4,12,15,18,22,38,39,53,58,70,74,75,76,77,78,79,82,83,84,85,86,90,91,93,94,95,97,98,99,100,101,102,103,104,105,107,128,142,146,166,167,175,176,211,213,214,215,218,219,221,222,223,224,234,235,248,261,262,263,266,268,295,299,300,319,320,],[-135,-136,-137,-134,-199,-138,-200,-157,-143,-74,-106,-58,-113,-56,-123,-67,-92,-61,-124,-64,-62,-55,-122,-59,-65,-69,-91,-93,-140,-68,-118,-60,-57,-66,-139,-63,-158,-119,-133,-150,229,-211,-201,-145,-144,-114,-73,-94,-107,265,-142,-141,-151,-212,-202,-75,-71,-70,-128,-130,265,-125,-131,229,-132,-126,]),'STRCONC':([2,4,12,15,18,22,26,38,39,40,58,74,75,76,77,78,79,83,84,85,86,90,91,93,94,95,98,99,100,101,102,103,104,105,107,142,146,175,176,204,211,213,214,215,218,219,222,223,234,235,261,262,276,],[61,-135,-136,-137,-134,-199,-140,-138,-200,-139,-143,-106,-58,-113,-56,-123,-67,-61,-124,-64,-62,-55,-122,-59,-65,-69,61,-140,-68,-118,-60,-57,-66,-139,-63,-119,-133,-211,-201,-140,-145,-144,-114,-73,61,-107,-142,-141,-212,-202,-71,-70,-140,]),'THEN':([4,12,15,18,22,38,39,58,74,75,76,77,78,79,82,83,84,85,86,90,91,93,94,95,97,98,99,100,101,102,103,104,105,107,109,110,142,146,162,175,176,211,213,214,215,218,219,222,223,234,235,261,262,271,295,296,320,],[-135,-136,-137,-134,-199,-138,-200,-143,-106,-58,-113,-56,-123,-67,-92,-61,-124,-64,-62,-55,-122,-59,-65,-69,-91,-93,-140,-68,-118,-60,-57,-66,-139,-63,-127,166,-119,-133,220,-211,-201,-145,-144,-114,-73,-94,-107,-142,-141,-212,-202,-71,-70,166,-125,220,-126,]),'SUCC':([0,1,6,16,17,20,21,27,30,35,36,42,48,49,53,55,56,57,61,62,63,65,66,67,69,70,73,80,87,89,96,106,108,115,116,124,125,128,135,137,143,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,166,171,179,197,200,205,207,210,212,220,224,228,229,233,237,240,241,243,246,248,249,265,267,270,291,293,301,309,326,328,329,335,336,339,342,],[7,7,7,-8,7,7,-5,7,-3,-7,-9,-6,7,7,-157,-84,7,-117,-112,-110,-111,-116,7,-115,-4,-74,7,-121,7,-120,7,7,7,7,7,7,7,-158,7,-85,7,7,-103,7,-97,-101,-99,-105,-98,-96,-102,-95,-100,-104,-109,-108,7,7,-45,-10,7,-49,7,7,7,7,7,7,7,7,7,7,7,7,7,7,-75,-181,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'TIMES':([2,4,12,15,18,22,26,38,39,40,58,74,75,76,77,78,79,83,84,85,86,90,91,93,94,95,99,100,101,102,103,104,105,107,142,146,175,176,204,211,213,214,215,219,222,223,234,235,261,262,276,],[67,-135,-136,-137,-134,-199,-140,-138,-200,-139,-143,67,-58,-113,-56,-123,-67,-61,-124,-64,-62,-55,-122,-59,-65,-69,-140,-68,-118,-60,-57,-66,-139,-63,-119,-133,-211,-201,-140,-145,-144,-114,-73,67,-142,-141,-212,-202,-71,-70,-140,]),'IF':([0,1,6,16,17,20,21,27,30,35,36,42,48,49,53,55,56,66,69,70,87,106,108,115,116,124,125,128,135,137,145,166,171,179,197,200,205,207,210,212,220,224,228,229,233,237,240,241,243,246,248,249,265,267,270,291,293,301,309,326,328,329,335,336,339,342,],[20,20,20,-8,106,106,-5,106,-3,-7,-9,-6,106,20,-157,-84,106,106,-4,-74,106,106,106,106,106,20,20,-158,20,-85,106,20,-45,-10,106,-49,20,106,106,106,106,20,20,106,106,106,106,106,106,106,-75,-181,106,106,20,106,106,106,20,20,20,20,20,20,20,20,]),'GT':([4,12,15,18,22,38,39,58,74,75,76,77,78,79,83,84,85,86,90,91,93,94,95,97,98,99,100,101,102,103,104,105,107,142,146,175,176,211,213,214,215,218,219,222,223,234,235,261,262,276,],[-135,-136,-137,-134,-199,-138,-200,-143,-106,-58,-113,-56,-123,-67,-61,-124,-64,-62,-55,-122,-59,-65,-69,155,-93,-140,-68,-118,-60,-57,-66,-139,-63,-119,-133,-211,-201,-145,-144,-114,-73,-94,-107,-142,-141,-212,-202,-71,-70,-140,]),'LOC':([180,181,182,183,184,185,186,188,190,192,195,196,242,303,304,305,312,323,324,338,],[-27,-20,-22,-35,-18,-21,-24,-26,-19,-23,-25,-36,-34,-37,-29,-28,332,-39,-44,346,]),'ARRAY':([111,120,122,168,193,231,288,302,327,],[-15,187,187,187,187,-16,187,187,187,]),'SYN':([0,6,16,21,30,35,36,42,69,70,171,179,200,248,249,309,326,328,329,335,336,339,342,],[41,41,-8,-5,-3,-7,-9,-6,-4,-74,-45,-10,-49,-75,-181,41,41,41,41,41,41,41,41,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'control_part':([1,],[46,]),'assigning_operator':([2,],[56,]),'parenthesized_expression':([17,20,27,48,56,66,73,87,106,108,115,116,143,145,148,161,197,207,210,212,220,229,233,237,240,241,243,246,265,267,291,293,301,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'string_concatenation_operator':([2,98,218,],[68,159,159,]),'initialization':([191,],[239,]),'value_array_element':([17,20,27,48,56,66,73,87,106,108,115,116,143,145,148,161,197,207,210,212,220,229,233,237,240,241,243,246,265,267,291,293,301,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'arithmetic_additive_operator':([2,98,218,],[60,160,160,]),'location':([0,1,6,17,20,27,48,49,56,66,73,87,96,106,108,115,116,124,125,135,143,145,148,161,166,197,205,207,210,212,220,224,228,229,233,237,240,241,243,246,265,267,270,291,293,301,309,326,328,329,335,336,339,342,],[2,2,2,78,78,78,78,2,78,78,78,78,146,78,78,78,78,2,2,2,78,78,78,78,2,78,2,78,78,78,78,2,2,78,78,78,78,78,78,78,78,78,2,78,78,78,2,2,2,2,2,2,2,2,]),'result_attribute':([338,],[347,]),'string_reference':([0,1,6,17,20,27,48,49,56,66,73,87,96,106,108,115,116,124,125,135,143,145,148,161,166,197,205,207,210,212,220,224,228,229,233,237,240,241,243,246,265,267,270,291,293,301,309,326,328,329,335,336,339,342,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'operand4':([17,20,27,48,56,66,73,87,106,108,115,116,143,145,148,161,197,207,210,212,220,229,233,237,240,241,243,246,265,267,291,293,301,],[101,101,101,101,101,101,142,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'expression':([17,20,27,48,56,66,87,106,108,115,116,145,197,207,210,212,220,229,233,237,240,241,243,246,265,267,291,293,301,],[81,109,81,109,136,138,144,109,163,172,172,138,244,252,258,260,263,109,172,273,281,273,273,244,109,297,316,252,273,]),'conditional_expression':([17,20,27,48,56,66,87,106,108,115,116,145,197,207,210,212,220,229,233,237,240,241,243,246,265,267,291,293,301,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'action_statement_list':([1,125,166,228,],[49,205,224,270,]),'while_control':([1,51,],[50,129,]),'empty':([0,],[9,]),'action':([0,1,6,49,124,125,135,166,205,224,228,270,309,326,328,329,335,336,339,342,],[10,10,10,10,201,10,201,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'mode_name':([120,122,168,193,288,302,327,],[184,184,184,184,184,184,184,]),'lower_bound':([66,108,145,237,241,243,301,],[139,139,139,139,139,139,139,]),'then_clause':([110,271,],[167,300,]),'result':([17,27,],[88,117,]),'dereferenced_reference':([0,1,6,17,20,27,48,49,56,66,73,87,96,106,108,115,116,124,125,135,143,145,148,161,166,197,205,207,210,212,220,224,228,229,233,237,240,241,243,246,265,267,270,291,293,301,309,326,328,329,335,336,339,342,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'discrete_range_mode':([120,122,168,193,209,237,255,288,301,302,327,],[186,186,186,186,186,186,186,186,186,186,186,]),'elseif_expression_list':([221,],[268,]),'operand2':([17,20,27,48,56,66,87,106,108,115,116,145,148,161,197,207,210,212,220,229,233,237,240,241,243,246,265,267,291,293,301,],[74,74,74,74,74,74,74,74,74,74,74,74,74,219,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'index_mode_list':([237,],[277,]),'parameter':([115,116,233,],[173,173,173,]),'array_element':([0,1,6,17,20,27,48,49,56,66,73,87,96,106,108,115,116,124,125,135,143,145,148,161,166,197,205,207,210,212,220,224,228,229,233,237,240,241,243,246,265,267,270,291,293,301,309,326,328,329,335,336,339,342,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'basic_mode':([120,122,168,193,209,237,255,288,301,302,327,],[192,192,192,192,192,192,192,192,192,192,192,]),'return_action':([0,1,6,49,124,125,135,166,205,224,228,270,309,326,328,329,335,336,339,342,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'iteration':([52,],[134,]),'referenced_location':([17,20,27,48,56,66,73,87,106,108,115,116,143,145,148,161,197,207,210,212,220,229,233,237,240,241,243,246,265,267,291,293,301,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'discrete_expression':([207,293,],[254,318,]),'integer_literal':([17,20,27,48,56,66,73,87,106,108,115,116,143,145,148,161,197,207,210,212,220,229,233,237,240,241,243,246,265,267,291,293,301,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'procedure_definition':([124,],[202,]),'arithmetic_multiplicative_operator':([2,74,219,],[59,143,143,]),'operand0':([17,20,27,48,56,66,87,106,108,115,116,145,197,207,210,212,220,229,233,237,240,241,243,246,265,267,291,293,301,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'procedure_call':([0,1,6,17,20,27,48,49,56,66,73,87,96,106,108,115,116,124,125,135,143,145,148,161,166,197,205,207,210,212,220,224,228,229,233,237,240,241,243,246,265,267,270,291,293,301,309,326,328,329,335,336,339,342,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'index_mode':([237,301,],[275,322,]),'operand1':([17,20,27,48,56,66,87,106,108,115,116,145,148,197,207,210,212,220,229,233,237,240,241,243,246,265,267,291,293,301,],[98,98,98,98,98,98,98,98,98,98,98,98,218,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'builtin_name':([0,1,6,17,20,27,48,49,56,66,73,87,96,106,108,115,116,124,125,135,143,145,148,161,166,197,205,207,210,212,220,224,228,229,233,237,240,241,243,246,265,267,270,291,293,301,309,326,328,329,335,336,339,342,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'bracketed_action':([0,1,6,49,124,125,135,166,205,224,228,270,309,326,328,329,335,336,339,342,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'expression_list':([66,145,],[141,217,]),'closed_dyadic_operator':([2,],[64,]),'relational_operator':([97,],[156,]),'newmode_list':([23,],[113,]),'program':([0,],[28,]),'if_action':([0,1,6,49,124,125,135,166,205,224,228,270,309,326,328,329,335,336,339,342,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'boolean_literal':([17,20,27,48,56,66,73,87,106,108,115,116,143,145,148,161,197,207,210,212,220,229,233,237,240,241,243,246,265,267,291,293,301,],[102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'parameter_spec':([288,],[311,]),'membership_operator':([97,],[154,]),'step_value':([253,],[289,]),'formal_parameter_list':([250,310,],[285,331,]),'composite_mode':([120,122,168,193,288,302,327,],[185,185,185,185,185,185,185,]),'procedure_statement':([0,6,309,326,328,329,335,336,339,342,],[36,36,36,36,36,36,36,36,36,36,]),'range_enumeration':([52,],[133,]),'builtin_call':([0,1,6,17,20,27,48,49,56,66,73,87,96,106,108,115,116,124,125,135,143,145,148,161,166,197,205,207,210,212,220,224,228,229,233,237,240,241,243,246,265,267,270,291,293,301,309,326,328,329,335,336,339,342,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'discrete_mode':([120,122,168,193,209,237,255,288,301,302,327,],[190,190,190,190,257,278,294,190,278,190,190,]),'formal_parameter':([250,310,],[287,287,]),'call_action':([0,1,6,17,20,27,48,49,56,66,73,87,96,106,108,115,116,124,125,135,143,145,148,161,166,197,205,207,210,212,220,224,228,229,233,237,240,241,243,246,265,267,270,291,293,301,309,326,328,329,335,336,339,342,],[40,40,40,105,105,105,105,40,105,105,105,105,105,105,105,105,105,40,40,40,105,105,105,105,40,105,40,105,105,105,105,40,40,105,105,105,105,105,105,105,105,105,40,105,105,105,40,40,40,40,40,40,40,40,]),'upper_bound':([210,],[259,]),'newmode_statement':([0,6,309,326,328,329,335,336,339,342,],[42,42,42,42,42,42,42,42,42,42,]),'declaration_list':([33,],[119,]),'label':([0,1,6,14,49,125,166,205,224,228,270,309,326,328,329,335,336,339,342,],[43,54,43,71,54,54,54,54,54,54,54,43,43,43,43,43,43,43,43,]),'mode_definition':([23,170,],[114,232,]),'literal_range':([66,108,145,237,241,243,301,],[140,164,216,274,282,283,274,]),'string_literal':([17,20,27,48,56,66,73,87,106,108,115,116,143,145,148,161,197,207,210,212,220,229,233,237,240,241,243,246,265,267,291,293,301,],[107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,]),'monadic_operator':([17,20,27,48,56,66,87,106,108,115,116,143,145,148,161,197,207,210,212,220,229,233,237,240,241,243,246,265,267,291,293,301,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'integer_expression':([108,291,],[165,317,]),'then_expression':([162,296,],[221,319,]),'step_enumeration':([52,],[131,]),'statement_list':([0,309,326,328,335,],[6,329,336,339,342,]),'char_literal':([17,20,27,48,56,66,73,87,106,108,115,116,143,145,148,161,197,207,210,212,220,229,233,237,240,241,243,246,265,267,291,293,301,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'array_slice':([0,1,6,17,20,27,48,49,56,66,73,87,96,106,108,115,116,124,125,135,143,145,148,161,166,197,205,207,210,212,220,224,228,229,233,237,240,241,243,246,265,267,270,291,293,301,309,326,328,329,335,336,339,342,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'operand3':([17,20,27,48,56,66,87,106,108,115,116,143,145,148,161,197,207,210,212,220,229,233,237,240,241,243,246,265,267,291,293,301,],[76,76,76,76,76,76,76,76,76,76,76,214,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'else_expression':([221,268,],[264,298,]),'string_mode':([120,122,168,193,288,302,327,],[183,183,183,183,183,183,183,]),'value_array_slice':([17,20,27,48,56,66,73,87,106,108,115,116,143,145,148,161,197,207,210,212,220,229,233,237,240,241,243,246,265,267,291,293,301,],[103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,]),'exit_action':([0,1,6,49,124,125,135,166,205,224,228,270,309,326,328,329,335,336,339,342,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'operator1':([97,],[148,]),'syn_definition':([41,199,],[121,247,]),'constant_expression':([197,246,],[245,284,]),'declaration':([33,178,],[118,236,]),'array_primitive_value':([17,20,27,48,56,66,73,87,106,108,115,116,143,145,148,161,197,207,210,212,220,229,233,237,240,241,243,246,265,267,291,293,301,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'literal':([17,20,27,48,56,66,73,87,106,108,115,116,143,145,148,161,197,207,210,212,220,229,233,237,240,241,243,246,265,267,291,293,301,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'start_value':([207,],[253,]),'parameter_list':([115,116,233,],[174,177,272,]),'boolean_expression':([20,48,106,229,265,],[110,126,162,271,296,]),'action_statement':([0,1,6,49,125,166,205,224,228,270,309,326,328,329,335,336,339,342,],[16,53,16,128,53,53,128,128,53,128,16,16,16,16,16,16,16,16,]),'array_mode':([120,122,168,193,288,302,327,],[196,196,196,196,196,196,196,]),'location_name':([0,1,6,17,20,27,48,49,56,66,73,87,96,106,108,115,116,124,125,135,143,145,148,161,166,197,205,207,210,212,220,224,228,229,233,237,240,241,243,246,265,267,270,291,293,301,309,326,328,329,335,336,339,342,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'id_list':([23,33,41,170,178,199,250,310,],[112,120,122,112,120,122,288,288,]),'for_control':([1,],[51,]),'primitive_value':([17,20,27,48,56,66,73,87,106,108,115,116,143,145,148,161,197,207,210,212,220,229,233,237,240,241,243,246,265,267,291,293,301,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'declaration_statement':([0,6,309,326,328,329,335,336,339,342,],[21,21,21,21,21,21,21,21,21,21,]),'empty_literal':([17,20,27,48,56,66,73,87,106,108,115,116,143,145,148,161,197,207,210,212,220,229,233,237,240,241,243,246,265,267,291,293,301,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'end_value':([253,289,290,313,],[292,314,315,334,]),'reference_mode':([120,122,168,193,288,302,327,],[181,181,181,181,181,181,181,]),'string_length':([238,],[279,]),'elseif_clause':([167,300,],[225,225,]),'elseif_expression':([221,268,],[266,299,]),'else_clause':([167,300,],[226,321,]),'parameter_attribute':([312,],[333,]),'statement':([0,6,309,326,328,329,335,336,339,342,],[30,69,30,30,30,69,30,69,69,69,]),'element_node':([302,],[323,]),'assignment_action':([0,1,6,49,124,125,135,166,205,224,228,270,309,326,328,329,335,336,339,342,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'loop_counter':([52,],[130,]),'result_action':([0,1,6,49,124,125,135,166,205,224,228,270,309,326,328,329,335,336,339,342,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'synonym_statement':([0,6,309,326,328,329,335,336,339,342,],[35,35,35,35,35,35,35,35,35,35,]),'do_action':([0,1,6,49,124,125,135,166,205,224,228,270,309,326,328,329,335,336,339,342,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'mode':([120,122,168,193,288,302,327,],[191,198,230,242,312,324,338,]),'syn_list':([41,],[123,]),'discrete_mode_name':([120,122,168,193,209,237,255,288,301,302,327,],[194,194,194,194,194,194,194,194,194,194,194,]),'operator2':([98,218,],[161,161,]),'result_spec':([286,306,],[308,325,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','lyaParser.py',64),
  ('program -> empty','program',1,'p_program','lyaParser.py',65),
  ('statement_list -> statement','statement_list',1,'p_statement_list1','lyaParser.py',72),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list1','lyaParser.py',73),
  ('statement -> declaration_statement','statement',1,'p_statement','lyaParser.py',80),
  ('statement -> newmode_statement','statement',1,'p_statement','lyaParser.py',81),
  ('statement -> synonym_statement','statement',1,'p_statement','lyaParser.py',82),
  ('statement -> action_statement','statement',1,'p_statement','lyaParser.py',83),
  ('statement -> procedure_statement','statement',1,'p_statement','lyaParser.py',84),
  ('declaration_statement -> DCL declaration_list SMC','declaration_statement',3,'p_declaration_statement','lyaParser.py',92),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','lyaParser.py',96),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','lyaParser.py',97),
  ('declaration -> id_list mode initialization','declaration',3,'p_declaration1','lyaParser.py',104),
  ('declaration -> id_list mode','declaration',2,'p_declaration2','lyaParser.py',108),
  ('id_list -> ID','id_list',1,'p_id_list','lyaParser.py',112),
  ('id_list -> id_list COMMA ID','id_list',3,'p_id_list','lyaParser.py',113),
  ('initialization -> EQUALS expression','initialization',2,'p_initialization','lyaParser.py',120),
  ('mode -> mode_name','mode',1,'p_mode','lyaParser.py',128),
  ('mode -> discrete_mode','mode',1,'p_mode','lyaParser.py',129),
  ('mode -> reference_mode','mode',1,'p_mode','lyaParser.py',130),
  ('mode -> composite_mode','mode',1,'p_mode','lyaParser.py',131),
  ('mode_name -> ID','mode_name',1,'p_mode_name','lyaParser.py',135),
  ('discrete_mode -> basic_mode','discrete_mode',1,'p_discrete_mode','lyaParser.py',139),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','lyaParser.py',140),
  ('basic_mode -> INT','basic_mode',1,'p_basic_mode','lyaParser.py',144),
  ('basic_mode -> BOOL','basic_mode',1,'p_basic_mode','lyaParser.py',145),
  ('basic_mode -> CHAR','basic_mode',1,'p_basic_mode','lyaParser.py',146),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaParser.py',150),
  ('discrete_range_mode -> basic_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaParser.py',151),
  ('discrete_mode_name -> ID','discrete_mode_name',1,'p_discrete_mode_name','lyaParser.py',155),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_litereal_range','lyaParser.py',159),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','lyaParser.py',163),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','lyaParser.py',167),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','lyaParser.py',171),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','lyaParser.py',175),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','lyaParser.py',176),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','lyaParser.py',180),
  ('string_length -> INTCONST','string_length',1,'p_string_length','lyaParser.py',184),
  ('array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_node','array_mode',5,'p_array_mode','lyaParser.py',188),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','lyaParser.py',193),
  ('index_mode_list -> index_mode_list COMMA index_mode','index_mode_list',3,'p_index_mode_list','lyaParser.py',194),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','lyaParser.py',201),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','lyaParser.py',202),
  ('element_node -> mode','element_node',1,'p_element_node','lyaParser.py',206),
  ('newmode_statement -> TYPE newmode_list SMC','newmode_statement',3,'p_newmode_statement','lyaParser.py',214),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','lyaParser.py',218),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','lyaParser.py',219),
  ('mode_definition -> id_list EQUALS mode','mode_definition',3,'p_mode_definition','lyaParser.py',226),
  ('synonym_statement -> SYN syn_list SMC','synonym_statement',3,'p_synonym_statement','lyaParser.py',230),
  ('syn_list -> syn_definition','syn_list',1,'p_syn_list','lyaParser.py',238),
  ('syn_list -> syn_list COMMA syn_definition','syn_list',3,'p_syn_list','lyaParser.py',239),
  ('syn_definition -> id_list EQUALS constant_expression','syn_definition',3,'p_syn_definition','lyaParser.py',246),
  ('syn_definition -> id_list mode EQUALS constant_expression','syn_definition',4,'p_syn_definition2','lyaParser.py',250),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','lyaParser.py',254),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','lyaParser.py',262),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','lyaParser.py',263),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','lyaParser.py',264),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','lyaParser.py',265),
  ('literal -> integer_literal','literal',1,'p_literal','lyaParser.py',269),
  ('literal -> boolean_literal','literal',1,'p_literal','lyaParser.py',270),
  ('literal -> char_literal','literal',1,'p_literal','lyaParser.py',271),
  ('literal -> empty_literal','literal',1,'p_literal','lyaParser.py',272),
  ('literal -> string_literal','literal',1,'p_literal','lyaParser.py',273),
  ('integer_literal -> INTCONST','integer_literal',1,'p_integer_literal','lyaParser.py',277),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','lyaParser.py',281),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','lyaParser.py',282),
  ('char_literal -> CHARCONST','char_literal',1,'p_char_literal','lyaParser.py',286),
  ('string_literal -> STRINGCONST','string_literal',1,'p_string_literal','lyaParser.py',290),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','lyaParser.py',294),
  ('value_array_element -> array_primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','lyaParser.py',298),
  ('value_array_slice -> array_primitive_value LBRACKET literal_range RBRACKET','value_array_slice',4,'p_value_array_slice','lyaParser.py',302),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','lyaParser.py',306),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','lyaParser.py',310),
  ('action_statement -> action SMC','action_statement',2,'p_action_statement','lyaParser.py',318),
  ('action_statement -> label COLON action SMC','action_statement',4,'p_action_statement','lyaParser.py',319),
  ('label -> ID','label',1,'p_label','lyaParser.py',326),
  ('action -> assignment_action','action',1,'p_action','lyaParser.py',330),
  ('action -> bracketed_action','action',1,'p_action','lyaParser.py',331),
  ('action -> call_action','action',1,'p_action','lyaParser.py',332),
  ('action -> exit_action','action',1,'p_action','lyaParser.py',333),
  ('action -> return_action','action',1,'p_action','lyaParser.py',334),
  ('action -> result_action','action',1,'p_action','lyaParser.py',335),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','lyaParser.py',343),
  ('assigning_operator -> EQUALS','assigning_operator',1,'p_assigning_operator','lyaParser.py',347),
  ('assigning_operator -> closed_dyadic_operator EQUALS','assigning_operator',2,'p_assigning_operator','lyaParser.py',348),
  ('closed_dyadic_operator -> arithmetic_additive_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','lyaParser.py',355),
  ('closed_dyadic_operator -> arithmetic_multiplicative_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','lyaParser.py',356),
  ('closed_dyadic_operator -> string_concatenation_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','lyaParser.py',357),
  ('expression_list -> expression','expression_list',1,'p_expression_list','lyaParser.py',361),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','lyaParser.py',362),
  ('expression -> operand0','expression',1,'p_expression','lyaParser.py',369),
  ('expression -> conditional_expression','expression',1,'p_expression','lyaParser.py',370),
  ('operand0 -> operand1','operand0',1,'p_operand0','lyaParser.py',374),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','lyaParser.py',375),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','lyaParser.py',382),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','lyaParser.py',383),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','lyaParser.py',387),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','lyaParser.py',391),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','lyaParser.py',392),
  ('relational_operator -> ISEQUAL','relational_operator',1,'p_relational_operator','lyaParser.py',393),
  ('relational_operator -> NOTEQUAL','relational_operator',1,'p_relational_operator','lyaParser.py',394),
  ('relational_operator -> GT','relational_operator',1,'p_relational_operator','lyaParser.py',395),
  ('relational_operator -> GE','relational_operator',1,'p_relational_operator','lyaParser.py',396),
  ('relational_operator -> LT','relational_operator',1,'p_relational_operator','lyaParser.py',397),
  ('relational_operator -> LE','relational_operator',1,'p_relational_operator','lyaParser.py',398),
  ('operand1 -> operand2','operand1',1,'p_operand1','lyaParser.py',402),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1','lyaParser.py',403),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','lyaParser.py',410),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','lyaParser.py',411),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','lyaParser.py',415),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','lyaParser.py',416),
  ('string_concatenation_operator -> STRCONC','string_concatenation_operator',1,'p_string_concatenation_operator','lyaParser.py',420),
  ('operand2 -> operand3','operand2',1,'p_operand2','lyaParser.py',424),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','lyaParser.py',425),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaParser.py',432),
  ('arithmetic_multiplicative_operator -> DIV','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaParser.py',433),
  ('arithmetic_multiplicative_operator -> MOD','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaParser.py',434),
  ('operand3 -> operand4','operand3',1,'p_operand3','lyaParser.py',438),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','lyaParser.py',439),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','lyaParser.py',446),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','lyaParser.py',447),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','lyaParser.py',451),
  ('operand4 -> location','operand4',1,'p_operand4','lyaParser.py',452),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','lyaParser.py',453),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','lyaParser.py',459),
  ('conditional_expression -> IF boolean_expression then_expression elseif_expression_list else_expression FI','conditional_expression',6,'p_conditional_expression2','lyaParser.py',463),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','lyaParser.py',467),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','lyaParser.py',471),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','lyaParser.py',475),
  ('elseif_expression_list -> elseif_expression','elseif_expression_list',1,'p_elseif_expression_list','lyaParser.py',479),
  ('elseif_expression_list -> elseif_expression_list elseif_expression','elseif_expression_list',2,'p_elseif_expression_list','lyaParser.py',480),
  ('elseif_expression -> ELSIF boolean_expression then_expression','elseif_expression',3,'p_elseif_expression','lyaParser.py',487),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','lyaParser.py',495),
  ('location -> location_name','location',1,'p_location','lyaParser.py',499),
  ('location -> string_reference','location',1,'p_location','lyaParser.py',500),
  ('location -> dereferenced_reference','location',1,'p_location','lyaParser.py',501),
  ('location -> array_element','location',1,'p_location','lyaParser.py',502),
  ('location -> array_slice','location',1,'p_location','lyaParser.py',503),
  ('location -> call_action','location',1,'p_location','lyaParser.py',504),
  ('location_name -> ID','location_name',1,'p_location_name','lyaParser.py',508),
  ('string_reference -> location_name LBRACKET integer_expression RBRACKET','string_reference',4,'p_string_reference','lyaParser.py',512),
  ('string_reference -> location_name LBRACKET literal_range RBRACKET','string_reference',4,'p_string_reference2','lyaParser.py',516),
  ('dereferenced_reference -> location ARROW','dereferenced_reference',2,'p_dereferenced_reference','lyaParser.py',520),
  ('array_element -> location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','lyaParser.py',524),
  ('array_slice -> location LBRACKET literal_range RBRACKET','array_slice',4,'p_array_slice','lyaParser.py',528),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','lyaParser.py',536),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','lyaParser.py',537),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','lyaParser.py',545),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action2','lyaParser.py',549),
  ('then_clause -> THEN','then_clause',1,'p_then_clause','lyaParser.py',553),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','lyaParser.py',554),
  ('else_clause -> ELSE','else_clause',1,'p_else_clause','lyaParser.py',561),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','lyaParser.py',562),
  ('else_clause -> elseif_clause','else_clause',1,'p_else_clause2','lyaParser.py',569),
  ('elseif_clause -> ELSIF boolean_expression then_clause','elseif_clause',3,'p_elseif_clause','lyaParser.py',573),
  ('elseif_clause -> ELSIF boolean_expression then_clause else_clause','elseif_clause',4,'p_elseif_clause2','lyaParser.py',577),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','lyaParser.py',582),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','lyaParser.py',583),
  ('do_action -> DO OD','do_action',2,'p_do_action','lyaParser.py',594),
  ('do_action -> DO control_part SMC OD','do_action',4,'p_do_action2','lyaParser.py',598),
  ('do_action -> DO control_part SMC action_statement_list OD','do_action',5,'p_do_action3','lyaParser.py',602),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action4','lyaParser.py',606),
  ('control_part -> for_control','control_part',1,'p_control_part','lyaParser.py',610),
  ('control_part -> while_control','control_part',1,'p_control_part','lyaParser.py',611),
  ('control_part -> for_control while_control','control_part',2,'p_control_part2','lyaParser.py',615),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','lyaParser.py',619),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','lyaParser.py',623),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','lyaParser.py',624),
  ('step_enumeration -> loop_counter EQUALS start_value end_value','step_enumeration',4,'p_step_enumeration','lyaParser.py',628),
  ('step_enumeration -> loop_counter EQUALS start_value step_value end_value','step_enumeration',5,'p_step_enumeration2','lyaParser.py',632),
  ('step_enumeration -> loop_counter EQUALS start_value DOWN end_value','step_enumeration',5,'p_step_enumeration3','lyaParser.py',636),
  ('step_enumeration -> loop_counter EQUALS start_value step_value DOWN end_value','step_enumeration',6,'p_step_enumeration4','lyaParser.py',640),
  ('loop_counter -> ID','loop_counter',1,'p_loop_counter','lyaParser.py',644),
  ('start_value -> discrete_expression','start_value',1,'p_start_value','lyaParser.py',648),
  ('step_value -> BY integer_expression','step_value',2,'p_step_value','lyaParser.py',652),
  ('end_value -> TO discrete_expression','end_value',2,'p_end_value','lyaParser.py',656),
  ('discrete_expression -> expression','discrete_expression',1,'p_discrete_expression','lyaParser.py',660),
  ('range_enumeration -> loop_counter IN discrete_mode','range_enumeration',3,'p_range_enumeration','lyaParser.py',664),
  ('range_enumeration -> loop_counter DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration2','lyaParser.py',668),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','lyaParser.py',672),
  ('procedure_statement -> label COLON procedure_definition SMC','procedure_statement',4,'p_procedure_statement','lyaParser.py',680),
  ('procedure_definition -> PROC LPAREN RPAREN SMC END','procedure_definition',5,'p_procedure_definition1','lyaParser.py',684),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SMC statement_list END','procedure_definition',7,'p_procedure_definition1','lyaParser.py',685),
  ('procedure_definition -> PROC LPAREN RPAREN SMC statement_list END','procedure_definition',6,'p_procedure_definition1','lyaParser.py',686),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SMC END','procedure_definition',6,'p_procedure_definition2','lyaParser.py',695),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SMC END','procedure_definition',7,'p_procedure_definition2','lyaParser.py',696),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SMC statement_list END','procedure_definition',8,'p_procedure_definition2','lyaParser.py',697),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SMC statement_list END','procedure_definition',7,'p_procedure_definition3','lyaParser.py',706),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SMC END','procedure_definition',6,'p_procedure_definition3','lyaParser.py',707),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','lyaParser.py',714),
  ('formal_parameter_list -> formal_parameter COMMA formal_parameter_list','formal_parameter_list',3,'p_formal_parameter_list','lyaParser.py',715),
  ('formal_parameter -> id_list parameter_spec','formal_parameter',2,'p_formal_parameter','lyaParser.py',722),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','lyaParser.py',726),
  ('parameter_spec -> mode parameter_attribute','parameter_spec',2,'p_parameter_spec','lyaParser.py',727),
  ('parameter_attribute -> LOC','parameter_attribute',1,'p_parameter_attribute','lyaParser.py',734),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','lyaParser.py',738),
  ('result_spec -> RETURNS LPAREN mode result_attribute RPAREN','result_spec',5,'p_result_spec','lyaParser.py',739),
  ('result_attribute -> LOC','result_attribute',1,'p_result_attribute','lyaParser.py',746),
  ('call_action -> procedure_call','call_action',1,'p_call_action','lyaParser.py',754),
  ('call_action -> builtin_call','call_action',1,'p_call_action','lyaParser.py',755),
  ('procedure_call -> ID LPAREN RPAREN','procedure_call',3,'p_procedure_call','lyaParser.py',759),
  ('procedure_call -> ID LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','lyaParser.py',760),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','lyaParser.py',767),
  ('parameter_list -> parameter COMMA parameter_list','parameter_list',3,'p_parameter_list','lyaParser.py',768),
  ('parameter -> expression','parameter',1,'p_parameter','lyaParser.py',775),
  ('exit_action -> EXIT label','exit_action',2,'p_exit_action','lyaParser.py',783),
  ('return_action -> RETURN','return_action',1,'p_return_action','lyaParser.py',787),
  ('return_action -> RETURN result','return_action',2,'p_return_action','lyaParser.py',788),
  ('result_action -> RESULT result','result_action',2,'p_result_action','lyaParser.py',795),
  ('result -> expression','result',1,'p_result','lyaParser.py',799),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','lyaParser.py',803),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','lyaParser.py',804),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','lyaParser.py',811),
  ('builtin_name -> PRED','builtin_name',1,'p_builtin_name','lyaParser.py',812),
  ('builtin_name -> SUCC','builtin_name',1,'p_builtin_name','lyaParser.py',813),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','lyaParser.py',814),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','lyaParser.py',815),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','lyaParser.py',816),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','lyaParser.py',817),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','lyaParser.py',818),
  ('integer_expression -> expression','integer_expression',1,'p_integer_expression','lyaParser.py',827),
  ('empty -> <empty>','empty',0,'p_empty','lyaParser.py',834),
]
