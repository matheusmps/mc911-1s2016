
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '57422121BFEEEAAB656845AF2CC23D11'
    
_lr_action_items = {'REF':([90,93,121,173,185,226,286,300,328,],[-15,173,173,173,173,-16,173,173,173,]),'DIV':([3,9,13,20,25,29,32,36,39,43,49,50,51,52,53,54,58,60,61,63,64,65,67,68,69,71,72,73,76,77,78,79,80,113,130,144,180,181,198,205,206,212,228,229,238,240,249,250,257,258,269,],[-137,-199,-140,-136,-139,-138,-135,107,-200,-134,-69,-66,-113,-61,-60,-140,-68,-124,-122,-139,-67,-55,-59,-63,-123,-64,-65,-118,-62,107,-57,-56,-58,-143,-133,-119,-201,-211,-140,107,-73,-114,-202,-212,-145,-144,-142,-141,-71,-70,-140,]),'NOT':([2,19,27,55,56,82,94,96,106,107,108,110,111,112,114,117,118,124,125,126,127,131,132,133,134,135,136,137,138,139,140,141,142,143,145,193,195,208,213,219,220,221,225,227,233,239,241,242,253,255,294,295,301,],[66,66,66,66,66,66,66,66,-84,-116,66,-112,-111,66,-115,-117,-110,66,-108,-109,66,-96,66,-97,-95,-102,-104,-98,-103,-99,-105,-101,-100,66,66,-85,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'RETURN':([0,1,4,7,12,26,31,35,42,81,83,95,105,123,147,154,156,157,183,187,196,216,236,237,246,248,280,311,329,331,333,337,339,341,347,],[2,-5,-8,2,-7,-9,-6,2,-3,-157,2,-74,-4,2,-158,2,2,-10,-45,2,-49,2,2,2,-75,-181,2,2,2,2,2,2,2,2,2,]),'THEN':([3,9,20,29,32,39,43,47,48,49,50,51,52,53,54,58,60,61,62,63,64,65,67,68,69,71,72,73,76,77,78,79,80,101,102,113,129,130,144,180,181,205,206,209,212,228,229,238,240,249,250,257,258,278,289,290,314,],[-137,-199,-136,-138,-135,-200,-134,-93,-92,-69,-66,-113,-61,-60,-140,-68,-124,-122,-91,-139,-67,-55,-59,-63,-123,-64,-65,-118,-62,-106,-57,-56,-58,-127,187,-143,208,-133,-119,-201,-211,-107,-73,-94,-114,-202,-212,-145,-144,-142,-141,-71,-70,187,-125,208,-126,]),'NULL':([2,19,27,55,56,66,74,75,82,94,96,106,107,108,110,111,112,114,117,118,124,125,126,127,131,132,133,134,135,136,137,138,139,140,141,142,143,145,193,195,208,213,219,220,221,225,227,233,239,241,242,253,255,294,295,301,],[49,49,49,49,49,-121,-120,49,49,49,49,-84,-116,49,-112,-111,49,-115,-117,-110,49,-108,-109,49,-96,49,-97,-95,-102,-104,-98,-103,-99,-105,-101,-100,49,49,-85,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'PRINT':([0,1,2,4,7,12,19,26,27,31,35,42,55,56,59,66,74,75,81,82,83,94,95,96,105,106,107,108,110,111,112,114,117,118,123,124,125,126,127,131,132,133,134,135,136,137,138,139,140,141,142,143,145,147,154,156,157,183,187,193,195,196,208,213,216,219,220,221,225,227,233,236,237,239,241,242,246,248,253,255,280,294,295,301,311,329,331,333,337,339,341,347,],[5,-5,5,-8,5,-7,5,-9,5,-6,5,-3,5,5,5,-121,-120,5,-157,5,5,5,-74,5,-4,-84,-116,5,-112,-111,5,-115,-117,-110,5,5,-108,-109,5,-96,5,-97,-95,-102,-104,-98,-103,-99,-105,-101,-100,5,5,-158,5,5,-10,-45,5,-85,5,-49,5,5,5,5,5,5,5,5,5,5,5,5,5,5,-75,-181,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'UPPER':([0,1,2,4,7,12,19,26,27,31,35,42,55,56,59,66,74,75,81,82,83,94,95,96,105,106,107,108,110,111,112,114,117,118,123,124,125,126,127,131,132,133,134,135,136,137,138,139,140,141,142,143,145,147,154,156,157,183,187,193,195,196,208,213,216,219,220,221,225,227,233,236,237,239,241,242,246,248,253,255,280,294,295,301,311,329,331,333,337,339,341,347,],[6,-5,6,-8,6,-7,6,-9,6,-6,6,-3,6,6,6,-121,-120,6,-157,6,6,6,-74,6,-4,-84,-116,6,-112,-111,6,-115,-117,-110,6,6,-108,-109,6,-96,6,-97,-95,-102,-104,-98,-103,-99,-105,-101,-100,6,6,-158,6,6,-10,-45,6,-85,6,-49,6,6,6,6,6,6,6,6,6,6,6,6,6,6,-75,-181,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'DO':([0,1,4,7,12,26,31,35,42,81,83,95,105,123,147,154,156,157,183,187,196,216,236,237,246,248,280,311,329,331,333,337,339,341,347,],[7,-5,-8,7,-7,-9,-6,7,-3,-157,7,-74,-4,7,-158,7,7,-10,-45,7,-49,7,7,7,-75,-181,7,7,7,7,7,7,7,7,7,]),'CHAR':([90,93,121,173,185,215,219,226,262,286,300,301,328,],[-15,161,161,161,161,161,161,-16,161,161,161,161,161,]),'WHILE':([3,7,9,20,29,32,39,43,47,48,49,50,51,52,53,54,58,60,61,62,63,64,65,67,68,69,71,72,73,76,77,78,79,80,88,113,130,144,149,151,153,160,161,168,169,175,180,181,205,206,209,212,228,229,238,240,249,250,257,258,260,263,289,298,299,302,304,314,317,318,320,334,],[-137,82,-199,-136,-138,-135,-200,-134,-93,-92,-69,-66,-113,-61,-60,-140,-68,-124,-122,-91,-139,-67,-55,-59,-63,-123,-64,-65,-118,-62,-106,-57,-56,-58,82,-143,-133,-119,-168,-166,-167,-24,-27,-25,-26,-23,-201,-211,-107,-73,-94,-114,-202,-212,-145,-144,-142,-141,-71,-70,-177,-178,-125,-169,-179,-28,-29,-126,-176,-171,-170,-172,]),'LT':([3,9,20,29,32,39,43,47,49,50,51,52,53,54,58,60,61,62,63,64,65,67,68,69,71,72,73,76,77,78,79,80,113,130,144,180,181,205,206,209,212,228,229,238,240,249,250,257,258,269,],[-137,-199,-136,-138,-135,-200,-134,-93,-69,-66,-113,-61,-60,-140,-68,-124,-122,136,-139,-67,-55,-59,-63,-123,-64,-65,-118,-62,-106,-57,-56,-58,-143,-133,-119,-201,-211,-107,-73,-94,-114,-202,-212,-145,-144,-142,-141,-71,-70,-140,]),'GE':([3,9,20,29,32,39,43,47,49,50,51,52,53,54,58,60,61,62,63,64,65,67,68,69,71,72,73,76,77,78,79,80,113,130,144,180,181,205,206,209,212,228,229,238,240,249,250,257,258,269,],[-137,-199,-136,-138,-135,-200,-134,-93,-69,-66,-113,-61,-60,-140,-68,-124,-122,138,-139,-67,-55,-59,-63,-123,-64,-65,-118,-62,-106,-57,-56,-58,-143,-133,-119,-201,-211,-107,-73,-94,-114,-202,-212,-145,-144,-142,-141,-71,-70,-140,]),'DCL':([0,1,4,12,26,31,35,42,95,105,157,183,196,246,248,311,329,331,333,337,339,341,347,],[10,-5,-8,-7,-9,-6,10,-3,-74,-4,-10,-45,-49,-75,-181,10,10,10,10,10,10,10,10,]),'READ':([0,1,2,4,7,12,19,26,27,31,35,42,55,56,59,66,74,75,81,82,83,94,95,96,105,106,107,108,110,111,112,114,117,118,123,124,125,126,127,131,132,133,134,135,136,137,138,139,140,141,142,143,145,147,154,156,157,183,187,193,195,196,208,213,216,219,220,221,225,227,233,236,237,239,241,242,246,248,253,255,280,294,295,301,311,329,331,333,337,339,341,347,],[11,-5,11,-8,11,-7,11,-9,11,-6,11,-3,11,11,11,-121,-120,11,-157,11,11,11,-74,11,-4,-84,-116,11,-112,-111,11,-115,-117,-110,11,11,-108,-109,11,-96,11,-97,-95,-102,-104,-98,-103,-99,-105,-101,-100,11,11,-158,11,11,-10,-45,11,-85,11,-49,11,11,11,11,11,11,11,11,11,11,11,11,11,11,-75,-181,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'RETURNS':([287,312,],[309,309,]),'MOD':([3,9,13,20,25,29,32,36,39,43,49,50,51,52,53,54,58,60,61,63,64,65,67,68,69,71,72,73,76,77,78,79,80,113,130,144,180,181,198,205,206,212,228,229,238,240,249,250,257,258,269,],[-137,-199,-140,-136,-139,-138,-135,117,-200,-134,-69,-66,-113,-61,-60,-140,-68,-124,-122,-139,-67,-55,-59,-63,-123,-64,-65,-118,-62,117,-57,-56,-58,-143,-133,-119,-201,-211,-140,117,-73,-114,-202,-212,-145,-144,-142,-141,-71,-70,-140,]),'ID':([0,1,2,4,7,10,12,19,24,26,27,31,33,35,40,42,55,56,59,66,74,75,81,82,83,84,90,93,94,95,96,105,106,107,108,110,111,112,114,117,118,121,123,124,125,126,127,131,132,133,134,135,136,137,138,139,140,141,142,143,145,147,154,156,157,158,173,176,183,184,185,187,193,195,196,197,208,213,215,216,219,220,221,225,226,227,233,236,237,239,241,242,246,247,248,253,255,262,280,286,294,295,300,301,306,311,328,329,331,333,337,339,341,347,],[13,-5,54,-8,13,90,-7,54,90,-9,54,-6,104,13,90,-3,54,54,54,-121,-120,54,-157,54,13,152,-15,162,54,-74,54,-4,-84,-116,54,-112,-111,54,-115,-117,-110,162,198,54,-108,-109,54,-96,54,-97,-95,-102,-104,-98,-103,-99,-105,-101,-100,54,54,-158,13,198,-10,90,162,226,-45,90,162,13,-85,54,-49,90,54,54,264,13,269,54,54,54,-16,54,54,13,13,54,54,54,-75,90,-181,54,54,264,13,162,54,54,162,269,90,13,162,13,13,13,13,13,13,13,]),'STRINGCONST':([2,19,27,55,56,66,74,75,82,94,96,106,107,108,110,111,112,114,117,118,124,125,126,127,131,132,133,134,135,136,137,138,139,140,141,142,143,145,193,195,208,213,219,220,221,225,227,233,239,241,242,253,255,294,295,301,],[58,58,58,58,58,-121,-120,58,58,58,58,-84,-116,58,-112,-111,58,-115,-117,-110,58,-108,-109,58,-96,58,-97,-95,-102,-104,-98,-103,-99,-105,-101,-100,58,58,-85,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'BY':([3,9,20,29,32,39,43,47,48,49,50,51,52,53,54,58,60,61,62,63,64,65,67,68,69,71,72,73,76,77,78,79,80,113,130,144,180,181,205,206,209,212,228,229,238,240,249,250,257,258,259,260,261,289,314,],[-137,-199,-136,-138,-135,-200,-134,-93,-92,-69,-66,-113,-61,-60,-140,-68,-124,-122,-91,-139,-67,-55,-59,-63,-123,-64,-65,-118,-62,-106,-57,-56,-58,-143,-133,-119,-201,-211,-107,-73,-94,-114,-202,-212,-145,-144,-142,-141,-71,-70,-174,-177,294,-125,-126,]),'IF':([0,1,2,4,7,12,19,26,27,31,35,42,55,56,81,82,83,94,95,96,105,106,108,112,123,124,143,147,154,156,157,183,187,193,195,196,208,213,216,219,220,221,225,227,233,236,237,239,241,242,246,248,253,255,280,294,295,301,311,329,331,333,337,339,341,347,],[27,-5,56,-8,27,-7,56,-9,56,-6,27,-3,56,56,-157,56,27,56,-74,56,-4,-84,56,56,27,56,56,-158,27,27,-10,-45,27,-85,56,-49,56,56,27,56,56,56,56,56,56,27,27,56,56,56,-75,-181,56,56,27,56,56,56,27,27,27,27,27,27,27,27,]),'OD':([7,81,83,95,147,154,216,246,],[86,-157,148,-74,-158,217,265,-75,]),'TO':([3,9,20,29,32,39,43,47,48,49,50,51,52,53,54,58,60,61,62,63,64,65,67,68,69,71,72,73,76,77,78,79,80,113,130,144,180,181,205,206,209,212,228,229,238,240,249,250,257,258,259,260,261,289,296,297,314,315,316,319,],[-137,-199,-136,-138,-135,-200,-134,-93,-92,-69,-66,-113,-61,-60,-140,-68,-124,-122,-91,-139,-67,-55,-59,-63,-123,-64,-65,-118,-62,-106,-57,-56,-58,-143,-133,-119,-201,-211,-107,-73,-94,-114,-202,-212,-145,-144,-142,-141,-71,-70,-174,-177,295,-125,295,295,-126,-221,-175,295,]),'PROC':([123,],[200,]),'RESULT':([0,1,4,7,12,26,31,35,42,81,83,95,105,123,147,154,156,157,183,187,196,216,236,237,246,248,280,311,329,331,333,337,339,341,347,],[19,-5,-8,19,-7,-9,-6,19,-3,-157,19,-74,-4,19,-158,19,19,-10,-45,19,-49,19,19,19,-75,-181,19,19,19,19,19,19,19,19,19,]),'ELSIF':([3,9,20,29,32,39,43,47,48,49,50,51,52,53,54,58,60,61,62,63,64,65,67,68,69,71,72,73,76,77,78,79,80,81,95,113,130,144,147,180,181,186,187,205,206,207,209,212,228,229,237,238,240,246,249,250,251,254,256,257,258,289,291,305,313,314,],[-137,-199,-136,-138,-135,-200,-134,-93,-92,-69,-66,-113,-61,-60,-140,-68,-124,-122,-91,-139,-67,-55,-59,-63,-123,-64,-65,-118,-62,-106,-57,-56,-58,-157,-74,-143,-133,-119,-158,-201,-211,233,-150,-107,-73,253,-94,-114,-202,-212,-151,-145,-144,-75,-142,-141,-130,253,-128,-71,-70,-125,-131,233,-132,-126,]),'NOTEQUAL':([3,9,20,29,32,39,43,47,49,50,51,52,53,54,58,60,61,62,63,64,65,67,68,69,71,72,73,76,77,78,79,80,113,130,144,180,181,205,206,209,212,228,229,238,240,249,250,257,258,269,],[-137,-199,-136,-138,-135,-200,-134,-93,-69,-66,-113,-61,-60,-140,-68,-124,-122,141,-139,-67,-55,-59,-63,-123,-64,-65,-118,-62,-106,-57,-56,-58,-143,-133,-119,-201,-211,-107,-73,-94,-114,-202,-212,-145,-144,-142,-141,-71,-70,-140,]),'LOWER':([0,1,2,4,7,12,19,26,27,31,35,42,55,56,59,66,74,75,81,82,83,94,95,96,105,106,107,108,110,111,112,114,117,118,123,124,125,126,127,131,132,133,134,135,136,137,138,139,140,141,142,143,145,147,154,156,157,183,187,193,195,196,208,213,216,219,220,221,225,227,233,236,237,239,241,242,246,248,253,255,280,294,295,301,311,329,331,333,337,339,341,347,],[21,-5,21,-8,21,-7,21,-9,21,-6,21,-3,21,21,21,-121,-120,21,-157,21,21,21,-74,21,-4,-84,-116,21,-112,-111,21,-115,-117,-110,21,21,-108,-109,21,-96,21,-97,-95,-102,-104,-98,-103,-99,-105,-101,-100,21,21,-158,21,21,-10,-45,21,-85,21,-49,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-75,-181,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'END':([1,4,12,26,31,42,95,105,157,183,196,246,248,311,329,331,333,337,339,341,347,],[-5,-8,-7,-9,-6,-3,-74,-4,-10,-45,-49,-75,-181,330,336,338,340,345,346,348,350,]),'LPAREN':([2,5,6,8,11,13,16,19,21,27,28,38,44,54,55,56,66,74,75,82,94,96,106,107,108,110,111,112,114,117,118,124,125,126,127,131,132,133,134,135,136,137,138,139,140,141,142,143,145,161,162,163,168,169,175,193,195,198,200,208,213,219,220,221,225,227,233,239,241,242,253,255,264,269,294,295,301,309,],[55,-220,-216,-215,-219,94,96,55,-217,55,-214,-218,-213,94,55,55,-121,-120,55,55,55,55,-84,-116,55,-112,-111,55,-115,-117,-110,55,-108,-109,55,-96,55,-97,-95,-102,-104,-98,-103,-99,-105,-101,-100,55,55,-27,-30,220,-25,-26,225,-85,55,94,247,55,55,55,55,55,55,55,55,55,55,55,55,55,-30,94,55,55,55,328,]),'TYPE':([0,1,4,12,26,31,35,42,95,105,157,183,196,246,248,311,329,331,333,337,339,341,347,],[24,-5,-8,-7,-9,-6,24,-3,-74,-4,-10,-45,-49,-75,-181,24,24,24,24,24,24,24,24,]),'ARROW':([2,3,9,13,19,20,25,27,29,32,36,39,43,54,55,56,63,66,69,74,75,82,94,96,106,107,108,110,111,112,113,114,117,118,124,125,126,127,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,180,181,193,195,198,208,213,219,220,221,225,227,228,229,233,238,239,240,241,242,249,250,253,255,269,294,295,301,],[59,-137,-199,-140,59,-136,-139,59,-138,-135,113,-200,-134,-140,59,59,-139,-121,113,-120,59,59,59,59,-84,-116,59,-112,-111,59,-143,-115,-117,-110,59,-108,-109,59,113,-96,59,-97,-95,-102,-104,-98,-103,-99,-105,-101,-100,59,59,-201,-211,-85,59,-140,59,59,59,59,59,59,59,-202,-212,59,-145,59,-144,59,59,-142,-141,59,59,-140,59,59,59,]),'LE':([3,9,20,29,32,39,43,47,49,50,51,52,53,54,58,60,61,62,63,64,65,67,68,69,71,72,73,76,77,78,79,80,113,130,144,180,181,205,206,209,212,228,229,238,240,249,250,257,258,269,],[-137,-199,-136,-138,-135,-200,-134,-93,-69,-66,-113,-61,-60,-140,-68,-124,-122,140,-139,-67,-55,-59,-63,-123,-64,-65,-118,-62,-106,-57,-56,-58,-143,-133,-119,-201,-211,-107,-73,-94,-114,-202,-212,-145,-144,-142,-141,-71,-70,-140,]),'RBRACKET':([3,9,20,29,32,39,43,47,48,49,50,51,52,53,54,58,60,61,62,63,64,65,67,68,69,71,72,73,76,77,78,79,80,113,130,144,160,161,168,169,175,180,181,189,190,192,202,203,204,205,206,209,210,211,212,228,229,238,240,249,250,257,258,267,268,270,271,274,275,281,282,283,289,302,304,314,323,],[-137,-199,-136,-138,-135,-200,-134,-93,-92,-69,-66,-113,-61,-60,-140,-68,-124,-122,-91,-139,-67,-55,-59,-63,-123,-64,-65,-118,-62,-106,-57,-56,-58,-143,-133,-119,-24,-27,-25,-26,-23,-201,-211,-89,238,240,-221,249,250,-107,-73,-94,257,258,-114,-202,-212,-145,-144,-142,-141,-71,-70,-40,300,-43,-42,-38,303,-33,-31,-90,-125,-28,-29,-126,-41,]),'ELSE':([3,9,20,29,32,39,43,47,48,49,50,51,52,53,54,58,60,61,62,63,64,65,67,68,69,71,72,73,76,77,78,79,80,81,95,113,130,144,147,180,181,186,187,205,206,207,209,212,228,229,237,238,240,246,249,250,251,254,256,257,258,289,291,305,313,314,],[-137,-199,-136,-138,-135,-200,-134,-93,-92,-69,-66,-113,-61,-60,-140,-68,-124,-122,-91,-139,-67,-55,-59,-63,-123,-64,-65,-118,-62,-106,-57,-56,-58,-157,-74,-143,-133,-119,-158,-201,-211,236,-150,-107,-73,255,-94,-114,-202,-212,-151,-145,-144,-75,-142,-141,-130,255,-128,-71,-70,-125,-131,236,-132,-126,]),'FOR':([7,],[84,]),'INTCONST':([2,19,27,55,56,66,74,75,82,94,96,106,107,108,110,111,112,114,117,118,124,125,126,127,131,132,133,134,135,136,137,138,139,140,141,142,143,145,193,195,208,213,219,220,221,223,225,227,233,239,241,242,253,255,294,295,301,],[71,71,71,71,71,-121,-120,71,71,71,71,-84,-116,71,-112,-111,71,-115,-117,-110,71,-108,-109,71,-96,71,-97,-95,-102,-104,-98,-103,-99,-105,-101,-100,71,71,-85,71,71,71,71,71,71,274,71,71,71,71,71,71,71,71,71,71,71,]),'OR':([3,9,20,29,32,39,43,47,49,50,51,52,53,54,58,60,61,62,63,64,65,67,68,69,71,72,73,76,77,78,79,80,113,130,144,180,181,205,206,209,212,228,229,238,240,249,250,257,258,269,],[-137,-199,-136,-138,-135,-200,-134,-93,-69,-66,-113,-61,-60,-140,-68,-124,-122,139,-139,-67,-55,-59,-63,-123,-64,-65,-118,-62,-106,-57,-56,-58,-143,-133,-119,-201,-211,-107,-73,-94,-114,-202,-212,-145,-144,-142,-141,-71,-70,-140,]),'CHARCONST':([2,19,27,55,56,66,74,75,82,94,96,106,107,108,110,111,112,114,117,118,124,125,126,127,131,132,133,134,135,136,137,138,139,140,141,142,143,145,193,195,208,213,219,220,221,225,227,233,239,241,242,253,255,294,295,301,],[64,64,64,64,64,-121,-120,64,64,64,64,-84,-116,64,-112,-111,64,-115,-117,-110,64,-108,-109,64,-96,64,-97,-95,-102,-104,-98,-103,-99,-105,-101,-100,64,64,-85,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'CHARS':([90,93,121,173,185,226,286,300,328,],[-15,165,165,165,165,-16,165,165,165,]),'ARRAY':([90,93,121,173,185,226,286,300,328,],[-15,159,159,159,159,-16,159,159,159,]),'$end':([0,1,4,12,18,26,31,35,37,42,95,105,157,183,196,246,248,],[-222,-5,-8,-7,-2,-9,-6,-1,0,-3,-74,-4,-10,-45,-49,-75,-181,]),'PRED':([0,1,2,4,7,12,19,26,27,31,35,42,55,56,59,66,74,75,81,82,83,94,95,96,105,106,107,108,110,111,112,114,117,118,123,124,125,126,127,131,132,133,134,135,136,137,138,139,140,141,142,143,145,147,154,156,157,183,187,193,195,196,208,213,216,219,220,221,225,227,233,236,237,239,241,242,246,248,253,255,280,294,295,301,311,329,331,333,337,339,341,347,],[28,-5,28,-8,28,-7,28,-9,28,-6,28,-3,28,28,28,-121,-120,28,-157,28,28,28,-74,28,-4,-84,-116,28,-112,-111,28,-115,-117,-110,28,28,-108,-109,28,-96,28,-97,-95,-102,-104,-98,-103,-99,-105,-101,-100,28,28,-158,28,28,-10,-45,28,-85,28,-49,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-75,-181,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'GT':([3,9,20,29,32,39,43,47,49,50,51,52,53,54,58,60,61,62,63,64,65,67,68,69,71,72,73,76,77,78,79,80,113,130,144,180,181,205,206,209,212,228,229,238,240,249,250,257,258,269,],[-137,-199,-136,-138,-135,-200,-134,-93,-69,-66,-113,-61,-60,-140,-68,-124,-122,135,-139,-67,-55,-59,-63,-123,-64,-65,-118,-62,-106,-57,-56,-58,-143,-133,-119,-201,-211,-107,-73,-94,-114,-202,-212,-145,-144,-142,-141,-71,-70,-140,]),'NUM':([0,1,2,4,7,12,19,26,27,31,35,42,55,56,59,66,74,75,81,82,83,94,95,96,105,106,107,108,110,111,112,114,117,118,123,124,125,126,127,131,132,133,134,135,136,137,138,139,140,141,142,143,145,147,154,156,157,183,187,193,195,196,208,213,216,219,220,221,225,227,233,236,237,239,241,242,246,248,253,255,280,294,295,301,311,329,331,333,337,339,341,347,],[44,-5,44,-8,44,-7,44,-9,44,-6,44,-3,44,44,44,-121,-120,44,-157,44,44,44,-74,44,-4,-84,-116,44,-112,-111,44,-115,-117,-110,44,44,-108,-109,44,-96,44,-97,-95,-102,-104,-98,-103,-99,-105,-101,-100,44,44,-158,44,44,-10,-45,44,-85,44,-49,44,44,44,44,44,44,44,44,44,44,44,44,44,44,-75,-181,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'SMC':([2,3,9,14,15,17,20,22,23,25,29,30,32,34,39,43,45,46,47,48,49,50,51,52,53,54,57,58,60,61,62,63,64,65,67,68,69,71,72,73,76,77,78,79,80,85,86,87,88,91,92,97,98,99,101,103,104,113,120,122,130,144,146,148,149,151,153,155,160,161,162,164,166,167,168,169,170,171,172,174,175,180,181,188,199,201,205,206,209,212,217,218,222,224,228,229,230,231,232,238,240,243,244,245,249,250,257,258,260,263,265,273,279,284,287,289,298,299,302,303,304,310,312,314,317,318,320,321,322,330,332,334,336,338,340,342,345,346,348,349,350,],[-207,-137,-199,-82,95,-80,-136,-78,-81,-79,-138,-146,-135,-147,-200,-134,-77,-210,-93,-92,-69,-66,-113,-61,-60,-140,-208,-68,-124,-122,-91,-139,-67,-55,-59,-63,-123,-64,-65,-118,-62,-106,-57,-56,-58,154,-159,-164,-163,-11,157,-209,-46,183,-127,-206,-76,-143,-50,196,-133,-119,-180,-162,-168,-166,-167,-165,-24,-27,-22,-14,-35,-18,-25,-26,-21,-36,-19,-20,-23,-201,-211,-83,246,248,-107,-73,-94,-114,-160,-12,-13,-34,-202,-212,-47,-48,-148,-145,-144,-54,-52,-51,-142,-141,-71,-70,-177,-178,-161,-17,-149,-53,311,-125,-169,-179,-28,-37,-29,329,333,-126,-176,-171,-170,-39,-44,-182,339,-172,-189,-184,-185,-196,-188,-186,-183,-197,-187,]),'LBRACKET':([3,9,13,20,25,29,32,36,39,43,49,50,52,53,54,58,61,63,64,65,67,68,69,70,71,72,76,78,79,80,113,130,159,165,180,181,198,206,228,229,238,240,249,250,257,258,269,],[-137,-199,-140,-136,-139,-138,-135,112,-200,124,-69,-66,-61,-60,-140,-68,-72,-139,-67,-55,-59,-63,112,143,-64,-65,-62,-57,-56,-58,-143,112,219,223,-201,-211,-140,-73,-202,-212,-145,-144,-142,-141,-71,-70,-140,]),'TRUE':([2,19,27,55,56,66,74,75,82,94,96,106,107,108,110,111,112,114,117,118,124,125,126,127,131,132,133,134,135,136,137,138,139,140,141,142,143,145,193,195,208,213,219,220,221,225,227,233,239,241,242,253,255,294,295,301,],[50,50,50,50,50,-121,-120,50,50,50,50,-84,-116,50,-112,-111,50,-115,-117,-110,50,-108,-109,50,-96,50,-97,-95,-102,-104,-98,-103,-99,-105,-101,-100,50,50,-85,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'EXIT':([0,1,4,7,12,26,31,35,42,81,83,95,105,123,147,154,156,157,183,187,196,216,236,237,246,248,280,311,329,331,333,337,339,341,347,],[33,-5,-8,33,-7,-9,-6,33,-3,-157,33,-74,-4,33,-158,33,33,-10,-45,33,-49,33,33,33,-75,-181,33,33,33,33,33,33,33,33,33,]),'INT':([90,93,121,173,185,215,219,226,262,286,300,301,328,],[-15,168,168,168,168,168,168,-16,168,168,168,168,168,]),'ISEQUAL':([3,9,20,29,32,39,43,47,49,50,51,52,53,54,58,60,61,62,63,64,65,67,68,69,71,72,73,76,77,78,79,80,113,130,144,180,181,205,206,209,212,228,229,238,240,249,250,257,258,269,],[-137,-199,-136,-138,-135,-200,-134,-93,-69,-66,-113,-61,-60,-140,-68,-124,-122,142,-139,-67,-55,-59,-63,-123,-64,-65,-118,-62,-106,-57,-56,-58,-143,-133,-119,-201,-211,-107,-73,-94,-114,-202,-212,-145,-144,-142,-141,-71,-70,-140,]),'BOOL':([90,93,121,173,185,215,219,226,262,286,300,301,328,],[-15,169,169,169,169,169,169,-16,169,169,169,169,169,]),'EQUALS':([3,9,13,20,25,29,32,36,39,43,90,100,107,109,110,111,113,114,115,116,117,118,119,121,150,152,160,161,162,164,166,167,168,169,170,171,172,174,175,180,181,194,198,224,226,228,229,238,240,249,250,302,303,304,321,322,],[-137,-199,-140,-136,-139,-138,-135,106,-200,-134,-15,185,-116,-88,-112,-111,-143,-115,193,-86,-117,-110,-87,195,213,-173,-24,-27,-22,221,-35,-18,-25,-26,-21,-36,-19,-20,-23,-201,-211,242,-140,-34,-16,-202,-212,-145,-144,-142,-141,-28,-37,-29,-39,-44,]),'COLON':([3,9,13,20,29,32,39,41,43,47,48,49,50,51,52,53,54,58,60,61,62,63,64,65,67,68,69,71,72,73,76,77,78,79,80,89,113,130,144,180,181,189,191,202,205,206,209,212,228,229,238,240,249,250,257,258,266,269,289,314,],[-137,-199,-76,-136,-138,-135,-200,123,-134,-93,-92,-69,-66,-113,-61,-60,-140,-68,-124,-122,-91,-139,-67,-55,-59,-63,-123,-64,-65,-118,-62,-106,-57,-56,-58,156,-143,-133,-119,-201,-211,-32,239,-32,-107,-73,-94,-114,-202,-212,-145,-144,-142,-141,-71,-70,-32,-140,-125,-126,]),'LENGTH':([0,1,2,4,7,12,19,26,27,31,35,42,55,56,59,66,74,75,81,82,83,94,95,96,105,106,107,108,110,111,112,114,117,118,123,124,125,126,127,131,132,133,134,135,136,137,138,139,140,141,142,143,145,147,154,156,157,183,187,193,195,196,208,213,216,219,220,221,225,227,233,236,237,239,241,242,246,248,253,255,280,294,295,301,311,329,331,333,337,339,341,347,],[38,-5,38,-8,38,-7,38,-9,38,-6,38,-3,38,38,38,-121,-120,38,-157,38,38,38,-74,38,-4,-84,-116,38,-112,-111,38,-115,-117,-110,38,38,-108,-109,38,-96,38,-97,-95,-102,-104,-98,-103,-99,-105,-101,-100,38,38,-158,38,38,-10,-45,38,-85,38,-49,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-75,-181,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'STRCONC':([3,9,13,20,25,29,32,36,39,43,47,49,50,51,52,53,54,58,60,61,63,64,65,67,68,69,71,72,73,76,77,78,79,80,113,130,144,180,181,198,205,206,209,212,228,229,238,240,249,250,257,258,269,],[-137,-199,-140,-136,-139,-138,-135,110,-200,-134,110,-69,-66,-113,-61,-60,-140,-68,-124,-122,-139,-67,-55,-59,-63,-123,-64,-65,-118,-62,-106,-57,-56,-58,-143,-133,-119,-201,-211,-140,-107,-73,110,-114,-202,-212,-145,-144,-142,-141,-71,-70,-140,]),'SUCC':([0,1,2,4,7,12,19,26,27,31,35,42,55,56,59,66,74,75,81,82,83,94,95,96,105,106,107,108,110,111,112,114,117,118,123,124,125,126,127,131,132,133,134,135,136,137,138,139,140,141,142,143,145,147,154,156,157,183,187,193,195,196,208,213,216,219,220,221,225,227,233,236,237,239,241,242,246,248,253,255,280,294,295,301,311,329,331,333,337,339,341,347,],[8,-5,8,-8,8,-7,8,-9,8,-6,8,-3,8,8,8,-121,-120,8,-157,8,8,8,-74,8,-4,-84,-116,8,-112,-111,8,-115,-117,-110,8,8,-108,-109,8,-96,8,-97,-95,-102,-104,-98,-103,-99,-105,-101,-100,8,8,-158,8,8,-10,-45,8,-85,8,-49,8,8,8,8,8,8,8,8,8,8,8,8,8,8,-75,-181,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'MINUS':([2,3,9,13,19,20,25,27,29,32,36,39,43,47,49,50,51,52,53,54,55,56,58,60,61,63,64,65,67,68,69,71,72,73,76,77,78,79,80,82,94,96,106,107,108,110,111,112,113,114,117,118,124,125,126,127,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,180,181,193,195,198,205,206,208,209,212,213,219,220,221,225,227,228,229,233,238,239,240,241,242,249,250,253,255,257,258,269,294,295,301,],[74,-137,-199,-140,74,-136,-139,74,-138,-135,111,-200,-134,111,-69,-66,-113,-61,-60,-140,74,74,-68,-124,-122,-139,-67,-55,-59,-63,-123,-64,-65,-118,-62,-106,-57,-56,-58,74,74,74,-84,-116,74,-112,-111,74,-143,-115,-117,-110,74,-108,-109,74,-133,-96,74,-97,-95,-102,-104,-98,-103,-99,-105,-101,-100,74,-119,74,-201,-211,-85,74,-140,-107,-73,74,111,-114,74,74,74,74,74,74,-202,-212,74,-145,74,-144,74,74,-142,-141,74,74,-71,-70,-140,74,74,74,]),'FALSE':([2,19,27,55,56,66,74,75,82,94,96,106,107,108,110,111,112,114,117,118,124,125,126,127,131,132,133,134,135,136,137,138,139,140,141,142,143,145,193,195,208,213,219,220,221,225,227,233,239,241,242,253,255,294,295,301,],[72,72,72,72,72,-121,-120,72,72,72,72,-84,-116,72,-112,-111,72,-115,-117,-110,72,-108,-109,72,-96,72,-97,-95,-102,-104,-98,-103,-99,-105,-101,-100,72,72,-85,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'SYN':([0,1,4,12,26,31,35,42,95,105,157,183,196,246,248,311,329,331,333,337,339,341,347,],[40,-5,-8,-7,-9,-6,40,-3,-74,-4,-10,-45,-49,-75,-181,40,40,40,40,40,40,40,40,]),'RPAREN':([3,9,20,29,32,39,43,47,48,49,50,51,52,53,54,58,60,61,62,63,64,65,67,68,69,71,72,73,76,77,78,79,80,94,96,113,128,130,144,160,161,162,166,167,168,169,170,171,172,174,175,177,178,179,180,181,182,205,206,209,212,224,228,229,238,240,247,249,250,257,258,272,276,277,281,282,285,288,289,302,303,304,307,308,314,321,322,325,326,327,335,343,344,],[-137,-199,-136,-138,-135,-200,-134,-93,-92,-69,-66,-113,-61,-60,-140,-68,-124,-122,-91,-139,-67,-55,-59,-63,-123,-64,-65,-118,-62,-106,-57,-56,-58,180,181,-143,206,-133,-119,-24,-27,-22,-35,-18,-25,-26,-21,-36,-19,-20,-23,-205,-203,228,-201,-211,229,-107,-73,-94,-114,-34,-202,-212,-145,-144,287,-142,-141,-71,-70,302,304,-204,-33,-31,-190,312,-125,-28,-37,-29,-192,-193,-126,-39,-44,-191,-194,-195,342,-198,349,]),'IN':([3,9,20,29,32,39,43,47,49,50,51,52,53,54,58,60,61,62,63,64,65,67,68,69,71,72,73,76,77,78,79,80,113,130,144,150,152,180,181,205,206,209,212,214,228,229,238,240,249,250,257,258,269,],[-137,-199,-136,-138,-135,-200,-134,-93,-69,-66,-113,-61,-60,-140,-68,-124,-122,133,-139,-67,-55,-59,-63,-123,-64,-65,-118,-62,-106,-57,-56,-58,-143,-133,-119,215,-173,-201,-211,-107,-73,-94,-114,262,-202,-212,-145,-144,-142,-141,-71,-70,-140,]),'AND':([3,9,20,29,32,39,43,47,49,50,51,52,53,54,58,60,61,62,63,64,65,67,68,69,71,72,73,76,77,78,79,80,113,130,144,180,181,205,206,209,212,228,229,238,240,249,250,257,258,269,],[-137,-199,-136,-138,-135,-200,-134,-93,-69,-66,-113,-61,-60,-140,-68,-124,-122,137,-139,-67,-55,-59,-63,-123,-64,-65,-118,-62,-106,-57,-56,-58,-143,-133,-119,-201,-211,-107,-73,-94,-114,-202,-212,-145,-144,-142,-141,-71,-70,-140,]),'LOC':([160,161,162,166,167,168,169,170,171,172,174,175,224,302,303,304,308,321,322,335,],[-24,-27,-22,-35,-18,-25,-26,-21,-36,-19,-20,-23,-34,-28,-37,-29,327,-39,-44,343,]),'DOWN':([3,9,20,29,32,39,43,47,48,49,50,51,52,53,54,58,60,61,62,63,64,65,67,68,69,71,72,73,76,77,78,79,80,113,130,144,150,152,180,181,205,206,209,212,228,229,238,240,249,250,257,258,259,260,261,289,297,314,315,316,],[-137,-199,-136,-138,-135,-200,-134,-93,-92,-69,-66,-113,-61,-60,-140,-68,-124,-122,-91,-139,-67,-55,-59,-63,-123,-64,-65,-118,-62,-106,-57,-56,-58,-143,-133,-119,214,-173,-201,-211,-107,-73,-94,-114,-202,-212,-145,-144,-142,-141,-71,-70,-174,-177,296,-125,319,-126,-221,-175,]),'FI':([3,9,20,29,32,39,43,47,48,49,50,51,52,53,54,58,60,61,62,63,64,65,67,68,69,71,72,73,76,77,78,79,80,81,95,113,130,144,147,180,181,186,187,205,206,209,212,228,229,234,235,236,237,238,240,246,249,250,252,257,258,280,289,292,293,305,314,324,],[-137,-199,-136,-138,-135,-200,-134,-93,-92,-69,-66,-113,-61,-60,-140,-68,-124,-122,-91,-139,-67,-55,-59,-63,-123,-64,-65,-118,-62,-106,-57,-56,-58,-157,-74,-143,-133,-119,-158,-201,-211,232,-150,-107,-73,-94,-114,-202,-212,279,-154,-152,-151,-145,-144,-75,-142,-141,289,-71,-70,-153,-125,314,-129,-155,-126,-156,]),'PLUS':([3,9,13,20,25,29,32,36,39,43,47,49,50,51,52,53,54,58,60,61,63,64,65,67,68,69,71,72,73,76,77,78,79,80,113,130,144,180,181,198,205,206,209,212,228,229,238,240,249,250,257,258,269,],[-137,-199,-140,-136,-139,-138,-135,118,-200,-134,118,-69,-66,-113,-61,-60,-140,-68,-124,-122,-139,-67,-55,-59,-63,-123,-64,-65,-118,-62,-106,-57,-56,-58,-143,-133,-119,-201,-211,-140,-107,-73,118,-114,-202,-212,-145,-144,-142,-141,-71,-70,-140,]),'TIMES':([3,9,13,20,25,29,32,36,39,43,49,50,51,52,53,54,58,60,61,63,64,65,67,68,69,71,72,73,76,77,78,79,80,113,130,144,180,181,198,205,206,212,228,229,238,240,249,250,257,258,269,],[-137,-199,-140,-136,-139,-138,-135,114,-200,-134,-69,-66,-113,-61,-60,-140,-68,-124,-122,-139,-67,-55,-59,-63,-123,-64,-65,-118,-62,114,-57,-56,-58,-143,-133,-119,-201,-211,-140,114,-73,-114,-202,-212,-145,-144,-142,-141,-71,-70,-140,]),'COMMA':([3,9,20,29,32,39,43,47,48,49,50,51,52,53,54,58,60,61,62,63,64,65,67,68,69,71,72,73,76,77,78,79,80,90,91,92,93,98,99,100,113,120,121,122,130,144,160,161,162,164,166,167,168,169,170,171,172,174,175,177,178,180,181,189,192,205,206,209,211,212,218,222,224,226,228,229,230,231,238,240,243,244,245,249,250,257,258,267,268,270,271,273,281,282,283,284,285,286,289,302,303,304,307,308,314,321,322,323,326,327,],[-137,-199,-136,-138,-135,-200,-134,-93,-92,-69,-66,-113,-61,-60,-140,-68,-124,-122,-91,-139,-67,-55,-59,-63,-123,-64,-65,-118,-62,-106,-57,-56,-58,-15,-11,158,176,-46,184,176,-143,-50,176,197,-133,-119,-24,-27,-22,-14,-35,-18,-25,-26,-21,-36,-19,-20,-23,-205,227,-201,-211,-89,241,-107,-73,-94,241,-114,-12,-13,-34,-16,-202,-212,-47,-48,-145,-144,-54,-52,-51,-142,-141,-71,-70,-40,301,-43,-42,-17,-33,-31,-90,-53,306,176,-125,-28,-37,-29,-192,-193,-126,-39,-44,-41,-194,-195,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([2,19,27,55,56,82,94,96,108,112,124,143,195,208,213,219,220,221,225,227,233,239,241,242,253,255,294,295,301,],[46,46,101,128,101,101,177,177,188,189,202,189,243,256,260,266,266,273,266,177,101,281,283,243,101,293,315,260,266,]),'upper_bound':([239,],[282,]),'then_clause':([102,278,],[186,305,]),'conditional_expression':([2,19,27,55,56,82,94,96,108,112,124,143,195,208,213,219,220,221,225,227,233,239,241,242,253,255,294,295,301,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'action_statement':([0,7,35,83,154,187,216,236,237,280,311,329,331,333,337,339,341,347,],[4,81,4,147,81,81,147,81,147,147,4,4,4,4,4,4,4,4,]),'initialization':([164,],[222,]),'range_enumeration':([84,],[149,]),'parenthesized_expression':([2,19,27,55,56,75,82,94,96,108,112,124,127,132,143,145,195,208,213,219,220,221,225,227,233,239,241,242,253,255,294,295,301,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'formal_parameter_list':([247,306,],[288,325,]),'procedure_call':([0,2,7,19,27,35,55,56,59,75,82,83,94,96,108,112,123,124,127,132,143,145,154,156,187,195,208,213,216,219,220,221,225,227,233,236,237,239,241,242,253,255,280,294,295,301,311,329,331,333,337,339,341,347,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'discrete_mode_name':([93,121,173,185,215,219,262,286,300,301,328,],[163,163,163,163,163,163,163,163,163,163,163,]),'synonym_statement':([0,35,311,329,331,333,337,339,341,347,],[12,12,12,12,12,12,12,12,12,12,]),'relational_operator':([62,],[134,]),'parameter':([94,96,227,],[178,178,178,]),'builtin_name':([0,2,7,19,27,35,55,56,59,75,82,83,94,96,108,112,123,124,127,132,143,145,154,156,187,195,208,213,216,219,220,221,225,227,233,236,237,239,241,242,253,255,280,294,295,301,311,329,331,333,337,339,341,347,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'lower_bound':([112,124,143,219,220,225,301,],[191,191,191,191,191,191,191,]),'empty':([0,],[18,]),'else_expression':([207,254,],[252,292,]),'statement':([0,35,311,329,331,333,337,339,341,347,],[42,105,42,42,105,42,105,42,105,105,]),'then_expression':([129,290,],[207,313,]),'string_length':([223,],[275,]),'declaration':([10,158,],[91,218,]),'referenced_location':([2,19,27,55,56,75,82,94,96,108,112,124,127,132,143,145,195,208,213,219,220,221,225,227,233,239,241,242,253,255,294,295,301,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'primitive_value':([2,19,27,55,56,75,82,94,96,108,112,124,127,132,143,145,195,208,213,219,220,221,225,227,233,239,241,242,253,255,294,295,301,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'arithmetic_additive_operator':([36,47,209,],[116,125,125,]),'action_statement_list':([7,154,187,236,],[83,216,237,280,]),'statement_list':([0,311,329,333,339,],[35,331,337,341,347,]),'builtin_call':([0,2,7,19,27,35,55,56,59,75,82,83,94,96,108,112,123,124,127,132,143,145,154,156,187,195,208,213,216,219,220,221,225,227,233,236,237,239,241,242,253,255,280,294,295,301,311,329,331,333,337,339,341,347,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'start_value':([213,],[261,]),'literal_range':([112,124,143,219,220,225,301,],[190,203,210,270,272,276,270,]),'procedure_statement':([0,35,311,329,331,333,337,339,341,347,],[26,26,26,26,26,26,26,26,26,26,]),'membership_operator':([62,],[131,]),'control_part':([7,],[85,]),'newmode_statement':([0,35,311,329,331,333,337,339,341,347,],[31,31,31,31,31,31,31,31,31,31,]),'syn_list':([40,],[122,]),'discrete_range_mode':([93,121,173,185,215,219,262,286,300,301,328,],[160,160,160,160,160,160,160,160,160,160,160,]),'string_reference':([0,2,7,19,27,35,55,56,59,75,82,83,94,96,108,112,123,124,127,132,143,145,154,156,187,195,208,213,216,219,220,221,225,227,233,236,237,239,241,242,253,255,280,294,295,301,311,329,331,333,337,339,341,347,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'loop_counter':([84,],[150,]),'mode':([93,121,173,185,286,300,328,],[164,194,224,231,308,322,335,]),'step_enumeration':([84,],[153,]),'array_slice':([0,2,7,19,27,35,55,56,59,75,82,83,94,96,108,112,123,124,127,132,143,145,154,156,187,195,208,213,216,219,220,221,225,227,233,236,237,239,241,242,253,255,280,294,295,301,311,329,331,333,337,339,341,347,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'array_primitive_value':([2,19,27,55,56,75,82,94,96,108,112,124,127,132,143,145,195,208,213,219,220,221,225,227,233,239,241,242,253,255,294,295,301,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'call_action':([0,2,7,19,27,35,55,56,59,75,82,83,94,96,108,112,123,124,127,132,143,145,154,156,187,195,208,213,216,219,220,221,225,227,233,236,237,239,241,242,253,255,280,294,295,301,311,329,331,333,337,339,341,347,],[25,63,25,63,63,25,63,63,63,63,63,25,63,63,63,63,25,63,63,63,63,63,25,25,25,63,63,63,25,63,63,63,63,63,63,25,25,63,63,63,63,63,25,63,63,63,25,25,25,25,25,25,25,25,]),'for_control':([7,],[88,]),'id_list':([10,24,40,158,184,197,247,306,],[93,100,121,93,100,121,286,286,]),'operand2':([2,19,27,55,56,82,94,96,108,112,124,127,132,143,195,208,213,219,220,221,225,227,233,239,241,242,253,255,294,295,301,],[77,77,77,77,77,77,77,77,77,77,77,205,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'string_mode':([93,121,173,185,286,300,328,],[166,166,166,166,166,166,166,]),'elseif_expression_list':([207,],[254,]),'value_array_slice':([2,19,27,55,56,75,82,94,96,108,112,124,127,132,143,145,195,208,213,219,220,221,225,227,233,239,241,242,253,255,294,295,301,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'if_action':([0,7,35,83,123,154,156,187,216,236,237,280,311,329,331,333,337,339,341,347,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'integer_expression':([124,294,],[204,316,]),'closed_dyadic_operator':([36,],[115,]),'iteration':([84,],[151,]),'arithmetic_multiplicative_operator':([36,77,205,],[119,145,145,]),'value_array_element':([2,19,27,55,56,75,82,94,96,108,112,124,127,132,143,145,195,208,213,219,220,221,225,227,233,239,241,242,253,255,294,295,301,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'parameter_list':([94,96,227,],[179,182,277,]),'operand1':([2,19,27,55,56,82,94,96,108,112,124,132,143,195,208,213,219,220,221,225,227,233,239,241,242,253,255,294,295,301,],[47,47,47,47,47,47,47,47,47,47,47,209,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'declaration_statement':([0,35,311,329,331,333,337,339,341,347,],[1,1,1,1,1,1,1,1,1,1,]),'operator1':([62,],[132,]),'array_element':([0,2,7,19,27,35,55,56,59,75,82,83,94,96,108,112,123,124,127,132,143,145,154,156,187,195,208,213,216,219,220,221,225,227,233,236,237,239,241,242,253,255,280,294,295,301,311,329,331,333,337,339,341,347,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'elseif_clause':([186,305,],[235,235,]),'index_mode':([219,301,],[267,323,]),'index_mode_list':([219,],[268,]),'operand3':([2,19,27,55,56,82,94,96,108,112,124,127,132,143,145,195,208,213,219,220,221,225,227,233,239,241,242,253,255,294,295,301,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,212,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'char_literal':([2,19,27,55,56,75,82,94,96,108,112,124,127,132,143,145,195,208,213,219,220,221,225,227,233,239,241,242,253,255,294,295,301,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'boolean_literal':([2,19,27,55,56,75,82,94,96,108,112,124,127,132,143,145,195,208,213,219,220,221,225,227,233,239,241,242,253,255,294,295,301,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'parameter_spec':([286,],[307,]),'result_action':([0,7,35,83,123,154,156,187,216,236,237,280,311,329,331,333,337,339,341,347,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'action':([0,7,35,83,123,154,156,187,216,236,237,280,311,329,331,333,337,339,341,347,],[15,15,15,15,199,15,199,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'formal_parameter':([247,306,],[285,285,]),'exit_action':([0,7,35,83,123,154,156,187,216,236,237,280,311,329,331,333,337,339,341,347,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'result':([2,19,],[57,97,]),'monadic_operator':([2,19,27,55,56,82,94,96,108,112,124,127,132,143,145,195,208,213,219,220,221,225,227,233,239,241,242,253,255,294,295,301,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'dereferenced_reference':([0,2,7,19,27,35,55,56,59,75,82,83,94,96,108,112,123,124,127,132,143,145,154,156,187,195,208,213,216,219,220,221,225,227,233,236,237,239,241,242,253,255,280,294,295,301,311,329,331,333,337,339,341,347,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'bracketed_action':([0,7,35,83,123,154,156,187,216,236,237,280,311,329,331,333,337,339,341,347,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'return_action':([0,7,35,83,123,154,156,187,216,236,237,280,311,329,331,333,337,339,341,347,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'end_value':([261,296,297,319,],[298,318,320,334,]),'mode_definition':([24,184,],[98,230,]),'constant_expression':([195,242,],[244,284,]),'reference_mode':([93,121,173,185,286,300,328,],[174,174,174,174,174,174,174,]),'operand0':([2,19,27,55,56,82,94,96,108,112,124,143,195,208,213,219,220,221,225,227,233,239,241,242,253,255,294,295,301,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'result_spec':([287,312,],[310,332,]),'element_node':([300,],[321,]),'syn_definition':([40,197,],[120,245,]),'expression_list':([112,143,],[192,211,]),'mode_name':([93,121,173,185,286,300,328,],[167,167,167,167,167,167,167,]),'declaration_list':([10,],[92,]),'result_attribute':([335,],[344,]),'discrete_expression':([213,295,],[259,317,]),'literal':([2,19,27,55,56,75,82,94,96,108,112,124,127,132,143,145,195,208,213,219,220,221,225,227,233,239,241,242,253,255,294,295,301,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'integer_literal':([2,19,27,55,56,75,82,94,96,108,112,124,127,132,143,145,195,208,213,219,220,221,225,227,233,239,241,242,253,255,294,295,301,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'newmode_list':([24,],[99,]),'do_action':([0,7,35,83,123,154,156,187,216,236,237,280,311,329,331,333,337,339,341,347,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'string_literal':([2,19,27,55,56,75,82,94,96,108,112,124,127,132,143,145,195,208,213,219,220,221,225,227,233,239,241,242,253,255,294,295,301,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'else_clause':([186,305,],[234,324,]),'location':([0,2,7,19,27,35,55,56,59,75,82,83,94,96,108,112,123,124,127,132,143,145,154,156,187,195,208,213,216,219,220,221,225,227,233,236,237,239,241,242,253,255,280,294,295,301,311,329,331,333,337,339,341,347,],[36,69,36,69,69,36,69,69,130,69,69,36,69,69,69,69,36,69,69,69,69,69,36,36,36,69,69,69,36,69,69,69,69,69,69,36,36,69,69,69,69,69,36,69,69,69,36,36,36,36,36,36,36,36,]),'program':([0,],[37,]),'operator2':([47,209,],[127,127,]),'assigning_operator':([36,],[108,]),'string_concatenation_operator':([36,47,209,],[109,126,126,]),'operand4':([2,19,27,55,56,75,82,94,96,108,112,124,127,132,143,145,195,208,213,219,220,221,225,227,233,239,241,242,253,255,294,295,301,],[73,73,73,73,73,144,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'while_control':([7,88,],[87,155,]),'array_mode':([93,121,173,185,286,300,328,],[171,171,171,171,171,171,171,]),'parameter_attribute':([308,],[326,]),'discrete_mode':([93,121,173,185,215,219,262,286,300,301,328,],[172,172,172,172,263,271,299,172,172,271,172,]),'empty_literal':([2,19,27,55,56,75,82,94,96,108,112,124,127,132,143,145,195,208,213,219,220,221,225,227,233,239,241,242,253,255,294,295,301,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'boolean_expression':([27,56,82,233,253,],[102,129,146,278,290,]),'label':([0,7,33,35,83,154,187,216,236,237,280,311,329,331,333,337,339,341,347,],[41,89,103,41,89,89,89,89,89,89,89,41,41,41,41,41,41,41,41,]),'step_value':([261,],[297,]),'elseif_expression':([207,254,],[251,291,]),'composite_mode':([93,121,173,185,286,300,328,],[170,170,170,170,170,170,170,]),'location_name':([0,2,7,19,27,35,55,56,59,75,82,83,94,96,108,112,123,124,127,132,143,145,154,156,187,195,208,213,216,219,220,221,225,227,233,236,237,239,241,242,253,255,280,294,295,301,311,329,331,333,337,339,341,347,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'basic_mode':([93,121,173,185,215,219,262,286,300,301,328,],[175,175,175,175,175,175,175,175,175,175,175,]),'procedure_definition':([123,],[201,]),'assignment_action':([0,7,35,83,123,154,156,187,216,236,237,280,311,329,331,333,337,339,341,347,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','lyaParser.py',64),
  ('program -> empty','program',1,'p_program','lyaParser.py',65),
  ('statement_list -> statement','statement_list',1,'p_statement_list1','lyaParser.py',72),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list1','lyaParser.py',73),
  ('statement -> declaration_statement','statement',1,'p_statement','lyaParser.py',80),
  ('statement -> newmode_statement','statement',1,'p_statement','lyaParser.py',81),
  ('statement -> synonym_statement','statement',1,'p_statement','lyaParser.py',82),
  ('statement -> action_statement','statement',1,'p_statement','lyaParser.py',83),
  ('statement -> procedure_statement','statement',1,'p_statement','lyaParser.py',84),
  ('declaration_statement -> DCL declaration_list SMC','declaration_statement',3,'p_declaration_statement','lyaParser.py',92),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','lyaParser.py',96),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','lyaParser.py',97),
  ('declaration -> id_list mode initialization','declaration',3,'p_declaration1','lyaParser.py',104),
  ('declaration -> id_list mode','declaration',2,'p_declaration2','lyaParser.py',108),
  ('id_list -> ID','id_list',1,'p_id_list','lyaParser.py',112),
  ('id_list -> id_list COMMA ID','id_list',3,'p_id_list','lyaParser.py',113),
  ('initialization -> EQUALS expression','initialization',2,'p_initialization','lyaParser.py',120),
  ('mode -> mode_name','mode',1,'p_mode','lyaParser.py',128),
  ('mode -> discrete_mode','mode',1,'p_mode','lyaParser.py',129),
  ('mode -> reference_mode','mode',1,'p_mode','lyaParser.py',130),
  ('mode -> composite_mode','mode',1,'p_mode','lyaParser.py',131),
  ('mode_name -> ID','mode_name',1,'p_mode_name','lyaParser.py',135),
  ('discrete_mode -> basic_mode','discrete_mode',1,'p_discrete_mode','lyaParser.py',139),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','lyaParser.py',140),
  ('basic_mode -> INT','basic_mode',1,'p_basic_mode','lyaParser.py',144),
  ('basic_mode -> BOOL','basic_mode',1,'p_basic_mode','lyaParser.py',145),
  ('basic_mode -> CHAR','basic_mode',1,'p_basic_mode','lyaParser.py',146),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaParser.py',150),
  ('discrete_range_mode -> basic_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaParser.py',151),
  ('discrete_mode_name -> ID','discrete_mode_name',1,'p_discrete_mode_name','lyaParser.py',155),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_litereal_range','lyaParser.py',159),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','lyaParser.py',163),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','lyaParser.py',167),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','lyaParser.py',171),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','lyaParser.py',175),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','lyaParser.py',176),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','lyaParser.py',180),
  ('string_length -> INTCONST','string_length',1,'p_string_length','lyaParser.py',184),
  ('array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_node','array_mode',5,'p_array_mode','lyaParser.py',188),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','lyaParser.py',193),
  ('index_mode_list -> index_mode_list COMMA index_mode','index_mode_list',3,'p_index_mode_list','lyaParser.py',194),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','lyaParser.py',201),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','lyaParser.py',202),
  ('element_node -> mode','element_node',1,'p_element_node','lyaParser.py',206),
  ('newmode_statement -> TYPE newmode_list SMC','newmode_statement',3,'p_newmode_statement','lyaParser.py',214),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','lyaParser.py',218),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','lyaParser.py',219),
  ('mode_definition -> id_list EQUALS mode','mode_definition',3,'p_mode_definition','lyaParser.py',226),
  ('synonym_statement -> SYN syn_list SMC','synonym_statement',3,'p_synonym_statement','lyaParser.py',230),
  ('syn_list -> syn_definition','syn_list',1,'p_syn_list','lyaParser.py',238),
  ('syn_list -> syn_list COMMA syn_definition','syn_list',3,'p_syn_list','lyaParser.py',239),
  ('syn_definition -> id_list EQUALS constant_expression','syn_definition',3,'p_syn_definition','lyaParser.py',246),
  ('syn_definition -> id_list mode EQUALS constant_expression','syn_definition',4,'p_syn_definition2','lyaParser.py',250),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','lyaParser.py',254),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','lyaParser.py',262),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','lyaParser.py',263),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','lyaParser.py',264),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','lyaParser.py',265),
  ('literal -> integer_literal','literal',1,'p_literal','lyaParser.py',269),
  ('literal -> boolean_literal','literal',1,'p_literal','lyaParser.py',270),
  ('literal -> char_literal','literal',1,'p_literal','lyaParser.py',271),
  ('literal -> empty_literal','literal',1,'p_literal','lyaParser.py',272),
  ('literal -> string_literal','literal',1,'p_literal','lyaParser.py',273),
  ('integer_literal -> INTCONST','integer_literal',1,'p_integer_literal','lyaParser.py',277),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','lyaParser.py',281),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','lyaParser.py',282),
  ('char_literal -> CHARCONST','char_literal',1,'p_char_literal','lyaParser.py',286),
  ('string_literal -> STRINGCONST','string_literal',1,'p_string_literal','lyaParser.py',290),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','lyaParser.py',294),
  ('value_array_element -> array_primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','lyaParser.py',298),
  ('value_array_slice -> array_primitive_value LBRACKET literal_range RBRACKET','value_array_slice',4,'p_value_array_slice','lyaParser.py',302),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','lyaParser.py',306),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','lyaParser.py',310),
  ('action_statement -> action SMC','action_statement',2,'p_action_statement','lyaParser.py',318),
  ('action_statement -> label COLON action SMC','action_statement',4,'p_action_statement','lyaParser.py',319),
  ('label -> ID','label',1,'p_label','lyaParser.py',326),
  ('action -> assignment_action','action',1,'p_action','lyaParser.py',330),
  ('action -> bracketed_action','action',1,'p_action','lyaParser.py',331),
  ('action -> call_action','action',1,'p_action','lyaParser.py',332),
  ('action -> exit_action','action',1,'p_action','lyaParser.py',333),
  ('action -> return_action','action',1,'p_action','lyaParser.py',334),
  ('action -> result_action','action',1,'p_action','lyaParser.py',335),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','lyaParser.py',343),
  ('assigning_operator -> EQUALS','assigning_operator',1,'p_assigning_operator','lyaParser.py',347),
  ('assigning_operator -> closed_dyadic_operator EQUALS','assigning_operator',2,'p_assigning_operator','lyaParser.py',348),
  ('closed_dyadic_operator -> arithmetic_additive_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','lyaParser.py',355),
  ('closed_dyadic_operator -> arithmetic_multiplicative_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','lyaParser.py',356),
  ('closed_dyadic_operator -> string_concatenation_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','lyaParser.py',357),
  ('expression_list -> expression','expression_list',1,'p_expression_list','lyaParser.py',361),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','lyaParser.py',362),
  ('expression -> operand0','expression',1,'p_expression','lyaParser.py',369),
  ('expression -> conditional_expression','expression',1,'p_expression','lyaParser.py',370),
  ('operand0 -> operand1','operand0',1,'p_operand0','lyaParser.py',374),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','lyaParser.py',375),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','lyaParser.py',382),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','lyaParser.py',383),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','lyaParser.py',387),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','lyaParser.py',391),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','lyaParser.py',392),
  ('relational_operator -> ISEQUAL','relational_operator',1,'p_relational_operator','lyaParser.py',393),
  ('relational_operator -> NOTEQUAL','relational_operator',1,'p_relational_operator','lyaParser.py',394),
  ('relational_operator -> GT','relational_operator',1,'p_relational_operator','lyaParser.py',395),
  ('relational_operator -> GE','relational_operator',1,'p_relational_operator','lyaParser.py',396),
  ('relational_operator -> LT','relational_operator',1,'p_relational_operator','lyaParser.py',397),
  ('relational_operator -> LE','relational_operator',1,'p_relational_operator','lyaParser.py',398),
  ('operand1 -> operand2','operand1',1,'p_operand1','lyaParser.py',402),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1','lyaParser.py',403),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','lyaParser.py',410),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','lyaParser.py',411),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','lyaParser.py',415),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','lyaParser.py',416),
  ('string_concatenation_operator -> STRCONC','string_concatenation_operator',1,'p_string_concatenation_operator','lyaParser.py',420),
  ('operand2 -> operand3','operand2',1,'p_operand2','lyaParser.py',424),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','lyaParser.py',425),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaParser.py',432),
  ('arithmetic_multiplicative_operator -> DIV','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaParser.py',433),
  ('arithmetic_multiplicative_operator -> MOD','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaParser.py',434),
  ('operand3 -> operand4','operand3',1,'p_operand3','lyaParser.py',438),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','lyaParser.py',439),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','lyaParser.py',446),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','lyaParser.py',447),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','lyaParser.py',451),
  ('operand4 -> location','operand4',1,'p_operand4','lyaParser.py',452),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','lyaParser.py',453),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','lyaParser.py',459),
  ('conditional_expression -> IF boolean_expression then_expression elseif_expression_list else_expression FI','conditional_expression',6,'p_conditional_expression2','lyaParser.py',463),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','lyaParser.py',467),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','lyaParser.py',471),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','lyaParser.py',475),
  ('elseif_expression_list -> elseif_expression','elseif_expression_list',1,'p_elseif_expression_list','lyaParser.py',479),
  ('elseif_expression_list -> elseif_expression_list elseif_expression','elseif_expression_list',2,'p_elseif_expression_list','lyaParser.py',480),
  ('elseif_expression -> ELSIF boolean_expression then_expression','elseif_expression',3,'p_elseif_expression','lyaParser.py',487),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','lyaParser.py',495),
  ('location -> location_name','location',1,'p_location','lyaParser.py',499),
  ('location -> string_reference','location',1,'p_location','lyaParser.py',500),
  ('location -> dereferenced_reference','location',1,'p_location','lyaParser.py',501),
  ('location -> array_element','location',1,'p_location','lyaParser.py',502),
  ('location -> array_slice','location',1,'p_location','lyaParser.py',503),
  ('location -> call_action','location',1,'p_location','lyaParser.py',504),
  ('location_name -> ID','location_name',1,'p_location_name','lyaParser.py',508),
  ('string_reference -> location_name LBRACKET integer_expression RBRACKET','string_reference',4,'p_string_reference','lyaParser.py',512),
  ('string_reference -> location_name LBRACKET literal_range RBRACKET','string_reference',4,'p_string_reference2','lyaParser.py',516),
  ('dereferenced_reference -> location ARROW','dereferenced_reference',2,'p_dereferenced_reference','lyaParser.py',520),
  ('array_element -> location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','lyaParser.py',524),
  ('array_slice -> location LBRACKET literal_range RBRACKET','array_slice',4,'p_array_slice','lyaParser.py',528),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','lyaParser.py',536),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','lyaParser.py',537),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','lyaParser.py',545),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action2','lyaParser.py',549),
  ('then_clause -> THEN','then_clause',1,'p_then_clause','lyaParser.py',553),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','lyaParser.py',554),
  ('else_clause -> ELSE','else_clause',1,'p_else_clause','lyaParser.py',561),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','lyaParser.py',562),
  ('else_clause -> elseif_clause','else_clause',1,'p_else_clause2','lyaParser.py',569),
  ('elseif_clause -> ELSIF boolean_expression then_clause','elseif_clause',3,'p_elseif_clause','lyaParser.py',573),
  ('elseif_clause -> ELSIF boolean_expression then_clause else_clause','elseif_clause',4,'p_elseif_clause2','lyaParser.py',577),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','lyaParser.py',582),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','lyaParser.py',583),
  ('do_action -> DO OD','do_action',2,'p_do_action','lyaParser.py',594),
  ('do_action -> DO control_part SMC OD','do_action',4,'p_do_action2','lyaParser.py',598),
  ('do_action -> DO control_part SMC action_statement_list OD','do_action',5,'p_do_action3','lyaParser.py',602),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action4','lyaParser.py',606),
  ('control_part -> for_control','control_part',1,'p_control_part','lyaParser.py',610),
  ('control_part -> while_control','control_part',1,'p_control_part','lyaParser.py',611),
  ('control_part -> for_control while_control','control_part',2,'p_control_part2','lyaParser.py',615),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','lyaParser.py',619),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','lyaParser.py',623),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','lyaParser.py',624),
  ('step_enumeration -> loop_counter EQUALS start_value end_value','step_enumeration',4,'p_step_enumeration','lyaParser.py',628),
  ('step_enumeration -> loop_counter EQUALS start_value step_value end_value','step_enumeration',5,'p_step_enumeration2','lyaParser.py',632),
  ('step_enumeration -> loop_counter EQUALS start_value DOWN end_value','step_enumeration',5,'p_step_enumeration3','lyaParser.py',636),
  ('step_enumeration -> loop_counter EQUALS start_value step_value DOWN end_value','step_enumeration',6,'p_step_enumeration4','lyaParser.py',640),
  ('loop_counter -> ID','loop_counter',1,'p_loop_counter','lyaParser.py',644),
  ('start_value -> discrete_expression','start_value',1,'p_start_value','lyaParser.py',648),
  ('step_value -> BY integer_expression','step_value',2,'p_step_value','lyaParser.py',652),
  ('end_value -> TO discrete_expression','end_value',2,'p_end_value','lyaParser.py',656),
  ('discrete_expression -> expression','discrete_expression',1,'p_discrete_expression','lyaParser.py',660),
  ('range_enumeration -> loop_counter IN discrete_mode','range_enumeration',3,'p_range_enumeration','lyaParser.py',664),
  ('range_enumeration -> loop_counter DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration2','lyaParser.py',668),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','lyaParser.py',672),
  ('procedure_statement -> label COLON procedure_definition SMC','procedure_statement',4,'p_procedure_statement','lyaParser.py',680),
  ('procedure_definition -> PROC LPAREN RPAREN SMC END','procedure_definition',5,'p_procedure_definition1','lyaParser.py',684),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SMC statement_list END','procedure_definition',7,'p_procedure_definition1','lyaParser.py',685),
  ('procedure_definition -> PROC LPAREN RPAREN SMC statement_list END','procedure_definition',6,'p_procedure_definition1','lyaParser.py',686),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SMC END','procedure_definition',6,'p_procedure_definition2','lyaParser.py',695),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SMC END','procedure_definition',7,'p_procedure_definition2','lyaParser.py',696),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SMC statement_list END','procedure_definition',8,'p_procedure_definition2','lyaParser.py',697),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SMC statement_list END','procedure_definition',7,'p_procedure_definition3','lyaParser.py',706),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SMC END','procedure_definition',6,'p_procedure_definition3','lyaParser.py',707),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','lyaParser.py',714),
  ('formal_parameter_list -> formal_parameter COMMA formal_parameter_list','formal_parameter_list',3,'p_formal_parameter_list','lyaParser.py',715),
  ('formal_parameter -> id_list parameter_spec','formal_parameter',2,'p_formal_parameter','lyaParser.py',722),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','lyaParser.py',726),
  ('parameter_spec -> mode parameter_attribute','parameter_spec',2,'p_parameter_spec','lyaParser.py',727),
  ('parameter_attribute -> LOC','parameter_attribute',1,'p_parameter_attribute','lyaParser.py',734),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','lyaParser.py',738),
  ('result_spec -> RETURNS LPAREN mode result_attribute RPAREN','result_spec',5,'p_result_spec','lyaParser.py',739),
  ('result_attribute -> LOC','result_attribute',1,'p_result_attribute','lyaParser.py',746),
  ('call_action -> procedure_call','call_action',1,'p_call_action','lyaParser.py',754),
  ('call_action -> builtin_call','call_action',1,'p_call_action','lyaParser.py',755),
  ('procedure_call -> ID LPAREN RPAREN','procedure_call',3,'p_procedure_call','lyaParser.py',759),
  ('procedure_call -> ID LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','lyaParser.py',760),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','lyaParser.py',767),
  ('parameter_list -> parameter COMMA parameter_list','parameter_list',3,'p_parameter_list','lyaParser.py',768),
  ('parameter -> expression','parameter',1,'p_parameter','lyaParser.py',775),
  ('exit_action -> EXIT label','exit_action',2,'p_exit_action','lyaParser.py',783),
  ('return_action -> RETURN','return_action',1,'p_return_action','lyaParser.py',787),
  ('return_action -> RETURN result','return_action',2,'p_return_action','lyaParser.py',788),
  ('result_action -> RESULT result','result_action',2,'p_result_action','lyaParser.py',795),
  ('result -> expression','result',1,'p_result','lyaParser.py',799),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','lyaParser.py',803),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','lyaParser.py',804),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','lyaParser.py',811),
  ('builtin_name -> PRED','builtin_name',1,'p_builtin_name','lyaParser.py',812),
  ('builtin_name -> SUCC','builtin_name',1,'p_builtin_name','lyaParser.py',813),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','lyaParser.py',814),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','lyaParser.py',815),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','lyaParser.py',816),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','lyaParser.py',817),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','lyaParser.py',818),
  ('integer_expression -> expression','integer_expression',1,'p_integer_expression','lyaParser.py',827),
  ('empty -> <empty>','empty',0,'p_empty','lyaParser.py',834),
]
