
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '9DC231FA9C4E2D494B26C853A5E81B63'
    
_lr_action_items = {'IF':([0,1,2,7,10,12,19,21,26,30,41,44,46,70,81,84,85,93,94,98,99,101,112,113,116,124,131,147,156,162,178,186,188,192,193,200,206,211,212,213,220,222,225,229,231,233,238,242,243,246,249,250,253,254,258,299,303,304,306,325,328,330,337,339,341,347,],[1,46,-3,46,-7,-9,1,-5,1,-8,46,-6,46,46,46,46,-74,46,-4,-84,46,46,46,1,-157,1,1,46,-49,46,-45,-85,-10,-158,1,1,46,1,46,1,46,46,46,46,46,46,46,46,1,46,-75,-181,46,46,1,46,46,46,1,1,1,1,1,1,1,1,]),'WHILE':([5,6,11,17,22,26,33,34,47,48,49,50,51,53,54,55,57,58,59,61,64,65,66,67,68,69,72,73,74,75,76,77,79,80,95,118,129,132,154,163,165,170,171,173,180,195,196,197,207,214,215,216,219,221,223,236,237,239,260,261,282,284,289,295,296,300,302,313,319,320,324,334,],[-134,-200,-135,-137,-199,112,-138,-136,-63,-61,-62,-113,-66,-93,-64,-124,-140,-92,-58,-123,-67,-68,-65,-69,-91,-60,-118,-106,-57,-139,-59,-56,-122,-55,-143,112,-119,-133,-211,-25,-24,-23,-26,-27,-201,-168,-167,-166,-107,-94,-73,-114,-142,-141,-212,-202,-145,-144,-71,-70,-177,-178,-125,-28,-29,-179,-169,-126,-171,-176,-170,-172,]),'PROC':([124,],[201,]),'DIV':([5,6,11,16,17,20,22,33,34,37,47,48,49,50,51,54,55,57,59,61,64,65,66,67,69,72,73,74,75,76,77,79,80,95,129,132,154,180,203,207,215,216,219,221,223,236,237,239,260,261,273,],[-134,-200,-135,-140,-137,105,-199,-138,-136,-139,-63,-61,-62,-113,-66,-64,-124,-140,-58,-123,-67,-68,-65,-69,-60,-118,105,-57,-139,-59,-56,-122,-55,-143,-119,-133,-211,-201,-140,105,-73,-114,-142,-141,-212,-202,-145,-144,-71,-70,-140,]),'OR':([5,6,11,17,22,33,34,47,48,49,50,51,53,54,55,57,59,61,64,65,66,67,68,69,72,73,74,75,76,77,79,80,95,129,132,154,180,207,214,215,216,219,221,223,236,237,239,260,261,273,],[-134,-200,-135,-137,-199,-138,-136,-63,-61,-62,-113,-66,-93,-64,-124,-140,-58,-123,-67,-68,-65,-69,134,-60,-118,-106,-57,-139,-59,-56,-122,-55,-143,-119,-133,-211,-201,-107,-94,-73,-114,-142,-141,-212,-202,-145,-144,-71,-70,-140,]),'UPPER':([0,1,2,7,10,12,19,21,26,30,41,44,46,52,56,62,70,71,81,84,85,93,94,97,98,99,100,101,102,104,105,108,112,113,116,124,126,127,128,131,133,134,135,136,137,138,139,140,141,142,143,144,146,147,156,162,178,186,188,192,193,200,206,211,212,213,220,222,225,229,231,233,238,242,243,246,249,250,253,254,258,299,303,304,306,325,328,330,337,339,341,347,],[29,29,-3,29,-7,-9,29,-5,29,-8,29,-6,29,-120,29,29,29,-121,29,29,-74,29,-4,-117,-84,29,-110,29,-112,-111,-116,-115,29,29,-157,29,-109,29,-108,29,-102,-99,-100,-95,29,-103,-98,-105,-97,-104,-101,-96,29,29,-49,29,-45,-85,-10,-158,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-75,-181,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'LT':([5,6,11,17,22,33,34,47,48,49,50,51,53,54,55,57,59,61,64,65,66,67,68,69,72,73,74,75,76,77,79,80,95,129,132,154,180,207,214,215,216,219,221,223,236,237,239,260,261,273,],[-134,-200,-135,-137,-199,-138,-136,-63,-61,-62,-113,-66,-93,-64,-124,-140,-58,-123,-67,-68,-65,-69,142,-60,-118,-106,-57,-139,-59,-56,-122,-55,-143,-119,-133,-211,-201,-107,-94,-73,-114,-142,-141,-212,-202,-145,-144,-71,-70,-140,]),'ELSE':([5,6,11,17,22,33,34,47,48,49,50,51,53,54,55,57,58,59,61,64,65,66,67,68,69,72,73,74,75,76,77,79,80,85,95,116,129,130,131,132,154,180,192,205,207,213,214,215,216,219,221,223,236,237,239,249,252,255,256,260,261,289,291,294,313,314,],[-134,-200,-135,-137,-199,-138,-136,-63,-61,-62,-113,-66,-93,-64,-124,-140,-92,-58,-123,-67,-68,-65,-69,-91,-60,-118,-106,-57,-139,-59,-56,-122,-55,-74,-143,-157,-119,211,-150,-133,-211,-201,-158,253,-107,-151,-94,-73,-114,-142,-141,-212,-202,-145,-144,-75,253,-130,-128,-71,-70,-125,-131,211,-126,-132,]),'PRINT':([0,1,2,7,10,12,19,21,26,30,41,44,46,52,56,62,70,71,81,84,85,93,94,97,98,99,100,101,102,104,105,108,112,113,116,124,126,127,128,131,133,134,135,136,137,138,139,140,141,142,143,144,146,147,156,162,178,186,188,192,193,200,206,211,212,213,220,222,225,229,231,233,238,242,243,246,249,250,253,254,258,299,303,304,306,325,328,330,337,339,341,347,],[4,4,-3,4,-7,-9,4,-5,4,-8,4,-6,4,-120,4,4,4,-121,4,4,-74,4,-4,-117,-84,4,-110,4,-112,-111,-116,-115,4,4,-157,4,-109,4,-108,4,-102,-99,-100,-95,4,-103,-98,-105,-97,-104,-101,-96,4,4,-49,4,-45,-85,-10,-158,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,-75,-181,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'STRCONC':([5,6,11,16,17,20,22,33,34,37,47,48,49,50,51,53,54,55,57,59,61,64,65,66,67,69,72,73,74,75,76,77,79,80,95,129,132,154,180,203,207,214,215,216,219,221,223,236,237,239,260,261,273,],[-134,-200,-135,-140,-137,102,-199,-138,-136,-139,-63,-61,-62,-113,-66,102,-64,-124,-140,-58,-123,-67,-68,-65,-69,-60,-118,-106,-57,-139,-59,-56,-122,-55,-143,-119,-133,-211,-201,-140,-107,102,-73,-114,-142,-141,-212,-202,-145,-144,-71,-70,-140,]),'RETURN':([0,2,10,12,19,21,26,30,44,85,94,113,116,124,131,156,178,188,192,193,200,211,213,243,249,250,258,306,325,328,330,337,339,341,347,],[7,-3,-7,-9,7,-5,7,-8,-6,-74,-4,7,-157,7,7,-49,-45,-10,-158,7,7,7,7,7,-75,-181,7,7,7,7,7,7,7,7,7,]),'RBRACKET':([5,6,11,17,22,33,34,47,48,49,50,51,53,54,55,57,58,59,61,64,65,66,67,68,69,72,73,74,75,76,77,79,80,95,129,132,148,149,151,154,163,165,170,171,173,180,182,183,184,207,214,215,216,217,218,219,221,223,236,237,239,260,261,262,263,269,270,271,272,274,275,276,289,295,296,313,318,],[-134,-200,-135,-137,-199,-138,-136,-63,-61,-62,-113,-66,-93,-64,-124,-140,-92,-58,-123,-67,-68,-65,-69,-91,-60,-118,-106,-57,-139,-59,-56,-122,-55,-143,-119,-133,219,-221,221,-211,-25,-24,-23,-26,-27,-201,237,239,-89,-107,-94,-73,-114,260,261,-142,-141,-212,-202,-145,-144,-71,-70,-31,-33,-38,297,-40,-43,-42,298,-90,-125,-28,-29,-126,-41,]),'BY':([5,6,11,17,22,33,34,47,48,49,50,51,53,54,55,57,58,59,61,64,65,66,67,68,69,72,73,74,75,76,77,79,80,95,129,132,154,180,207,214,215,216,219,221,223,236,237,239,260,261,280,281,282,289,313,],[-134,-200,-135,-137,-199,-138,-136,-63,-61,-62,-113,-66,-93,-64,-124,-140,-92,-58,-123,-67,-68,-65,-69,-91,-60,-118,-106,-57,-139,-59,-56,-122,-55,-143,-119,-133,-211,-201,-107,-94,-73,-114,-142,-141,-212,-202,-145,-144,-71,-70,304,-174,-177,-125,-126,]),'FI':([5,6,11,17,22,33,34,47,48,49,50,51,53,54,55,57,58,59,61,64,65,66,67,68,69,72,73,74,75,76,77,79,80,85,95,116,129,130,131,132,154,180,192,207,208,209,211,213,214,215,216,219,221,223,236,237,239,249,251,258,260,261,289,290,292,294,313,315,],[-134,-200,-135,-137,-199,-138,-136,-63,-61,-62,-113,-66,-93,-64,-124,-140,-92,-58,-123,-67,-68,-65,-69,-91,-60,-118,-106,-57,-139,-59,-56,-122,-55,-74,-143,-157,-119,210,-150,-133,-211,-201,-158,-107,257,-154,-152,-151,-94,-73,-114,-142,-141,-212,-202,-145,-144,-75,289,-153,-71,-70,-125,313,-129,-155,-126,-156,]),'NOTEQUAL':([5,6,11,17,22,33,34,47,48,49,50,51,53,54,55,57,59,61,64,65,66,67,68,69,72,73,74,75,76,77,79,80,95,129,132,154,180,207,214,215,216,219,221,223,236,237,239,260,261,273,],[-134,-200,-135,-137,-199,-138,-136,-63,-61,-62,-113,-66,-93,-64,-124,-140,-58,-123,-67,-68,-65,-69,143,-60,-118,-106,-57,-139,-59,-56,-122,-55,-143,-119,-133,-211,-201,-107,-94,-73,-114,-142,-141,-212,-202,-145,-144,-71,-70,-140,]),'TRUE':([1,7,41,46,52,56,70,71,81,84,93,97,98,99,100,101,102,104,105,108,112,126,127,128,133,134,135,136,137,138,139,140,141,142,143,144,146,147,162,186,206,212,220,222,225,229,231,233,238,242,246,253,254,299,303,304,],[51,51,51,51,-120,51,51,-121,51,51,51,-117,-84,51,-110,51,-112,-111,-116,-115,51,-109,51,-108,-102,-99,-100,-95,51,-103,-98,-105,-97,-104,-101,-96,51,51,51,-85,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'MINUS':([1,5,6,7,11,16,17,20,22,33,34,37,41,46,47,48,49,50,51,53,54,55,57,59,61,64,65,66,67,69,70,72,73,74,75,76,77,79,80,81,84,93,95,97,98,99,100,101,102,104,105,108,112,126,127,128,129,132,133,134,135,136,137,138,139,140,141,142,143,144,146,147,154,162,180,186,203,206,207,212,214,215,216,219,220,221,222,223,225,229,231,233,236,237,238,239,242,246,253,254,260,261,273,299,303,304,],[52,-134,-200,52,-135,-140,-137,104,-199,-138,-136,-139,52,52,-63,-61,-62,-113,-66,104,-64,-124,-140,-58,-123,-67,-68,-65,-69,-60,52,-118,-106,-57,-139,-59,-56,-122,-55,52,52,52,-143,-117,-84,52,-110,52,-112,-111,-116,-115,52,-109,52,-108,-119,-133,-102,-99,-100,-95,52,-103,-98,-105,-97,-104,-101,-96,52,52,-211,52,-201,-85,-140,52,-107,52,104,-73,-114,-142,52,-141,52,-212,52,52,52,52,-202,-145,52,-144,52,52,52,52,-71,-70,-140,52,52,52,]),'ISEQUAL':([5,6,11,17,22,33,34,47,48,49,50,51,53,54,55,57,59,61,64,65,66,67,68,69,72,73,74,75,76,77,79,80,95,129,132,154,180,207,214,215,216,219,221,223,236,237,239,260,261,273,],[-134,-200,-135,-137,-199,-138,-136,-63,-61,-62,-113,-66,-93,-64,-124,-140,-58,-123,-67,-68,-65,-69,135,-60,-118,-106,-57,-139,-59,-56,-122,-55,-143,-119,-133,-211,-201,-107,-94,-73,-114,-142,-141,-212,-202,-145,-144,-71,-70,-140,]),'LBRACKET':([5,6,11,16,17,20,22,33,34,37,47,48,49,51,54,57,59,61,64,65,66,67,69,74,75,76,77,78,79,80,95,132,154,172,176,180,203,215,219,221,223,236,237,239,260,261,273,],[81,-200,-135,-140,-137,99,-199,-138,-136,-139,-63,-61,-62,-66,-64,-140,-58,99,-67,-68,-65,-69,-60,-57,-139,-59,-56,147,-72,-55,-143,99,-211,232,233,-201,-140,-73,-142,-141,-212,-202,-145,-144,-71,-70,-140,]),'CHARCONST':([1,7,41,46,52,56,70,71,81,84,93,97,98,99,100,101,102,104,105,108,112,126,127,128,133,134,135,136,137,138,139,140,141,142,143,144,146,147,162,186,206,212,220,222,225,229,231,233,238,242,246,253,254,299,303,304,],[64,64,64,64,-120,64,64,-121,64,64,64,-117,-84,64,-110,64,-112,-111,-116,-115,64,-109,64,-108,-102,-99,-100,-95,64,-103,-98,-105,-97,-104,-101,-96,64,64,64,-85,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'GE':([5,6,11,17,22,33,34,47,48,49,50,51,53,54,55,57,59,61,64,65,66,67,68,69,72,73,74,75,76,77,79,80,95,129,132,154,180,207,214,215,216,219,221,223,236,237,239,260,261,273,],[-134,-200,-135,-137,-199,-138,-136,-63,-61,-62,-113,-66,-93,-64,-124,-140,-58,-123,-67,-68,-65,-69,138,-60,-118,-106,-57,-139,-59,-56,-122,-55,-143,-119,-133,-211,-201,-107,-94,-73,-114,-142,-141,-212,-202,-145,-144,-71,-70,-140,]),'COMMA':([5,6,11,17,22,33,34,47,48,49,50,51,53,54,55,57,58,59,61,64,65,66,67,68,69,72,73,74,75,76,77,79,80,86,87,88,89,90,91,92,95,109,110,111,129,132,152,153,154,159,160,163,164,165,167,169,170,171,173,174,175,180,183,184,189,207,214,215,216,218,219,221,223,224,226,227,228,230,234,235,236,237,239,240,241,260,261,262,263,265,271,272,274,275,276,277,286,288,289,295,296,297,311,312,313,316,317,318,332,333,],[-134,-200,-135,-137,-199,-138,-136,-63,-61,-62,-113,-66,-93,-64,-124,-140,-92,-58,-123,-67,-68,-65,-69,-91,-60,-118,-106,-57,-139,-59,-56,-122,-55,-50,157,-15,168,177,168,-46,-143,187,-11,168,-119,-133,222,-205,-211,-19,-20,-25,-21,-24,-18,-22,-23,-26,-27,-36,-35,-201,238,-89,-14,-107,-94,-73,-114,238,-142,-141,-212,-51,-34,-54,-52,-16,-47,-48,-202,-145,-144,-12,-13,-71,-70,-31,-33,-53,-40,-43,-42,299,-90,-17,309,168,-125,-28,-29,-37,-193,-192,-126,-44,-39,-41,-194,-195,]),'THEN':([5,6,11,17,22,33,34,47,48,49,50,51,53,54,55,57,58,59,60,61,63,64,65,66,67,68,69,72,73,74,75,76,77,79,80,95,125,129,132,154,180,207,214,215,216,219,221,223,236,237,239,259,260,261,289,293,313,],[-134,-200,-135,-137,-199,-138,-136,-63,-61,-62,-113,-66,-93,-64,-124,-140,-92,-58,131,-123,-127,-67,-68,-65,-69,-91,-60,-118,-106,-57,-139,-59,-56,-122,-55,-143,206,-119,-133,-211,-201,-107,-94,-73,-114,-142,-141,-212,-202,-145,-144,131,-71,-70,-125,206,-126,]),'LOWER':([0,1,2,7,10,12,19,21,26,30,41,44,46,52,56,62,70,71,81,84,85,93,94,97,98,99,100,101,102,104,105,108,112,113,116,124,126,127,128,131,133,134,135,136,137,138,139,140,141,142,143,144,146,147,156,162,178,186,188,192,193,200,206,211,212,213,220,222,225,229,231,233,238,242,243,246,249,250,253,254,258,299,303,304,306,325,328,330,337,339,341,347,],[38,38,-3,38,-7,-9,38,-5,38,-8,38,-6,38,-120,38,38,38,-121,38,38,-74,38,-4,-117,-84,38,-110,38,-112,-111,-116,-115,38,38,-157,38,-109,38,-108,38,-102,-99,-100,-95,38,-103,-98,-105,-97,-104,-101,-96,38,38,-49,38,-45,-85,-10,-158,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-75,-181,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'LE':([5,6,11,17,22,33,34,47,48,49,50,51,53,54,55,57,59,61,64,65,66,67,68,69,72,73,74,75,76,77,79,80,95,129,132,154,180,207,214,215,216,219,221,223,236,237,239,260,261,273,],[-134,-200,-135,-137,-199,-138,-136,-63,-61,-62,-113,-66,-93,-64,-124,-140,-58,-123,-67,-68,-65,-69,140,-60,-118,-106,-57,-139,-59,-56,-122,-55,-143,-119,-133,-211,-201,-107,-94,-73,-114,-142,-141,-212,-202,-145,-144,-71,-70,-140,]),'TO':([5,6,11,17,22,33,34,47,48,49,50,51,53,54,55,57,58,59,61,64,65,66,67,68,69,72,73,74,75,76,77,79,80,95,129,132,154,180,207,214,215,216,219,221,223,236,237,239,260,261,280,281,282,289,301,305,313,321,322,323,],[-134,-200,-135,-137,-199,-138,-136,-63,-61,-62,-113,-66,-93,-64,-124,-140,-92,-58,-123,-67,-68,-65,-69,-91,-60,-118,-106,-57,-139,-59,-56,-122,-55,-143,-119,-133,-211,-201,-107,-94,-73,-114,-142,-141,-212,-202,-145,-144,-71,-70,303,-174,-177,-125,303,303,-126,-221,-175,303,]),'TYPE':([0,2,10,12,19,21,30,44,85,94,156,178,188,249,250,306,325,328,330,337,339,341,347,],[15,-3,-7,-9,15,-5,-8,-6,-74,-4,-49,-45,-10,-75,-181,15,15,15,15,15,15,15,15,]),'ID':([0,1,2,7,10,12,14,15,19,21,23,26,30,32,41,44,46,52,56,62,70,71,81,84,85,88,89,93,94,97,98,99,100,101,102,104,105,108,111,112,113,116,119,124,126,127,128,131,133,134,135,136,137,138,139,140,141,142,143,144,146,147,156,157,161,162,168,177,178,179,186,187,188,192,193,200,206,211,212,213,220,222,225,229,230,231,233,238,242,243,246,247,248,249,250,253,254,258,279,288,298,299,303,304,306,309,325,327,328,330,337,339,341,347,],[16,57,-3,57,-7,-9,88,88,16,-5,88,16,-8,122,57,-6,57,-120,57,57,57,-121,57,57,-74,-15,169,57,-4,-117,-84,57,-110,57,-112,-111,-116,-115,169,57,16,-157,198,203,-109,57,-108,16,-102,-99,-100,-95,57,-103,-98,-105,-97,-104,-101,-96,57,57,-49,88,169,57,230,88,-45,169,-85,88,-10,-158,16,203,57,16,57,16,57,57,57,57,-16,57,273,57,57,16,57,283,88,-75,-181,57,57,16,283,169,169,273,57,57,16,88,16,169,16,16,16,16,16,16,]),'PRED':([0,1,2,7,10,12,19,21,26,30,41,44,46,52,56,62,70,71,81,84,85,93,94,97,98,99,100,101,102,104,105,108,112,113,116,124,126,127,128,131,133,134,135,136,137,138,139,140,141,142,143,144,146,147,156,162,178,186,188,192,193,200,206,211,212,213,220,222,225,229,231,233,238,242,243,246,249,250,253,254,258,299,303,304,306,325,328,330,337,339,341,347,],[18,18,-3,18,-7,-9,18,-5,18,-8,18,-6,18,-120,18,18,18,-121,18,18,-74,18,-4,-117,-84,18,-110,18,-112,-111,-116,-115,18,18,-157,18,-109,18,-108,18,-102,-99,-100,-95,18,-103,-98,-105,-97,-104,-101,-96,18,18,-49,18,-45,-85,-10,-158,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-75,-181,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'CHAR':([88,89,111,161,179,230,233,247,279,288,298,299,327,],[-15,173,173,173,173,-16,173,173,173,173,173,173,173,]),'PLUS':([5,6,11,16,17,20,22,33,34,37,47,48,49,50,51,53,54,55,57,59,61,64,65,66,67,69,72,73,74,75,76,77,79,80,95,129,132,154,180,203,207,214,215,216,219,221,223,236,237,239,260,261,273,],[-134,-200,-135,-140,-137,100,-199,-138,-136,-139,-63,-61,-62,-113,-66,100,-64,-124,-140,-58,-123,-67,-68,-65,-69,-60,-118,-106,-57,-139,-59,-56,-122,-55,-143,-119,-133,-211,-201,-140,-107,100,-73,-114,-142,-141,-212,-202,-145,-144,-71,-70,-140,]),'INTCONST':([1,7,41,46,52,56,70,71,81,84,93,97,98,99,100,101,102,104,105,108,112,126,127,128,133,134,135,136,137,138,139,140,141,142,143,144,146,147,162,186,206,212,220,222,225,229,231,232,233,238,242,246,253,254,299,303,304,],[54,54,54,54,-120,54,54,-121,54,54,54,-117,-84,54,-110,54,-112,-111,-116,-115,54,-109,54,-108,-102,-99,-100,-95,54,-103,-98,-105,-97,-104,-101,-96,54,54,54,-85,54,54,54,54,54,54,54,269,54,54,54,54,54,54,54,54,54,]),'SYN':([0,2,10,12,19,21,30,44,85,94,156,178,188,249,250,306,325,328,330,337,339,341,347,],[14,-3,-7,-9,14,-5,-8,-6,-74,-4,-49,-45,-10,-75,-181,14,14,14,14,14,14,14,14,]),'ARROW':([1,5,6,7,11,16,17,20,22,33,34,37,41,46,52,56,57,61,70,71,75,81,84,93,95,97,98,99,100,101,102,104,105,108,112,126,127,128,132,133,134,135,136,137,138,139,140,141,142,143,144,146,147,154,162,180,186,203,206,212,219,220,221,222,223,225,229,231,233,236,237,238,239,242,246,253,254,273,299,303,304,],[62,-134,-200,62,-135,-140,-137,95,-199,-138,-136,-139,62,62,-120,62,-140,95,62,-121,-139,62,62,62,-143,-117,-84,62,-110,62,-112,-111,-116,-115,62,-109,62,-108,95,-102,-99,-100,-95,62,-103,-98,-105,-97,-104,-101,-96,62,62,-211,62,-201,-85,-140,62,62,-142,62,-141,62,-212,62,62,62,62,-202,-145,62,-144,62,62,62,62,-140,62,62,62,]),'EXIT':([0,2,10,12,19,21,26,30,44,85,94,113,116,124,131,156,178,188,192,193,200,211,213,243,249,250,258,306,325,328,330,337,339,341,347,],[32,-3,-7,-9,32,-5,32,-8,-6,-74,-4,32,-157,32,32,-49,-45,-10,-158,32,32,32,32,32,-75,-181,32,32,32,32,32,32,32,32,32,]),'DCL':([0,2,10,12,19,21,30,44,85,94,156,178,188,249,250,306,325,328,330,337,339,341,347,],[23,-3,-7,-9,23,-5,-8,-6,-74,-4,-49,-45,-10,-75,-181,23,23,23,23,23,23,23,23,]),'RPAREN':([5,6,11,17,22,33,34,47,48,49,50,51,53,54,55,57,58,59,61,64,65,66,67,68,69,72,73,74,75,76,77,79,80,84,93,95,129,132,145,152,153,154,155,159,160,163,164,165,167,169,170,171,173,174,175,180,181,207,214,215,216,219,221,223,226,236,237,239,248,260,261,262,263,264,266,268,286,287,289,295,296,297,311,312,313,316,317,329,332,333,336,342,343,],[-134,-200,-135,-137,-199,-138,-136,-63,-61,-62,-113,-66,-93,-64,-124,-140,-92,-58,-123,-67,-68,-65,-69,-91,-60,-118,-106,-57,-139,-59,-56,-122,-55,154,180,-143,-119,-133,215,-203,-205,-211,223,-19,-20,-25,-21,-24,-18,-22,-23,-26,-27,-36,-35,-201,236,-107,-94,-73,-114,-142,-141,-212,-34,-202,-145,-144,285,-71,-70,-31,-33,-204,295,296,-190,310,-125,-28,-29,-37,-193,-192,-126,-44,-39,-191,-194,-195,344,-198,349,]),'COLON':([5,6,11,16,17,22,33,34,45,47,48,49,50,51,53,54,55,57,58,59,61,64,65,66,67,68,69,72,73,74,75,76,77,79,80,95,120,129,132,149,150,154,180,184,207,214,215,216,219,221,223,236,237,239,260,261,267,273,289,313,],[-134,-200,-135,-76,-137,-199,-138,-136,124,-63,-61,-62,-113,-66,-93,-64,-124,-140,-92,-58,-123,-67,-68,-65,-69,-91,-60,-118,-106,-57,-139,-59,-56,-122,-55,-143,200,-119,-133,-32,220,-211,-201,-32,-107,-94,-73,-114,-142,-141,-212,-202,-145,-144,-71,-70,-32,-140,-125,-126,]),'LENGTH':([0,1,2,7,10,12,19,21,26,30,41,44,46,52,56,62,70,71,81,84,85,93,94,97,98,99,100,101,102,104,105,108,112,113,116,124,126,127,128,131,133,134,135,136,137,138,139,140,141,142,143,144,146,147,156,162,178,186,188,192,193,200,206,211,212,213,220,222,225,229,231,233,238,242,243,246,249,250,253,254,258,299,303,304,306,325,328,330,337,339,341,347,],[24,24,-3,24,-7,-9,24,-5,24,-8,24,-6,24,-120,24,24,24,-121,24,24,-74,24,-4,-117,-84,24,-110,24,-112,-111,-116,-115,24,24,-157,24,-109,24,-108,24,-102,-99,-100,-95,24,-103,-98,-105,-97,-104,-101,-96,24,24,-49,24,-45,-85,-10,-158,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-75,-181,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'GT':([5,6,11,17,22,33,34,47,48,49,50,51,53,54,55,57,59,61,64,65,66,67,68,69,72,73,74,75,76,77,79,80,95,129,132,154,180,207,214,215,216,219,221,223,236,237,239,260,261,273,],[-134,-200,-135,-137,-199,-138,-136,-63,-61,-62,-113,-66,-93,-64,-124,-140,-58,-123,-67,-68,-65,-69,133,-60,-118,-106,-57,-139,-59,-56,-122,-55,-143,-119,-133,-211,-201,-107,-94,-73,-114,-142,-141,-212,-202,-145,-144,-71,-70,-140,]),'STRINGCONST':([1,7,41,46,52,56,70,71,81,84,93,97,98,99,100,101,102,104,105,108,112,126,127,128,133,134,135,136,137,138,139,140,141,142,143,144,146,147,162,186,206,212,220,222,225,229,231,233,238,242,246,253,254,299,303,304,],[65,65,65,65,-120,65,65,-121,65,65,65,-117,-84,65,-110,65,-112,-111,-116,-115,65,-109,65,-108,-102,-99,-100,-95,65,-103,-98,-105,-97,-104,-101,-96,65,65,65,-85,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'AND':([5,6,11,17,22,33,34,47,48,49,50,51,53,54,55,57,59,61,64,65,66,67,68,69,72,73,74,75,76,77,79,80,95,129,132,154,180,207,214,215,216,219,221,223,236,237,239,260,261,273,],[-134,-200,-135,-137,-199,-138,-136,-63,-61,-62,-113,-66,-93,-64,-124,-140,-58,-123,-67,-68,-65,-69,139,-60,-118,-106,-57,-139,-59,-56,-122,-55,-143,-119,-133,-211,-201,-107,-94,-73,-114,-142,-141,-212,-202,-145,-144,-71,-70,-140,]),'CHARS':([88,89,111,161,179,230,288,298,327,],[-15,172,172,172,172,-16,172,172,172,]),'DO':([0,2,10,12,19,21,26,30,44,85,94,113,116,124,131,156,178,188,192,193,200,211,213,243,249,250,258,306,325,328,330,337,339,341,347,],[26,-3,-7,-9,26,-5,26,-8,-6,-74,-4,26,-157,26,26,-49,-45,-10,-158,26,26,26,26,26,-75,-181,26,26,26,26,26,26,26,26,26,]),'LOC':([159,160,163,164,165,167,169,170,171,173,174,175,226,295,296,297,311,316,317,336,],[-19,-20,-25,-21,-24,-18,-22,-23,-26,-27,-36,-35,-34,-28,-29,-37,333,-44,-39,342,]),'BOOL':([88,89,111,161,179,230,233,247,279,288,298,299,327,],[-15,171,171,171,171,-16,171,171,171,171,171,171,171,]),'FALSE':([1,7,41,46,52,56,70,71,81,84,93,97,98,99,100,101,102,104,105,108,112,126,127,128,133,134,135,136,137,138,139,140,141,142,143,144,146,147,162,186,206,212,220,222,225,229,231,233,238,242,246,253,254,299,303,304,],[66,66,66,66,-120,66,66,-121,66,66,66,-117,-84,66,-110,66,-112,-111,-116,-115,66,-109,66,-108,-102,-99,-100,-95,66,-103,-98,-105,-97,-104,-101,-96,66,66,66,-85,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'NULL':([1,7,41,46,52,56,70,71,81,84,93,97,98,99,100,101,102,104,105,108,112,126,127,128,133,134,135,136,137,138,139,140,141,142,143,144,146,147,162,186,206,212,220,222,225,229,231,233,238,242,246,253,254,299,303,304,],[67,67,67,67,-120,67,67,-121,67,67,67,-117,-84,67,-110,67,-112,-111,-116,-115,67,-109,67,-108,-102,-99,-100,-95,67,-103,-98,-105,-97,-104,-101,-96,67,67,67,-85,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'INT':([88,89,111,161,179,230,233,247,279,288,298,299,327,],[-15,163,163,163,163,-16,163,163,163,163,163,163,163,]),'LPAREN':([1,4,7,9,16,18,24,28,29,35,38,40,41,46,52,56,57,70,71,81,84,93,97,98,99,100,101,102,104,105,108,112,126,127,128,133,134,135,136,137,138,139,140,141,142,143,144,146,147,162,163,166,169,170,171,173,186,201,203,206,212,220,222,225,229,231,233,238,242,246,253,254,273,283,299,303,304,307,],[70,-220,70,84,93,-214,-218,-219,-216,-215,-217,-213,70,70,-120,70,93,70,-121,70,70,70,-117,-84,70,-110,70,-112,-111,-116,-115,70,-109,70,-108,-102,-99,-100,-95,70,-103,-98,-105,-97,-104,-101,-96,70,70,70,-25,229,-30,231,-26,-27,-85,248,93,70,70,70,70,70,70,70,70,70,70,70,70,70,93,-30,70,70,70,327,]),'OD':([26,85,113,116,192,193,243,249,],[115,-74,191,-157,-158,244,278,-75,]),'DOWN':([5,6,11,17,22,33,34,47,48,49,50,51,53,54,55,57,58,59,61,64,65,66,67,68,69,72,73,74,75,76,77,79,80,95,129,132,154,180,198,199,207,214,215,216,219,221,223,236,237,239,260,261,280,281,282,289,305,313,321,322,],[-134,-200,-135,-137,-199,-138,-136,-63,-61,-62,-113,-66,-93,-64,-124,-140,-92,-58,-123,-67,-68,-65,-69,-91,-60,-118,-106,-57,-139,-59,-56,-122,-55,-143,-119,-133,-211,-201,-173,245,-107,-94,-73,-114,-142,-141,-212,-202,-145,-144,-71,-70,301,-174,-177,-125,323,-126,-221,-175,]),'NOT':([1,7,41,46,70,81,84,93,97,98,99,100,101,102,104,105,108,112,126,127,128,133,134,135,136,137,138,139,140,141,142,143,144,146,147,162,186,206,212,220,222,225,229,231,233,238,242,246,253,254,299,303,304,],[71,71,71,71,71,71,71,71,-117,-84,71,-110,71,-112,-111,-116,-115,71,-109,71,-108,-102,-99,-100,-95,71,-103,-98,-105,-97,-104,-101,-96,71,71,71,-85,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'MOD':([5,6,11,16,17,20,22,33,34,37,47,48,49,50,51,54,55,57,59,61,64,65,66,67,69,72,73,74,75,76,77,79,80,95,129,132,154,180,203,207,215,216,219,221,223,236,237,239,260,261,273,],[-134,-200,-135,-140,-137,97,-199,-138,-136,-139,-63,-61,-62,-113,-66,-64,-124,-140,-58,-123,-67,-68,-65,-69,-60,-118,97,-57,-139,-59,-56,-122,-55,-143,-119,-133,-211,-201,-140,97,-73,-114,-142,-141,-212,-202,-145,-144,-71,-70,-140,]),'EQUALS':([5,6,11,16,17,20,22,33,34,37,88,89,91,95,96,97,100,102,103,104,105,106,107,108,154,158,159,160,163,164,165,167,169,170,171,173,174,175,180,189,198,199,203,219,221,223,226,230,236,237,239,295,296,297,316,317,],[-134,-200,-135,-140,-137,98,-199,-138,-136,-139,-15,162,179,-143,-88,-117,-110,-112,-87,-111,-116,186,-86,-115,-211,225,-19,-20,-25,-21,-24,-18,-22,-23,-26,-27,-36,-35,-201,242,-173,246,-140,-142,-141,-212,-34,-16,-202,-145,-144,-28,-29,-37,-44,-39,]),'REF':([88,89,111,161,179,230,288,298,327,],[-15,161,161,161,161,-16,161,161,161,]),'SUCC':([0,1,2,7,10,12,19,21,26,30,41,44,46,52,56,62,70,71,81,84,85,93,94,97,98,99,100,101,102,104,105,108,112,113,116,124,126,127,128,131,133,134,135,136,137,138,139,140,141,142,143,144,146,147,156,162,178,186,188,192,193,200,206,211,212,213,220,222,225,229,231,233,238,242,243,246,249,250,253,254,258,299,303,304,306,325,328,330,337,339,341,347,],[35,35,-3,35,-7,-9,35,-5,35,-8,35,-6,35,-120,35,35,35,-121,35,35,-74,35,-4,-117,-84,35,-110,35,-112,-111,-116,-115,35,35,-157,35,-109,35,-108,35,-102,-99,-100,-95,35,-103,-98,-105,-97,-104,-101,-96,35,35,-49,35,-45,-85,-10,-158,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-75,-181,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'RETURNS':([285,310,],[307,307,]),'READ':([0,1,2,7,10,12,19,21,26,30,41,44,46,52,56,62,70,71,81,84,85,93,94,97,98,99,100,101,102,104,105,108,112,113,116,124,126,127,128,131,133,134,135,136,137,138,139,140,141,142,143,144,146,147,156,162,178,186,188,192,193,200,206,211,212,213,220,222,225,229,231,233,238,242,243,246,249,250,253,254,258,299,303,304,306,325,328,330,337,339,341,347,],[28,28,-3,28,-7,-9,28,-5,28,-8,28,-6,28,-120,28,28,28,-121,28,28,-74,28,-4,-117,-84,28,-110,28,-112,-111,-116,-115,28,28,-157,28,-109,28,-108,28,-102,-99,-100,-95,28,-103,-98,-105,-97,-104,-101,-96,28,28,-49,28,-45,-85,-10,-158,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-75,-181,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'IN':([5,6,11,17,22,33,34,47,48,49,50,51,53,54,55,57,59,61,64,65,66,67,68,69,72,73,74,75,76,77,79,80,95,129,132,154,180,198,199,207,214,215,216,219,221,223,236,237,239,245,260,261,273,],[-134,-200,-135,-137,-199,-138,-136,-63,-61,-62,-113,-66,-93,-64,-124,-140,-58,-123,-67,-68,-65,-69,141,-60,-118,-106,-57,-139,-59,-56,-122,-55,-143,-119,-133,-211,-201,-173,247,-107,-94,-73,-114,-142,-141,-212,-202,-145,-144,279,-71,-70,-140,]),'SMC':([3,5,6,7,8,11,13,17,22,25,31,33,34,36,37,39,42,47,48,49,50,51,53,54,55,57,58,59,61,63,64,65,66,67,68,69,72,73,74,75,76,77,79,80,82,83,86,87,90,92,95,109,110,114,115,117,118,121,122,123,129,132,154,159,160,163,164,165,167,169,170,171,173,174,175,180,185,189,190,191,194,195,196,197,202,204,207,210,214,215,216,219,221,223,224,226,227,228,234,235,236,237,239,240,241,244,257,260,261,265,277,278,282,284,285,289,295,296,297,300,302,308,310,313,316,317,319,320,324,326,331,334,335,338,340,344,345,346,348,349,350,],[-146,-134,-200,-207,-77,-135,85,-137,-199,-147,-78,-138,-136,-80,-79,-82,-81,-63,-61,-62,-113,-66,-93,-64,-124,-140,-92,-58,-123,-127,-67,-68,-65,-69,-91,-60,-118,-106,-57,-139,-59,-56,-122,-55,-210,-208,-50,156,178,-46,-143,188,-11,-164,-159,193,-163,-206,-76,-209,-119,-133,-211,-19,-20,-25,-21,-24,-18,-22,-23,-26,-27,-36,-35,-201,-83,-14,-180,-162,-165,-168,-167,-166,249,250,-107,-148,-94,-73,-114,-142,-141,-212,-51,-34,-54,-52,-47,-48,-202,-145,-144,-12,-13,-160,-149,-71,-70,-53,-17,-161,-177,-178,306,-125,-28,-29,-37,-179,-169,328,330,-126,-44,-39,-171,-176,-170,-182,341,-172,-184,-189,-185,-196,-188,-183,-186,-197,-187,]),'NUM':([0,1,2,7,10,12,19,21,26,30,41,44,46,52,56,62,70,71,81,84,85,93,94,97,98,99,100,101,102,104,105,108,112,113,116,124,126,127,128,131,133,134,135,136,137,138,139,140,141,142,143,144,146,147,156,162,178,186,188,192,193,200,206,211,212,213,220,222,225,229,231,233,238,242,243,246,249,250,253,254,258,299,303,304,306,325,328,330,337,339,341,347,],[40,40,-3,40,-7,-9,40,-5,40,-8,40,-6,40,-120,40,40,40,-121,40,40,-74,40,-4,-117,-84,40,-110,40,-112,-111,-116,-115,40,40,-157,40,-109,40,-108,40,-102,-99,-100,-95,40,-103,-98,-105,-97,-104,-101,-96,40,40,-49,40,-45,-85,-10,-158,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-75,-181,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'$end':([0,2,10,12,19,21,27,30,43,44,85,94,156,178,188,249,250,],[-222,-3,-7,-9,-1,-5,-2,-8,0,-6,-74,-4,-49,-45,-10,-75,-181,]),'FOR':([26,],[119,]),'END':([2,10,12,21,30,44,85,94,156,178,188,249,250,306,325,328,330,337,339,341,347,],[-3,-7,-9,-5,-8,-6,-74,-4,-49,-45,-10,-75,-181,326,335,338,340,345,346,348,350,]),'TIMES':([5,6,11,16,17,20,22,33,34,37,47,48,49,50,51,54,55,57,59,61,64,65,66,67,69,72,73,74,75,76,77,79,80,95,129,132,154,180,203,207,215,216,219,221,223,236,237,239,260,261,273,],[-134,-200,-135,-140,-137,108,-199,-138,-136,-139,-63,-61,-62,-113,-66,-64,-124,-140,-58,-123,-67,-68,-65,-69,-60,-118,108,-57,-139,-59,-56,-122,-55,-143,-119,-133,-211,-201,-140,108,-73,-114,-142,-141,-212,-202,-145,-144,-71,-70,-140,]),'ELSIF':([5,6,11,17,22,33,34,47,48,49,50,51,53,54,55,57,58,59,61,64,65,66,67,68,69,72,73,74,75,76,77,79,80,85,95,116,129,130,131,132,154,180,192,205,207,213,214,215,216,219,221,223,236,237,239,249,252,255,256,260,261,289,291,294,313,314,],[-134,-200,-135,-137,-199,-138,-136,-63,-61,-62,-113,-66,-93,-64,-124,-140,-92,-58,-123,-67,-68,-65,-69,-91,-60,-118,-106,-57,-139,-59,-56,-122,-55,-74,-143,-157,-119,212,-150,-133,-211,-201,-158,254,-107,-151,-94,-73,-114,-142,-141,-212,-202,-145,-144,-75,254,-130,-128,-71,-70,-125,-131,212,-126,-132,]),'RESULT':([0,2,10,12,19,21,26,30,44,85,94,113,116,124,131,156,178,188,192,193,200,211,213,243,249,250,258,306,325,328,330,337,339,341,347,],[41,-3,-7,-9,41,-5,41,-8,-6,-74,-4,41,-157,41,41,-49,-45,-10,-158,41,41,41,41,41,-75,-181,41,41,41,41,41,41,41,41,41,]),'ARRAY':([88,89,111,161,179,230,288,298,327,],[-15,176,176,176,176,-16,176,176,176,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'range_enumeration':([119,],[195,]),'assigning_operator':([20,],[101,]),'action_statement_list':([26,131,193,211,],[113,213,243,258,]),'while_control':([26,118,],[114,194,]),'string_literal':([1,7,41,46,56,70,81,84,93,99,101,112,127,137,146,147,162,206,212,220,222,225,229,231,233,238,242,246,253,254,299,303,304,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'if_action':([0,19,26,113,124,131,193,200,211,213,243,258,306,325,328,330,337,339,341,347,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'literal_range':([81,99,147,229,231,233,299,],[148,182,217,266,268,272,272,]),'parameter_attribute':([311,],[332,]),'char_literal':([1,7,41,46,56,70,81,84,93,99,101,112,127,137,146,147,162,206,212,220,222,225,229,231,233,238,242,246,253,254,299,303,304,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'bracketed_action':([0,19,26,113,124,131,193,200,211,213,243,258,306,325,328,330,337,339,341,347,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'builtin_call':([0,1,7,19,26,41,46,56,62,70,81,84,93,99,101,112,113,124,127,131,137,146,147,162,193,200,206,211,212,213,220,222,225,229,231,233,238,242,243,246,253,254,258,299,303,304,306,325,328,330,337,339,341,347,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'iteration':([119,],[197,]),'discrete_mode':([89,111,161,179,233,247,279,288,298,299,327,],[159,159,159,159,274,284,300,159,159,274,159,]),'assignment_action':([0,19,26,113,124,131,193,200,211,213,243,258,306,325,328,330,337,339,341,347,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'builtin_name':([0,1,7,19,26,41,46,56,62,70,81,84,93,99,101,112,113,124,127,131,137,146,147,162,193,200,206,211,212,213,220,222,225,229,231,233,238,242,243,246,253,254,258,299,303,304,306,325,328,330,337,339,341,347,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'synonym_statement':([0,19,306,325,328,330,337,339,341,347,],[10,10,10,10,10,10,10,10,10,10,]),'string_reference':([0,1,7,19,26,41,46,56,62,70,81,84,93,99,101,112,113,124,127,131,137,146,147,162,193,200,206,211,212,213,220,222,225,229,231,233,238,242,243,246,253,254,258,299,303,304,306,325,328,330,337,339,341,347,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'loop_counter':([119,],[199,]),'else_clause':([130,294,],[208,315,]),'integer_expression':([81,304,],[151,322,]),'start_value':([246,],[280,]),'operand2':([1,7,41,46,70,81,84,93,99,101,112,127,137,147,162,206,212,220,222,225,229,231,233,238,242,246,253,254,299,303,304,],[73,73,73,73,73,73,73,73,73,73,73,207,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'composite_mode':([89,111,161,179,288,298,327,],[164,164,164,164,164,164,164,]),'newmode_statement':([0,19,306,325,328,330,337,339,341,347,],[44,44,44,44,44,44,44,44,44,44,]),'operand1':([1,7,41,46,70,81,84,93,99,101,112,137,147,162,206,212,220,222,225,229,231,233,238,242,246,253,254,299,303,304,],[53,53,53,53,53,53,53,53,53,53,53,214,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'discrete_range_mode':([89,111,161,179,233,247,279,288,298,299,327,],[165,165,165,165,165,165,165,165,165,165,165,]),'action':([0,19,26,113,124,131,193,200,211,213,243,258,306,325,328,330,337,339,341,347,],[13,13,13,13,202,13,13,202,13,13,13,13,13,13,13,13,13,13,13,13,]),'elseif_expression':([205,252,],[255,291,]),'element_node':([298,],[317,]),'monadic_operator':([1,7,41,46,70,81,84,93,99,101,112,127,137,146,147,162,206,212,220,222,225,229,231,233,238,242,246,253,254,299,303,304,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'conditional_expression':([1,7,41,46,70,81,84,93,99,101,112,147,162,206,212,220,222,225,229,231,233,238,242,246,253,254,299,303,304,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'statement_list':([0,306,328,330,341,],[19,325,337,339,347,]),'closed_dyadic_operator':([20,],[106,]),'integer_literal':([1,7,41,46,56,70,81,84,93,99,101,112,127,137,146,147,162,206,212,220,222,225,229,231,233,238,242,246,253,254,299,303,304,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'location':([0,1,7,19,26,41,46,56,62,70,81,84,93,99,101,112,113,124,127,131,137,146,147,162,193,200,206,211,212,213,220,222,225,229,231,233,238,242,243,246,253,254,258,299,303,304,306,325,328,330,337,339,341,347,],[20,61,61,20,20,61,61,61,132,61,61,61,61,61,61,61,20,20,61,20,61,61,61,61,20,20,61,20,61,20,61,61,61,61,61,61,61,61,20,61,61,61,20,61,61,61,20,20,20,20,20,20,20,20,]),'parameter_spec':([288,],[312,]),'expression':([1,7,41,46,70,81,84,93,99,101,112,147,162,206,212,220,222,225,229,231,233,238,242,246,253,254,299,303,304,],[63,82,82,63,145,149,153,153,184,185,63,184,227,256,63,263,153,227,267,267,267,276,277,282,292,63,267,282,321,]),'lower_bound':([81,99,147,229,231,233,299,],[150,150,150,150,150,150,150,]),'operator1':([68,],[137,]),'arithmetic_additive_operator':([20,53,214,],[107,128,128,]),'expression_list':([99,147,],[183,218,]),'do_action':([0,19,26,113,124,131,193,200,211,213,243,258,306,325,328,330,337,339,341,347,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'result':([7,41,],[83,123,]),'result_attribute':([336,],[343,]),'reference_mode':([89,111,161,179,288,298,327,],[160,160,160,160,160,160,160,]),'action_statement':([0,19,26,113,131,193,211,213,243,258,306,325,328,330,337,339,341,347,],[30,30,116,192,116,116,116,192,192,192,30,30,30,30,30,30,30,30,]),'index_mode':([233,299,],[271,318,]),'newmode_list':([15,],[90,]),'boolean_literal':([1,7,41,46,56,70,81,84,93,99,101,112,127,137,146,147,162,206,212,220,222,225,229,231,233,238,242,246,253,254,299,303,304,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'formal_parameter_list':([248,309,],[287,329,]),'initialization':([189,],[241,]),'array_slice':([0,1,7,19,26,41,46,56,62,70,81,84,93,99,101,112,113,124,127,131,137,146,147,162,193,200,206,211,212,213,220,222,225,229,231,233,238,242,243,246,253,254,258,299,303,304,306,325,328,330,337,339,341,347,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'step_value':([280,],[305,]),'for_control':([26,],[118,]),'declaration_list':([23,],[109,]),'exit_action':([0,19,26,113,124,131,193,200,211,213,243,258,306,325,328,330,337,339,341,347,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'boolean_expression':([1,46,112,212,254,],[60,125,190,259,293,]),'mode_name':([89,111,161,179,288,298,327,],[167,167,167,167,167,167,167,]),'index_mode_list':([233,],[275,]),'declaration_statement':([0,19,306,325,328,330,337,339,341,347,],[21,21,21,21,21,21,21,21,21,21,]),'constant_expression':([162,225,],[228,265,]),'syn_list':([14,],[87,]),'then_expression':([125,293,],[205,314,]),'return_action':([0,19,26,113,124,131,193,200,211,213,243,258,306,325,328,330,337,339,341,347,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'program':([0,],[43,]),'primitive_value':([1,7,41,46,56,70,81,84,93,99,101,112,127,137,146,147,162,206,212,220,222,225,229,231,233,238,242,246,253,254,299,303,304,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'string_mode':([89,111,161,179,288,298,327,],[175,175,175,175,175,175,175,]),'string_concatenation_operator':([20,53,214,],[96,126,126,]),'statement':([0,19,306,325,328,330,337,339,341,347,],[2,94,2,94,2,2,94,94,2,94,]),'upper_bound':([220,],[262,]),'string_length':([232,],[270,]),'elseif_clause':([130,294,],[209,209,]),'mode_definition':([15,177,],[92,234,]),'location_name':([0,1,7,19,26,41,46,56,62,70,81,84,93,99,101,112,113,124,127,131,137,146,147,162,193,200,206,211,212,213,220,222,225,229,231,233,238,242,243,246,253,254,258,299,303,304,306,325,328,330,337,339,341,347,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'empty_literal':([1,7,41,46,56,70,81,84,93,99,101,112,127,137,146,147,162,206,212,220,222,225,229,231,233,238,242,246,253,254,299,303,304,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'literal':([1,7,41,46,56,70,81,84,93,99,101,112,127,137,146,147,162,206,212,220,222,225,229,231,233,238,242,246,253,254,299,303,304,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'operator2':([53,214,],[127,127,]),'result_spec':([285,310,],[308,331,]),'referenced_location':([1,7,41,46,56,70,81,84,93,99,101,112,127,137,146,147,162,206,212,220,222,225,229,231,233,238,242,246,253,254,299,303,304,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'id_list':([14,15,23,157,177,187,248,309,],[89,91,111,89,91,111,288,288,]),'step_enumeration':([119,],[196,]),'syn_definition':([14,157,],[86,224,]),'then_clause':([60,259,],[130,294,]),'formal_parameter':([248,309,],[286,286,]),'declaration':([23,187,],[110,240,]),'discrete_mode_name':([89,111,161,179,233,247,279,288,298,299,327,],[166,166,166,166,166,166,166,166,166,166,166,]),'operand3':([1,7,41,46,70,81,84,93,99,101,112,127,137,146,147,162,206,212,220,222,225,229,231,233,238,242,246,253,254,299,303,304,],[50,50,50,50,50,50,50,50,50,50,50,50,50,216,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'array_element':([0,1,7,19,26,41,46,56,62,70,81,84,93,99,101,112,113,124,127,131,137,146,147,162,193,200,206,211,212,213,220,222,225,229,231,233,238,242,243,246,253,254,258,299,303,304,306,325,328,330,337,339,341,347,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'parameter':([84,93,222,],[152,152,152,]),'parenthesized_expression':([1,7,41,46,56,70,81,84,93,99,101,112,127,137,146,147,162,206,212,220,222,225,229,231,233,238,242,246,253,254,299,303,304,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'array_mode':([89,111,161,179,288,298,327,],[174,174,174,174,174,174,174,]),'membership_operator':([68,],[144,]),'arithmetic_multiplicative_operator':([20,73,207,],[103,146,146,]),'procedure_definition':([124,],[204,]),'procedure_call':([0,1,7,19,26,41,46,56,62,70,81,84,93,99,101,112,113,124,127,131,137,146,147,162,193,200,206,211,212,213,220,222,225,229,231,233,238,242,243,246,253,254,258,299,303,304,306,325,328,330,337,339,341,347,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'end_value':([280,301,305,323,],[302,319,324,334,]),'mode':([89,111,161,179,288,298,327,],[158,189,226,235,311,316,336,]),'control_part':([26,],[117,]),'operand0':([1,7,41,46,70,81,84,93,99,101,112,147,162,206,212,220,222,225,229,231,233,238,242,246,253,254,299,303,304,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'procedure_statement':([0,19,306,325,328,330,337,339,341,347,],[12,12,12,12,12,12,12,12,12,12,]),'else_expression':([205,252,],[251,290,]),'elseif_expression_list':([205,],[252,]),'operand4':([1,7,41,46,56,70,81,84,93,99,101,112,127,137,146,147,162,206,212,220,222,225,229,231,233,238,242,246,253,254,299,303,304,],[72,72,72,72,129,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'relational_operator':([68,],[136,]),'call_action':([0,1,7,19,26,41,46,56,62,70,81,84,93,99,101,112,113,124,127,131,137,146,147,162,193,200,206,211,212,213,220,222,225,229,231,233,238,242,243,246,253,254,258,299,303,304,306,325,328,330,337,339,341,347,],[37,75,75,37,37,75,75,75,75,75,75,75,75,75,75,75,37,37,75,37,75,75,75,75,37,37,75,37,75,37,75,75,75,75,75,75,75,75,37,75,75,75,37,75,75,75,37,37,37,37,37,37,37,37,]),'dereferenced_reference':([0,1,7,19,26,41,46,56,62,70,81,84,93,99,101,112,113,124,127,131,137,146,147,162,193,200,206,211,212,213,220,222,225,229,231,233,238,242,243,246,253,254,258,299,303,304,306,325,328,330,337,339,341,347,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'value_array_slice':([1,7,41,46,56,70,81,84,93,99,101,112,127,137,146,147,162,206,212,220,222,225,229,231,233,238,242,246,253,254,299,303,304,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'empty':([0,],[27,]),'result_action':([0,19,26,113,124,131,193,200,211,213,243,258,306,325,328,330,337,339,341,347,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'value_array_element':([1,7,41,46,56,70,81,84,93,99,101,112,127,137,146,147,162,206,212,220,222,225,229,231,233,238,242,246,253,254,299,303,304,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'parameter_list':([84,93,222,],[155,181,264,]),'array_primitive_value':([1,7,41,46,56,70,81,84,93,99,101,112,127,137,146,147,162,206,212,220,222,225,229,231,233,238,242,246,253,254,299,303,304,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'basic_mode':([89,111,161,179,233,247,279,288,298,299,327,],[170,170,170,170,170,170,170,170,170,170,170,]),'label':([0,19,26,32,113,131,193,211,213,243,258,306,325,328,330,337,339,341,347,],[45,45,120,121,120,120,120,120,120,120,120,45,45,45,45,45,45,45,45,]),'discrete_expression':([246,303,],[281,320,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','lyaParser.py',65),
  ('program -> empty','program',1,'p_program','lyaParser.py',66),
  ('statement_list -> statement','statement_list',1,'p_statement_list1','lyaParser.py',73),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list1','lyaParser.py',74),
  ('statement -> declaration_statement','statement',1,'p_statement','lyaParser.py',81),
  ('statement -> newmode_statement','statement',1,'p_statement','lyaParser.py',82),
  ('statement -> synonym_statement','statement',1,'p_statement','lyaParser.py',83),
  ('statement -> action_statement','statement',1,'p_statement','lyaParser.py',84),
  ('statement -> procedure_statement','statement',1,'p_statement','lyaParser.py',85),
  ('declaration_statement -> DCL declaration_list SMC','declaration_statement',3,'p_declaration_statement','lyaParser.py',93),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','lyaParser.py',97),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','lyaParser.py',98),
  ('declaration -> id_list mode initialization','declaration',3,'p_declaration1','lyaParser.py',105),
  ('declaration -> id_list mode','declaration',2,'p_declaration2','lyaParser.py',109),
  ('id_list -> ID','id_list',1,'p_id_list','lyaParser.py',113),
  ('id_list -> id_list COMMA ID','id_list',3,'p_id_list','lyaParser.py',114),
  ('initialization -> EQUALS expression','initialization',2,'p_initialization','lyaParser.py',121),
  ('mode -> mode_name','mode',1,'p_mode','lyaParser.py',129),
  ('mode -> discrete_mode','mode',1,'p_mode','lyaParser.py',130),
  ('mode -> reference_mode','mode',1,'p_mode','lyaParser.py',131),
  ('mode -> composite_mode','mode',1,'p_mode','lyaParser.py',132),
  ('mode_name -> ID','mode_name',1,'p_mode_name','lyaParser.py',136),
  ('discrete_mode -> basic_mode','discrete_mode',1,'p_discrete_mode','lyaParser.py',140),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','lyaParser.py',141),
  ('basic_mode -> INT','basic_mode',1,'p_basic_mode','lyaParser.py',145),
  ('basic_mode -> BOOL','basic_mode',1,'p_basic_mode','lyaParser.py',146),
  ('basic_mode -> CHAR','basic_mode',1,'p_basic_mode','lyaParser.py',147),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaParser.py',151),
  ('discrete_range_mode -> basic_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaParser.py',152),
  ('discrete_mode_name -> ID','discrete_mode_name',1,'p_discrete_mode_name','lyaParser.py',156),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_litereal_range','lyaParser.py',160),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','lyaParser.py',164),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','lyaParser.py',168),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','lyaParser.py',172),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','lyaParser.py',176),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','lyaParser.py',177),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','lyaParser.py',181),
  ('string_length -> INTCONST','string_length',1,'p_string_length','lyaParser.py',185),
  ('array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_node','array_mode',5,'p_array_mode','lyaParser.py',189),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','lyaParser.py',194),
  ('index_mode_list -> index_mode_list COMMA index_mode','index_mode_list',3,'p_index_mode_list','lyaParser.py',195),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','lyaParser.py',202),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','lyaParser.py',203),
  ('element_node -> mode','element_node',1,'p_element_node','lyaParser.py',207),
  ('newmode_statement -> TYPE newmode_list SMC','newmode_statement',3,'p_newmode_statement','lyaParser.py',215),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','lyaParser.py',219),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','lyaParser.py',220),
  ('mode_definition -> id_list EQUALS mode','mode_definition',3,'p_mode_definition','lyaParser.py',227),
  ('synonym_statement -> SYN syn_list SMC','synonym_statement',3,'p_synonym_statement','lyaParser.py',231),
  ('syn_list -> syn_definition','syn_list',1,'p_syn_list','lyaParser.py',239),
  ('syn_list -> syn_list COMMA syn_definition','syn_list',3,'p_syn_list','lyaParser.py',240),
  ('syn_definition -> id_list EQUALS constant_expression','syn_definition',3,'p_syn_definition','lyaParser.py',247),
  ('syn_definition -> id_list mode EQUALS constant_expression','syn_definition',4,'p_syn_definition2','lyaParser.py',251),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','lyaParser.py',255),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','lyaParser.py',263),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','lyaParser.py',264),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','lyaParser.py',265),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','lyaParser.py',266),
  ('literal -> integer_literal','literal',1,'p_literal','lyaParser.py',270),
  ('literal -> boolean_literal','literal',1,'p_literal','lyaParser.py',271),
  ('literal -> char_literal','literal',1,'p_literal','lyaParser.py',272),
  ('literal -> empty_literal','literal',1,'p_literal','lyaParser.py',273),
  ('literal -> string_literal','literal',1,'p_literal','lyaParser.py',274),
  ('integer_literal -> INTCONST','integer_literal',1,'p_integer_literal','lyaParser.py',278),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','lyaParser.py',282),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','lyaParser.py',283),
  ('char_literal -> CHARCONST','char_literal',1,'p_char_literal','lyaParser.py',287),
  ('string_literal -> STRINGCONST','string_literal',1,'p_string_literal','lyaParser.py',291),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','lyaParser.py',295),
  ('value_array_element -> array_primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','lyaParser.py',299),
  ('value_array_slice -> array_primitive_value LBRACKET literal_range RBRACKET','value_array_slice',4,'p_value_array_slice','lyaParser.py',303),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','lyaParser.py',307),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','lyaParser.py',311),
  ('action_statement -> action SMC','action_statement',2,'p_action_statement','lyaParser.py',319),
  ('action_statement -> label COLON action SMC','action_statement',4,'p_action_statement','lyaParser.py',320),
  ('label -> ID','label',1,'p_label','lyaParser.py',327),
  ('action -> assignment_action','action',1,'p_action','lyaParser.py',331),
  ('action -> bracketed_action','action',1,'p_action','lyaParser.py',332),
  ('action -> call_action','action',1,'p_action','lyaParser.py',333),
  ('action -> exit_action','action',1,'p_action','lyaParser.py',334),
  ('action -> return_action','action',1,'p_action','lyaParser.py',335),
  ('action -> result_action','action',1,'p_action','lyaParser.py',336),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','lyaParser.py',344),
  ('assigning_operator -> EQUALS','assigning_operator',1,'p_assigning_operator','lyaParser.py',348),
  ('assigning_operator -> closed_dyadic_operator EQUALS','assigning_operator',2,'p_assigning_operator','lyaParser.py',349),
  ('closed_dyadic_operator -> arithmetic_additive_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','lyaParser.py',356),
  ('closed_dyadic_operator -> arithmetic_multiplicative_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','lyaParser.py',357),
  ('closed_dyadic_operator -> string_concatenation_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','lyaParser.py',358),
  ('expression_list -> expression','expression_list',1,'p_expression_list','lyaParser.py',362),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','lyaParser.py',363),
  ('expression -> operand0','expression',1,'p_expression','lyaParser.py',370),
  ('expression -> conditional_expression','expression',1,'p_expression','lyaParser.py',371),
  ('operand0 -> operand1','operand0',1,'p_operand0','lyaParser.py',375),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','lyaParser.py',376),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','lyaParser.py',383),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','lyaParser.py',384),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','lyaParser.py',388),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','lyaParser.py',392),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','lyaParser.py',393),
  ('relational_operator -> ISEQUAL','relational_operator',1,'p_relational_operator','lyaParser.py',394),
  ('relational_operator -> NOTEQUAL','relational_operator',1,'p_relational_operator','lyaParser.py',395),
  ('relational_operator -> GT','relational_operator',1,'p_relational_operator','lyaParser.py',396),
  ('relational_operator -> GE','relational_operator',1,'p_relational_operator','lyaParser.py',397),
  ('relational_operator -> LT','relational_operator',1,'p_relational_operator','lyaParser.py',398),
  ('relational_operator -> LE','relational_operator',1,'p_relational_operator','lyaParser.py',399),
  ('operand1 -> operand2','operand1',1,'p_operand1','lyaParser.py',403),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1','lyaParser.py',404),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','lyaParser.py',411),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','lyaParser.py',412),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','lyaParser.py',416),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','lyaParser.py',417),
  ('string_concatenation_operator -> STRCONC','string_concatenation_operator',1,'p_string_concatenation_operator','lyaParser.py',421),
  ('operand2 -> operand3','operand2',1,'p_operand2','lyaParser.py',425),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','lyaParser.py',426),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaParser.py',433),
  ('arithmetic_multiplicative_operator -> DIV','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaParser.py',434),
  ('arithmetic_multiplicative_operator -> MOD','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaParser.py',435),
  ('operand3 -> operand4','operand3',1,'p_operand3','lyaParser.py',439),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','lyaParser.py',440),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','lyaParser.py',447),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','lyaParser.py',448),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','lyaParser.py',452),
  ('operand4 -> location','operand4',1,'p_operand4','lyaParser.py',453),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','lyaParser.py',454),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','lyaParser.py',460),
  ('conditional_expression -> IF boolean_expression then_expression elseif_expression_list else_expression FI','conditional_expression',6,'p_conditional_expression2','lyaParser.py',464),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','lyaParser.py',468),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','lyaParser.py',472),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','lyaParser.py',476),
  ('elseif_expression_list -> elseif_expression','elseif_expression_list',1,'p_elseif_expression_list','lyaParser.py',480),
  ('elseif_expression_list -> elseif_expression_list elseif_expression','elseif_expression_list',2,'p_elseif_expression_list','lyaParser.py',481),
  ('elseif_expression -> ELSIF boolean_expression then_expression','elseif_expression',3,'p_elseif_expression','lyaParser.py',488),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','lyaParser.py',496),
  ('location -> location_name','location',1,'p_location','lyaParser.py',500),
  ('location -> string_reference','location',1,'p_location','lyaParser.py',501),
  ('location -> dereferenced_reference','location',1,'p_location','lyaParser.py',502),
  ('location -> array_element','location',1,'p_location','lyaParser.py',503),
  ('location -> array_slice','location',1,'p_location','lyaParser.py',504),
  ('location -> call_action','location',1,'p_location','lyaParser.py',505),
  ('location_name -> ID','location_name',1,'p_location_name','lyaParser.py',509),
  ('string_reference -> location_name LBRACKET integer_expression RBRACKET','string_reference',4,'p_string_reference','lyaParser.py',513),
  ('string_reference -> location_name LBRACKET literal_range RBRACKET','string_reference',4,'p_string_reference2','lyaParser.py',517),
  ('dereferenced_reference -> location ARROW','dereferenced_reference',2,'p_dereferenced_reference','lyaParser.py',521),
  ('array_element -> location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','lyaParser.py',525),
  ('array_slice -> location LBRACKET literal_range RBRACKET','array_slice',4,'p_array_slice','lyaParser.py',529),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','lyaParser.py',537),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','lyaParser.py',538),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','lyaParser.py',546),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action2','lyaParser.py',550),
  ('then_clause -> THEN','then_clause',1,'p_then_clause','lyaParser.py',554),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','lyaParser.py',555),
  ('else_clause -> ELSE','else_clause',1,'p_else_clause','lyaParser.py',562),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','lyaParser.py',563),
  ('else_clause -> elseif_clause','else_clause',1,'p_else_clause2','lyaParser.py',570),
  ('elseif_clause -> ELSIF boolean_expression then_clause','elseif_clause',3,'p_elseif_clause','lyaParser.py',574),
  ('elseif_clause -> ELSIF boolean_expression then_clause else_clause','elseif_clause',4,'p_elseif_clause2','lyaParser.py',578),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','lyaParser.py',583),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','lyaParser.py',584),
  ('do_action -> DO OD','do_action',2,'p_do_action','lyaParser.py',595),
  ('do_action -> DO control_part SMC OD','do_action',4,'p_do_action2','lyaParser.py',599),
  ('do_action -> DO control_part SMC action_statement_list OD','do_action',5,'p_do_action3','lyaParser.py',603),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action4','lyaParser.py',607),
  ('control_part -> for_control','control_part',1,'p_control_part','lyaParser.py',611),
  ('control_part -> while_control','control_part',1,'p_control_part','lyaParser.py',612),
  ('control_part -> for_control while_control','control_part',2,'p_control_part2','lyaParser.py',616),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','lyaParser.py',620),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','lyaParser.py',624),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','lyaParser.py',625),
  ('step_enumeration -> loop_counter EQUALS start_value end_value','step_enumeration',4,'p_step_enumeration','lyaParser.py',629),
  ('step_enumeration -> loop_counter EQUALS start_value step_value end_value','step_enumeration',5,'p_step_enumeration2','lyaParser.py',633),
  ('step_enumeration -> loop_counter EQUALS start_value DOWN end_value','step_enumeration',5,'p_step_enumeration3','lyaParser.py',637),
  ('step_enumeration -> loop_counter EQUALS start_value step_value DOWN end_value','step_enumeration',6,'p_step_enumeration4','lyaParser.py',641),
  ('loop_counter -> ID','loop_counter',1,'p_loop_counter','lyaParser.py',645),
  ('start_value -> discrete_expression','start_value',1,'p_start_value','lyaParser.py',649),
  ('step_value -> BY integer_expression','step_value',2,'p_step_value','lyaParser.py',653),
  ('end_value -> TO discrete_expression','end_value',2,'p_end_value','lyaParser.py',657),
  ('discrete_expression -> expression','discrete_expression',1,'p_discrete_expression','lyaParser.py',661),
  ('range_enumeration -> loop_counter IN discrete_mode','range_enumeration',3,'p_range_enumeration','lyaParser.py',665),
  ('range_enumeration -> loop_counter DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration2','lyaParser.py',669),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','lyaParser.py',673),
  ('procedure_statement -> label COLON procedure_definition SMC','procedure_statement',4,'p_procedure_statement','lyaParser.py',681),
  ('procedure_definition -> PROC LPAREN RPAREN SMC END','procedure_definition',5,'p_procedure_definition1','lyaParser.py',685),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SMC statement_list END','procedure_definition',7,'p_procedure_definition1','lyaParser.py',686),
  ('procedure_definition -> PROC LPAREN RPAREN SMC statement_list END','procedure_definition',6,'p_procedure_definition1','lyaParser.py',687),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SMC END','procedure_definition',6,'p_procedure_definition2','lyaParser.py',696),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SMC END','procedure_definition',7,'p_procedure_definition2','lyaParser.py',697),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SMC statement_list END','procedure_definition',8,'p_procedure_definition2','lyaParser.py',698),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SMC statement_list END','procedure_definition',7,'p_procedure_definition3','lyaParser.py',707),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SMC END','procedure_definition',6,'p_procedure_definition3','lyaParser.py',708),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','lyaParser.py',715),
  ('formal_parameter_list -> formal_parameter COMMA formal_parameter_list','formal_parameter_list',3,'p_formal_parameter_list','lyaParser.py',716),
  ('formal_parameter -> id_list parameter_spec','formal_parameter',2,'p_formal_parameter','lyaParser.py',723),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','lyaParser.py',727),
  ('parameter_spec -> mode parameter_attribute','parameter_spec',2,'p_parameter_spec','lyaParser.py',728),
  ('parameter_attribute -> LOC','parameter_attribute',1,'p_parameter_attribute','lyaParser.py',735),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','lyaParser.py',739),
  ('result_spec -> RETURNS LPAREN mode result_attribute RPAREN','result_spec',5,'p_result_spec','lyaParser.py',740),
  ('result_attribute -> LOC','result_attribute',1,'p_result_attribute','lyaParser.py',747),
  ('call_action -> procedure_call','call_action',1,'p_call_action','lyaParser.py',755),
  ('call_action -> builtin_call','call_action',1,'p_call_action','lyaParser.py',756),
  ('procedure_call -> ID LPAREN RPAREN','procedure_call',3,'p_procedure_call','lyaParser.py',760),
  ('procedure_call -> ID LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','lyaParser.py',761),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','lyaParser.py',768),
  ('parameter_list -> parameter COMMA parameter_list','parameter_list',3,'p_parameter_list','lyaParser.py',769),
  ('parameter -> expression','parameter',1,'p_parameter','lyaParser.py',776),
  ('exit_action -> EXIT label','exit_action',2,'p_exit_action','lyaParser.py',784),
  ('return_action -> RETURN','return_action',1,'p_return_action','lyaParser.py',788),
  ('return_action -> RETURN result','return_action',2,'p_return_action','lyaParser.py',789),
  ('result_action -> RESULT result','result_action',2,'p_result_action','lyaParser.py',796),
  ('result -> expression','result',1,'p_result','lyaParser.py',800),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','lyaParser.py',804),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','lyaParser.py',805),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','lyaParser.py',812),
  ('builtin_name -> PRED','builtin_name',1,'p_builtin_name','lyaParser.py',813),
  ('builtin_name -> SUCC','builtin_name',1,'p_builtin_name','lyaParser.py',814),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','lyaParser.py',815),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','lyaParser.py',816),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','lyaParser.py',817),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','lyaParser.py',818),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','lyaParser.py',819),
  ('integer_expression -> expression','integer_expression',1,'p_integer_expression','lyaParser.py',828),
  ('empty -> <empty>','empty',0,'p_empty','lyaParser.py',835),
]
