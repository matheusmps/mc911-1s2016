
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'AF695C3155AC4940F60B98A605EAF2C2'
    
_lr_action_items = {'INTCONST':([16,30,38,47,55,61,63,72,74,85,90,91,92,93,94,95,97,98,101,115,124,129,130,131,132,133,134,135,136,137,138,139,140,141,143,147,148,149,160,187,206,213,217,219,226,231,232,235,236,238,242,245,256,258,305,307,310,],[51,51,51,51,-121,-120,51,51,51,51,-84,-116,51,-110,-111,51,-115,-112,-117,51,51,-101,-100,51,-104,-96,-97,-103,-102,-98,-95,-99,-105,51,51,-109,-108,51,-85,51,51,51,51,51,51,51,272,51,51,51,51,51,51,51,51,51,51,]),'LOWER':([0,5,6,8,11,12,16,23,30,38,41,44,46,47,55,61,63,69,72,74,85,90,91,92,93,94,95,97,98,101,102,107,115,116,117,124,129,130,131,132,133,134,135,136,137,138,139,140,141,143,147,148,149,155,160,165,185,187,190,193,201,202,206,213,217,218,219,223,226,227,229,231,235,236,238,242,245,248,256,258,262,299,305,307,310,316,321,323,334,336,338,343,],[3,-3,3,-9,-5,-8,3,-7,3,3,3,-6,-4,3,-121,-120,3,3,3,3,3,-84,-116,3,-110,-111,3,-115,-112,-117,3,-74,3,3,-157,3,-101,-100,3,-104,-96,-97,-103,-102,-98,-95,-99,-105,3,3,-109,-108,3,3,-85,-10,-49,3,-45,-158,3,3,3,3,3,3,3,3,3,-75,-181,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'RESULT':([0,5,6,8,11,12,23,41,44,46,102,107,116,117,155,165,185,190,193,201,202,218,223,227,229,248,262,299,316,321,323,334,336,338,343,],[38,-3,38,-9,-5,-8,-7,38,-6,-4,38,-74,38,-157,38,-10,-49,-45,-158,38,38,38,38,-75,-181,38,38,38,38,38,38,38,38,38,38,]),'ISEQUAL':([7,13,18,19,26,27,28,48,49,50,51,53,57,58,59,60,62,64,65,66,67,68,70,71,73,75,76,77,78,79,81,82,96,144,145,152,204,205,207,208,211,212,215,216,224,225,250,253,254,278,],[-134,-199,-137,-138,-135,-200,-136,-62,-122,130,-64,-60,-139,-67,-61,-63,-65,-56,-113,-57,-68,-106,-123,-59,-58,-140,-69,-124,-118,-93,-55,-66,-143,-133,-119,-211,-201,-142,-141,-94,-73,-114,-107,-212,-145,-144,-202,-71,-70,-140,]),'BY':([7,13,18,19,26,27,28,48,49,50,51,52,53,57,58,59,60,62,64,65,66,67,68,70,71,73,75,76,77,78,79,81,82,96,144,145,152,204,205,207,208,211,212,215,216,224,225,250,253,254,282,283,284,293,314,],[-134,-199,-137,-138,-135,-200,-136,-62,-122,-91,-64,-92,-60,-139,-67,-61,-63,-65,-56,-113,-57,-68,-106,-123,-59,-58,-140,-69,-124,-118,-93,-55,-66,-143,-133,-119,-211,-201,-142,-141,-94,-73,-114,-107,-212,-145,-144,-202,-71,-70,307,-177,-174,-125,-126,]),'DOWN':([7,13,18,19,26,27,28,48,49,50,51,52,53,57,58,59,60,62,64,65,66,67,68,70,71,73,75,76,77,78,79,81,82,96,144,145,152,196,197,204,205,207,208,211,212,215,216,224,225,250,253,254,282,283,284,293,309,314,328,329,],[-134,-199,-137,-138,-135,-200,-136,-62,-122,-91,-64,-92,-60,-139,-67,-61,-63,-65,-56,-113,-57,-68,-106,-123,-59,-58,-140,-69,-124,-118,-93,-55,-66,-143,-133,-119,-211,-173,246,-201,-142,-141,-94,-73,-114,-107,-212,-145,-144,-202,-71,-70,308,-177,-174,-125,331,-126,-175,-221,]),'WHILE':([7,13,18,19,26,27,28,41,48,49,50,51,52,53,57,58,59,60,62,64,65,66,67,68,70,71,73,75,76,77,78,79,81,82,96,120,144,145,152,169,172,175,177,184,195,198,199,204,205,207,208,211,212,215,216,224,225,250,253,254,283,287,293,302,306,311,312,314,330,332,333,341,],[-134,-199,-137,-138,-135,-200,-136,115,-62,-122,-91,-64,-92,-60,-139,-67,-61,-63,-65,-56,-113,-57,-68,-106,-123,-59,-58,-140,-69,-124,-118,-93,-55,-66,-143,115,-133,-119,-211,-25,-24,-26,-27,-23,-166,-167,-168,-201,-142,-141,-94,-73,-114,-107,-212,-145,-144,-202,-71,-70,-177,-178,-125,-28,-29,-169,-179,-126,-171,-170,-176,-172,]),'COLON':([7,13,18,19,26,27,28,33,45,48,49,50,51,52,53,57,58,59,60,62,64,65,66,67,68,70,71,73,75,76,77,78,79,81,82,96,121,126,128,144,145,152,157,204,205,207,208,211,212,215,216,224,225,250,253,254,271,278,293,314,],[-134,-199,-137,-138,-135,-200,-136,102,-76,-62,-122,-91,-64,-92,-60,-139,-67,-61,-63,-65,-56,-113,-57,-68,-106,-123,-59,-58,-140,-69,-124,-118,-93,-55,-66,-143,201,206,-32,-133,-119,-211,-32,-201,-142,-141,-94,-73,-114,-107,-212,-145,-144,-202,-71,-70,-32,-140,-125,-126,]),'CHARCONST':([16,30,38,47,55,61,63,72,74,85,90,91,92,93,94,95,97,98,101,115,124,129,130,131,132,133,134,135,136,137,138,139,140,141,143,147,148,149,160,187,206,213,217,219,226,231,235,236,238,242,245,256,258,305,307,310,],[58,58,58,58,-121,-120,58,58,58,58,-84,-116,58,-110,-111,58,-115,-112,-117,58,58,-101,-100,58,-104,-96,-97,-103,-102,-98,-95,-99,-105,58,58,-109,-108,58,-85,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'RETURNS':([269,295,],[301,301,]),'RBRACKET':([7,13,18,19,26,27,28,48,49,50,51,52,53,57,58,59,60,62,64,65,66,67,68,70,71,73,75,76,77,78,79,81,82,96,125,127,128,144,145,152,156,157,158,169,172,175,177,184,204,205,207,208,209,210,211,212,215,216,224,225,250,251,252,253,254,265,272,273,274,275,276,277,293,302,306,314,327,],[-134,-199,-137,-138,-135,-200,-136,-62,-122,-91,-64,-92,-60,-139,-67,-61,-63,-65,-56,-113,-57,-68,-106,-123,-59,-58,-140,-69,-124,-118,-93,-55,-66,-143,205,207,-221,-133,-119,-211,224,-89,225,-25,-24,-26,-27,-23,-201,-142,-141,-94,253,254,-73,-114,-107,-212,-145,-144,-202,-31,-33,-71,-70,-90,-38,303,304,-43,-42,-40,-125,-28,-29,-126,-41,]),'TIMES':([7,13,14,18,19,26,27,28,32,45,48,49,51,53,57,58,59,60,62,64,65,66,67,68,70,71,73,75,76,77,78,81,82,96,144,145,152,164,204,205,207,211,212,215,216,224,225,250,253,254,278,],[-134,-199,-139,-137,-138,-135,-200,-136,97,-140,-62,-122,-64,-60,-139,-67,-61,-63,-65,-56,-113,-57,-68,97,-123,-59,-58,-140,-69,-124,-118,-55,-66,-143,-133,-119,-211,-140,-201,-142,-141,-73,-114,97,-212,-145,-144,-202,-71,-70,-140,]),'MOD':([7,13,14,18,19,26,27,28,32,45,48,49,51,53,57,58,59,60,62,64,65,66,67,68,70,71,73,75,76,77,78,81,82,96,144,145,152,164,204,205,207,211,212,215,216,224,225,250,253,254,278,],[-134,-199,-139,-137,-138,-135,-200,-136,101,-140,-62,-122,-64,-60,-139,-67,-61,-63,-65,-56,-113,-57,-68,101,-123,-59,-58,-140,-69,-124,-118,-55,-66,-143,-133,-119,-211,-140,-201,-142,-141,-73,-114,101,-212,-145,-144,-202,-71,-70,-140,]),'PRINT':([0,5,6,8,11,12,16,23,30,38,41,44,46,47,55,61,63,69,72,74,85,90,91,92,93,94,95,97,98,101,102,107,115,116,117,124,129,130,131,132,133,134,135,136,137,138,139,140,141,143,147,148,149,155,160,165,185,187,190,193,201,202,206,213,217,218,219,223,226,227,229,231,235,236,238,242,245,248,256,258,262,299,305,307,310,316,321,323,334,336,338,343,],[42,-3,42,-9,-5,-8,42,-7,42,42,42,-6,-4,42,-121,-120,42,42,42,42,42,-84,-116,42,-110,-111,42,-115,-112,-117,42,-74,42,42,-157,42,-101,-100,42,-104,-96,-97,-103,-102,-98,-95,-99,-105,42,42,-109,-108,42,42,-85,-10,-49,42,-45,-158,42,42,42,42,42,42,42,42,42,-75,-181,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'NUM':([0,5,6,8,11,12,16,23,30,38,41,44,46,47,55,61,63,69,72,74,85,90,91,92,93,94,95,97,98,101,102,107,115,116,117,124,129,130,131,132,133,134,135,136,137,138,139,140,141,143,147,148,149,155,160,165,185,187,190,193,201,202,206,213,217,218,219,223,226,227,229,231,235,236,238,242,245,248,256,258,262,299,305,307,310,316,321,323,334,336,338,343,],[24,-3,24,-9,-5,-8,24,-7,24,24,24,-6,-4,24,-121,-120,24,24,24,24,24,-84,-116,24,-110,-111,24,-115,-112,-117,24,-74,24,24,-157,24,-101,-100,24,-104,-96,-97,-103,-102,-98,-95,-99,-105,24,24,-109,-108,24,24,-85,-10,-49,24,-45,-158,24,24,24,24,24,24,24,24,24,-75,-181,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'NOT':([16,30,38,47,63,74,85,90,91,92,93,94,95,97,98,101,115,124,129,130,131,132,133,134,135,136,137,138,139,140,141,143,147,148,149,160,187,206,213,217,219,226,231,235,236,238,242,245,256,258,305,307,310,],[55,55,55,55,55,55,55,-84,-116,55,-110,-111,55,-115,-112,-117,55,55,-101,-100,55,-104,-96,-97,-103,-102,-98,-95,-99,-105,55,55,-109,-108,55,-85,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'SMC':([1,2,4,7,10,13,14,15,16,18,19,22,26,27,28,35,43,48,49,50,51,52,53,56,57,58,59,60,62,64,65,66,67,68,70,71,73,75,76,77,78,79,80,81,82,83,84,86,96,103,104,108,109,110,113,114,118,120,122,123,144,145,152,159,161,163,169,170,171,172,173,174,175,176,177,180,182,183,184,192,194,195,198,199,200,204,205,207,208,211,212,215,216,221,224,225,230,234,237,239,240,241,243,244,249,250,253,254,264,269,279,281,283,287,288,293,295,300,302,303,306,311,312,314,317,322,325,326,330,332,333,335,337,339,341,342,344,345,348,349,350,],[-78,-81,-82,-134,-80,-199,-79,-147,-207,-137,-138,-77,-135,-200,-136,107,-146,-62,-122,-91,-64,-92,-60,-208,-139,-67,-61,-63,-65,-56,-113,-57,-68,-106,-123,-59,-58,-140,-69,-124,-118,-93,-210,-55,-66,-206,-76,-127,-143,-11,165,-209,-50,185,-46,190,-164,-163,-159,202,-133,-119,-211,-83,227,229,-25,-18,-22,-24,-19,-36,-26,-21,-27,-35,-20,-14,-23,-180,-162,-166,-167,-168,-165,-201,-142,-141,-94,-73,-114,-107,-212,-148,-145,-144,-12,-34,-13,-51,-52,-54,-48,-47,-160,-202,-71,-70,-149,299,-17,-53,-177,-178,-161,-125,316,323,-28,-37,-29,-169,-179,-126,336,-182,-39,-44,-171,-170,-176,-185,-184,-189,-172,-183,-186,-188,-196,-187,-197,]),'ELSIF':([7,13,18,19,26,27,28,48,49,50,51,52,53,57,58,59,60,62,64,65,66,67,68,70,71,73,75,76,77,78,79,81,82,96,107,117,144,145,152,154,155,193,204,205,207,208,211,212,214,215,216,223,224,225,227,250,253,254,255,257,259,291,293,294,313,314,],[-134,-199,-137,-138,-135,-200,-136,-62,-122,-91,-64,-92,-60,-139,-67,-61,-63,-65,-56,-113,-57,-68,-106,-123,-59,-58,-140,-69,-124,-118,-93,-55,-66,-143,-74,-157,-133,-119,-211,219,-150,-158,-201,-142,-141,-94,-73,-114,258,-107,-212,-151,-145,-144,-75,-202,-71,-70,-128,-130,258,-131,-125,219,-132,-126,]),'THEN':([7,13,18,19,26,27,28,48,49,50,51,52,53,57,58,59,60,62,64,65,66,67,68,70,71,73,75,76,77,78,79,81,82,86,87,96,144,145,146,152,204,205,207,208,211,212,215,216,224,225,250,253,254,263,290,293,314,],[-134,-199,-137,-138,-135,-200,-136,-62,-122,-91,-64,-92,-60,-139,-67,-61,-63,-65,-56,-113,-57,-68,-106,-123,-59,-58,-140,-69,-124,-118,-93,-55,-66,-127,155,-143,-133,-119,213,-211,-201,-142,-141,-94,-73,-114,-107,-212,-145,-144,-202,-71,-70,155,213,-125,-126,]),'EQUALS':([7,13,14,18,19,26,27,28,32,45,88,89,91,93,94,96,97,98,99,100,101,105,111,112,152,164,169,170,171,172,173,174,175,176,177,180,182,183,184,188,196,197,204,205,207,216,224,225,233,234,250,302,303,306,325,326,],[-134,-199,-139,-137,-138,-135,-200,-136,90,-140,-87,-88,-116,-110,-111,-143,-115,-112,-86,160,-117,-15,187,189,-211,-140,-25,-18,-22,-24,-19,-36,-26,-21,-27,-35,-20,236,-23,242,-173,245,-201,-142,-141,-212,-145,-144,-16,-34,-202,-28,-37,-29,-39,-44,]),'GT':([7,13,18,19,26,27,28,48,49,50,51,53,57,58,59,60,62,64,65,66,67,68,70,71,73,75,76,77,78,79,81,82,96,144,145,152,204,205,207,208,211,212,215,216,224,225,250,253,254,278,],[-134,-199,-137,-138,-135,-200,-136,-62,-122,136,-64,-60,-139,-67,-61,-63,-65,-56,-113,-57,-68,-106,-123,-59,-58,-140,-69,-124,-118,-93,-55,-66,-143,-133,-119,-211,-201,-142,-141,-94,-73,-114,-107,-212,-145,-144,-202,-71,-70,-140,]),'TO':([7,13,18,19,26,27,28,48,49,50,51,52,53,57,58,59,60,62,64,65,66,67,68,70,71,73,75,76,77,78,79,81,82,96,144,145,152,204,205,207,208,211,212,215,216,224,225,250,253,254,282,283,284,293,308,309,314,328,329,331,],[-134,-199,-137,-138,-135,-200,-136,-62,-122,-91,-64,-92,-60,-139,-67,-61,-63,-65,-56,-113,-57,-68,-106,-123,-59,-58,-140,-69,-124,-118,-93,-55,-66,-143,-133,-119,-211,-201,-142,-141,-94,-73,-114,-107,-212,-145,-144,-202,-71,-70,310,-177,-174,-125,310,310,-126,-175,-221,310,]),'TRUE':([16,30,38,47,55,61,63,72,74,85,90,91,92,93,94,95,97,98,101,115,124,129,130,131,132,133,134,135,136,137,138,139,140,141,143,147,148,149,160,187,206,213,217,219,226,231,235,236,238,242,245,256,258,305,307,310,],[82,82,82,82,-121,-120,82,82,82,82,-84,-116,82,-110,-111,82,-115,-112,-117,82,82,-101,-100,82,-104,-96,-97,-103,-102,-98,-95,-99,-105,82,82,-109,-108,82,-85,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'CHAR':([105,106,111,179,189,233,235,247,268,285,304,305,324,],[-15,177,177,177,177,-16,177,177,177,177,177,177,177,]),'RETURN':([0,5,6,8,11,12,23,41,44,46,102,107,116,117,155,165,185,190,193,201,202,218,223,227,229,248,262,299,316,321,323,334,336,338,343,],[16,-3,16,-9,-5,-8,-7,16,-6,-4,16,-74,16,-157,16,-10,-49,-45,-158,16,16,16,16,-75,-181,16,16,16,16,16,16,16,16,16,16,]),'SUCC':([0,5,6,8,11,12,16,23,30,38,41,44,46,47,55,61,63,69,72,74,85,90,91,92,93,94,95,97,98,101,102,107,115,116,117,124,129,130,131,132,133,134,135,136,137,138,139,140,141,143,147,148,149,155,160,165,185,187,190,193,201,202,206,213,217,218,219,223,226,227,229,231,235,236,238,242,245,248,256,258,262,299,305,307,310,316,321,323,334,336,338,343,],[17,-3,17,-9,-5,-8,17,-7,17,17,17,-6,-4,17,-121,-120,17,17,17,17,17,-84,-116,17,-110,-111,17,-115,-112,-117,17,-74,17,17,-157,17,-101,-100,17,-104,-96,-97,-103,-102,-98,-95,-99,-105,17,17,-109,-108,17,17,-85,-10,-49,17,-45,-158,17,17,17,17,17,17,17,17,17,-75,-181,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'AND':([7,13,18,19,26,27,28,48,49,50,51,53,57,58,59,60,62,64,65,66,67,68,70,71,73,75,76,77,78,79,81,82,96,144,145,152,204,205,207,208,211,212,215,216,224,225,250,253,254,278,],[-134,-199,-137,-138,-135,-200,-136,-62,-122,137,-64,-60,-139,-67,-61,-63,-65,-56,-113,-57,-68,-106,-123,-59,-58,-140,-69,-124,-118,-93,-55,-66,-143,-133,-119,-211,-201,-142,-141,-94,-73,-114,-107,-212,-145,-144,-202,-71,-70,-140,]),'OD':([41,107,116,117,193,202,227,248,],[122,-74,194,-157,-158,249,-75,288,]),'REF':([105,106,111,179,189,233,268,304,324,],[-15,179,179,179,179,-16,179,179,179,]),'FOR':([41,],[119,]),'LBRACKET':([7,13,14,18,19,26,27,28,32,45,48,49,51,53,54,57,58,59,60,62,64,66,67,70,71,73,75,76,81,82,96,144,152,164,168,181,204,205,207,211,216,224,225,250,253,254,278,],[47,-199,-139,-137,-138,-135,-200,-136,92,-140,-62,-72,-64,-60,141,-139,-67,-61,-63,-65,-56,-57,-68,92,-59,-58,-140,-69,-55,-66,-143,92,-211,-140,232,235,-201,-142,-141,-73,-212,-145,-144,-202,-71,-70,-140,]),'MINUS':([7,13,14,16,18,19,26,27,28,30,32,38,45,47,48,49,51,53,57,58,59,60,62,63,64,65,66,67,68,70,71,73,74,75,76,77,78,79,81,82,85,90,91,92,93,94,95,96,97,98,101,115,124,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,145,147,148,149,152,160,164,187,204,205,206,207,208,211,212,213,215,216,217,219,224,225,226,231,235,236,238,242,245,250,253,254,256,258,278,305,307,310,],[-134,-199,-139,61,-137,-138,-135,-200,-136,61,94,61,-140,61,-62,-122,-64,-60,-139,-67,-61,-63,-65,61,-56,-113,-57,-68,-106,-123,-59,-58,61,-140,-69,-124,-118,94,-55,-66,61,-84,-116,61,-110,-111,61,-143,-115,-112,-117,61,61,-101,-100,61,-104,-96,-97,-103,-102,-98,-95,-99,-105,61,61,-133,-119,-109,-108,61,-211,-85,-140,61,-201,-142,61,-141,94,-73,-114,61,-107,-212,61,61,-145,-144,61,61,61,61,61,61,61,-202,-71,-70,61,61,-140,61,61,61,]),'STRCONC':([7,13,14,18,19,26,27,28,32,45,48,49,51,53,57,58,59,60,62,64,65,66,67,68,70,71,73,75,76,77,78,79,81,82,96,144,145,152,164,204,205,207,208,211,212,215,216,224,225,250,253,254,278,],[-134,-199,-139,-137,-138,-135,-200,-136,98,-140,-62,-122,-64,-60,-139,-67,-61,-63,-65,-56,-113,-57,-68,-106,-123,-59,-58,-140,-69,-124,-118,98,-55,-66,-143,-133,-119,-211,-140,-201,-142,-141,98,-73,-114,-107,-212,-145,-144,-202,-71,-70,-140,]),'OR':([7,13,18,19,26,27,28,48,49,50,51,53,57,58,59,60,62,64,65,66,67,68,70,71,73,75,76,77,78,79,81,82,96,144,145,152,204,205,207,208,211,212,215,216,224,225,250,253,254,278,],[-134,-199,-137,-138,-135,-200,-136,-62,-122,139,-64,-60,-139,-67,-61,-63,-65,-56,-113,-57,-68,-106,-123,-59,-58,-140,-69,-124,-118,-93,-55,-66,-143,-133,-119,-211,-201,-142,-141,-94,-73,-114,-107,-212,-145,-144,-202,-71,-70,-140,]),'PROC':([102,],[162,]),'EXIT':([0,5,6,8,11,12,23,41,44,46,102,107,116,117,155,165,185,190,193,201,202,218,223,227,229,248,262,299,316,321,323,334,336,338,343,],[20,-3,20,-9,-5,-8,-7,20,-6,-4,20,-74,20,-157,20,-10,-49,-45,-158,20,20,20,20,-75,-181,20,20,20,20,20,20,20,20,20,20,]),'FALSE':([16,30,38,47,55,61,63,72,74,85,90,91,92,93,94,95,97,98,101,115,124,129,130,131,132,133,134,135,136,137,138,139,140,141,143,147,148,149,160,187,206,213,217,219,226,231,235,236,238,242,245,256,258,305,307,310,],[62,62,62,62,-121,-120,62,62,62,62,-84,-116,62,-110,-111,62,-115,-112,-117,62,62,-101,-100,62,-104,-96,-97,-103,-102,-98,-95,-99,-105,62,62,-109,-108,62,-85,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'LPAREN':([3,9,16,17,21,24,30,31,36,37,38,42,45,47,55,61,63,72,74,75,85,90,91,92,93,94,95,97,98,101,115,124,129,130,131,132,133,134,135,136,137,138,139,140,141,143,147,148,149,160,162,164,167,169,171,175,177,184,187,206,213,217,219,226,231,235,236,238,242,245,256,258,278,286,301,305,307,310,],[-217,-216,63,-215,85,-213,63,-214,-218,-219,63,-220,124,63,-121,-120,63,63,63,124,63,-84,-116,63,-110,-111,63,-115,-112,-117,63,63,-101,-100,63,-104,-96,-97,-103,-102,-98,-95,-99,-105,63,63,-109,-108,63,-85,228,124,231,-25,-30,-26,-27,238,63,63,63,63,63,63,63,63,63,63,63,63,63,63,124,-30,324,63,63,63,]),'UPPER':([0,5,6,8,11,12,16,23,30,38,41,44,46,47,55,61,63,69,72,74,85,90,91,92,93,94,95,97,98,101,102,107,115,116,117,124,129,130,131,132,133,134,135,136,137,138,139,140,141,143,147,148,149,155,160,165,185,187,190,193,201,202,206,213,217,218,219,223,226,227,229,231,235,236,238,242,245,248,256,258,262,299,305,307,310,316,321,323,334,336,338,343,],[9,-3,9,-9,-5,-8,9,-7,9,9,9,-6,-4,9,-121,-120,9,9,9,9,9,-84,-116,9,-110,-111,9,-115,-112,-117,9,-74,9,9,-157,9,-101,-100,9,-104,-96,-97,-103,-102,-98,-95,-99,-105,9,9,-109,-108,9,9,-85,-10,-49,9,-45,-158,9,9,9,9,9,9,9,9,9,-75,-181,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'PLUS':([7,13,14,18,19,26,27,28,32,45,48,49,51,53,57,58,59,60,62,64,65,66,67,68,70,71,73,75,76,77,78,79,81,82,96,144,145,152,164,204,205,207,208,211,212,215,216,224,225,250,253,254,278,],[-134,-199,-139,-137,-138,-135,-200,-136,93,-140,-62,-122,-64,-60,-139,-67,-61,-63,-65,-56,-113,-57,-68,-106,-123,-59,-58,-140,-69,-124,-118,93,-55,-66,-143,-133,-119,-211,-140,-201,-142,-141,93,-73,-114,-107,-212,-145,-144,-202,-71,-70,-140,]),'CHARS':([105,106,111,179,189,233,268,304,324,],[-15,168,168,168,168,-16,168,168,168,]),'IN':([7,13,18,19,26,27,28,48,49,50,51,53,57,58,59,60,62,64,65,66,67,68,70,71,73,75,76,77,78,79,81,82,96,144,145,152,196,197,204,205,207,208,211,212,215,216,224,225,246,250,253,254,278,],[-134,-199,-137,-138,-135,-200,-136,-62,-122,134,-64,-60,-139,-67,-61,-63,-65,-56,-113,-57,-68,-106,-123,-59,-58,-140,-69,-124,-118,-93,-55,-66,-143,-133,-119,-211,-173,247,-201,-142,-141,-94,-73,-114,-107,-212,-145,-144,285,-202,-71,-70,-140,]),'GE':([7,13,18,19,26,27,28,48,49,50,51,53,57,58,59,60,62,64,65,66,67,68,70,71,73,75,76,77,78,79,81,82,96,144,145,152,204,205,207,208,211,212,215,216,224,225,250,253,254,278,],[-134,-199,-137,-138,-135,-200,-136,-62,-122,135,-64,-60,-139,-67,-61,-63,-65,-56,-113,-57,-68,-106,-123,-59,-58,-140,-69,-124,-118,-93,-55,-66,-143,-133,-119,-211,-201,-142,-141,-94,-73,-114,-107,-212,-145,-144,-202,-71,-70,-140,]),'NULL':([16,30,38,47,55,61,63,72,74,85,90,91,92,93,94,95,97,98,101,115,124,129,130,131,132,133,134,135,136,137,138,139,140,141,143,147,148,149,160,187,206,213,217,219,226,231,235,236,238,242,245,256,258,305,307,310,],[76,76,76,76,-121,-120,76,76,76,76,-84,-116,76,-110,-111,76,-115,-112,-117,76,76,-101,-100,76,-104,-96,-97,-103,-102,-98,-95,-99,-105,76,76,-109,-108,76,-85,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'INT':([105,106,111,179,189,233,235,247,268,285,304,305,324,],[-15,169,169,169,169,-16,169,169,169,169,169,169,169,]),'LOC':([169,170,171,172,173,174,175,176,177,180,182,184,234,298,302,303,306,325,326,340,],[-25,-18,-22,-24,-19,-36,-26,-21,-27,-35,-20,-23,-34,319,-28,-37,-29,-39,-44,346,]),'ARROW':([7,13,14,16,18,19,26,27,28,30,32,38,45,47,55,57,61,63,70,72,74,75,85,90,91,92,93,94,95,96,97,98,101,115,124,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,147,148,149,152,160,164,187,204,205,206,207,213,216,217,219,224,225,226,231,235,236,238,242,245,250,256,258,278,305,307,310,],[-134,-199,-139,69,-137,-138,-135,-200,-136,69,96,69,-140,69,-121,-139,-120,69,96,69,69,-140,69,-84,-116,69,-110,-111,69,-143,-115,-112,-117,69,69,-101,-100,69,-104,-96,-97,-103,-102,-98,-95,-99,-105,69,69,96,-109,-108,69,-211,-85,-140,69,-201,-142,69,-141,69,-212,69,69,-145,-144,69,69,69,69,69,69,69,-202,69,69,-140,69,69,69,]),'PRED':([0,5,6,8,11,12,16,23,30,38,41,44,46,47,55,61,63,69,72,74,85,90,91,92,93,94,95,97,98,101,102,107,115,116,117,124,129,130,131,132,133,134,135,136,137,138,139,140,141,143,147,148,149,155,160,165,185,187,190,193,201,202,206,213,217,218,219,223,226,227,229,231,235,236,238,242,245,248,256,258,262,299,305,307,310,316,321,323,334,336,338,343,],[31,-3,31,-9,-5,-8,31,-7,31,31,31,-6,-4,31,-121,-120,31,31,31,31,31,-84,-116,31,-110,-111,31,-115,-112,-117,31,-74,31,31,-157,31,-101,-100,31,-104,-96,-97,-103,-102,-98,-95,-99,-105,31,31,-109,-108,31,31,-85,-10,-49,31,-45,-158,31,31,31,31,31,31,31,31,31,-75,-181,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'DCL':([0,5,6,8,11,12,23,44,46,107,165,185,190,227,229,299,316,321,323,334,336,338,343,],[34,-3,34,-9,-5,-8,-7,-6,-4,-74,-10,-49,-45,-75,-181,34,34,34,34,34,34,34,34,]),'DIV':([7,13,14,18,19,26,27,28,32,45,48,49,51,53,57,58,59,60,62,64,65,66,67,68,70,71,73,75,76,77,78,81,82,96,144,145,152,164,204,205,207,211,212,215,216,224,225,250,253,254,278,],[-134,-199,-139,-137,-138,-135,-200,-136,91,-140,-62,-122,-64,-60,-139,-67,-61,-63,-65,-56,-113,-57,-68,91,-123,-59,-58,-140,-69,-124,-118,-55,-66,-143,-133,-119,-211,-140,-201,-142,-141,-73,-114,91,-212,-145,-144,-202,-71,-70,-140,]),'RPAREN':([7,13,18,19,26,27,28,48,49,50,51,52,53,57,58,59,60,62,64,65,66,67,68,70,71,73,75,76,77,78,79,81,82,85,96,124,142,144,145,150,151,152,153,169,170,171,172,173,174,175,176,177,180,182,184,203,204,205,207,208,211,212,215,216,224,225,228,234,250,251,252,253,254,261,266,267,270,280,293,297,298,302,303,306,314,318,319,320,325,326,340,346,347,],[-134,-199,-137,-138,-135,-200,-136,-62,-122,-91,-64,-92,-60,-139,-67,-61,-63,-65,-56,-113,-57,-68,-106,-123,-59,-58,-140,-69,-124,-118,-93,-55,-66,152,-143,204,211,-133,-119,216,-203,-211,-205,-25,-18,-22,-24,-19,-36,-26,-21,-27,-35,-20,-23,250,-201,-142,-141,-94,-73,-114,-107,-212,-145,-144,269,-34,-202,-31,-33,-71,-70,-204,295,-190,302,306,-125,-192,-193,-28,-37,-29,-126,-191,-195,-194,-39,-44,348,-198,350,]),'NOTEQUAL':([7,13,18,19,26,27,28,48,49,50,51,53,57,58,59,60,62,64,65,66,67,68,70,71,73,75,76,77,78,79,81,82,96,144,145,152,204,205,207,208,211,212,215,216,224,225,250,253,254,278,],[-134,-199,-137,-138,-135,-200,-136,-62,-122,129,-64,-60,-139,-67,-61,-63,-65,-56,-113,-57,-68,-106,-123,-59,-58,-140,-69,-124,-118,-93,-55,-66,-143,-133,-119,-211,-201,-142,-141,-94,-73,-114,-107,-212,-145,-144,-202,-71,-70,-140,]),'LENGTH':([0,5,6,8,11,12,16,23,30,38,41,44,46,47,55,61,63,69,72,74,85,90,91,92,93,94,95,97,98,101,102,107,115,116,117,124,129,130,131,132,133,134,135,136,137,138,139,140,141,143,147,148,149,155,160,165,185,187,190,193,201,202,206,213,217,218,219,223,226,227,229,231,235,236,238,242,245,248,256,258,262,299,305,307,310,316,321,323,334,336,338,343,],[36,-3,36,-9,-5,-8,36,-7,36,36,36,-6,-4,36,-121,-120,36,36,36,36,36,-84,-116,36,-110,-111,36,-115,-112,-117,36,-74,36,36,-157,36,-101,-100,36,-104,-96,-97,-103,-102,-98,-95,-99,-105,36,36,-109,-108,36,36,-85,-10,-49,36,-45,-158,36,36,36,36,36,36,36,36,36,-75,-181,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'END':([5,8,11,12,23,44,46,107,165,185,190,227,229,299,316,321,323,334,336,338,343,],[-3,-9,-5,-8,-7,-6,-4,-74,-10,-49,-45,-75,-181,322,335,337,339,342,344,345,349,]),'FI':([7,13,18,19,26,27,28,48,49,50,51,52,53,57,58,59,60,62,64,65,66,67,68,70,71,73,75,76,77,78,79,81,82,96,107,117,144,145,152,154,155,193,204,205,207,208,211,212,215,216,218,220,222,223,224,225,227,250,253,254,260,262,289,292,293,294,314,315,],[-134,-199,-137,-138,-135,-200,-136,-62,-122,-91,-64,-92,-60,-139,-67,-61,-63,-65,-56,-113,-57,-68,-106,-123,-59,-58,-140,-69,-124,-118,-93,-55,-66,-143,-74,-157,-133,-119,-211,221,-150,-158,-201,-142,-141,-94,-73,-114,-107,-212,-152,264,-154,-151,-145,-144,-75,-202,-71,-70,293,-153,-129,314,-125,-155,-126,-156,]),'BOOL':([105,106,111,179,189,233,235,247,268,285,304,305,324,],[-15,175,175,175,175,-16,175,175,175,175,175,175,175,]),'LT':([7,13,18,19,26,27,28,48,49,50,51,53,57,58,59,60,62,64,65,66,67,68,70,71,73,75,76,77,78,79,81,82,96,144,145,152,204,205,207,208,211,212,215,216,224,225,250,253,254,278,],[-134,-199,-137,-138,-135,-200,-136,-62,-122,132,-64,-60,-139,-67,-61,-63,-65,-56,-113,-57,-68,-106,-123,-59,-58,-140,-69,-124,-118,-93,-55,-66,-143,-133,-119,-211,-201,-142,-141,-94,-73,-114,-107,-212,-145,-144,-202,-71,-70,-140,]),'IF':([0,5,6,8,11,12,16,23,30,38,41,44,46,47,63,74,85,90,92,95,102,107,115,116,117,124,141,155,160,165,185,187,190,193,201,202,206,213,217,218,219,223,226,227,229,231,235,236,238,242,245,248,256,258,262,299,305,307,310,316,321,323,334,336,338,343,],[30,-3,30,-9,-5,-8,74,-7,74,74,30,-6,-4,74,74,74,74,-84,74,74,30,-74,74,30,-157,74,74,30,-85,-10,-49,74,-45,-158,30,30,74,74,74,30,74,30,74,-75,-181,74,74,74,74,74,74,30,74,74,30,30,74,74,74,30,30,30,30,30,30,30,]),'$end':([0,5,6,8,11,12,23,25,29,44,46,107,165,185,190,227,229,],[-222,-3,-1,-9,-5,-8,-7,-2,0,-6,-4,-74,-10,-49,-45,-75,-181,]),'SYN':([0,5,6,8,11,12,23,44,46,107,165,185,190,227,229,299,316,321,323,334,336,338,343,],[39,-3,39,-9,-5,-8,-7,-6,-4,-74,-10,-49,-45,-75,-181,39,39,39,39,39,39,39,39,]),'TYPE':([0,5,6,8,11,12,23,44,46,107,165,185,190,227,229,299,316,321,323,334,336,338,343,],[40,-3,40,-9,-5,-8,-7,-6,-4,-74,-10,-49,-45,-75,-181,40,40,40,40,40,40,40,40,]),'ELSE':([7,13,18,19,26,27,28,48,49,50,51,52,53,57,58,59,60,62,64,65,66,67,68,70,71,73,75,76,77,78,79,81,82,96,107,117,144,145,152,154,155,193,204,205,207,208,211,212,214,215,216,223,224,225,227,250,253,254,255,257,259,291,293,294,313,314,],[-134,-199,-137,-138,-135,-200,-136,-62,-122,-91,-64,-92,-60,-139,-67,-61,-63,-65,-56,-113,-57,-68,-106,-123,-59,-58,-140,-69,-124,-118,-93,-55,-66,-143,-74,-157,-133,-119,-211,218,-150,-158,-201,-142,-141,-94,-73,-114,256,-107,-212,-151,-145,-144,-75,-202,-71,-70,-128,-130,256,-131,-125,218,-132,-126,]),'DO':([0,5,6,8,11,12,23,41,44,46,102,107,116,117,155,165,185,190,193,201,202,218,223,227,229,248,262,299,316,321,323,334,336,338,343,],[41,-3,41,-9,-5,-8,-7,41,-6,-4,41,-74,41,-157,41,-10,-49,-45,-158,41,41,41,41,-75,-181,41,41,41,41,41,41,41,41,41,41,]),'LE':([7,13,18,19,26,27,28,48,49,50,51,53,57,58,59,60,62,64,65,66,67,68,70,71,73,75,76,77,78,79,81,82,96,144,145,152,204,205,207,208,211,212,215,216,224,225,250,253,254,278,],[-134,-199,-137,-138,-135,-200,-136,-62,-122,140,-64,-60,-139,-67,-61,-63,-65,-56,-113,-57,-68,-106,-123,-59,-58,-140,-69,-124,-118,-93,-55,-66,-143,-133,-119,-211,-201,-142,-141,-94,-73,-114,-107,-212,-145,-144,-202,-71,-70,-140,]),'ARRAY':([105,106,111,179,189,233,268,304,324,],[-15,181,181,181,181,-16,181,181,181,]),'STRINGCONST':([16,30,38,47,55,61,63,72,74,85,90,91,92,93,94,95,97,98,101,115,124,129,130,131,132,133,134,135,136,137,138,139,140,141,143,147,148,149,160,187,206,213,217,219,226,231,235,236,238,242,245,256,258,305,307,310,],[67,67,67,67,-121,-120,67,67,67,67,-84,-116,67,-110,-111,67,-115,-112,-117,67,67,-101,-100,67,-104,-96,-97,-103,-102,-98,-95,-99,-105,67,67,-109,-108,67,-85,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'COMMA':([7,13,18,19,26,27,28,48,49,50,51,52,53,57,58,59,60,62,64,65,66,67,68,70,71,73,75,76,77,78,79,81,82,96,103,104,105,106,109,110,111,112,113,114,144,145,151,152,153,157,158,169,170,171,172,173,174,175,176,177,180,182,183,184,204,205,207,208,210,211,212,215,216,224,225,230,233,234,237,239,240,241,243,244,250,251,252,253,254,265,267,268,274,275,276,277,279,281,293,297,298,302,303,306,314,319,320,325,326,327,],[-134,-199,-137,-138,-135,-200,-136,-62,-122,-91,-64,-92,-60,-139,-67,-61,-63,-65,-56,-113,-57,-68,-106,-123,-59,-58,-140,-69,-124,-118,-93,-55,-66,-143,-11,166,-15,178,-50,186,178,178,-46,191,-133,-119,217,-211,-205,-89,226,-25,-18,-22,-24,-19,-36,-26,-21,-27,-35,-20,-14,-23,-201,-142,-141,-94,226,-73,-114,-107,-212,-145,-144,-12,-16,-34,-13,-51,-52,-54,-48,-47,-202,-31,-33,-71,-70,-90,296,178,305,-43,-42,-40,-17,-53,-125,-192,-193,-28,-37,-29,-126,-195,-194,-39,-44,-41,]),'ID':([0,5,6,8,11,12,16,20,23,30,34,38,39,40,41,44,46,47,55,61,63,69,72,74,85,90,91,92,93,94,95,97,98,101,102,105,106,107,111,115,116,117,119,124,129,130,131,132,133,134,135,136,137,138,139,140,141,143,147,148,149,155,160,165,166,178,179,185,186,187,189,190,191,193,201,202,206,213,217,218,219,223,226,227,228,229,231,233,235,236,238,242,245,247,248,256,258,262,268,285,296,299,304,305,307,310,316,321,323,324,334,336,338,343,],[45,-3,45,-9,-5,-8,75,84,-7,75,105,75,105,105,45,-6,-4,75,-121,-120,75,75,75,75,75,-84,-116,75,-110,-111,75,-115,-112,-117,164,-15,171,-74,171,75,45,-157,196,75,-101,-100,75,-104,-96,-97,-103,-102,-98,-95,-99,-105,75,75,-109,-108,75,45,-85,-10,105,233,171,-49,105,75,171,-45,105,-158,164,45,75,75,75,45,75,45,75,-75,105,-181,75,-16,278,75,75,75,75,286,45,75,75,45,171,286,105,45,171,278,75,75,45,45,45,171,45,45,45,45,]),'READ':([0,5,6,8,11,12,16,23,30,38,41,44,46,47,55,61,63,69,72,74,85,90,91,92,93,94,95,97,98,101,102,107,115,116,117,124,129,130,131,132,133,134,135,136,137,138,139,140,141,143,147,148,149,155,160,165,185,187,190,193,201,202,206,213,217,218,219,223,226,227,229,231,235,236,238,242,245,248,256,258,262,299,305,307,310,316,321,323,334,336,338,343,],[37,-3,37,-9,-5,-8,37,-7,37,37,37,-6,-4,37,-121,-120,37,37,37,37,37,-84,-116,37,-110,-111,37,-115,-112,-117,37,-74,37,37,-157,37,-101,-100,37,-104,-96,-97,-103,-102,-98,-95,-99,-105,37,37,-109,-108,37,37,-85,-10,-49,37,-45,-158,37,37,37,37,37,37,37,37,37,-75,-181,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'index_mode':([235,305,],[277,327,]),'primitive_value':([16,30,38,47,63,72,74,85,92,95,115,124,131,141,143,149,187,206,213,217,219,226,231,235,236,238,242,245,256,258,305,307,310,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'string_concatenation_operator':([32,79,208,],[89,147,147,]),'step_enumeration':([119,],[198,]),'statement':([0,6,299,316,321,323,334,336,338,343,],[5,46,5,5,46,5,46,5,46,46,]),'statement_list':([0,299,316,323,336,],[6,321,334,338,343,]),'composite_mode':([106,111,179,189,268,304,324,],[176,176,176,176,176,176,176,]),'boolean_literal':([16,30,38,47,63,72,74,85,92,95,115,124,131,141,143,149,187,206,213,217,219,226,231,235,236,238,242,245,256,258,305,307,310,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'syn_definition':([39,186,],[109,239,]),'formal_parameter_list':([228,296,],[266,318,]),'index_mode_list':([235,],[274,]),'action_statement':([0,6,41,116,155,202,218,223,248,262,299,316,321,323,334,336,338,343,],[12,12,117,193,117,117,117,193,193,193,12,12,12,12,12,12,12,12,]),'result':([16,38,],[56,108,]),'parameter_list':([85,124,217,],[150,203,261,]),'procedure_call':([0,6,16,30,38,41,47,63,69,72,74,85,92,95,102,115,116,124,131,141,143,149,155,187,201,202,206,213,217,218,219,223,226,231,235,236,238,242,245,248,256,258,262,299,305,307,310,316,321,323,334,336,338,343,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'parameter':([85,124,217,],[151,151,151,]),'parameter_attribute':([298,],[320,]),'expression':([16,30,38,47,63,74,85,92,95,115,124,141,187,206,213,217,219,226,231,235,236,238,242,245,256,258,305,307,310,],[80,86,80,128,142,86,153,157,159,86,153,157,241,252,255,153,86,265,271,271,279,271,241,283,289,86,271,329,283,]),'expression_list':([92,141,],[158,210,]),'char_literal':([16,30,38,47,63,72,74,85,92,95,115,124,131,141,143,149,187,206,213,217,219,226,231,235,236,238,242,245,256,258,305,307,310,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'while_control':([41,120,],[118,200,]),'array_element':([0,6,16,30,38,41,47,63,69,72,74,85,92,95,102,115,116,124,131,141,143,149,155,187,201,202,206,213,217,218,219,223,226,231,235,236,238,242,245,248,256,258,262,299,305,307,310,316,321,323,334,336,338,343,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'exit_action':([0,6,41,102,116,155,201,202,218,223,248,262,299,316,321,323,334,336,338,343,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'then_clause':([87,263,],[154,294,]),'array_slice':([0,6,16,30,38,41,47,63,69,72,74,85,92,95,102,115,116,124,131,141,143,149,155,187,201,202,206,213,217,218,219,223,226,231,235,236,238,242,245,248,256,258,262,299,305,307,310,316,321,323,334,336,338,343,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'discrete_mode':([106,111,179,189,235,247,268,285,304,305,324,],[173,173,173,173,276,287,173,312,173,276,173,]),'mode':([106,111,179,189,268,304,324,],[183,188,234,243,298,326,340,]),'builtin_name':([0,6,16,30,38,41,47,63,69,72,74,85,92,95,102,115,116,124,131,141,143,149,155,187,201,202,206,213,217,218,219,223,226,231,235,236,238,242,245,248,256,258,262,299,305,307,310,316,321,323,334,336,338,343,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'lower_bound':([47,92,141,231,235,238,305,],[126,126,126,126,126,126,126,]),'for_control':([41,],[120,]),'empty':([0,],[25,]),'value_array_element':([16,30,38,47,63,72,74,85,92,95,115,124,131,141,143,149,187,206,213,217,219,226,231,235,236,238,242,245,256,258,305,307,310,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'discrete_mode_name':([106,111,179,189,235,247,268,285,304,305,324,],[167,167,167,167,167,167,167,167,167,167,167,]),'integer_expression':([47,307,],[127,328,]),'string_mode':([106,111,179,189,268,304,324,],[180,180,180,180,180,180,180,]),'elseif_expression_list':([214,],[259,]),'dereferenced_reference':([0,6,16,30,38,41,47,63,69,72,74,85,92,95,102,115,116,124,131,141,143,149,155,187,201,202,206,213,217,218,219,223,226,231,235,236,238,242,245,248,256,258,262,299,305,307,310,316,321,323,334,336,338,343,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'assigning_operator':([32,],[95,]),'mode_name':([106,111,179,189,268,304,324,],[170,170,170,170,170,170,170,]),'initialization':([183,],[237,]),'location':([0,6,16,30,38,41,47,63,69,72,74,85,92,95,102,115,116,124,131,141,143,149,155,187,201,202,206,213,217,218,219,223,226,231,235,236,238,242,245,248,256,258,262,299,305,307,310,316,321,323,334,336,338,343,],[32,32,70,70,70,32,70,70,144,70,70,70,70,70,32,70,32,70,70,70,70,70,32,70,32,32,70,70,70,32,70,32,70,70,70,70,70,70,70,32,70,70,32,32,70,70,70,32,32,32,32,32,32,32,]),'elseif_clause':([154,294,],[222,222,]),'end_value':([282,308,309,331,],[311,330,332,341,]),'integer_literal':([16,30,38,47,63,72,74,85,92,95,115,124,131,141,143,149,187,206,213,217,219,226,231,235,236,238,242,245,256,258,305,307,310,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'parenthesized_expression':([16,30,38,47,63,72,74,85,92,95,115,124,131,141,143,149,187,206,213,217,219,226,231,235,236,238,242,245,256,258,305,307,310,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'iteration':([119,],[195,]),'formal_parameter':([228,296,],[267,267,]),'id_list':([34,39,40,166,186,191,228,296,],[106,111,112,106,111,112,268,268,]),'return_action':([0,6,41,102,116,155,201,202,218,223,248,262,299,316,321,323,334,336,338,343,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'operand4':([16,30,38,47,63,72,74,85,92,95,115,124,131,141,143,149,187,206,213,217,219,226,231,235,236,238,242,245,256,258,305,307,310,],[78,78,78,78,78,145,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'control_part':([41,],[123,]),'operand1':([16,30,38,47,63,74,85,92,95,115,124,131,141,187,206,213,217,219,226,231,235,236,238,242,245,256,258,305,307,310,],[79,79,79,79,79,79,79,79,79,79,79,208,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'then_expression':([146,290,],[214,313,]),'literal':([16,30,38,47,63,72,74,85,92,95,115,124,131,141,143,149,187,206,213,217,219,226,231,235,236,238,242,245,256,258,305,307,310,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'procedure_definition':([102,],[163,]),'newmode_statement':([0,6,299,316,321,323,334,336,338,343,],[44,44,44,44,44,44,44,44,44,44,]),'discrete_range_mode':([106,111,179,189,235,247,268,285,304,305,324,],[172,172,172,172,172,172,172,172,172,172,172,]),'string_length':([232,],[273,]),'bracketed_action':([0,6,41,102,116,155,201,202,218,223,248,262,299,316,321,323,334,336,338,343,],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'referenced_location':([16,30,38,47,63,72,74,85,92,95,115,124,131,141,143,149,187,206,213,217,219,226,231,235,236,238,242,245,256,258,305,307,310,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'start_value':([245,],[282,]),'declaration':([34,166,],[103,230,]),'else_clause':([154,294,],[220,315,]),'operand0':([16,30,38,47,63,74,85,92,95,115,124,141,187,206,213,217,219,226,231,235,236,238,242,245,256,258,305,307,310,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'result_action':([0,6,41,102,116,155,201,202,218,223,248,262,299,316,321,323,334,336,338,343,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'action_statement_list':([41,155,202,218,],[116,223,248,262,]),'loop_counter':([119,],[197,]),'conditional_expression':([16,30,38,47,63,74,85,92,95,115,124,141,187,206,213,217,219,226,231,235,236,238,242,245,256,258,305,307,310,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'location_name':([0,6,16,30,38,41,47,63,69,72,74,85,92,95,102,115,116,124,131,141,143,149,155,187,201,202,206,213,217,218,219,223,226,231,235,236,238,242,245,248,256,258,262,299,305,307,310,316,321,323,334,336,338,343,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'procedure_statement':([0,6,299,316,321,323,334,336,338,343,],[8,8,8,8,8,8,8,8,8,8,]),'syn_list':([39,],[110,]),'step_value':([282,],[309,]),'array_primitive_value':([16,30,38,47,63,72,74,85,92,95,115,124,131,141,143,149,187,206,213,217,219,226,231,235,236,238,242,245,256,258,305,307,310,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'declaration_statement':([0,6,299,316,321,323,334,336,338,343,],[11,11,11,11,11,11,11,11,11,11,]),'string_literal':([16,30,38,47,63,72,74,85,92,95,115,124,131,141,143,149,187,206,213,217,219,226,231,235,236,238,242,245,256,258,305,307,310,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'literal_range':([47,92,141,231,235,238,305,],[125,156,209,270,275,280,275,]),'arithmetic_multiplicative_operator':([32,68,215,],[88,143,143,]),'mode_definition':([40,191,],[113,244,]),'result_attribute':([340,],[347,]),'string_reference':([0,6,16,30,38,41,47,63,69,72,74,85,92,95,102,115,116,124,131,141,143,149,155,187,201,202,206,213,217,218,219,223,226,231,235,236,238,242,245,248,256,258,262,299,305,307,310,316,321,323,334,336,338,343,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'call_action':([0,6,16,30,38,41,47,63,69,72,74,85,92,95,102,115,116,124,131,141,143,149,155,187,201,202,206,213,217,218,219,223,226,231,235,236,238,242,245,248,256,258,262,299,305,307,310,316,321,323,334,336,338,343,],[14,14,57,57,57,14,57,57,57,57,57,57,57,57,14,57,14,57,57,57,57,57,14,57,14,14,57,57,57,14,57,14,57,57,57,57,57,57,57,14,57,57,14,14,57,57,57,14,14,14,14,14,14,14,]),'membership_operator':([50,],[133,]),'declaration_list':([34,],[104,]),'do_action':([0,6,41,102,116,155,201,202,218,223,248,262,299,316,321,323,334,336,338,343,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'parameter_spec':([268,],[297,]),'discrete_expression':([245,310,],[284,333,]),'assignment_action':([0,6,41,102,116,155,201,202,218,223,248,262,299,316,321,323,334,336,338,343,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'synonym_statement':([0,6,299,316,321,323,334,336,338,343,],[23,23,23,23,23,23,23,23,23,23,]),'element_node':([304,],[325,]),'operand3':([16,30,38,47,63,74,85,92,95,115,124,131,141,143,149,187,206,213,217,219,226,231,235,236,238,242,245,256,258,305,307,310,],[65,65,65,65,65,65,65,65,65,65,65,65,65,212,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'upper_bound':([206,],[251,]),'value_array_slice':([16,30,38,47,63,72,74,85,92,95,115,124,131,141,143,149,187,206,213,217,219,226,231,235,236,238,242,245,256,258,305,307,310,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'newmode_list':([40,],[114,]),'elseif_expression':([214,259,],[257,291,]),'builtin_call':([0,6,16,30,38,41,47,63,69,72,74,85,92,95,102,115,116,124,131,141,143,149,155,187,201,202,206,213,217,218,219,223,226,231,235,236,238,242,245,248,256,258,262,299,305,307,310,316,321,323,334,336,338,343,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'program':([0,],[29,]),'operand2':([16,30,38,47,63,74,85,92,95,115,124,131,141,149,187,206,213,217,219,226,231,235,236,238,242,245,256,258,305,307,310,],[68,68,68,68,68,68,68,68,68,68,68,68,68,215,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'range_enumeration':([119,],[199,]),'label':([0,6,20,41,116,155,202,218,223,248,262,299,316,321,323,334,336,338,343,],[33,33,83,121,121,121,121,121,121,121,121,33,33,33,33,33,33,33,33,]),'relational_operator':([50,],[138,]),'monadic_operator':([16,30,38,47,63,74,85,92,95,115,124,131,141,143,149,187,206,213,217,219,226,231,235,236,238,242,245,256,258,305,307,310,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'action':([0,6,41,102,116,155,201,202,218,223,248,262,299,316,321,323,334,336,338,343,],[35,35,35,161,35,35,161,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'result_spec':([269,295,],[300,317,]),'array_mode':([106,111,179,189,268,304,324,],[174,174,174,174,174,174,174,]),'closed_dyadic_operator':([32,],[100,]),'constant_expression':([187,242,],[240,281,]),'else_expression':([214,259,],[260,292,]),'empty_literal':([16,30,38,47,63,72,74,85,92,95,115,124,131,141,143,149,187,206,213,217,219,226,231,235,236,238,242,245,256,258,305,307,310,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'operator1':([50,],[131,]),'if_action':([0,6,41,102,116,155,201,202,218,223,248,262,299,316,321,323,334,336,338,343,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'reference_mode':([106,111,179,189,268,304,324,],[182,182,182,182,182,182,182,]),'arithmetic_additive_operator':([32,79,208,],[99,148,148,]),'operator2':([79,208,],[149,149,]),'basic_mode':([106,111,179,189,235,247,268,285,304,305,324,],[184,184,184,184,184,184,184,184,184,184,184,]),'boolean_expression':([30,74,115,219,258,],[87,146,192,263,290,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','lyaParser.py',64),
  ('program -> empty','program',1,'p_program','lyaParser.py',65),
  ('statement_list -> statement','statement_list',1,'p_statement_list1','lyaParser.py',72),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list1','lyaParser.py',73),
  ('statement -> declaration_statement','statement',1,'p_statement','lyaParser.py',80),
  ('statement -> newmode_statement','statement',1,'p_statement','lyaParser.py',81),
  ('statement -> synonym_statement','statement',1,'p_statement','lyaParser.py',82),
  ('statement -> action_statement','statement',1,'p_statement','lyaParser.py',83),
  ('statement -> procedure_statement','statement',1,'p_statement','lyaParser.py',84),
  ('declaration_statement -> DCL declaration_list SMC','declaration_statement',3,'p_declaration_statement','lyaParser.py',92),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','lyaParser.py',96),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','lyaParser.py',97),
  ('declaration -> id_list mode initialization','declaration',3,'p_declaration1','lyaParser.py',104),
  ('declaration -> id_list mode','declaration',2,'p_declaration2','lyaParser.py',108),
  ('id_list -> ID','id_list',1,'p_id_list','lyaParser.py',112),
  ('id_list -> id_list COMMA ID','id_list',3,'p_id_list','lyaParser.py',113),
  ('initialization -> EQUALS expression','initialization',2,'p_initialization','lyaParser.py',120),
  ('mode -> mode_name','mode',1,'p_mode','lyaParser.py',128),
  ('mode -> discrete_mode','mode',1,'p_mode','lyaParser.py',129),
  ('mode -> reference_mode','mode',1,'p_mode','lyaParser.py',130),
  ('mode -> composite_mode','mode',1,'p_mode','lyaParser.py',131),
  ('mode_name -> ID','mode_name',1,'p_mode_name','lyaParser.py',135),
  ('discrete_mode -> basic_mode','discrete_mode',1,'p_discrete_mode','lyaParser.py',139),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','lyaParser.py',140),
  ('basic_mode -> INT','basic_mode',1,'p_basic_mode','lyaParser.py',144),
  ('basic_mode -> BOOL','basic_mode',1,'p_basic_mode','lyaParser.py',145),
  ('basic_mode -> CHAR','basic_mode',1,'p_basic_mode','lyaParser.py',146),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaParser.py',150),
  ('discrete_range_mode -> basic_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaParser.py',151),
  ('discrete_mode_name -> ID','discrete_mode_name',1,'p_discrete_mode_name','lyaParser.py',155),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_litereal_range','lyaParser.py',159),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','lyaParser.py',163),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','lyaParser.py',167),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','lyaParser.py',171),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','lyaParser.py',175),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','lyaParser.py',176),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','lyaParser.py',180),
  ('string_length -> INTCONST','string_length',1,'p_string_length','lyaParser.py',184),
  ('array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_node','array_mode',5,'p_array_mode','lyaParser.py',188),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','lyaParser.py',193),
  ('index_mode_list -> index_mode_list COMMA index_mode','index_mode_list',3,'p_index_mode_list','lyaParser.py',194),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','lyaParser.py',201),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','lyaParser.py',202),
  ('element_node -> mode','element_node',1,'p_element_node','lyaParser.py',206),
  ('newmode_statement -> TYPE newmode_list SMC','newmode_statement',3,'p_newmode_statement','lyaParser.py',214),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','lyaParser.py',218),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','lyaParser.py',219),
  ('mode_definition -> id_list EQUALS mode','mode_definition',3,'p_mode_definition','lyaParser.py',226),
  ('synonym_statement -> SYN syn_list SMC','synonym_statement',3,'p_synonym_statement','lyaParser.py',230),
  ('syn_list -> syn_definition','syn_list',1,'p_syn_list','lyaParser.py',238),
  ('syn_list -> syn_list COMMA syn_definition','syn_list',3,'p_syn_list','lyaParser.py',239),
  ('syn_definition -> id_list EQUALS constant_expression','syn_definition',3,'p_syn_definition','lyaParser.py',246),
  ('syn_definition -> id_list mode EQUALS constant_expression','syn_definition',4,'p_syn_definition2','lyaParser.py',250),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','lyaParser.py',254),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','lyaParser.py',262),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','lyaParser.py',263),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','lyaParser.py',264),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','lyaParser.py',265),
  ('literal -> integer_literal','literal',1,'p_literal','lyaParser.py',269),
  ('literal -> boolean_literal','literal',1,'p_literal','lyaParser.py',270),
  ('literal -> char_literal','literal',1,'p_literal','lyaParser.py',271),
  ('literal -> empty_literal','literal',1,'p_literal','lyaParser.py',272),
  ('literal -> string_literal','literal',1,'p_literal','lyaParser.py',273),
  ('integer_literal -> INTCONST','integer_literal',1,'p_integer_literal','lyaParser.py',277),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','lyaParser.py',281),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','lyaParser.py',282),
  ('char_literal -> CHARCONST','char_literal',1,'p_char_literal','lyaParser.py',286),
  ('string_literal -> STRINGCONST','string_literal',1,'p_string_literal','lyaParser.py',290),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','lyaParser.py',294),
  ('value_array_element -> array_primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','lyaParser.py',298),
  ('value_array_slice -> array_primitive_value LBRACKET literal_range RBRACKET','value_array_slice',4,'p_value_array_slice','lyaParser.py',302),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','lyaParser.py',306),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','lyaParser.py',310),
  ('action_statement -> action SMC','action_statement',2,'p_action_statement','lyaParser.py',318),
  ('action_statement -> label COLON action SMC','action_statement',4,'p_action_statement','lyaParser.py',319),
  ('label -> ID','label',1,'p_label','lyaParser.py',326),
  ('action -> assignment_action','action',1,'p_action','lyaParser.py',330),
  ('action -> bracketed_action','action',1,'p_action','lyaParser.py',331),
  ('action -> call_action','action',1,'p_action','lyaParser.py',332),
  ('action -> exit_action','action',1,'p_action','lyaParser.py',333),
  ('action -> return_action','action',1,'p_action','lyaParser.py',334),
  ('action -> result_action','action',1,'p_action','lyaParser.py',335),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','lyaParser.py',343),
  ('assigning_operator -> EQUALS','assigning_operator',1,'p_assigning_operator','lyaParser.py',347),
  ('assigning_operator -> closed_dyadic_operator EQUALS','assigning_operator',2,'p_assigning_operator','lyaParser.py',348),
  ('closed_dyadic_operator -> arithmetic_additive_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','lyaParser.py',355),
  ('closed_dyadic_operator -> arithmetic_multiplicative_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','lyaParser.py',356),
  ('closed_dyadic_operator -> string_concatenation_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','lyaParser.py',357),
  ('expression_list -> expression','expression_list',1,'p_expression_list','lyaParser.py',361),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','lyaParser.py',362),
  ('expression -> operand0','expression',1,'p_expression','lyaParser.py',369),
  ('expression -> conditional_expression','expression',1,'p_expression','lyaParser.py',370),
  ('operand0 -> operand1','operand0',1,'p_operand0','lyaParser.py',374),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','lyaParser.py',375),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','lyaParser.py',382),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','lyaParser.py',383),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','lyaParser.py',387),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','lyaParser.py',391),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','lyaParser.py',392),
  ('relational_operator -> ISEQUAL','relational_operator',1,'p_relational_operator','lyaParser.py',393),
  ('relational_operator -> NOTEQUAL','relational_operator',1,'p_relational_operator','lyaParser.py',394),
  ('relational_operator -> GT','relational_operator',1,'p_relational_operator','lyaParser.py',395),
  ('relational_operator -> GE','relational_operator',1,'p_relational_operator','lyaParser.py',396),
  ('relational_operator -> LT','relational_operator',1,'p_relational_operator','lyaParser.py',397),
  ('relational_operator -> LE','relational_operator',1,'p_relational_operator','lyaParser.py',398),
  ('operand1 -> operand2','operand1',1,'p_operand1','lyaParser.py',402),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1','lyaParser.py',403),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','lyaParser.py',410),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','lyaParser.py',411),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','lyaParser.py',415),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','lyaParser.py',416),
  ('string_concatenation_operator -> STRCONC','string_concatenation_operator',1,'p_string_concatenation_operator','lyaParser.py',420),
  ('operand2 -> operand3','operand2',1,'p_operand2','lyaParser.py',424),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','lyaParser.py',425),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaParser.py',432),
  ('arithmetic_multiplicative_operator -> DIV','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaParser.py',433),
  ('arithmetic_multiplicative_operator -> MOD','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaParser.py',434),
  ('operand3 -> operand4','operand3',1,'p_operand3','lyaParser.py',438),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','lyaParser.py',439),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','lyaParser.py',446),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','lyaParser.py',447),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','lyaParser.py',451),
  ('operand4 -> location','operand4',1,'p_operand4','lyaParser.py',452),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','lyaParser.py',453),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','lyaParser.py',459),
  ('conditional_expression -> IF boolean_expression then_expression elseif_expression_list else_expression FI','conditional_expression',6,'p_conditional_expression2','lyaParser.py',463),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','lyaParser.py',467),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','lyaParser.py',471),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','lyaParser.py',475),
  ('elseif_expression_list -> elseif_expression','elseif_expression_list',1,'p_elseif_expression_list','lyaParser.py',479),
  ('elseif_expression_list -> elseif_expression_list elseif_expression','elseif_expression_list',2,'p_elseif_expression_list','lyaParser.py',480),
  ('elseif_expression -> ELSIF boolean_expression then_expression','elseif_expression',3,'p_elseif_expression','lyaParser.py',487),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','lyaParser.py',495),
  ('location -> location_name','location',1,'p_location','lyaParser.py',499),
  ('location -> string_reference','location',1,'p_location','lyaParser.py',500),
  ('location -> dereferenced_reference','location',1,'p_location','lyaParser.py',501),
  ('location -> array_element','location',1,'p_location','lyaParser.py',502),
  ('location -> array_slice','location',1,'p_location','lyaParser.py',503),
  ('location -> call_action','location',1,'p_location','lyaParser.py',504),
  ('location_name -> ID','location_name',1,'p_location_name','lyaParser.py',508),
  ('string_reference -> location_name LBRACKET integer_expression RBRACKET','string_reference',4,'p_string_reference','lyaParser.py',512),
  ('string_reference -> location_name LBRACKET literal_range RBRACKET','string_reference',4,'p_string_reference2','lyaParser.py',516),
  ('dereferenced_reference -> location ARROW','dereferenced_reference',2,'p_dereferenced_reference','lyaParser.py',520),
  ('array_element -> location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','lyaParser.py',524),
  ('array_slice -> location LBRACKET literal_range RBRACKET','array_slice',4,'p_array_slice','lyaParser.py',528),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','lyaParser.py',536),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','lyaParser.py',537),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','lyaParser.py',545),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action2','lyaParser.py',549),
  ('then_clause -> THEN','then_clause',1,'p_then_clause','lyaParser.py',553),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','lyaParser.py',554),
  ('else_clause -> ELSE','else_clause',1,'p_else_clause','lyaParser.py',561),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','lyaParser.py',562),
  ('else_clause -> elseif_clause','else_clause',1,'p_else_clause2','lyaParser.py',569),
  ('elseif_clause -> ELSIF boolean_expression then_clause','elseif_clause',3,'p_elseif_clause','lyaParser.py',573),
  ('elseif_clause -> ELSIF boolean_expression then_clause else_clause','elseif_clause',4,'p_elseif_clause2','lyaParser.py',577),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','lyaParser.py',582),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','lyaParser.py',583),
  ('do_action -> DO OD','do_action',2,'p_do_action','lyaParser.py',594),
  ('do_action -> DO control_part SMC OD','do_action',4,'p_do_action2','lyaParser.py',598),
  ('do_action -> DO control_part SMC action_statement_list OD','do_action',5,'p_do_action3','lyaParser.py',602),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action4','lyaParser.py',606),
  ('control_part -> for_control','control_part',1,'p_control_part','lyaParser.py',610),
  ('control_part -> while_control','control_part',1,'p_control_part','lyaParser.py',611),
  ('control_part -> for_control while_control','control_part',2,'p_control_part2','lyaParser.py',615),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','lyaParser.py',619),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','lyaParser.py',623),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','lyaParser.py',624),
  ('step_enumeration -> loop_counter EQUALS start_value end_value','step_enumeration',4,'p_step_enumeration','lyaParser.py',628),
  ('step_enumeration -> loop_counter EQUALS start_value step_value end_value','step_enumeration',5,'p_step_enumeration2','lyaParser.py',632),
  ('step_enumeration -> loop_counter EQUALS start_value DOWN end_value','step_enumeration',5,'p_step_enumeration3','lyaParser.py',636),
  ('step_enumeration -> loop_counter EQUALS start_value step_value DOWN end_value','step_enumeration',6,'p_step_enumeration4','lyaParser.py',640),
  ('loop_counter -> ID','loop_counter',1,'p_loop_counter','lyaParser.py',644),
  ('start_value -> discrete_expression','start_value',1,'p_start_value','lyaParser.py',648),
  ('step_value -> BY integer_expression','step_value',2,'p_step_value','lyaParser.py',652),
  ('end_value -> TO discrete_expression','end_value',2,'p_end_value','lyaParser.py',656),
  ('discrete_expression -> expression','discrete_expression',1,'p_discrete_expression','lyaParser.py',660),
  ('range_enumeration -> loop_counter IN discrete_mode','range_enumeration',3,'p_range_enumeration','lyaParser.py',664),
  ('range_enumeration -> loop_counter DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration2','lyaParser.py',668),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','lyaParser.py',672),
  ('procedure_statement -> label COLON procedure_definition SMC','procedure_statement',4,'p_procedure_statement','lyaParser.py',680),
  ('procedure_definition -> PROC LPAREN RPAREN SMC END','procedure_definition',5,'p_procedure_definition1','lyaParser.py',684),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SMC statement_list END','procedure_definition',7,'p_procedure_definition1','lyaParser.py',685),
  ('procedure_definition -> PROC LPAREN RPAREN SMC statement_list END','procedure_definition',6,'p_procedure_definition1','lyaParser.py',686),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SMC END','procedure_definition',6,'p_procedure_definition2','lyaParser.py',695),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SMC END','procedure_definition',7,'p_procedure_definition2','lyaParser.py',696),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SMC statement_list END','procedure_definition',8,'p_procedure_definition2','lyaParser.py',697),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SMC statement_list END','procedure_definition',7,'p_procedure_definition3','lyaParser.py',706),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SMC END','procedure_definition',6,'p_procedure_definition3','lyaParser.py',707),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','lyaParser.py',714),
  ('formal_parameter_list -> formal_parameter COMMA formal_parameter_list','formal_parameter_list',3,'p_formal_parameter_list','lyaParser.py',715),
  ('formal_parameter -> id_list parameter_spec','formal_parameter',2,'p_formal_parameter','lyaParser.py',722),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','lyaParser.py',726),
  ('parameter_spec -> mode parameter_attribute','parameter_spec',2,'p_parameter_spec','lyaParser.py',727),
  ('parameter_attribute -> LOC','parameter_attribute',1,'p_parameter_attribute','lyaParser.py',734),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','lyaParser.py',738),
  ('result_spec -> RETURNS LPAREN mode result_attribute RPAREN','result_spec',5,'p_result_spec','lyaParser.py',739),
  ('result_attribute -> LOC','result_attribute',1,'p_result_attribute','lyaParser.py',746),
  ('call_action -> procedure_call','call_action',1,'p_call_action','lyaParser.py',754),
  ('call_action -> builtin_call','call_action',1,'p_call_action','lyaParser.py',755),
  ('procedure_call -> ID LPAREN RPAREN','procedure_call',3,'p_procedure_call','lyaParser.py',759),
  ('procedure_call -> ID LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','lyaParser.py',760),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','lyaParser.py',767),
  ('parameter_list -> parameter COMMA parameter_list','parameter_list',3,'p_parameter_list','lyaParser.py',768),
  ('parameter -> expression','parameter',1,'p_parameter','lyaParser.py',775),
  ('exit_action -> EXIT label','exit_action',2,'p_exit_action','lyaParser.py',783),
  ('return_action -> RETURN','return_action',1,'p_return_action','lyaParser.py',787),
  ('return_action -> RETURN result','return_action',2,'p_return_action','lyaParser.py',788),
  ('result_action -> RESULT result','result_action',2,'p_result_action','lyaParser.py',795),
  ('result -> expression','result',1,'p_result','lyaParser.py',799),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','lyaParser.py',803),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','lyaParser.py',804),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','lyaParser.py',811),
  ('builtin_name -> PRED','builtin_name',1,'p_builtin_name','lyaParser.py',812),
  ('builtin_name -> SUCC','builtin_name',1,'p_builtin_name','lyaParser.py',813),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','lyaParser.py',814),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','lyaParser.py',815),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','lyaParser.py',816),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','lyaParser.py',817),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','lyaParser.py',818),
  ('integer_expression -> expression','integer_expression',1,'p_integer_expression','lyaParser.py',827),
  ('empty -> <empty>','empty',0,'p_empty','lyaParser.py',834),
]
