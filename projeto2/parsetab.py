
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'C4246CB305FE496B5D71BC94A581D205'
    
_lr_action_items = {'TIMES':([2,4,6,7,14,21,23,26,27,39,47,48,50,52,53,56,57,58,59,60,61,62,63,65,67,68,69,70,72,73,78,79,80,100,145,146,173,200,204,205,206,208,210,215,221,222,228,247,253,254,277,],[-134,-200,-137,-135,-199,94,-139,-138,-136,-140,-61,-63,-67,-113,94,-118,-62,-60,-59,-124,-64,-69,-123,-139,-68,-122,-56,-65,-66,-58,-140,-57,-55,-143,-133,-119,-211,-201,-140,-142,-141,-114,94,-73,-145,-144,-212,-202,-71,-70,-140,]),'DO':([0,11,16,31,32,33,37,40,45,86,88,93,113,124,156,157,160,167,193,195,198,219,245,246,248,250,284,311,329,331,333,337,339,341,347,],[11,11,-9,-7,-3,11,-8,-5,-6,11,-157,-74,-4,11,11,-158,11,-45,-49,-10,11,11,11,11,-75,-181,11,11,11,11,11,11,11,11,11,]),'LOWER':([0,9,11,16,31,32,33,37,38,40,41,45,46,54,71,74,75,77,81,86,87,88,93,94,96,97,98,99,101,102,103,105,112,113,122,124,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,147,156,157,160,165,167,180,193,195,198,207,214,216,219,223,227,229,230,231,236,240,242,245,246,248,250,256,259,284,296,298,302,311,329,331,333,337,339,341,347,],[5,5,5,-9,-7,-3,5,-8,5,-5,5,-6,5,-121,5,-120,5,5,5,5,5,-157,-74,-115,5,-112,-116,-110,-117,-84,5,-111,5,-4,5,5,5,-98,-104,-97,-102,-96,-100,-99,-95,-105,-101,-103,5,-108,-109,5,5,5,-158,5,-85,-45,5,-49,-10,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,-75,-181,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'PRINT':([0,9,11,16,31,32,33,37,38,40,41,45,46,54,71,74,75,77,81,86,87,88,93,94,96,97,98,99,101,102,103,105,112,113,122,124,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,147,156,157,160,165,167,180,193,195,198,207,214,216,219,223,227,229,230,231,236,240,242,245,246,248,250,256,259,284,296,298,302,311,329,331,333,337,339,341,347,],[10,10,10,-9,-7,-3,10,-8,10,-5,10,-6,10,-121,10,-120,10,10,10,10,10,-157,-74,-115,10,-112,-116,-110,-117,-84,10,-111,10,-4,10,10,10,-98,-104,-97,-102,-96,-100,-99,-95,-105,-101,-103,10,-108,-109,10,10,10,-158,10,-85,-45,10,-49,-10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,-75,-181,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'RETURNS':([287,312,],[309,309,]),'STRINGCONST':([9,38,41,46,54,74,75,77,81,87,94,96,97,98,99,101,102,103,105,112,122,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,147,165,180,207,214,216,223,227,229,230,231,236,240,242,256,259,296,298,302,],[67,67,67,67,-121,-120,67,67,67,67,-115,67,-112,-116,-110,-117,-84,67,-111,67,67,67,-98,-104,-97,-102,-96,-100,-99,-95,-105,-101,-103,67,-108,-109,67,67,-85,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'BY':([2,4,6,7,14,26,27,47,48,50,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,73,78,79,80,100,145,146,173,200,205,206,208,209,210,215,221,222,228,247,253,254,261,262,263,292,313,],[-134,-200,-137,-135,-199,-138,-136,-61,-63,-67,-113,-106,-91,-118,-62,-60,-59,-124,-64,-69,-123,-92,-139,-93,-68,-122,-56,-65,-66,-58,-140,-57,-55,-143,-133,-119,-211,-201,-142,-141,-114,-94,-107,-73,-145,-144,-212,-202,-71,-70,-177,-174,298,-125,-126,]),'DIV':([2,4,6,7,14,21,23,26,27,39,47,48,50,52,53,56,57,58,59,60,61,62,63,65,67,68,69,70,72,73,78,79,80,100,145,146,173,200,204,205,206,208,210,215,221,222,228,247,253,254,277,],[-134,-200,-137,-135,-199,98,-139,-138,-136,-140,-61,-63,-67,-113,98,-118,-62,-60,-59,-124,-64,-69,-123,-139,-68,-122,-56,-65,-66,-58,-140,-57,-55,-143,-133,-119,-211,-201,-140,-142,-141,-114,98,-73,-145,-144,-212,-202,-71,-70,-140,]),'CHARCONST':([9,38,41,46,54,74,75,77,81,87,94,96,97,98,99,101,102,103,105,112,122,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,147,165,180,207,214,216,223,227,229,230,231,236,240,242,256,259,296,298,302,],[50,50,50,50,-121,-120,50,50,50,50,-115,50,-112,-116,-110,-117,-84,50,-111,50,50,50,-98,-104,-97,-102,-96,-100,-99,-95,-105,-101,-103,50,-108,-109,50,50,-85,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'FI':([2,4,6,7,14,26,27,47,48,50,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,73,78,79,80,88,93,100,145,146,157,173,197,198,200,205,206,208,209,210,215,221,222,228,243,244,245,246,247,248,253,254,257,284,289,292,293,305,313,324,],[-134,-200,-137,-135,-199,-138,-136,-61,-63,-67,-113,-106,-91,-118,-62,-60,-59,-124,-64,-69,-123,-92,-139,-93,-68,-122,-56,-65,-66,-58,-140,-57,-55,-157,-74,-143,-133,-119,-158,-211,241,-150,-201,-142,-141,-114,-94,-107,-73,-145,-144,-212,-154,283,-152,-151,-202,-75,-71,-70,292,-153,313,-125,-129,-155,-126,-156,]),'ELSIF':([2,4,6,7,14,26,27,47,48,50,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,73,78,79,80,88,93,100,145,146,157,173,197,198,200,205,206,208,209,210,213,215,221,222,228,246,247,248,253,254,255,258,260,290,292,305,313,314,],[-134,-200,-137,-135,-199,-138,-136,-61,-63,-67,-113,-106,-91,-118,-62,-60,-59,-124,-64,-69,-123,-92,-139,-93,-68,-122,-56,-65,-66,-58,-140,-57,-55,-157,-74,-143,-133,-119,-158,-211,242,-150,-201,-142,-141,-114,-94,-107,256,-73,-145,-144,-212,-151,-202,-75,-71,-70,256,-130,-128,-131,-125,242,-126,-132,]),'MOD':([2,4,6,7,14,21,23,26,27,39,47,48,50,52,53,56,57,58,59,60,61,62,63,65,67,68,69,70,72,73,78,79,80,100,145,146,173,200,204,205,206,208,210,215,221,222,228,247,253,254,277,],[-134,-200,-137,-135,-199,101,-139,-138,-136,-140,-61,-63,-67,-113,101,-118,-62,-60,-59,-124,-64,-69,-123,-139,-68,-122,-56,-65,-66,-58,-140,-57,-55,-143,-133,-119,-211,-201,-140,-142,-141,-114,101,-73,-145,-144,-212,-202,-71,-70,-140,]),'IN':([2,4,6,7,14,26,27,47,48,50,52,53,55,56,57,58,59,60,61,62,63,65,66,67,68,69,70,72,73,78,79,80,100,145,146,152,154,173,200,205,206,208,209,210,215,218,221,222,228,247,253,254,277,],[-134,-200,-137,-135,-199,-138,-136,-61,-63,-67,-113,-106,132,-118,-62,-60,-59,-124,-64,-69,-123,-139,-93,-68,-122,-56,-65,-66,-58,-140,-57,-55,-143,-133,-119,217,-173,-211,-201,-142,-141,-114,-94,-107,-73,266,-145,-144,-212,-202,-71,-70,-140,]),'RESULT':([0,11,16,31,32,33,37,40,45,86,88,93,113,124,156,157,160,167,193,195,198,219,245,246,248,250,284,311,329,331,333,337,339,341,347,],[9,9,-9,-7,-3,9,-8,-5,-6,9,-157,-74,-4,9,9,-158,9,-45,-49,-10,9,9,9,9,-75,-181,9,9,9,9,9,9,9,9,9,]),'TRUE':([9,38,41,46,54,74,75,77,81,87,94,96,97,98,99,101,102,103,105,112,122,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,147,165,180,207,214,216,223,227,229,230,231,236,240,242,256,259,296,298,302,],[72,72,72,72,-121,-120,72,72,72,72,-115,72,-112,-116,-110,-117,-84,72,-111,72,72,72,-98,-104,-97,-102,-96,-100,-99,-95,-105,-101,-103,72,-108,-109,72,72,-85,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'SUCC':([0,9,11,16,31,32,33,37,38,40,41,45,46,54,71,74,75,77,81,86,87,88,93,94,96,97,98,99,101,102,103,105,112,113,122,124,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,147,156,157,160,165,167,180,193,195,198,207,214,216,219,223,227,229,230,231,236,240,242,245,246,248,250,256,259,284,296,298,302,311,329,331,333,337,339,341,347,],[8,8,8,-9,-7,-3,8,-8,8,-5,8,-6,8,-121,8,-120,8,8,8,8,8,-157,-74,-115,8,-112,-116,-110,-117,-84,8,-111,8,-4,8,8,8,-98,-104,-97,-102,-96,-100,-99,-95,-105,-101,-103,8,-108,-109,8,8,8,-158,8,-85,-45,8,-49,-10,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,-75,-181,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'NOT':([9,38,41,46,77,81,87,94,96,97,98,99,101,102,103,105,112,122,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,147,165,180,207,214,216,223,227,229,230,231,236,240,242,256,259,296,298,302,],[54,54,54,54,54,54,54,-115,54,-112,-116,-110,-117,-84,54,-111,54,54,54,-98,-104,-97,-102,-96,-100,-99,-95,-105,-101,-103,54,-108,-109,54,54,-85,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'LOC':([174,175,177,179,181,182,183,184,185,187,189,190,234,300,301,304,308,322,323,335,],[-20,-36,-23,-25,-19,-26,-18,-27,-21,-22,-24,-35,-34,-28,-29,-37,326,-39,-44,343,]),'AND':([2,4,6,7,14,26,27,47,48,50,52,53,55,56,57,58,59,60,61,62,63,65,66,67,68,69,70,72,73,78,79,80,100,145,146,173,200,205,206,208,209,210,215,221,222,228,247,253,254,277,],[-134,-200,-137,-135,-199,-138,-136,-61,-63,-67,-113,-106,130,-118,-62,-60,-59,-124,-64,-69,-123,-139,-93,-68,-122,-56,-65,-66,-58,-140,-57,-55,-143,-133,-119,-211,-201,-142,-141,-114,-94,-107,-73,-145,-144,-212,-202,-71,-70,-140,]),'LT':([2,4,6,7,14,26,27,47,48,50,52,53,55,56,57,58,59,60,61,62,63,65,66,67,68,69,70,72,73,78,79,80,100,145,146,173,200,205,206,208,209,210,215,221,222,228,247,253,254,277,],[-134,-200,-137,-135,-199,-138,-136,-61,-63,-67,-113,-106,131,-118,-62,-60,-59,-124,-64,-69,-123,-139,-93,-68,-122,-56,-65,-66,-58,-140,-57,-55,-143,-133,-119,-211,-201,-142,-141,-114,-94,-107,-73,-145,-144,-212,-202,-71,-70,-140,]),'LBRACKET':([2,4,6,7,14,21,23,26,27,39,47,48,50,57,58,59,61,62,63,65,67,68,69,70,72,73,76,78,79,80,100,145,173,178,188,200,204,205,206,215,221,222,228,247,253,254,277,],[46,-200,-137,-135,-199,96,-139,-138,-136,-140,-61,-63,-67,-62,-60,-59,-64,-69,96,-139,-68,-72,-56,-65,-66,-58,147,-140,-57,-55,-143,96,-211,231,235,-201,-140,-142,-141,-73,-145,-144,-212,-202,-71,-70,-140,]),'STRCONC':([2,4,6,7,14,21,23,26,27,39,47,48,50,52,53,56,57,58,59,60,61,62,63,65,66,67,68,69,70,72,73,78,79,80,100,145,146,173,200,204,205,206,208,209,210,215,221,222,228,247,253,254,277,],[-134,-200,-137,-135,-199,97,-139,-138,-136,-140,-61,-63,-67,-113,-106,-118,-62,-60,-59,-124,-64,-69,-123,-139,97,-68,-122,-56,-65,-66,-58,-140,-57,-55,-143,-133,-119,-211,-201,-140,-142,-141,-114,97,-107,-73,-145,-144,-212,-202,-71,-70,-140,]),'FOR':([11,],[84,]),'ISEQUAL':([2,4,6,7,14,26,27,47,48,50,52,53,55,56,57,58,59,60,61,62,63,65,66,67,68,69,70,72,73,78,79,80,100,145,146,173,200,205,206,208,209,210,215,221,222,228,247,253,254,277,],[-134,-200,-137,-135,-199,-138,-136,-61,-63,-67,-113,-106,135,-118,-62,-60,-59,-124,-64,-69,-123,-139,-93,-68,-122,-56,-65,-66,-58,-140,-57,-55,-143,-133,-119,-211,-201,-142,-141,-114,-94,-107,-73,-145,-144,-212,-202,-71,-70,-140,]),'EXIT':([0,11,16,31,32,33,37,40,45,86,88,93,113,124,156,157,160,167,193,195,198,219,245,246,248,250,284,311,329,331,333,337,339,341,347,],[12,12,-9,-7,-3,12,-8,-5,-6,12,-157,-74,-4,12,12,-158,12,-45,-49,-10,12,12,12,12,-75,-181,12,12,12,12,12,12,12,12,12,]),'THEN':([2,4,6,7,14,26,27,47,48,50,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,73,78,79,80,100,120,121,145,146,148,173,200,205,206,208,209,210,215,221,222,228,247,253,254,282,291,292,313,],[-134,-200,-137,-135,-199,-138,-136,-61,-63,-67,-113,-106,-91,-118,-62,-60,-59,-124,-64,-69,-123,-92,-139,-93,-68,-122,-56,-65,-66,-58,-140,-57,-55,-143,-127,198,-133,-119,214,-211,-201,-142,-141,-114,-94,-107,-73,-145,-144,-212,-202,-71,-70,198,214,-125,-126,]),'REF':([109,115,119,169,186,225,286,303,328,],[-15,186,186,186,186,-16,186,186,186,]),'$end':([0,16,20,31,32,33,36,37,40,45,93,113,167,193,195,248,250,],[-222,-9,0,-7,-3,-1,-2,-8,-5,-6,-74,-4,-45,-49,-10,-75,-181,]),'RBRACKET':([2,4,6,7,14,26,27,47,48,50,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,73,78,79,80,100,125,126,127,145,146,161,162,163,173,177,179,182,184,189,200,205,206,208,209,210,211,212,215,221,222,228,247,251,252,253,254,268,273,274,275,276,278,279,292,300,301,313,321,],[-134,-200,-137,-135,-199,-138,-136,-61,-63,-67,-113,-106,-91,-118,-62,-60,-59,-124,-64,-69,-123,-92,-139,-93,-68,-122,-56,-65,-66,-58,-140,-57,-55,-143,205,-221,206,-133,-119,221,-89,222,-211,-23,-25,-26,-27,-24,-201,-142,-141,-114,-94,-107,253,254,-73,-145,-144,-212,-202,-33,-31,-71,-70,-90,-43,-42,-40,303,304,-38,-125,-28,-29,-126,-41,]),'LE':([2,4,6,7,14,26,27,47,48,50,52,53,55,56,57,58,59,60,61,62,63,65,66,67,68,69,70,72,73,78,79,80,100,145,146,173,200,205,206,208,209,210,215,221,222,228,247,253,254,277,],[-134,-200,-137,-135,-199,-138,-136,-61,-63,-67,-113,-106,138,-118,-62,-60,-59,-124,-64,-69,-123,-139,-93,-68,-122,-56,-65,-66,-58,-140,-57,-55,-143,-133,-119,-211,-201,-142,-141,-114,-94,-107,-73,-145,-144,-212,-202,-71,-70,-140,]),'BOOL':([109,115,119,169,186,217,225,231,266,286,302,303,328,],[-15,182,182,182,182,182,-16,182,182,182,182,182,182,]),'UPPER':([0,9,11,16,31,32,33,37,38,40,41,45,46,54,71,74,75,77,81,86,87,88,93,94,96,97,98,99,101,102,103,105,112,113,122,124,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,147,156,157,160,165,167,180,193,195,198,207,214,216,219,223,227,229,230,231,236,240,242,245,246,248,250,256,259,284,296,298,302,311,329,331,333,337,339,341,347,],[15,15,15,-9,-7,-3,15,-8,15,-5,15,-6,15,-121,15,-120,15,15,15,15,15,-157,-74,-115,15,-112,-116,-110,-117,-84,15,-111,15,-4,15,15,15,-98,-104,-97,-102,-96,-100,-99,-95,-105,-101,-103,15,-108,-109,15,15,15,-158,15,-85,-45,15,-49,-10,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-75,-181,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'ELSE':([2,4,6,7,14,26,27,47,48,50,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,73,78,79,80,88,93,100,145,146,157,173,197,198,200,205,206,208,209,210,213,215,221,222,228,246,247,248,253,254,255,258,260,290,292,305,313,314,],[-134,-200,-137,-135,-199,-138,-136,-61,-63,-67,-113,-106,-91,-118,-62,-60,-59,-124,-64,-69,-123,-92,-139,-93,-68,-122,-56,-65,-66,-58,-140,-57,-55,-157,-74,-143,-133,-119,-158,-211,245,-150,-201,-142,-141,-114,-94,-107,259,-73,-145,-144,-212,-151,-202,-75,-71,-70,259,-130,-128,-131,-125,245,-126,-132,]),'INTCONST':([9,38,41,46,54,74,75,77,81,87,94,96,97,98,99,101,102,103,105,112,122,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,147,165,180,207,214,216,223,227,229,230,231,235,236,240,242,256,259,296,298,302,],[61,61,61,61,-121,-120,61,61,61,61,-115,61,-112,-116,-110,-117,-84,61,-111,61,61,61,-98,-104,-97,-102,-96,-100,-99,-95,-105,-101,-103,61,-108,-109,61,61,-85,61,61,61,61,61,61,61,61,61,279,61,61,61,61,61,61,61,61,]),'OD':([11,86,88,93,156,157,219,248,],[89,158,-157,-74,220,-158,267,-75,]),'NULL':([9,38,41,46,54,74,75,77,81,87,94,96,97,98,99,101,102,103,105,112,122,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,147,165,180,207,214,216,223,227,229,230,231,236,240,242,256,259,296,298,302,],[62,62,62,62,-121,-120,62,62,62,62,-115,62,-112,-116,-110,-117,-84,62,-111,62,62,62,-98,-104,-97,-102,-96,-100,-99,-95,-105,-101,-103,62,-108,-109,62,62,-85,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'FALSE':([9,38,41,46,54,74,75,77,81,87,94,96,97,98,99,101,102,103,105,112,122,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,147,165,180,207,214,216,223,227,229,230,231,236,240,242,256,259,296,298,302,],[70,70,70,70,-121,-120,70,70,70,70,-115,70,-112,-116,-110,-117,-84,70,-111,70,70,70,-98,-104,-97,-102,-96,-100,-99,-95,-105,-101,-103,70,-108,-109,70,70,-85,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'RETURN':([0,11,16,31,32,33,37,40,45,86,88,93,113,124,156,157,160,167,193,195,198,219,245,246,248,250,284,311,329,331,333,337,339,341,347,],[41,41,-9,-7,-3,41,-8,-5,-6,41,-157,-74,-4,41,41,-158,41,-45,-49,-10,41,41,41,41,-75,-181,41,41,41,41,41,41,41,41,41,]),'GT':([2,4,6,7,14,26,27,47,48,50,52,53,55,56,57,58,59,60,61,62,63,65,66,67,68,69,70,72,73,78,79,80,100,145,146,173,200,205,206,208,209,210,215,221,222,228,247,253,254,277,],[-134,-200,-137,-135,-199,-138,-136,-61,-63,-67,-113,-106,133,-118,-62,-60,-59,-124,-64,-69,-123,-139,-93,-68,-122,-56,-65,-66,-58,-140,-57,-55,-143,-133,-119,-211,-201,-142,-141,-114,-94,-107,-73,-145,-144,-212,-202,-71,-70,-140,]),'READ':([0,9,11,16,31,32,33,37,38,40,41,45,46,54,71,74,75,77,81,86,87,88,93,94,96,97,98,99,101,102,103,105,112,113,122,124,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,147,156,157,160,165,167,180,193,195,198,207,214,216,219,223,227,229,230,231,236,240,242,245,246,248,250,256,259,284,296,298,302,311,329,331,333,337,339,341,347,],[1,1,1,-9,-7,-3,1,-8,1,-5,1,-6,1,-121,1,-120,1,1,1,1,1,-157,-74,-115,1,-112,-116,-110,-117,-84,1,-111,1,-4,1,1,1,-98,-104,-97,-102,-96,-100,-99,-95,-105,-101,-103,1,-108,-109,1,1,1,-158,1,-85,-45,1,-49,-10,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-75,-181,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'PRED':([0,9,11,16,31,32,33,37,38,40,41,45,46,54,71,74,75,77,81,86,87,88,93,94,96,97,98,99,101,102,103,105,112,113,122,124,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,147,156,157,160,165,167,180,193,195,198,207,214,216,219,223,227,229,230,231,236,240,242,245,246,248,250,256,259,284,296,298,302,311,329,331,333,337,339,341,347,],[24,24,24,-9,-7,-3,24,-8,24,-5,24,-6,24,-121,24,-120,24,24,24,24,24,-157,-74,-115,24,-112,-116,-110,-117,-84,24,-111,24,-4,24,24,24,-98,-104,-97,-102,-96,-100,-99,-95,-105,-101,-103,24,-108,-109,24,24,24,-158,24,-85,-45,24,-49,-10,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-75,-181,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'ARRAY':([109,115,119,169,186,225,286,303,328,],[-15,178,178,178,178,-16,178,178,178,]),'COMMA':([2,4,6,7,14,26,27,47,48,50,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,73,78,79,80,100,108,109,110,111,114,115,116,117,118,119,145,146,162,163,170,171,173,174,175,177,179,181,182,183,184,185,187,189,190,196,200,205,206,208,209,210,212,215,221,222,224,225,226,228,232,233,234,237,238,239,247,251,252,253,254,268,273,274,275,276,280,281,285,286,292,300,301,304,307,308,313,321,322,323,326,327,],[-134,-200,-137,-135,-199,-138,-136,-61,-63,-67,-113,-106,-91,-118,-62,-60,-59,-124,-64,-69,-123,-92,-139,-93,-68,-122,-56,-65,-66,-58,-140,-57,-55,-143,166,-15,-46,168,-50,168,192,194,-11,168,-133,-119,-89,223,227,-205,-211,-20,-36,-23,-25,-19,-26,-18,-27,-21,-22,-24,-35,-14,-201,-142,-141,-114,-94,-107,223,-73,-145,-144,-47,-16,-48,-212,-54,-52,-34,-51,-12,-13,-202,-33,-31,-71,-70,-90,-43,-42,-40,302,-53,-17,306,168,-125,-28,-29,-37,-192,-193,-126,-41,-39,-44,-195,-194,]),'LPAREN':([1,5,8,9,10,15,24,28,30,38,39,41,42,46,54,74,75,77,78,81,87,94,96,97,98,99,101,102,103,105,112,122,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,147,165,176,177,179,180,182,184,187,202,204,207,214,216,223,227,229,230,231,236,240,242,256,259,264,277,296,298,302,309,],[-219,-217,-215,81,-220,-216,-214,112,-218,81,122,81,-213,81,-121,-120,81,81,122,81,81,-115,81,-112,-116,-110,-117,-84,81,-111,81,81,81,-98,-104,-97,-102,-96,-100,-99,-95,-105,-101,-103,81,-108,-109,81,81,-85,229,230,-25,81,-26,-27,-30,249,122,81,81,81,81,81,81,81,81,81,81,81,81,81,-30,122,81,81,81,328,]),'SMC':([2,3,4,6,7,13,14,17,18,19,22,23,26,27,29,41,43,47,48,49,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,73,78,79,80,82,83,85,89,91,92,100,108,110,114,116,117,118,120,123,145,146,150,151,153,155,158,159,164,173,174,175,177,179,181,182,183,184,185,187,189,190,196,200,201,203,205,206,208,209,210,215,220,221,222,224,226,228,232,233,234,237,238,239,241,247,253,254,261,265,267,280,281,283,287,292,294,299,300,301,304,310,312,313,315,317,318,322,323,330,332,334,336,338,340,344,345,346,348,349,350,],[-134,-81,-200,-137,-135,-82,-199,-78,-146,93,-147,-79,-138,-136,-77,-207,-80,-61,-63,-210,-67,-209,-113,-106,-91,-118,-62,-60,-59,-124,-64,-69,-123,-92,-139,-93,-68,-122,-56,-65,-66,-58,-140,-57,-55,-164,-163,156,-159,-206,-76,-143,167,-46,-50,193,195,-11,-127,-208,-133,-119,-165,-168,-166,-167,-162,-180,-83,-211,-20,-36,-23,-25,-19,-26,-18,-27,-21,-22,-24,-35,-14,-201,248,250,-142,-141,-114,-94,-107,-73,-160,-145,-144,-47,-48,-212,-54,-52,-34,-51,-12,-13,-148,-202,-71,-70,-177,-178,-161,-53,-17,-149,311,-125,-169,-179,-28,-29,-37,329,333,-126,-170,-176,-171,-39,-44,-182,339,-172,-189,-184,-185,-196,-188,-186,-183,-197,-187,]),'EQUALS':([2,4,6,7,14,21,23,26,27,39,94,95,97,98,99,100,101,104,105,106,107,109,111,115,152,154,173,174,175,177,179,181,182,183,184,185,187,189,190,191,196,200,204,205,206,221,222,225,228,234,247,300,301,304,322,323,],[-134,-200,-137,-135,-199,102,-139,-138,-136,-140,-115,-86,-112,-116,-110,-143,-117,-87,-111,165,-88,-15,169,180,216,-173,-211,-20,-36,-23,-25,-19,-26,-18,-27,-21,-22,-24,-35,236,240,-201,-140,-142,-141,-145,-144,-16,-212,-34,-202,-28,-29,-37,-39,-44,]),'END':([16,31,32,37,40,45,93,113,167,193,195,248,250,311,329,331,333,337,339,341,347,],[-9,-7,-3,-8,-5,-6,-74,-4,-45,-49,-10,-75,-181,330,336,338,340,345,346,348,350,]),'COLON':([2,4,6,7,14,26,27,39,44,47,48,50,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,73,78,79,80,90,100,126,128,145,146,162,173,200,205,206,208,209,210,215,221,222,228,247,253,254,271,277,292,313,],[-134,-200,-137,-135,-199,-138,-136,-76,124,-61,-63,-67,-113,-106,-91,-118,-62,-60,-59,-124,-64,-69,-123,-92,-139,-93,-68,-122,-56,-65,-66,-58,-140,-57,-55,160,-143,-32,207,-133,-119,-32,-211,-201,-142,-141,-114,-94,-107,-73,-145,-144,-212,-202,-71,-70,-32,-140,-125,-126,]),'NOTEQUAL':([2,4,6,7,14,26,27,47,48,50,52,53,55,56,57,58,59,60,61,62,63,65,66,67,68,69,70,72,73,78,79,80,100,145,146,173,200,205,206,208,209,210,215,221,222,228,247,253,254,277,],[-134,-200,-137,-135,-199,-138,-136,-61,-63,-67,-113,-106,139,-118,-62,-60,-59,-124,-64,-69,-123,-139,-93,-68,-122,-56,-65,-66,-58,-140,-57,-55,-143,-133,-119,-211,-201,-142,-141,-114,-94,-107,-73,-145,-144,-212,-202,-71,-70,-140,]),'GE':([2,4,6,7,14,26,27,47,48,50,52,53,55,56,57,58,59,60,61,62,63,65,66,67,68,69,70,72,73,78,79,80,100,145,146,173,200,205,206,208,209,210,215,221,222,228,247,253,254,277,],[-134,-200,-137,-135,-199,-138,-136,-61,-63,-67,-113,-106,140,-118,-62,-60,-59,-124,-64,-69,-123,-139,-93,-68,-122,-56,-65,-66,-58,-140,-57,-55,-143,-133,-119,-211,-201,-142,-141,-114,-94,-107,-73,-145,-144,-212,-202,-71,-70,-140,]),'MINUS':([2,4,6,7,9,14,21,23,26,27,38,39,41,46,47,48,50,52,53,56,57,58,59,60,61,62,63,65,66,67,68,69,70,72,73,77,78,79,80,81,87,94,96,97,98,99,100,101,102,103,105,112,122,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,165,173,180,200,204,205,206,207,208,209,210,214,215,216,221,222,223,227,228,229,230,231,236,240,242,247,253,254,256,259,277,296,298,302,],[-134,-200,-137,-135,74,-199,105,-139,-138,-136,74,-140,74,74,-61,-63,-67,-113,-106,-118,-62,-60,-59,-124,-64,-69,-123,-139,105,-68,-122,-56,-65,-66,-58,74,-140,-57,-55,74,74,-115,74,-112,-116,-110,-143,-117,-84,74,-111,74,74,74,-98,-104,-97,-102,-96,-100,-99,-95,-105,-101,-103,74,-108,-109,74,-133,-119,74,-85,-211,74,-201,-140,-142,-141,74,-114,105,-107,74,-73,74,-145,-144,74,74,-212,74,74,74,74,74,74,-202,-71,-70,74,74,-140,74,74,74,]),'LENGTH':([0,9,11,16,31,32,33,37,38,40,41,45,46,54,71,74,75,77,81,86,87,88,93,94,96,97,98,99,101,102,103,105,112,113,122,124,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,147,156,157,160,165,167,180,193,195,198,207,214,216,219,223,227,229,230,231,236,240,242,245,246,248,250,256,259,284,296,298,302,311,329,331,333,337,339,341,347,],[30,30,30,-9,-7,-3,30,-8,30,-5,30,-6,30,-121,30,-120,30,30,30,30,30,-157,-74,-115,30,-112,-116,-110,-117,-84,30,-111,30,-4,30,30,30,-98,-104,-97,-102,-96,-100,-99,-95,-105,-101,-103,30,-108,-109,30,30,30,-158,30,-85,-45,30,-49,-10,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-75,-181,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'CHAR':([109,115,119,169,186,217,225,231,266,286,302,303,328,],[-15,184,184,184,184,184,-16,184,184,184,184,184,184,]),'OR':([2,4,6,7,14,26,27,47,48,50,52,53,55,56,57,58,59,60,61,62,63,65,66,67,68,69,70,72,73,78,79,80,100,145,146,173,200,205,206,208,209,210,215,221,222,228,247,253,254,277,],[-134,-200,-137,-135,-199,-138,-136,-61,-63,-67,-113,-106,136,-118,-62,-60,-59,-124,-64,-69,-123,-139,-93,-68,-122,-56,-65,-66,-58,-140,-57,-55,-143,-133,-119,-211,-201,-142,-141,-114,-94,-107,-73,-145,-144,-212,-202,-71,-70,-140,]),'PROC':([124,],[202,]),'SYN':([0,16,31,32,33,37,40,45,93,113,167,193,195,248,250,311,329,331,333,337,339,341,347,],[34,-9,-7,-3,34,-8,-5,-6,-74,-4,-45,-49,-10,-75,-181,34,34,34,34,34,34,34,34,]),'DCL':([0,16,31,32,33,37,40,45,93,113,167,193,195,248,250,311,329,331,333,337,339,341,347,],[35,-9,-7,-3,35,-8,-5,-6,-74,-4,-45,-49,-10,-75,-181,35,35,35,35,35,35,35,35,]),'NUM':([0,9,11,16,31,32,33,37,38,40,41,45,46,54,71,74,75,77,81,86,87,88,93,94,96,97,98,99,101,102,103,105,112,113,122,124,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,147,156,157,160,165,167,180,193,195,198,207,214,216,219,223,227,229,230,231,236,240,242,245,246,248,250,256,259,284,296,298,302,311,329,331,333,337,339,341,347,],[42,42,42,-9,-7,-3,42,-8,42,-5,42,-6,42,-121,42,-120,42,42,42,42,42,-157,-74,-115,42,-112,-116,-110,-117,-84,42,-111,42,-4,42,42,42,-98,-104,-97,-102,-96,-100,-99,-95,-105,-101,-103,42,-108,-109,42,42,42,-158,42,-85,-45,42,-49,-10,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-75,-181,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'WHILE':([2,4,6,7,11,14,26,27,47,48,50,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,73,78,79,80,83,100,145,146,151,153,155,173,177,179,182,184,189,200,205,206,208,209,210,215,221,222,228,247,253,254,261,265,292,294,299,300,301,313,315,317,318,334,],[-134,-200,-137,-135,87,-199,-138,-136,-61,-63,-67,-113,-106,-91,-118,-62,-60,-59,-124,-64,-69,-123,-92,-139,-93,-68,-122,-56,-65,-66,-58,-140,-57,-55,87,-143,-133,-119,-168,-166,-167,-211,-23,-25,-26,-27,-24,-201,-142,-141,-114,-94,-107,-73,-145,-144,-212,-202,-71,-70,-177,-178,-125,-169,-179,-28,-29,-126,-170,-176,-171,-172,]),'PLUS':([2,4,6,7,14,21,23,26,27,39,47,48,50,52,53,56,57,58,59,60,61,62,63,65,66,67,68,69,70,72,73,78,79,80,100,145,146,173,200,204,205,206,208,209,210,215,221,222,228,247,253,254,277,],[-134,-200,-137,-135,-199,99,-139,-138,-136,-140,-61,-63,-67,-113,-106,-118,-62,-60,-59,-124,-64,-69,-123,-139,99,-68,-122,-56,-65,-66,-58,-140,-57,-55,-143,-133,-119,-211,-201,-140,-142,-141,-114,99,-107,-73,-145,-144,-212,-202,-71,-70,-140,]),'INT':([109,115,119,169,186,217,225,231,266,286,302,303,328,],[-15,179,179,179,179,179,-16,179,179,179,179,179,179,]),'IF':([0,9,11,16,31,32,33,37,38,40,41,45,46,77,81,86,87,88,93,96,102,103,112,113,122,124,147,156,157,160,165,167,180,193,195,198,207,214,216,219,223,227,229,230,231,236,240,242,245,246,248,250,256,259,284,296,298,302,311,329,331,333,337,339,341,347,],[38,77,38,-9,-7,-3,38,-8,77,-5,77,-6,77,77,77,38,77,-157,-74,77,-84,77,77,-4,77,38,77,38,-158,38,-85,-45,77,-49,-10,38,77,77,77,38,77,77,77,77,77,77,77,77,38,38,-75,-181,77,77,38,77,77,77,38,38,38,38,38,38,38,38,]),'ID':([0,9,11,12,16,25,31,32,33,34,35,37,38,40,41,45,46,54,71,74,75,77,81,84,86,87,88,93,94,96,97,98,99,101,102,103,105,109,112,113,115,119,122,124,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,147,156,157,160,165,166,167,168,169,180,186,192,193,194,195,198,207,214,216,217,219,223,225,227,229,230,231,236,240,242,245,246,248,249,250,256,259,266,284,286,296,298,302,303,306,311,328,329,331,333,337,339,341,347,],[39,78,39,92,-9,109,-7,-3,39,109,109,-8,78,-5,78,-6,78,-121,78,-120,78,78,78,154,39,78,-157,-74,-115,78,-112,-116,-110,-117,-84,78,-111,-15,78,-4,187,187,78,204,78,-98,-104,-97,-102,-96,-100,-99,-95,-105,-101,-103,78,-108,-109,78,78,39,-158,204,-85,109,-45,225,187,78,187,109,-49,109,-10,39,78,78,78,264,39,78,-16,78,78,78,277,78,78,78,39,39,-75,109,-181,78,78,264,39,187,78,78,277,187,109,39,187,39,39,39,39,39,39,39,]),'CHARS':([109,115,119,169,186,225,286,303,328,],[-15,188,188,188,188,-16,188,188,188,]),'RPAREN':([2,4,6,7,14,26,27,47,48,50,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,73,78,79,80,100,112,122,145,146,149,170,171,172,173,174,175,177,179,181,182,183,184,185,187,189,190,199,200,205,206,208,209,210,215,221,222,228,234,247,249,251,252,253,254,269,270,272,285,288,292,300,301,304,307,308,313,322,323,325,326,327,335,342,343,],[-134,-200,-137,-135,-199,-138,-136,-61,-63,-67,-113,-106,-91,-118,-62,-60,-59,-124,-64,-69,-123,-92,-139,-93,-68,-122,-56,-65,-66,-58,-140,-57,-55,-143,173,200,-133,-119,215,-203,-205,228,-211,-20,-36,-23,-25,-19,-26,-18,-27,-21,-22,-24,-35,247,-201,-142,-141,-114,-94,-107,-73,-145,-144,-212,-34,-202,287,-33,-31,-71,-70,-204,300,301,-190,312,-125,-28,-29,-37,-192,-193,-126,-39,-44,-191,-195,-194,344,349,-198,]),'TYPE':([0,16,31,32,33,37,40,45,93,113,167,193,195,248,250,311,329,331,333,337,339,341,347,],[25,-9,-7,-3,25,-8,-5,-6,-74,-4,-45,-49,-10,-75,-181,25,25,25,25,25,25,25,25,]),'ARROW':([2,4,6,7,9,14,21,23,26,27,38,39,41,46,54,63,65,74,75,77,78,81,87,94,96,97,98,99,100,101,102,103,105,112,122,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,165,173,180,200,204,205,206,207,214,216,221,222,223,227,228,229,230,231,236,240,242,247,256,259,277,296,298,302,],[-134,-200,-137,-135,71,-199,100,-139,-138,-136,71,-140,71,71,-121,100,-139,-120,71,71,-140,71,71,-115,71,-112,-116,-110,-143,-117,-84,71,-111,71,71,71,-98,-104,-97,-102,-96,-100,-99,-95,-105,-101,-103,71,-108,-109,71,100,71,-85,-211,71,-201,-140,-142,-141,71,71,71,-145,-144,71,71,-212,71,71,71,71,71,71,-202,71,71,-140,71,71,71,]),'TO':([2,4,6,7,14,26,27,47,48,50,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,73,78,79,80,100,145,146,173,200,205,206,208,209,210,215,221,222,228,247,253,254,261,262,263,292,295,297,313,316,319,320,],[-134,-200,-137,-135,-199,-138,-136,-61,-63,-67,-113,-106,-91,-118,-62,-60,-59,-124,-64,-69,-123,-92,-139,-93,-68,-122,-56,-65,-66,-58,-140,-57,-55,-143,-133,-119,-211,-201,-142,-141,-114,-94,-107,-73,-145,-144,-212,-202,-71,-70,-177,-174,296,-125,296,296,-126,296,-221,-175,]),'DOWN':([2,4,6,7,14,26,27,47,48,50,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,73,78,79,80,100,145,146,152,154,173,200,205,206,208,209,210,215,221,222,228,247,253,254,261,262,263,292,295,313,319,320,],[-134,-200,-137,-135,-199,-138,-136,-61,-63,-67,-113,-106,-91,-118,-62,-60,-59,-124,-64,-69,-123,-92,-139,-93,-68,-122,-56,-65,-66,-58,-140,-57,-55,-143,-133,-119,218,-173,-211,-201,-142,-141,-114,-94,-107,-73,-145,-144,-212,-202,-71,-70,-177,-174,297,-125,316,-126,-221,-175,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'range_enumeration':([84,],[151,]),'literal_range':([46,96,147,229,230,231,302,],[125,161,211,270,272,273,273,]),'char_literal':([9,38,41,46,75,77,81,87,96,103,112,122,129,141,144,147,180,207,214,216,223,227,229,230,231,236,240,242,256,259,296,298,302,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'parameter':([112,122,227,],[170,170,170,]),'string_literal':([9,38,41,46,75,77,81,87,96,103,112,122,129,141,144,147,180,207,214,216,223,227,229,230,231,236,240,242,256,259,296,298,302,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'end_value':([263,295,297,316,],[294,315,318,334,]),'expression':([9,38,41,46,77,81,87,96,103,112,122,147,180,207,214,216,223,227,229,230,231,236,240,242,256,259,296,298,302,],[49,120,49,126,120,149,120,162,164,171,171,162,232,251,260,261,268,171,271,271,271,232,281,120,120,293,261,319,271,]),'assigning_operator':([21,],[103,]),'step_enumeration':([84,],[155,]),'string_reference':([0,9,11,33,38,41,46,71,75,77,81,86,87,96,103,112,122,124,129,141,144,147,156,160,180,198,207,214,216,219,223,227,229,230,231,236,240,242,245,246,256,259,284,296,298,302,311,329,331,333,337,339,341,347,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'syn_definition':([34,192,],[114,237,]),'constant_expression':([180,236,],[233,280,]),'while_control':([11,83,],[82,150,]),'result_spec':([287,312,],[310,332,]),'expression_list':([96,147,],[163,212,]),'declaration':([35,194,],[118,238,]),'for_control':([11,],[83,]),'syn_list':([34,],[116,]),'result_action':([0,11,33,86,124,156,160,198,219,245,246,284,311,329,331,333,337,339,341,347,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'empty_literal':([9,38,41,46,75,77,81,87,96,103,112,122,129,141,144,147,180,207,214,216,223,227,229,230,231,236,240,242,256,259,296,298,302,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'string_length':([235,],[278,]),'discrete_mode':([115,119,169,186,217,231,266,286,302,303,328,],[181,181,181,181,265,274,299,181,274,181,181,]),'integer_literal':([9,38,41,46,75,77,81,87,96,103,112,122,129,141,144,147,180,207,214,216,223,227,229,230,231,236,240,242,256,259,296,298,302,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'procedure_statement':([0,33,311,329,331,333,337,339,341,347,],[16,16,16,16,16,16,16,16,16,16,]),'bracketed_action':([0,11,33,86,124,156,160,198,219,245,246,284,311,329,331,333,337,339,341,347,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'if_action':([0,11,33,86,124,156,160,198,219,245,246,284,311,329,331,333,337,339,341,347,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'string_mode':([115,119,169,186,286,303,328,],[190,190,190,190,190,190,190,]),'discrete_mode_name':([115,119,169,186,217,231,266,286,302,303,328,],[176,176,176,176,176,176,176,176,176,176,176,]),'action_statement_list':([11,156,198,245,],[86,219,246,284,]),'boolean_literal':([9,38,41,46,75,77,81,87,96,103,112,122,129,141,144,147,180,207,214,216,223,227,229,230,231,236,240,242,256,259,296,298,302,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'string_concatenation_operator':([21,66,209,],[107,143,143,]),'do_action':([0,11,33,86,124,156,160,198,219,245,246,284,311,329,331,333,337,339,341,347,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'call_action':([0,9,11,33,38,41,46,71,75,77,81,86,87,96,103,112,122,124,129,141,144,147,156,160,180,198,207,214,216,219,223,227,229,230,231,236,240,242,245,246,256,259,284,296,298,302,311,329,331,333,337,339,341,347,],[23,65,23,23,65,65,65,65,65,65,65,23,65,65,65,65,65,23,65,65,65,65,23,23,65,23,65,65,65,23,65,65,65,65,65,65,65,65,23,23,65,65,23,65,65,65,23,23,23,23,23,23,23,23,]),'membership_operator':([55,],[134,]),'element_node':([303,],[322,]),'else_clause':([197,305,],[244,324,]),'parameter_list':([112,122,227,],[172,199,269,]),'then_expression':([148,291,],[213,314,]),'operator2':([66,209,],[144,144,]),'operator1':([55,],[141,]),'procedure_definition':([124,],[203,]),'monadic_operator':([9,38,41,46,77,81,87,96,103,112,122,129,141,144,147,180,207,214,216,223,227,229,230,231,236,240,242,256,259,296,298,302,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'arithmetic_additive_operator':([21,66,209,],[95,142,142,]),'closed_dyadic_operator':([21,],[106,]),'mode_definition':([25,166,],[110,224,]),'array_primitive_value':([9,38,41,46,75,77,81,87,96,103,112,122,129,141,144,147,180,207,214,216,223,227,229,230,231,236,240,242,256,259,296,298,302,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'elseif_clause':([197,305,],[243,243,]),'initialization':([196,],[239,]),'iteration':([84,],[153,]),'discrete_range_mode':([115,119,169,186,217,231,266,286,302,303,328,],[189,189,189,189,189,189,189,189,189,189,189,]),'exit_action':([0,11,33,86,124,156,160,198,219,245,246,284,311,329,331,333,337,339,341,347,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'label':([0,11,12,33,86,156,198,219,245,246,284,311,329,331,333,337,339,341,347,],[44,90,91,44,90,90,90,90,90,90,90,44,44,44,44,44,44,44,44,]),'boolean_expression':([38,77,87,242,256,],[121,148,159,282,291,]),'declaration_list':([35,],[117,]),'array_mode':([115,119,169,186,286,303,328,],[175,175,175,175,175,175,175,]),'then_clause':([121,282,],[197,305,]),'arithmetic_multiplicative_operator':([21,53,210,],[104,129,129,]),'reference_mode':([115,119,169,186,286,303,328,],[174,174,174,174,174,174,174,]),'discrete_expression':([216,296,],[262,317,]),'location_name':([0,9,11,33,38,41,46,71,75,77,81,86,87,96,103,112,122,124,129,141,144,147,156,160,180,198,207,214,216,219,223,227,229,230,231,236,240,242,245,246,256,259,284,296,298,302,311,329,331,333,337,339,341,347,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'return_action':([0,11,33,86,124,156,160,198,219,245,246,284,311,329,331,333,337,339,341,347,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'relational_operator':([55,],[137,]),'parameter_attribute':([308,],[327,]),'result':([9,41,],[51,123,]),'array_element':([0,9,11,33,38,41,46,71,75,77,81,86,87,96,103,112,122,124,129,141,144,147,156,160,180,198,207,214,216,219,223,227,229,230,231,236,240,242,245,246,256,259,284,296,298,302,311,329,331,333,337,339,341,347,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'operand3':([9,38,41,46,77,81,87,96,103,112,122,129,141,144,147,180,207,214,216,223,227,229,230,231,236,240,242,256,259,296,298,302,],[52,52,52,52,52,52,52,52,52,52,52,208,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'operand2':([9,38,41,46,77,81,87,96,103,112,122,141,144,147,180,207,214,216,223,227,229,230,231,236,240,242,256,259,296,298,302,],[53,53,53,53,53,53,53,53,53,53,53,53,210,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'operand1':([9,38,41,46,77,81,87,96,103,112,122,141,147,180,207,214,216,223,227,229,230,231,236,240,242,256,259,296,298,302,],[66,66,66,66,66,66,66,66,66,66,66,209,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'operand0':([9,38,41,46,77,81,87,96,103,112,122,147,180,207,214,216,223,227,229,230,231,236,240,242,256,259,296,298,302,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'conditional_expression':([9,38,41,46,77,81,87,96,103,112,122,147,180,207,214,216,223,227,229,230,231,236,240,242,256,259,296,298,302,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'operand4':([9,38,41,46,75,77,81,87,96,103,112,122,129,141,144,147,180,207,214,216,223,227,229,230,231,236,240,242,256,259,296,298,302,],[56,56,56,56,146,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'elseif_expression_list':([213,],[255,]),'builtin_call':([0,9,11,33,38,41,46,71,75,77,81,86,87,96,103,112,122,124,129,141,144,147,156,160,180,198,207,214,216,219,223,227,229,230,231,236,240,242,245,246,256,259,284,296,298,302,311,329,331,333,337,339,341,347,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'newmode_list':([25,],[108,]),'integer_expression':([46,298,],[127,320,]),'procedure_call':([0,9,11,33,38,41,46,71,75,77,81,86,87,96,103,112,122,124,129,141,144,147,156,160,180,198,207,214,216,219,223,227,229,230,231,236,240,242,245,246,256,259,284,296,298,302,311,329,331,333,337,339,341,347,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'lower_bound':([46,96,147,229,230,231,302,],[128,128,128,128,128,128,128,]),'formal_parameter_list':([249,306,],[288,325,]),'referenced_location':([9,38,41,46,75,77,81,87,96,103,112,122,129,141,144,147,180,207,214,216,223,227,229,230,231,236,240,242,256,259,296,298,302,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'declaration_statement':([0,33,311,329,331,333,337,339,341,347,],[40,40,40,40,40,40,40,40,40,40,]),'loop_counter':([84,],[152,]),'action':([0,11,33,86,124,156,160,198,219,245,246,284,311,329,331,333,337,339,341,347,],[19,19,19,19,201,19,201,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'index_mode_list':([231,],[276,]),'program':([0,],[20,]),'location':([0,9,11,33,38,41,46,71,75,77,81,86,87,96,103,112,122,124,129,141,144,147,156,160,180,198,207,214,216,219,223,227,229,230,231,236,240,242,245,246,256,259,284,296,298,302,311,329,331,333,337,339,341,347,],[21,63,21,21,63,63,63,145,63,63,63,21,63,63,63,63,63,21,63,63,63,63,21,21,63,21,63,63,63,21,63,63,63,63,63,63,63,63,21,21,63,63,21,63,63,63,21,21,21,21,21,21,21,21,]),'basic_mode':([115,119,169,186,217,231,266,286,302,303,328,],[177,177,177,177,177,177,177,177,177,177,177,]),'upper_bound':([207,],[252,]),'result_attribute':([335,],[342,]),'index_mode':([231,302,],[275,321,]),'primitive_value':([9,38,41,46,75,77,81,87,96,103,112,122,129,141,144,147,180,207,214,216,223,227,229,230,231,236,240,242,256,259,296,298,302,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'value_array_element':([9,38,41,46,75,77,81,87,96,103,112,122,129,141,144,147,180,207,214,216,223,227,229,230,231,236,240,242,256,259,296,298,302,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'start_value':([216,],[263,]),'array_slice':([0,9,11,33,38,41,46,71,75,77,81,86,87,96,103,112,122,124,129,141,144,147,156,160,180,198,207,214,216,219,223,227,229,230,231,236,240,242,245,246,256,259,284,296,298,302,311,329,331,333,337,339,341,347,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'dereferenced_reference':([0,9,11,33,38,41,46,71,75,77,81,86,87,96,103,112,122,124,129,141,144,147,156,160,180,198,207,214,216,219,223,227,229,230,231,236,240,242,245,246,256,259,284,296,298,302,311,329,331,333,337,339,341,347,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'builtin_name':([0,9,11,33,38,41,46,71,75,77,81,86,87,96,103,112,122,124,129,141,144,147,156,160,180,198,207,214,216,219,223,227,229,230,231,236,240,242,245,246,256,259,284,296,298,302,311,329,331,333,337,339,341,347,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'empty':([0,],[36,]),'assignment_action':([0,11,33,86,124,156,160,198,219,245,246,284,311,329,331,333,337,339,341,347,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'mode_name':([115,119,169,186,286,303,328,],[183,183,183,183,183,183,183,]),'parenthesized_expression':([9,38,41,46,75,77,81,87,96,103,112,122,129,141,144,147,180,207,214,216,223,227,229,230,231,236,240,242,256,259,296,298,302,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'synonym_statement':([0,33,311,329,331,333,337,339,341,347,],[31,31,31,31,31,31,31,31,31,31,]),'formal_parameter':([249,306,],[285,285,]),'statement':([0,33,311,329,331,333,337,339,341,347,],[32,113,32,32,113,32,113,32,113,113,]),'statement_list':([0,311,329,333,339,],[33,331,337,341,347,]),'elseif_expression':([213,255,],[258,290,]),'composite_mode':([115,119,169,186,286,303,328,],[185,185,185,185,185,185,185,]),'id_list':([25,34,35,166,192,194,249,306,],[111,115,119,111,115,119,286,286,]),'control_part':([11,],[85,]),'action_statement':([0,11,33,86,156,198,219,245,246,284,311,329,331,333,337,339,341,347,],[37,88,37,157,88,88,157,88,157,157,37,37,37,37,37,37,37,37,]),'step_value':([263,],[295,]),'value_array_slice':([9,38,41,46,75,77,81,87,96,103,112,122,129,141,144,147,180,207,214,216,223,227,229,230,231,236,240,242,256,259,296,298,302,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'parameter_spec':([286,],[307,]),'literal':([9,38,41,46,75,77,81,87,96,103,112,122,129,141,144,147,180,207,214,216,223,227,229,230,231,236,240,242,256,259,296,298,302,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'newmode_statement':([0,33,311,329,331,333,337,339,341,347,],[45,45,45,45,45,45,45,45,45,45,]),'mode':([115,119,169,186,286,303,328,],[191,196,226,234,308,323,335,]),'else_expression':([213,255,],[257,289,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','lyaParser.py',64),
  ('program -> empty','program',1,'p_program','lyaParser.py',65),
  ('statement_list -> statement','statement_list',1,'p_statement_list1','lyaParser.py',72),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list1','lyaParser.py',73),
  ('statement -> declaration_statement','statement',1,'p_statement','lyaParser.py',80),
  ('statement -> newmode_statement','statement',1,'p_statement','lyaParser.py',81),
  ('statement -> synonym_statement','statement',1,'p_statement','lyaParser.py',82),
  ('statement -> action_statement','statement',1,'p_statement','lyaParser.py',83),
  ('statement -> procedure_statement','statement',1,'p_statement','lyaParser.py',84),
  ('declaration_statement -> DCL declaration_list SMC','declaration_statement',3,'p_declaration_statement','lyaParser.py',92),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','lyaParser.py',96),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','lyaParser.py',97),
  ('declaration -> id_list mode initialization','declaration',3,'p_declaration1','lyaParser.py',104),
  ('declaration -> id_list mode','declaration',2,'p_declaration2','lyaParser.py',108),
  ('id_list -> ID','id_list',1,'p_id_list','lyaParser.py',112),
  ('id_list -> id_list COMMA ID','id_list',3,'p_id_list','lyaParser.py',113),
  ('initialization -> EQUALS expression','initialization',2,'p_initialization','lyaParser.py',120),
  ('mode -> mode_name','mode',1,'p_mode','lyaParser.py',128),
  ('mode -> discrete_mode','mode',1,'p_mode','lyaParser.py',129),
  ('mode -> reference_mode','mode',1,'p_mode','lyaParser.py',130),
  ('mode -> composite_mode','mode',1,'p_mode','lyaParser.py',131),
  ('mode_name -> ID','mode_name',1,'p_mode_name','lyaParser.py',135),
  ('discrete_mode -> basic_mode','discrete_mode',1,'p_discrete_mode','lyaParser.py',139),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','lyaParser.py',140),
  ('basic_mode -> INT','basic_mode',1,'p_basic_mode','lyaParser.py',144),
  ('basic_mode -> BOOL','basic_mode',1,'p_basic_mode','lyaParser.py',145),
  ('basic_mode -> CHAR','basic_mode',1,'p_basic_mode','lyaParser.py',146),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaParser.py',150),
  ('discrete_range_mode -> basic_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaParser.py',151),
  ('discrete_mode_name -> ID','discrete_mode_name',1,'p_discrete_mode_name','lyaParser.py',155),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_litereal_range','lyaParser.py',159),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','lyaParser.py',163),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','lyaParser.py',167),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','lyaParser.py',171),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','lyaParser.py',175),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','lyaParser.py',176),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','lyaParser.py',180),
  ('string_length -> INTCONST','string_length',1,'p_string_length','lyaParser.py',184),
  ('array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_node','array_mode',5,'p_array_mode','lyaParser.py',188),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','lyaParser.py',193),
  ('index_mode_list -> index_mode_list COMMA index_mode','index_mode_list',3,'p_index_mode_list','lyaParser.py',194),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','lyaParser.py',201),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','lyaParser.py',202),
  ('element_node -> mode','element_node',1,'p_element_node','lyaParser.py',206),
  ('newmode_statement -> TYPE newmode_list SMC','newmode_statement',3,'p_newmode_statement','lyaParser.py',214),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','lyaParser.py',218),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','lyaParser.py',219),
  ('mode_definition -> id_list EQUALS mode','mode_definition',3,'p_mode_definition','lyaParser.py',226),
  ('synonym_statement -> SYN syn_list SMC','synonym_statement',3,'p_synonym_statement','lyaParser.py',230),
  ('syn_list -> syn_definition','syn_list',1,'p_syn_list','lyaParser.py',238),
  ('syn_list -> syn_list COMMA syn_definition','syn_list',3,'p_syn_list','lyaParser.py',239),
  ('syn_definition -> id_list EQUALS constant_expression','syn_definition',3,'p_syn_definition','lyaParser.py',246),
  ('syn_definition -> id_list mode EQUALS constant_expression','syn_definition',4,'p_syn_definition2','lyaParser.py',250),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','lyaParser.py',254),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','lyaParser.py',262),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','lyaParser.py',263),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','lyaParser.py',264),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','lyaParser.py',265),
  ('literal -> integer_literal','literal',1,'p_literal','lyaParser.py',269),
  ('literal -> boolean_literal','literal',1,'p_literal','lyaParser.py',270),
  ('literal -> char_literal','literal',1,'p_literal','lyaParser.py',271),
  ('literal -> empty_literal','literal',1,'p_literal','lyaParser.py',272),
  ('literal -> string_literal','literal',1,'p_literal','lyaParser.py',273),
  ('integer_literal -> INTCONST','integer_literal',1,'p_integer_literal','lyaParser.py',277),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','lyaParser.py',281),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','lyaParser.py',282),
  ('char_literal -> CHARCONST','char_literal',1,'p_char_literal','lyaParser.py',286),
  ('string_literal -> STRINGCONST','string_literal',1,'p_string_literal','lyaParser.py',290),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','lyaParser.py',294),
  ('value_array_element -> array_primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','lyaParser.py',298),
  ('value_array_slice -> array_primitive_value LBRACKET literal_range RBRACKET','value_array_slice',4,'p_value_array_slice','lyaParser.py',302),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','lyaParser.py',306),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','lyaParser.py',310),
  ('action_statement -> action SMC','action_statement',2,'p_action_statement','lyaParser.py',318),
  ('action_statement -> label COLON action SMC','action_statement',4,'p_action_statement','lyaParser.py',319),
  ('label -> ID','label',1,'p_label','lyaParser.py',326),
  ('action -> assignment_action','action',1,'p_action','lyaParser.py',330),
  ('action -> bracketed_action','action',1,'p_action','lyaParser.py',331),
  ('action -> call_action','action',1,'p_action','lyaParser.py',332),
  ('action -> exit_action','action',1,'p_action','lyaParser.py',333),
  ('action -> return_action','action',1,'p_action','lyaParser.py',334),
  ('action -> result_action','action',1,'p_action','lyaParser.py',335),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','lyaParser.py',343),
  ('assigning_operator -> EQUALS','assigning_operator',1,'p_assigning_operator','lyaParser.py',347),
  ('assigning_operator -> closed_dyadic_operator EQUALS','assigning_operator',2,'p_assigning_operator','lyaParser.py',348),
  ('closed_dyadic_operator -> arithmetic_additive_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','lyaParser.py',355),
  ('closed_dyadic_operator -> arithmetic_multiplicative_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','lyaParser.py',356),
  ('closed_dyadic_operator -> string_concatenation_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','lyaParser.py',357),
  ('expression_list -> expression','expression_list',1,'p_expression_list','lyaParser.py',361),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','lyaParser.py',362),
  ('expression -> operand0','expression',1,'p_expression','lyaParser.py',369),
  ('expression -> conditional_expression','expression',1,'p_expression','lyaParser.py',370),
  ('operand0 -> operand1','operand0',1,'p_operand0','lyaParser.py',374),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','lyaParser.py',375),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','lyaParser.py',382),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','lyaParser.py',383),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','lyaParser.py',387),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','lyaParser.py',391),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','lyaParser.py',392),
  ('relational_operator -> ISEQUAL','relational_operator',1,'p_relational_operator','lyaParser.py',393),
  ('relational_operator -> NOTEQUAL','relational_operator',1,'p_relational_operator','lyaParser.py',394),
  ('relational_operator -> GT','relational_operator',1,'p_relational_operator','lyaParser.py',395),
  ('relational_operator -> GE','relational_operator',1,'p_relational_operator','lyaParser.py',396),
  ('relational_operator -> LT','relational_operator',1,'p_relational_operator','lyaParser.py',397),
  ('relational_operator -> LE','relational_operator',1,'p_relational_operator','lyaParser.py',398),
  ('operand1 -> operand2','operand1',1,'p_operand1','lyaParser.py',402),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1','lyaParser.py',403),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','lyaParser.py',410),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','lyaParser.py',411),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','lyaParser.py',415),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','lyaParser.py',416),
  ('string_concatenation_operator -> STRCONC','string_concatenation_operator',1,'p_string_concatenation_operator','lyaParser.py',420),
  ('operand2 -> operand3','operand2',1,'p_operand2','lyaParser.py',424),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','lyaParser.py',425),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaParser.py',432),
  ('arithmetic_multiplicative_operator -> DIV','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaParser.py',433),
  ('arithmetic_multiplicative_operator -> MOD','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaParser.py',434),
  ('operand3 -> operand4','operand3',1,'p_operand3','lyaParser.py',438),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','lyaParser.py',439),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','lyaParser.py',446),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','lyaParser.py',447),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','lyaParser.py',451),
  ('operand4 -> location','operand4',1,'p_operand4','lyaParser.py',452),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','lyaParser.py',453),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','lyaParser.py',459),
  ('conditional_expression -> IF boolean_expression then_expression elseif_expression_list else_expression FI','conditional_expression',6,'p_conditional_expression2','lyaParser.py',463),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','lyaParser.py',467),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','lyaParser.py',471),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','lyaParser.py',475),
  ('elseif_expression_list -> elseif_expression','elseif_expression_list',1,'p_elseif_expression_list','lyaParser.py',479),
  ('elseif_expression_list -> elseif_expression_list elseif_expression','elseif_expression_list',2,'p_elseif_expression_list','lyaParser.py',480),
  ('elseif_expression -> ELSIF boolean_expression then_expression','elseif_expression',3,'p_elseif_expression','lyaParser.py',487),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','lyaParser.py',495),
  ('location -> location_name','location',1,'p_location','lyaParser.py',499),
  ('location -> string_reference','location',1,'p_location','lyaParser.py',500),
  ('location -> dereferenced_reference','location',1,'p_location','lyaParser.py',501),
  ('location -> array_element','location',1,'p_location','lyaParser.py',502),
  ('location -> array_slice','location',1,'p_location','lyaParser.py',503),
  ('location -> call_action','location',1,'p_location','lyaParser.py',504),
  ('location_name -> ID','location_name',1,'p_location_name','lyaParser.py',508),
  ('string_reference -> location_name LBRACKET integer_expression RBRACKET','string_reference',4,'p_string_reference','lyaParser.py',512),
  ('string_reference -> location_name LBRACKET literal_range RBRACKET','string_reference',4,'p_string_reference2','lyaParser.py',516),
  ('dereferenced_reference -> location ARROW','dereferenced_reference',2,'p_dereferenced_reference','lyaParser.py',520),
  ('array_element -> location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','lyaParser.py',524),
  ('array_slice -> location LBRACKET literal_range RBRACKET','array_slice',4,'p_array_slice','lyaParser.py',528),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','lyaParser.py',536),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','lyaParser.py',537),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','lyaParser.py',545),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action2','lyaParser.py',549),
  ('then_clause -> THEN','then_clause',1,'p_then_clause','lyaParser.py',553),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','lyaParser.py',554),
  ('else_clause -> ELSE','else_clause',1,'p_else_clause','lyaParser.py',561),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','lyaParser.py',562),
  ('else_clause -> elseif_clause','else_clause',1,'p_else_clause2','lyaParser.py',569),
  ('elseif_clause -> ELSIF boolean_expression then_clause','elseif_clause',3,'p_elseif_clause','lyaParser.py',573),
  ('elseif_clause -> ELSIF boolean_expression then_clause else_clause','elseif_clause',4,'p_elseif_clause2','lyaParser.py',577),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','lyaParser.py',582),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','lyaParser.py',583),
  ('do_action -> DO OD','do_action',2,'p_do_action','lyaParser.py',594),
  ('do_action -> DO control_part SMC OD','do_action',4,'p_do_action2','lyaParser.py',598),
  ('do_action -> DO control_part SMC action_statement_list OD','do_action',5,'p_do_action3','lyaParser.py',602),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action4','lyaParser.py',606),
  ('control_part -> for_control','control_part',1,'p_control_part','lyaParser.py',610),
  ('control_part -> while_control','control_part',1,'p_control_part','lyaParser.py',611),
  ('control_part -> for_control while_control','control_part',2,'p_control_part2','lyaParser.py',615),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','lyaParser.py',619),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','lyaParser.py',623),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','lyaParser.py',624),
  ('step_enumeration -> loop_counter EQUALS start_value end_value','step_enumeration',4,'p_step_enumeration','lyaParser.py',628),
  ('step_enumeration -> loop_counter EQUALS start_value step_value end_value','step_enumeration',5,'p_step_enumeration2','lyaParser.py',632),
  ('step_enumeration -> loop_counter EQUALS start_value DOWN end_value','step_enumeration',5,'p_step_enumeration3','lyaParser.py',636),
  ('step_enumeration -> loop_counter EQUALS start_value step_value DOWN end_value','step_enumeration',6,'p_step_enumeration4','lyaParser.py',640),
  ('loop_counter -> ID','loop_counter',1,'p_loop_counter','lyaParser.py',644),
  ('start_value -> discrete_expression','start_value',1,'p_start_value','lyaParser.py',648),
  ('step_value -> BY integer_expression','step_value',2,'p_step_value','lyaParser.py',652),
  ('end_value -> TO discrete_expression','end_value',2,'p_end_value','lyaParser.py',656),
  ('discrete_expression -> expression','discrete_expression',1,'p_discrete_expression','lyaParser.py',660),
  ('range_enumeration -> loop_counter IN discrete_mode','range_enumeration',3,'p_range_enumeration','lyaParser.py',664),
  ('range_enumeration -> loop_counter DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration2','lyaParser.py',668),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','lyaParser.py',672),
  ('procedure_statement -> label COLON procedure_definition SMC','procedure_statement',4,'p_procedure_statement','lyaParser.py',680),
  ('procedure_definition -> PROC LPAREN RPAREN SMC END','procedure_definition',5,'p_procedure_definition1','lyaParser.py',684),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SMC statement_list END','procedure_definition',7,'p_procedure_definition1','lyaParser.py',685),
  ('procedure_definition -> PROC LPAREN RPAREN SMC statement_list END','procedure_definition',6,'p_procedure_definition1','lyaParser.py',686),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SMC END','procedure_definition',6,'p_procedure_definition2','lyaParser.py',695),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SMC END','procedure_definition',7,'p_procedure_definition2','lyaParser.py',696),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SMC statement_list END','procedure_definition',8,'p_procedure_definition2','lyaParser.py',697),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SMC statement_list END','procedure_definition',7,'p_procedure_definition3','lyaParser.py',706),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SMC END','procedure_definition',6,'p_procedure_definition3','lyaParser.py',707),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','lyaParser.py',714),
  ('formal_parameter_list -> formal_parameter COMMA formal_parameter_list','formal_parameter_list',3,'p_formal_parameter_list','lyaParser.py',715),
  ('formal_parameter -> id_list parameter_spec','formal_parameter',2,'p_formal_parameter','lyaParser.py',722),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','lyaParser.py',728),
  ('parameter_spec -> mode parameter_attribute','parameter_spec',2,'p_parameter_spec','lyaParser.py',729),
  ('parameter_attribute -> LOC','parameter_attribute',1,'p_parameter_attribute','lyaParser.py',736),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','lyaParser.py',740),
  ('result_spec -> RETURNS LPAREN mode result_attribute RPAREN','result_spec',5,'p_result_spec','lyaParser.py',741),
  ('result_attribute -> LOC','result_attribute',1,'p_result_attribute','lyaParser.py',748),
  ('call_action -> procedure_call','call_action',1,'p_call_action','lyaParser.py',756),
  ('call_action -> builtin_call','call_action',1,'p_call_action','lyaParser.py',757),
  ('procedure_call -> ID LPAREN RPAREN','procedure_call',3,'p_procedure_call','lyaParser.py',761),
  ('procedure_call -> ID LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','lyaParser.py',762),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','lyaParser.py',769),
  ('parameter_list -> parameter COMMA parameter_list','parameter_list',3,'p_parameter_list','lyaParser.py',770),
  ('parameter -> expression','parameter',1,'p_parameter','lyaParser.py',777),
  ('exit_action -> EXIT label','exit_action',2,'p_exit_action','lyaParser.py',785),
  ('return_action -> RETURN','return_action',1,'p_return_action','lyaParser.py',789),
  ('return_action -> RETURN result','return_action',2,'p_return_action','lyaParser.py',790),
  ('result_action -> RESULT result','result_action',2,'p_result_action','lyaParser.py',797),
  ('result -> expression','result',1,'p_result','lyaParser.py',801),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','lyaParser.py',805),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','lyaParser.py',806),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','lyaParser.py',813),
  ('builtin_name -> PRED','builtin_name',1,'p_builtin_name','lyaParser.py',814),
  ('builtin_name -> SUCC','builtin_name',1,'p_builtin_name','lyaParser.py',815),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','lyaParser.py',816),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','lyaParser.py',817),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','lyaParser.py',818),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','lyaParser.py',819),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','lyaParser.py',820),
  ('integer_expression -> expression','integer_expression',1,'p_integer_expression','lyaParser.py',829),
  ('empty -> <empty>','empty',0,'p_empty','lyaParser.py',836),
]
