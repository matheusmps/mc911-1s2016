
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '727E371B518ACDC8CABB6F03264A0E87'
    
_lr_action_items = {'TO':([1,5,10,11,20,23,30,50,51,52,53,54,55,58,59,60,61,62,63,64,66,67,70,71,72,73,74,76,78,79,80,81,82,87,127,129,144,204,205,209,212,213,214,222,223,231,232,250,258,259,282,283,284,289,308,311,313,330,331,332,],[-135,-136,-137,-200,-138,-134,-199,-66,-63,-69,-55,-67,-64,-59,-122,-123,-62,-91,-58,-139,-68,-92,-106,-65,-113,-93,-57,-118,-60,-61,-56,-124,-140,-143,-211,-119,-133,-201,-212,-94,-114,-107,-73,-144,-145,-141,-142,-202,-70,-71,-177,307,-174,-125,307,307,-126,-175,-221,307,]),'CHARCONST':([13,32,33,46,56,57,75,77,83,85,86,88,90,91,94,95,96,98,104,111,124,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,153,177,206,207,216,221,224,234,236,240,241,244,248,254,257,305,307,310,],[54,54,54,54,54,54,54,-120,-121,-117,-112,-110,54,-111,54,-84,-115,-116,54,54,54,-100,-98,54,-103,-105,-97,-99,-104,-96,-95,-102,-101,54,54,54,-108,-109,-85,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'ELSE':([1,5,10,11,20,23,30,47,50,51,52,53,54,55,58,59,60,61,62,63,64,66,67,70,71,72,73,74,76,78,79,80,81,82,87,116,127,129,144,150,151,199,204,205,208,209,212,213,214,215,222,223,225,231,232,250,252,255,256,258,259,289,292,294,313,314,],[-135,-136,-137,-200,-138,-134,-199,-74,-66,-63,-69,-55,-67,-64,-59,-122,-123,-62,-91,-58,-139,-68,-92,-106,-65,-113,-93,-57,-118,-60,-61,-56,-124,-140,-143,-157,-211,-119,-133,-150,217,-158,-201,-212,254,-94,-114,-107,-73,-151,-144,-145,-75,-141,-142,-202,-128,254,-130,-70,-71,-125,-131,217,-126,-132,]),'NULL':([13,32,33,46,56,57,75,77,83,85,86,88,90,91,94,95,96,98,104,111,124,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,153,177,206,207,216,221,224,234,236,240,241,244,248,254,257,305,307,310,],[52,52,52,52,52,52,52,-120,-121,-117,-112,-110,52,-111,52,-84,-115,-116,52,52,52,-100,-98,52,-103,-105,-97,-99,-104,-96,-95,-102,-101,52,52,52,-108,-109,-85,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'ARRAY':([100,107,120,163,176,228,268,306,324,],[-15,183,183,183,183,-16,183,183,183,]),'WHILE':([1,5,10,11,20,23,30,34,50,51,52,53,54,55,58,59,60,61,62,63,64,66,67,70,71,72,73,74,76,78,79,80,81,82,87,117,127,129,144,171,172,173,181,184,193,194,196,204,205,209,212,213,214,222,223,231,232,250,258,259,282,286,289,302,304,309,312,313,328,329,333,341,],[-135,-136,-137,-200,-138,-134,-199,111,-66,-63,-69,-55,-67,-64,-59,-122,-123,-62,-91,-58,-139,-68,-92,-106,-65,-113,-93,-57,-118,-60,-61,-56,-124,-140,-143,111,-211,-119,-133,-26,-25,-23,-27,-24,-167,-168,-166,-201,-212,-94,-114,-107,-73,-144,-145,-141,-142,-202,-70,-71,-177,-178,-125,-29,-28,-169,-179,-126,-176,-171,-170,-172,]),'CHARS':([100,107,120,163,176,228,268,306,324,],[-15,174,174,174,174,-16,174,174,174,]),'THEN':([1,5,10,11,20,23,30,50,51,52,53,54,55,58,59,60,61,62,63,64,66,67,69,70,71,72,73,74,76,78,79,80,81,82,84,87,127,129,130,144,204,205,209,212,213,214,222,223,231,232,250,258,259,260,289,293,313,],[-135,-136,-137,-200,-138,-134,-199,-66,-63,-69,-55,-67,-64,-59,-122,-123,-62,-91,-58,-139,-68,-92,-127,-106,-65,-113,-93,-57,-118,-60,-61,-56,-124,-140,150,-143,-211,-119,207,-133,-201,-212,-94,-114,-107,-73,-144,-145,-141,-142,-202,-70,-71,150,-125,207,-126,]),'INTCONST':([13,32,33,46,56,57,75,77,83,85,86,88,90,91,94,95,96,98,104,111,124,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,153,177,206,207,216,221,224,234,235,236,240,241,244,248,254,257,305,307,310,],[55,55,55,55,55,55,55,-120,-121,-117,-112,-110,55,-111,55,-84,-115,-116,55,55,55,-100,-98,55,-103,-105,-97,-99,-104,-96,-95,-102,-101,55,55,55,-108,-109,-85,55,55,55,55,55,55,55,273,55,55,55,55,55,55,55,55,55,55,]),'LE':([1,5,10,11,20,23,30,50,51,52,53,54,55,58,59,60,61,62,63,64,66,70,71,72,73,74,76,78,79,80,81,82,87,127,129,144,204,205,209,212,213,214,222,223,231,232,250,258,259,278,],[-135,-136,-137,-200,-138,-134,-199,-66,-63,-69,-55,-67,-64,-59,-122,-123,-62,135,-58,-139,-68,-106,-65,-113,-93,-57,-118,-60,-61,-56,-124,-140,-143,-211,-119,-133,-201,-212,-94,-114,-107,-73,-144,-145,-141,-142,-202,-70,-71,-140,]),'PRINT':([0,4,13,24,25,29,32,33,34,36,39,43,46,47,56,57,68,75,77,83,85,86,88,90,91,94,95,96,98,99,104,111,116,118,123,124,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,150,153,164,169,177,190,191,199,202,206,207,215,216,217,221,224,225,226,234,236,240,241,243,244,248,254,257,261,299,305,307,310,317,322,323,335,336,339,344,],[28,-5,28,-8,-6,-7,28,28,28,-3,-9,28,28,-74,28,28,28,28,-120,-121,-117,-112,-110,28,-111,28,-84,-115,-116,28,28,28,-157,28,-4,28,-100,-98,28,-103,-105,-97,-99,-104,-96,-95,-102,-101,28,28,28,-108,-109,28,-85,-45,-49,28,28,28,-158,-10,28,28,28,28,28,28,28,-75,-181,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'NOTEQUAL':([1,5,10,11,20,23,30,50,51,52,53,54,55,58,59,60,61,62,63,64,66,70,71,72,73,74,76,78,79,80,81,82,87,127,129,144,204,205,209,212,213,214,222,223,231,232,250,258,259,278,],[-135,-136,-137,-200,-138,-134,-199,-66,-63,-69,-55,-67,-64,-59,-122,-123,-62,142,-58,-139,-68,-106,-65,-113,-93,-57,-118,-60,-61,-56,-124,-140,-143,-211,-119,-133,-201,-212,-94,-114,-107,-73,-144,-145,-141,-142,-202,-70,-71,-140,]),'EXIT':([0,4,24,25,29,34,36,39,43,47,99,116,118,123,150,164,169,190,191,199,202,215,217,225,226,243,261,299,317,322,323,335,336,339,344,],[9,-5,-8,-6,-7,9,-3,-9,9,-74,9,-157,9,-4,9,-45,-49,9,9,-158,-10,9,9,-75,-181,9,9,9,9,9,9,9,9,9,9,]),'SUCC':([0,4,13,24,25,29,32,33,34,36,39,43,46,47,56,57,68,75,77,83,85,86,88,90,91,94,95,96,98,99,104,111,116,118,123,124,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,150,153,164,169,177,190,191,199,202,206,207,215,216,217,221,224,225,226,234,236,240,241,243,244,248,254,257,261,299,305,307,310,317,322,323,335,336,339,344,],[45,-5,45,-8,-6,-7,45,45,45,-3,-9,45,45,-74,45,45,45,45,-120,-121,-117,-112,-110,45,-111,45,-84,-115,-116,45,45,45,-157,45,-4,45,-100,-98,45,-103,-105,-97,-99,-104,-96,-95,-102,-101,45,45,45,-108,-109,45,-85,-45,-49,45,45,45,-158,-10,45,45,45,45,45,45,45,-75,-181,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'RPAREN':([1,5,10,11,20,23,30,46,50,51,52,53,54,55,58,59,60,61,62,63,64,66,67,70,71,72,73,74,76,78,79,80,81,82,87,124,125,126,127,128,129,144,149,171,172,173,178,179,180,181,184,185,186,187,188,203,204,205,209,212,213,214,222,223,227,231,232,237,250,251,258,259,264,265,266,267,270,274,289,297,298,302,303,304,313,316,319,320,326,327,340,346,348,],[-135,-136,-137,-200,-138,-134,-199,127,-66,-63,-69,-55,-67,-64,-59,-122,-123,-62,-91,-58,-139,-68,-92,-106,-65,-113,-93,-57,-118,-60,-61,-56,-124,-140,-143,204,205,-203,-211,-205,-119,-133,214,-26,-25,-23,-18,-36,-19,-27,-24,-20,-21,-35,-22,250,-201,-212,-94,-114,-107,-73,-144,-145,269,-141,-142,-34,-202,-204,-70,-71,-33,-31,-190,296,302,304,-125,-192,-193,-29,-37,-28,-126,-191,-195,-194,-39,-44,347,350,-198,]),'LOWER':([0,4,13,24,25,29,32,33,34,36,39,43,46,47,56,57,68,75,77,83,85,86,88,90,91,94,95,96,98,99,104,111,116,118,123,124,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,150,153,164,169,177,190,191,199,202,206,207,215,216,217,221,224,225,226,234,236,240,241,243,244,248,254,257,261,299,305,307,310,317,322,323,335,336,339,344,],[31,-5,31,-8,-6,-7,31,31,31,-3,-9,31,31,-74,31,31,31,31,-120,-121,-117,-112,-110,31,-111,31,-84,-115,-116,31,31,31,-157,31,-4,31,-100,-98,31,-103,-105,-97,-99,-104,-96,-95,-102,-101,31,31,31,-108,-109,31,-85,-45,-49,31,31,31,-158,-10,31,31,31,31,31,31,31,-75,-181,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'READ':([0,4,13,24,25,29,32,33,34,36,39,43,46,47,56,57,68,75,77,83,85,86,88,90,91,94,95,96,98,99,104,111,116,118,123,124,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,150,153,164,169,177,190,191,199,202,206,207,215,216,217,221,224,225,226,234,236,240,241,243,244,248,254,257,261,299,305,307,310,317,322,323,335,336,339,344,],[2,-5,2,-8,-6,-7,2,2,2,-3,-9,2,2,-74,2,2,2,2,-120,-121,-117,-112,-110,2,-111,2,-84,-115,-116,2,2,2,-157,2,-4,2,-100,-98,2,-103,-105,-97,-99,-104,-96,-95,-102,-101,2,2,2,-108,-109,2,-85,-45,-49,2,2,2,-158,-10,2,2,2,2,2,2,2,-75,-181,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'RETURNS':([269,296,],[301,301,]),'$end':([0,4,18,24,25,29,36,37,39,43,47,123,164,169,202,225,226,],[-222,-5,0,-8,-6,-7,-3,-2,-9,-1,-74,-4,-45,-49,-10,-75,-181,]),'DOWN':([1,5,10,11,20,23,30,50,51,52,53,54,55,58,59,60,61,62,63,64,66,67,70,71,72,73,74,76,78,79,80,81,82,87,127,129,144,192,195,204,205,209,212,213,214,222,223,231,232,250,258,259,282,283,284,289,311,313,330,331,],[-135,-136,-137,-200,-138,-134,-199,-66,-63,-69,-55,-67,-64,-59,-122,-123,-62,-91,-58,-139,-68,-92,-106,-65,-113,-93,-57,-118,-60,-61,-56,-124,-140,-143,-211,-119,-133,245,-173,-201,-212,-94,-114,-107,-73,-144,-145,-141,-142,-202,-70,-71,-177,308,-174,-125,332,-126,-175,-221,]),'CHAR':([100,107,120,163,176,228,241,246,268,285,305,306,324,],[-15,181,181,181,181,-16,181,181,181,181,181,181,181,]),'PLUS':([1,5,10,11,16,19,20,23,30,44,50,51,52,53,54,55,58,59,60,61,63,64,66,70,71,72,73,74,76,78,79,80,81,82,87,127,129,144,161,204,205,209,212,213,214,222,223,231,232,250,258,259,278,],[-135,-136,-137,-200,88,-139,-138,-134,-199,-140,-66,-63,-69,-55,-67,-64,-59,-122,-123,-62,-58,-139,-68,-106,-65,-113,88,-57,-118,-60,-61,-56,-124,-140,-143,-211,-119,-133,-140,-201,-212,88,-114,-107,-73,-144,-145,-141,-142,-202,-70,-71,-140,]),'TRUE':([13,32,33,46,56,57,75,77,83,85,86,88,90,91,94,95,96,98,104,111,124,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,153,177,206,207,216,221,224,234,236,240,241,244,248,254,257,305,307,310,],[50,50,50,50,50,50,50,-120,-121,-117,-112,-110,50,-111,50,-84,-115,-116,50,50,50,-100,-98,50,-103,-105,-97,-99,-104,-96,-95,-102,-101,50,50,50,-108,-109,-85,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'ELSIF':([1,5,10,11,20,23,30,47,50,51,52,53,54,55,58,59,60,61,62,63,64,66,67,70,71,72,73,74,76,78,79,80,81,82,87,116,127,129,144,150,151,199,204,205,208,209,212,213,214,215,222,223,225,231,232,250,252,255,256,258,259,289,292,294,313,314,],[-135,-136,-137,-200,-138,-134,-199,-74,-66,-63,-69,-55,-67,-64,-59,-122,-123,-62,-91,-58,-139,-68,-92,-106,-65,-113,-93,-57,-118,-60,-61,-56,-124,-140,-143,-157,-211,-119,-133,-150,216,-158,-201,-212,257,-94,-114,-107,-73,-151,-144,-145,-75,-141,-142,-202,-128,257,-130,-70,-71,-125,-131,216,-126,-132,]),'OR':([1,5,10,11,20,23,30,50,51,52,53,54,55,58,59,60,61,62,63,64,66,70,71,72,73,74,76,78,79,80,81,82,87,127,129,144,204,205,209,212,213,214,222,223,231,232,250,258,259,278,],[-135,-136,-137,-200,-138,-134,-199,-66,-63,-69,-55,-67,-64,-59,-122,-123,-62,137,-58,-139,-68,-106,-65,-113,-93,-57,-118,-60,-61,-56,-124,-140,-143,-211,-119,-133,-201,-212,-94,-114,-107,-73,-144,-145,-141,-142,-202,-70,-71,-140,]),'LT':([1,5,10,11,20,23,30,50,51,52,53,54,55,58,59,60,61,62,63,64,66,70,71,72,73,74,76,78,79,80,81,82,87,127,129,144,204,205,209,212,213,214,222,223,231,232,250,258,259,278,],[-135,-136,-137,-200,-138,-134,-199,-66,-63,-69,-55,-67,-64,-59,-122,-123,-62,138,-58,-139,-68,-106,-65,-113,-93,-57,-118,-60,-61,-56,-124,-140,-143,-211,-119,-133,-201,-212,-94,-114,-107,-73,-144,-145,-141,-142,-202,-70,-71,-140,]),'STRINGCONST':([13,32,33,46,56,57,75,77,83,85,86,88,90,91,94,95,96,98,104,111,124,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,153,177,206,207,216,221,224,234,236,240,241,244,248,254,257,305,307,310,],[66,66,66,66,66,66,66,-120,-121,-117,-112,-110,66,-111,66,-84,-115,-116,66,66,66,-100,-98,66,-103,-105,-97,-99,-104,-96,-95,-102,-101,66,66,66,-108,-109,-85,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'GT':([1,5,10,11,20,23,30,50,51,52,53,54,55,58,59,60,61,62,63,64,66,70,71,72,73,74,76,78,79,80,81,82,87,127,129,144,204,205,209,212,213,214,222,223,231,232,250,258,259,278,],[-135,-136,-137,-200,-138,-134,-199,-66,-63,-69,-55,-67,-64,-59,-122,-123,-62,141,-58,-139,-68,-106,-65,-113,-93,-57,-118,-60,-61,-56,-124,-140,-143,-211,-119,-133,-201,-212,-94,-114,-107,-73,-144,-145,-141,-142,-202,-70,-71,-140,]),'EQUALS':([1,5,10,11,16,19,20,23,30,44,85,86,87,88,89,91,92,93,96,97,98,100,101,107,127,161,171,172,173,178,179,180,181,182,184,185,186,187,188,192,195,200,204,205,222,223,228,231,232,237,250,302,303,304,326,327,],[-135,-136,-137,-200,95,-139,-138,-134,-199,-140,-117,-112,-143,-110,-88,-111,-86,153,-115,-87,-116,-15,163,177,-211,-140,-26,-25,-23,-18,-36,-19,-27,240,-24,-20,-21,-35,-22,244,-173,248,-201,-212,-144,-145,-16,-141,-142,-34,-202,-29,-37,-28,-39,-44,]),'RBRACKET':([1,5,10,11,20,23,30,50,51,52,53,54,55,58,59,60,61,62,63,64,66,67,70,71,72,73,74,76,78,79,80,81,82,87,127,129,144,154,155,157,166,167,168,171,172,173,181,184,204,205,209,210,211,212,213,214,222,223,231,232,250,258,259,263,264,265,272,273,276,277,279,280,289,302,304,313,325,],[-135,-136,-137,-200,-138,-134,-199,-66,-63,-69,-55,-67,-64,-59,-122,-123,-62,-91,-58,-139,-68,-92,-106,-65,-113,-93,-57,-118,-60,-61,-56,-124,-140,-143,-211,-119,-133,222,223,-89,231,232,-221,-26,-25,-23,-27,-24,-201,-212,-94,258,259,-114,-107,-73,-144,-145,-141,-142,-202,-70,-71,-90,-33,-31,303,-38,-40,-43,306,-42,-125,-29,-28,-126,-41,]),'BY':([1,5,10,11,20,23,30,50,51,52,53,54,55,58,59,60,61,62,63,64,66,67,70,71,72,73,74,76,78,79,80,81,82,87,127,129,144,204,205,209,212,213,214,222,223,231,232,250,258,259,282,283,284,289,313,],[-135,-136,-137,-200,-138,-134,-199,-66,-63,-69,-55,-67,-64,-59,-122,-123,-62,-91,-58,-139,-68,-92,-106,-65,-113,-93,-57,-118,-60,-61,-56,-124,-140,-143,-211,-119,-133,-201,-212,-94,-114,-107,-73,-144,-145,-141,-142,-202,-70,-71,-177,310,-174,-125,-126,]),'FOR':([34,],[115,]),'ID':([0,4,9,13,22,24,25,27,29,32,33,34,36,39,42,43,46,47,56,57,68,75,77,83,85,86,88,90,91,94,95,96,98,99,100,104,107,111,115,116,118,120,123,124,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,150,153,162,163,164,165,169,170,176,177,190,191,199,201,202,206,207,215,216,217,221,224,225,226,227,228,234,236,240,241,243,244,246,248,254,257,261,268,285,295,299,305,306,307,310,317,322,323,324,335,336,339,344,],[44,-5,49,82,100,-8,-6,100,-7,82,82,44,-3,-9,100,44,82,-74,82,82,82,82,-120,-121,-117,-112,-110,82,-111,82,-84,-115,-116,161,-15,82,188,82,195,-157,44,188,-4,82,-100,-98,82,-103,-105,-97,-99,-104,-96,-95,-102,-101,82,82,82,-108,-109,44,-85,228,188,-45,100,-49,100,188,82,161,44,-158,100,-10,82,82,44,82,44,82,82,-75,-181,100,-16,82,82,82,278,44,82,287,82,82,82,44,188,287,100,44,278,188,82,82,44,44,44,188,44,44,44,44,]),'STRCONC':([1,5,10,11,16,19,20,23,30,44,50,51,52,53,54,55,58,59,60,61,63,64,66,70,71,72,73,74,76,78,79,80,81,82,87,127,129,144,161,204,205,209,212,213,214,222,223,231,232,250,258,259,278,],[-135,-136,-137,-200,86,-139,-138,-134,-199,-140,-66,-63,-69,-55,-67,-64,-59,-122,-123,-62,-58,-139,-68,-106,-65,-113,86,-57,-118,-60,-61,-56,-124,-140,-143,-211,-119,-133,-140,-201,-212,86,-114,-107,-73,-144,-145,-141,-142,-202,-70,-71,-140,]),'TIMES':([1,5,10,11,16,19,20,23,30,44,50,51,52,53,54,55,58,59,60,61,63,64,66,70,71,72,74,76,78,79,80,81,82,87,127,129,144,161,204,205,212,213,214,222,223,231,232,250,258,259,278,],[-135,-136,-137,-200,96,-139,-138,-134,-199,-140,-66,-63,-69,-55,-67,-64,-59,-122,-123,-62,-58,-139,-68,96,-65,-113,-57,-118,-60,-61,-56,-124,-140,-143,-211,-119,-133,-140,-201,-212,-114,96,-73,-144,-145,-141,-142,-202,-70,-71,-140,]),'GE':([1,5,10,11,20,23,30,50,51,52,53,54,55,58,59,60,61,62,63,64,66,70,71,72,73,74,76,78,79,80,81,82,87,127,129,144,204,205,209,212,213,214,222,223,231,232,250,258,259,278,],[-135,-136,-137,-200,-138,-134,-199,-66,-63,-69,-55,-67,-64,-59,-122,-123,-62,134,-58,-139,-68,-106,-65,-113,-93,-57,-118,-60,-61,-56,-124,-140,-143,-211,-119,-133,-201,-212,-94,-114,-107,-73,-144,-145,-141,-142,-202,-70,-71,-140,]),'BOOL':([100,107,120,163,176,228,241,246,268,285,305,306,324,],[-15,171,171,171,171,-16,171,171,171,171,171,171,171,]),'ARROW':([1,5,10,11,13,16,19,20,23,30,32,33,44,46,56,57,60,64,75,77,82,83,85,86,87,88,90,91,94,95,96,98,104,111,124,127,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,153,161,177,204,205,206,207,216,221,222,223,224,231,232,234,236,240,241,244,248,250,254,257,278,305,307,310,],[-135,-136,-137,-200,68,87,-139,-138,-134,-199,68,68,-140,68,68,68,87,-139,68,-120,-140,-121,-117,-112,-143,-110,68,-111,68,-84,-115,-116,68,68,68,-211,-100,-98,68,-103,-105,-97,-99,-104,-96,-95,-102,-101,68,87,68,68,-108,-109,-85,-140,68,-201,-212,68,68,68,68,-144,-145,68,-141,-142,68,68,68,68,68,68,-202,68,68,-140,68,68,68,]),'FALSE':([13,32,33,46,56,57,75,77,83,85,86,88,90,91,94,95,96,98,104,111,124,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,153,177,206,207,216,221,224,234,236,240,241,244,248,254,257,305,307,310,],[71,71,71,71,71,71,71,-120,-121,-117,-112,-110,71,-111,71,-84,-115,-116,71,71,71,-100,-98,71,-103,-105,-97,-99,-104,-96,-95,-102,-101,71,71,71,-108,-109,-85,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'IN':([1,5,10,11,20,23,30,50,51,52,53,54,55,58,59,60,61,62,63,64,66,70,71,72,73,74,76,78,79,80,81,82,87,127,129,144,192,195,204,205,209,212,213,214,222,223,231,232,245,250,258,259,278,],[-135,-136,-137,-200,-138,-134,-199,-66,-63,-69,-55,-67,-64,-59,-122,-123,-62,136,-58,-139,-68,-106,-65,-113,-93,-57,-118,-60,-61,-56,-124,-140,-143,-211,-119,-133,246,-173,-201,-212,-94,-114,-107,-73,-144,-145,-141,-142,285,-202,-70,-71,-140,]),'SYN':([0,4,24,25,29,36,39,43,47,123,164,169,202,225,226,299,317,322,323,335,336,339,344,],[27,-5,-8,-6,-7,-3,-9,27,-74,-4,-45,-49,-10,-75,-181,27,27,27,27,27,27,27,27,]),'MOD':([1,5,10,11,16,19,20,23,30,44,50,51,52,53,54,55,58,59,60,61,63,64,66,70,71,72,74,76,78,79,80,81,82,87,127,129,144,161,204,205,212,213,214,222,223,231,232,250,258,259,278,],[-135,-136,-137,-200,85,-139,-138,-134,-199,-140,-66,-63,-69,-55,-67,-64,-59,-122,-123,-62,-58,-139,-68,85,-65,-113,-57,-118,-60,-61,-56,-124,-140,-143,-211,-119,-133,-140,-201,-212,-114,85,-73,-144,-145,-141,-142,-202,-70,-71,-140,]),'PROC':([99,],[160,]),'SMC':([1,5,6,7,8,10,11,12,14,15,19,20,23,26,30,33,38,48,49,50,51,52,53,54,55,58,59,60,61,62,63,64,66,67,69,70,71,72,73,74,76,78,79,80,81,82,87,102,103,105,106,108,109,110,113,114,117,119,121,122,127,129,144,152,158,159,171,172,173,178,179,180,181,184,185,186,187,188,189,193,194,196,197,198,200,204,205,209,212,213,214,220,222,223,229,230,231,232,233,237,238,239,242,247,249,250,258,259,262,269,275,281,282,286,288,289,296,300,302,303,304,309,312,313,318,321,326,327,328,329,333,334,337,338,341,342,343,345,347,349,350,],[-135,-136,-146,-77,47,-137,-200,-78,-80,-81,-79,-138,-134,-82,-199,-207,-147,-206,-76,-66,-63,-69,-55,-67,-64,-59,-122,-123,-62,-91,-58,-139,-68,-92,-127,-106,-65,-113,-93,-57,-118,-60,-61,-56,-124,-140,-143,164,-46,-50,169,-209,-210,-208,191,-159,-163,-164,202,-11,-211,-119,-133,-83,225,226,-26,-25,-23,-18,-36,-19,-27,-24,-20,-21,-35,-22,-180,-167,-168,-166,-165,-162,-14,-201,-212,-94,-114,-107,-73,-148,-144,-145,-48,-47,-141,-142,-51,-34,-54,-52,-160,-13,-12,-202,-70,-71,-149,299,-53,-161,-177,-178,-17,-125,317,323,-29,-37,-28,-169,-179,-126,336,-182,-39,-44,-176,-171,-170,-185,-184,-189,-172,-183,-186,-188,-196,-187,-197,]),'LPAREN':([2,3,13,21,28,31,32,33,35,40,41,44,45,46,56,57,75,77,82,83,85,86,88,90,91,94,95,96,98,104,111,124,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,153,160,161,171,172,173,175,177,181,188,206,207,216,221,224,234,236,240,241,244,248,254,257,278,287,301,305,307,310,],[-219,46,75,-213,-220,-217,75,75,-216,-218,-214,124,-215,75,75,75,75,-120,124,-121,-117,-112,-110,75,-111,75,-84,-115,-116,75,75,75,-100,-98,75,-103,-105,-97,-99,-104,-96,-95,-102,-101,75,75,75,-108,-109,-85,227,124,-26,-25,234,236,75,-27,-30,75,75,75,75,75,75,75,75,75,75,75,75,75,124,-30,324,75,75,75,]),'IF':([0,4,13,24,25,29,32,33,34,36,39,43,46,47,57,75,90,94,95,99,104,111,116,118,123,124,143,150,153,164,169,177,190,191,199,202,206,207,215,216,217,221,224,225,226,234,236,240,241,243,244,248,254,257,261,299,305,307,310,317,322,323,335,336,339,344,],[13,-5,57,-8,-6,-7,57,57,13,-3,-9,13,57,-74,57,57,57,57,-84,13,57,57,-157,13,-4,57,57,13,-85,-45,-49,57,13,13,-158,-10,57,57,13,57,13,57,57,-75,-181,57,57,57,57,13,57,57,57,57,13,13,57,57,57,13,13,13,13,13,13,13,]),'COMMA':([1,5,10,11,20,23,30,50,51,52,53,54,55,58,59,60,61,62,63,64,66,67,70,71,72,73,74,76,78,79,80,81,82,87,100,101,102,103,105,106,107,120,121,122,126,127,128,129,144,154,157,171,172,173,178,179,180,181,184,185,186,187,188,200,204,205,209,210,212,213,214,222,223,228,229,230,231,232,233,237,238,239,247,249,250,258,259,263,264,265,266,268,275,276,277,279,280,288,289,297,298,302,303,304,313,319,320,325,326,327,],[-135,-136,-137,-200,-138,-134,-199,-66,-63,-69,-55,-67,-64,-59,-122,-123,-62,-91,-58,-139,-68,-92,-106,-65,-113,-93,-57,-118,-60,-61,-56,-124,-140,-143,-15,162,165,-46,-50,170,162,162,201,-11,206,-211,-205,-119,-133,221,-89,-26,-25,-23,-18,-36,-19,-27,-24,-20,-21,-35,-22,-14,-201,-212,-94,221,-114,-107,-73,-144,-145,-16,-48,-47,-141,-142,-51,-34,-54,-52,-13,-12,-202,-70,-71,-90,-33,-31,295,162,-53,-40,-43,305,-42,-17,-125,-192,-193,-29,-37,-28,-126,-195,-194,-41,-39,-44,]),'RESULT':([0,4,24,25,29,34,36,39,43,47,99,116,118,123,150,164,169,190,191,199,202,215,217,225,226,243,261,299,317,322,323,335,336,339,344,],[32,-5,-8,-6,-7,32,-3,-9,32,-74,32,-157,32,-4,32,-45,-49,32,32,-158,-10,32,32,-75,-181,32,32,32,32,32,32,32,32,32,32,]),'LOC':([171,172,173,178,179,180,181,184,185,186,187,188,237,298,302,303,304,326,327,340,],[-26,-25,-23,-18,-36,-19,-27,-24,-20,-21,-35,-22,-34,319,-29,-37,-28,-39,-44,348,]),'RETURN':([0,4,24,25,29,34,36,39,43,47,99,116,118,123,150,164,169,190,191,199,202,215,217,225,226,243,261,299,317,322,323,335,336,339,344,],[33,-5,-8,-6,-7,33,-3,-9,33,-74,33,-157,33,-4,33,-45,-49,33,33,-158,-10,33,33,-75,-181,33,33,33,33,33,33,33,33,33,33,]),'FI':([1,5,10,11,20,23,30,47,50,51,52,53,54,55,58,59,60,61,62,63,64,66,67,70,71,72,73,74,76,78,79,80,81,82,87,116,127,129,144,150,151,199,204,205,209,212,213,214,215,217,218,219,222,223,225,231,232,250,253,258,259,261,289,290,291,294,313,315,],[-135,-136,-137,-200,-138,-134,-199,-74,-66,-63,-69,-55,-67,-64,-59,-122,-123,-62,-91,-58,-139,-68,-92,-106,-65,-113,-93,-57,-118,-60,-61,-56,-124,-140,-143,-157,-211,-119,-133,-150,220,-158,-201,-212,-94,-114,-107,-73,-151,-152,-154,262,-144,-145,-75,-141,-142,-202,289,-70,-71,-153,-125,-129,313,-155,-126,-156,]),'AND':([1,5,10,11,20,23,30,50,51,52,53,54,55,58,59,60,61,62,63,64,66,70,71,72,73,74,76,78,79,80,81,82,87,127,129,144,204,205,209,212,213,214,222,223,231,232,250,258,259,278,],[-135,-136,-137,-200,-138,-134,-199,-66,-63,-69,-55,-67,-64,-59,-122,-123,-62,132,-58,-139,-68,-106,-65,-113,-93,-57,-118,-60,-61,-56,-124,-140,-143,-211,-119,-133,-201,-212,-94,-114,-107,-73,-144,-145,-141,-142,-202,-70,-71,-140,]),'DO':([0,4,24,25,29,34,36,39,43,47,99,116,118,123,150,164,169,190,191,199,202,215,217,225,226,243,261,299,317,322,323,335,336,339,344,],[34,-5,-8,-6,-7,34,-3,-9,34,-74,34,-157,34,-4,34,-45,-49,34,34,-158,-10,34,34,-75,-181,34,34,34,34,34,34,34,34,34,34,]),'OD':([34,47,116,118,191,199,225,243,],[114,-74,-157,198,242,-158,-75,281,]),'UPPER':([0,4,13,24,25,29,32,33,34,36,39,43,46,47,56,57,68,75,77,83,85,86,88,90,91,94,95,96,98,99,104,111,116,118,123,124,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,150,153,164,169,177,190,191,199,202,206,207,215,216,217,221,224,225,226,234,236,240,241,243,244,248,254,257,261,299,305,307,310,317,322,323,335,336,339,344,],[35,-5,35,-8,-6,-7,35,35,35,-3,-9,35,35,-74,35,35,35,35,-120,-121,-117,-112,-110,35,-111,35,-84,-115,-116,35,35,35,-157,35,-4,35,-100,-98,35,-103,-105,-97,-99,-104,-96,-95,-102,-101,35,35,35,-108,-109,35,-85,-45,-49,35,35,35,-158,-10,35,35,35,35,35,35,35,-75,-181,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'NUM':([0,4,13,24,25,29,32,33,34,36,39,43,46,47,56,57,68,75,77,83,85,86,88,90,91,94,95,96,98,99,104,111,116,118,123,124,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,150,153,164,169,177,190,191,199,202,206,207,215,216,217,221,224,225,226,234,236,240,241,243,244,248,254,257,261,299,305,307,310,317,322,323,335,336,339,344,],[21,-5,21,-8,-6,-7,21,21,21,-3,-9,21,21,-74,21,21,21,21,-120,-121,-117,-112,-110,21,-111,21,-84,-115,-116,21,21,21,-157,21,-4,21,-100,-98,21,-103,-105,-97,-99,-104,-96,-95,-102,-101,21,21,21,-108,-109,21,-85,-45,-49,21,21,21,-158,-10,21,21,21,21,21,21,21,-75,-181,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'MINUS':([1,5,10,11,13,16,19,20,23,30,32,33,44,46,50,51,52,53,54,55,57,58,59,60,61,63,64,66,70,71,72,73,74,75,76,78,79,80,81,82,85,86,87,88,90,91,94,95,96,98,104,111,124,127,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,153,161,177,204,205,206,207,209,212,213,214,216,221,222,223,224,231,232,234,236,240,241,244,248,250,254,257,258,259,278,305,307,310,],[-135,-136,-137,-200,77,91,-139,-138,-134,-199,77,77,-140,77,-66,-63,-69,-55,-67,-64,77,-59,-122,-123,-62,-58,-139,-68,-106,-65,-113,91,-57,77,-118,-60,-61,-56,-124,-140,-117,-112,-143,-110,77,-111,77,-84,-115,-116,77,77,77,-211,-119,-100,-98,77,-103,-105,-97,-99,-104,-96,-95,-102,-101,77,-133,77,77,-108,-109,-85,-140,77,-201,-212,77,77,91,-114,-107,-73,77,77,-144,-145,77,-141,-142,77,77,77,77,77,77,-202,77,77,-70,-71,-140,77,77,77,]),'TYPE':([0,4,24,25,29,36,39,43,47,123,164,169,202,225,226,299,317,322,323,335,336,339,344,],[22,-5,-8,-6,-7,-3,-9,22,-74,-4,-45,-49,-10,-75,-181,22,22,22,22,22,22,22,22,]),'LENGTH':([0,4,13,24,25,29,32,33,34,36,39,43,46,47,56,57,68,75,77,83,85,86,88,90,91,94,95,96,98,99,104,111,116,118,123,124,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,150,153,164,169,177,190,191,199,202,206,207,215,216,217,221,224,225,226,234,236,240,241,243,244,248,254,257,261,299,305,307,310,317,322,323,335,336,339,344,],[40,-5,40,-8,-6,-7,40,40,40,-3,-9,40,40,-74,40,40,40,40,-120,-121,-117,-112,-110,40,-111,40,-84,-115,-116,40,40,40,-157,40,-4,40,-100,-98,40,-103,-105,-97,-99,-104,-96,-95,-102,-101,40,40,40,-108,-109,40,-85,-45,-49,40,40,40,-158,-10,40,40,40,40,40,40,40,-75,-181,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'END':([4,24,25,29,36,39,47,123,164,169,202,225,226,299,317,322,323,335,336,339,344,],[-5,-8,-6,-7,-3,-9,-74,-4,-45,-49,-10,-75,-181,321,334,337,338,342,343,345,349,]),'COLON':([1,5,10,11,17,20,23,30,44,50,51,52,53,54,55,58,59,60,61,62,63,64,66,67,70,71,72,73,74,76,78,79,80,81,82,87,112,127,129,144,156,157,168,204,205,209,212,213,214,222,223,231,232,250,258,259,271,278,289,313,],[-135,-136,-137,-200,99,-138,-134,-199,-76,-66,-63,-69,-55,-67,-64,-59,-122,-123,-62,-91,-58,-139,-68,-92,-106,-65,-113,-93,-57,-118,-60,-61,-56,-124,-140,-143,190,-211,-119,-133,224,-32,-32,-201,-212,-94,-114,-107,-73,-144,-145,-141,-142,-202,-70,-71,-32,-140,-125,-126,]),'ISEQUAL':([1,5,10,11,20,23,30,50,51,52,53,54,55,58,59,60,61,62,63,64,66,70,71,72,73,74,76,78,79,80,81,82,87,127,129,144,204,205,209,212,213,214,222,223,231,232,250,258,259,278,],[-135,-136,-137,-200,-138,-134,-199,-66,-63,-69,-55,-67,-64,-59,-122,-123,-62,131,-58,-139,-68,-106,-65,-113,-93,-57,-118,-60,-61,-56,-124,-140,-143,-211,-119,-133,-201,-212,-94,-114,-107,-73,-144,-145,-141,-142,-202,-70,-71,-140,]),'PRED':([0,4,13,24,25,29,32,33,34,36,39,43,46,47,56,57,68,75,77,83,85,86,88,90,91,94,95,96,98,99,104,111,116,118,123,124,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,150,153,164,169,177,190,191,199,202,206,207,215,216,217,221,224,225,226,234,236,240,241,243,244,248,254,257,261,299,305,307,310,317,322,323,335,336,339,344,],[41,-5,41,-8,-6,-7,41,41,41,-3,-9,41,41,-74,41,41,41,41,-120,-121,-117,-112,-110,41,-111,41,-84,-115,-116,41,41,41,-157,41,-4,41,-100,-98,41,-103,-105,-97,-99,-104,-96,-95,-102,-101,41,41,41,-108,-109,41,-85,-45,-49,41,41,41,-158,-10,41,41,41,41,41,41,41,-75,-181,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'DCL':([0,4,24,25,29,36,39,43,47,123,164,169,202,225,226,299,317,322,323,335,336,339,344,],[42,-5,-8,-6,-7,-3,-9,42,-74,-4,-45,-49,-10,-75,-181,42,42,42,42,42,42,42,42,]),'REF':([100,107,120,163,176,228,268,306,324,],[-15,176,176,176,176,-16,176,176,176,]),'LBRACKET':([1,5,10,11,16,19,20,23,30,44,50,51,52,53,54,55,58,59,60,61,63,64,65,66,71,74,78,79,80,82,87,127,144,161,174,183,204,205,214,222,223,231,232,250,258,259,278,],[-135,-136,-137,-200,94,-139,-138,104,-199,-140,-66,-63,-69,-55,-67,-64,-59,-72,94,-62,-58,-139,143,-68,-65,-57,-60,-61,-56,-140,-143,-211,94,-140,235,241,-201,-212,-73,-144,-145,-141,-142,-202,-70,-71,-140,]),'NOT':([13,32,33,46,57,75,85,86,88,90,91,94,95,96,98,104,111,124,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,153,177,206,207,216,221,224,234,236,240,241,244,248,254,257,305,307,310,],[83,83,83,83,83,83,-117,-112,-110,83,-111,83,-84,-115,-116,83,83,83,-100,-98,83,-103,-105,-97,-99,-104,-96,-95,-102,-101,83,83,83,-108,-109,-85,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'INT':([100,107,120,163,176,228,241,246,268,285,305,306,324,],[-15,172,172,172,172,-16,172,172,172,172,172,172,172,]),'DIV':([1,5,10,11,16,19,20,23,30,44,50,51,52,53,54,55,58,59,60,61,63,64,66,70,71,72,74,76,78,79,80,81,82,87,127,129,144,161,204,205,212,213,214,222,223,231,232,250,258,259,278,],[-135,-136,-137,-200,98,-139,-138,-134,-199,-140,-66,-63,-69,-55,-67,-64,-59,-122,-123,-62,-58,-139,-68,98,-65,-113,-57,-118,-60,-61,-56,-124,-140,-143,-211,-119,-133,-140,-201,-212,-114,98,-73,-144,-145,-141,-142,-202,-70,-71,-140,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'string_reference':([0,13,32,33,34,43,46,56,57,68,75,90,94,99,104,111,118,124,133,143,145,146,150,177,190,191,206,207,215,216,217,221,224,234,236,240,241,243,244,248,254,257,261,299,305,307,310,317,322,323,335,336,339,344,],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'syn_definition':([27,170,],[105,233,]),'string_literal':([13,32,33,46,56,57,75,90,94,104,111,124,133,143,145,146,177,206,207,216,221,224,234,236,240,241,244,248,254,257,305,307,310,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'syn_list':([27,],[106,]),'expression_list':([94,143,],[154,210,]),'declaration_statement':([0,43,299,317,322,323,335,336,339,344,],[4,4,4,4,4,4,4,4,4,4,]),'literal':([13,32,33,46,56,57,75,90,94,104,111,124,133,143,145,146,177,206,207,216,221,224,234,236,240,241,244,248,254,257,305,307,310,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'dereferenced_reference':([0,13,32,33,34,43,46,56,57,68,75,90,94,99,104,111,118,124,133,143,145,146,150,177,190,191,206,207,215,216,217,221,224,234,236,240,241,243,244,248,254,257,261,299,305,307,310,317,322,323,335,336,339,344,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'assigning_operator':([16,],[90,]),'if_action':([0,34,43,99,118,150,190,191,215,217,243,261,299,317,322,323,335,336,339,344,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'arithmetic_additive_operator':([16,73,209,],[92,147,147,]),'initialization':([200,],[247,]),'basic_mode':([107,120,163,176,241,246,268,285,305,306,324,],[173,173,173,173,173,173,173,173,173,173,173,]),'string_length':([235,],[272,]),'else_clause':([151,294,],[219,315,]),'monadic_operator':([13,32,33,46,57,75,90,94,104,111,124,133,143,145,146,177,206,207,216,221,224,234,236,240,241,244,248,254,257,305,307,310,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'array_element':([0,13,32,33,34,43,46,56,57,68,75,90,94,99,104,111,118,124,133,143,145,146,150,177,190,191,206,207,215,216,217,221,224,234,236,240,241,243,244,248,254,257,261,299,305,307,310,317,322,323,335,336,339,344,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'step_value':([283,],[311,]),'builtin_call':([0,13,32,33,34,43,46,56,57,68,75,90,94,99,104,111,118,124,133,143,145,146,150,177,190,191,206,207,215,216,217,221,224,234,236,240,241,243,244,248,254,257,261,299,305,307,310,317,322,323,335,336,339,344,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'exit_action':([0,34,43,99,118,150,190,191,215,217,243,261,299,317,322,323,335,336,339,344,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'return_action':([0,34,43,99,118,150,190,191,215,217,243,261,299,317,322,323,335,336,339,344,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'string_mode':([107,120,163,176,268,306,324,],[187,187,187,187,187,187,187,]),'empty_literal':([13,32,33,46,56,57,75,90,94,104,111,124,133,143,145,146,177,206,207,216,221,224,234,236,240,241,244,248,254,257,305,307,310,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'operand0':([13,32,33,46,57,75,90,94,104,111,124,143,177,206,207,216,221,224,234,236,240,241,244,248,254,257,305,307,310,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'control_part':([34,],[113,]),'literal_range':([94,104,143,234,236,241,305,],[155,167,211,270,274,277,277,]),'discrete_range_mode':([107,120,163,176,241,246,268,285,305,306,324,],[184,184,184,184,184,184,184,184,184,184,184,]),'membership_operator':([62,],[139,]),'lower_bound':([94,104,143,234,236,241,305,],[156,156,156,156,156,156,156,]),'reference_mode':([107,120,163,176,268,306,324,],[185,185,185,185,185,185,185,]),'array_mode':([107,120,163,176,268,306,324,],[179,179,179,179,179,179,179,]),'parameter':([46,124,206,],[126,126,126,]),'location_name':([0,13,32,33,34,43,46,56,57,68,75,90,94,99,104,111,118,124,133,143,145,146,150,177,190,191,206,207,215,216,217,221,224,234,236,240,241,243,244,248,254,257,261,299,305,307,310,317,322,323,335,336,339,344,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'array_primitive_value':([13,32,33,46,56,57,75,90,94,104,111,124,133,143,145,146,177,206,207,216,221,224,234,236,240,241,244,248,254,257,305,307,310,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'action_statement':([0,34,43,118,150,191,215,217,243,261,299,317,322,323,335,336,339,344,],[24,116,24,199,116,116,199,116,199,199,24,24,24,24,24,24,24,24,]),'operator1':([62,],[133,]),'expression':([13,32,33,46,57,75,90,94,104,111,124,143,177,206,207,216,221,224,234,236,240,241,244,248,254,257,305,307,310,],[69,109,109,128,69,149,152,157,168,69,128,157,238,128,252,69,263,264,271,271,238,271,282,288,290,69,271,282,331,]),'newmode_list':([22,],[102,]),'newmode_statement':([0,43,299,317,322,323,335,336,339,344,],[25,25,25,25,25,25,25,25,25,25,]),'then_clause':([84,260,],[151,294,]),'then_expression':([130,293,],[208,314,]),'index_mode_list':([241,],[279,]),'synonym_statement':([0,43,299,317,322,323,335,336,339,344,],[29,29,29,29,29,29,29,29,29,29,]),'result_attribute':([340,],[346,]),'discrete_mode_name':([107,120,163,176,241,246,268,285,305,306,324,],[175,175,175,175,175,175,175,175,175,175,175,]),'operand1':([13,32,33,46,57,75,90,94,104,111,124,133,143,177,206,207,216,221,224,234,236,240,241,244,248,254,257,305,307,310,],[73,73,73,73,73,73,73,73,73,73,73,209,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'value_array_slice':([13,32,33,46,56,57,75,90,94,104,111,124,133,143,145,146,177,206,207,216,221,224,234,236,240,241,244,248,254,257,305,307,310,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'statement':([0,43,299,317,322,323,335,336,339,344,],[36,123,36,36,123,36,123,36,123,123,]),'empty':([0,],[37,]),'discrete_mode':([107,120,163,176,241,246,268,285,305,306,324,],[180,180,180,180,280,286,180,312,280,180,180,]),'procedure_statement':([0,43,299,317,322,323,335,336,339,344,],[39,39,39,39,39,39,39,39,39,39,]),'step_enumeration':([115,],[193,]),'char_literal':([13,32,33,46,56,57,75,90,94,104,111,124,133,143,145,146,177,206,207,216,221,224,234,236,240,241,244,248,254,257,305,307,310,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'closed_dyadic_operator':([16,],[93,]),'loop_counter':([115,],[192,]),'statement_list':([0,299,317,323,336,],[43,322,335,339,344,]),'constant_expression':([177,240,],[239,275,]),'range_enumeration':([115,],[194,]),'mode_definition':([22,165,],[103,230,]),'parameter_list':([46,124,206,],[125,203,251,]),'index_mode':([241,305,],[276,325,]),'builtin_name':([0,13,32,33,34,43,46,56,57,68,75,90,94,99,104,111,118,124,133,143,145,146,150,177,190,191,206,207,215,216,217,221,224,234,236,240,241,243,244,248,254,257,261,299,305,307,310,317,322,323,335,336,339,344,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'declaration_list':([42,],[121,]),'elseif_clause':([151,294,],[218,218,]),'parenthesized_expression':([13,32,33,46,56,57,75,90,94,104,111,124,133,143,145,146,177,206,207,216,221,224,234,236,240,241,244,248,254,257,305,307,310,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'assignment_action':([0,34,43,99,118,150,190,191,215,217,243,261,299,317,322,323,335,336,339,344,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'action':([0,34,43,99,118,150,190,191,215,217,243,261,299,317,322,323,335,336,339,344,],[8,8,8,158,8,8,158,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'iteration':([115,],[196,]),'else_expression':([208,255,],[253,291,]),'bracketed_action':([0,34,43,99,118,150,190,191,215,217,243,261,299,317,322,323,335,336,339,344,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'result':([32,33,],[108,110,]),'formal_parameter_list':([227,295,],[267,316,]),'integer_literal':([13,32,33,46,56,57,75,90,94,104,111,124,133,143,145,146,177,206,207,216,221,224,234,236,240,241,244,248,254,257,305,307,310,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'referenced_location':([13,32,33,46,56,57,75,90,94,104,111,124,133,143,145,146,177,206,207,216,221,224,234,236,240,241,244,248,254,257,305,307,310,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'label':([0,9,34,43,118,150,191,215,217,243,261,299,317,322,323,335,336,339,344,],[17,48,112,17,112,112,112,112,112,112,112,17,17,17,17,17,17,17,17,]),'end_value':([283,308,311,332,],[309,329,333,341,]),'primitive_value':([13,32,33,46,56,57,75,90,94,104,111,124,133,143,145,146,177,206,207,216,221,224,234,236,240,241,244,248,254,257,305,307,310,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'program':([0,],[18,]),'call_action':([0,13,32,33,34,43,46,56,57,68,75,90,94,99,104,111,118,124,133,143,145,146,150,177,190,191,206,207,215,216,217,221,224,234,236,240,241,243,244,248,254,257,261,299,305,307,310,317,322,323,335,336,339,344,],[19,64,64,64,19,19,64,64,64,64,64,64,64,19,64,64,19,64,64,64,64,64,19,64,19,19,64,64,19,64,19,64,64,64,64,64,64,19,64,64,64,64,19,19,64,64,64,19,19,19,19,19,19,19,]),'elseif_expression_list':([208,],[255,]),'array_slice':([0,13,32,33,34,43,46,56,57,68,75,90,94,99,104,111,118,124,133,143,145,146,150,177,190,191,206,207,215,216,217,221,224,234,236,240,241,243,244,248,254,257,261,299,305,307,310,317,322,323,335,336,339,344,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'conditional_expression':([13,32,33,46,57,75,90,94,104,111,124,143,177,206,207,216,221,224,234,236,240,241,244,248,254,257,305,307,310,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'procedure_definition':([99,],[159,]),'relational_operator':([62,],[140,]),'for_control':([34,],[117,]),'discrete_expression':([244,307,],[284,328,]),'operand2':([13,32,33,46,57,75,90,94,104,111,124,133,143,146,177,206,207,216,221,224,234,236,240,241,244,248,254,257,305,307,310,],[70,70,70,70,70,70,70,70,70,70,70,70,70,213,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'arithmetic_multiplicative_operator':([16,70,213,],[97,145,145,]),'action_statement_list':([34,150,191,217,],[118,215,243,261,]),'result_action':([0,34,43,99,118,150,190,191,215,217,243,261,299,317,322,323,335,336,339,344,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'declaration':([42,201,],[122,249,]),'operand3':([13,32,33,46,57,75,90,94,104,111,124,133,143,145,146,177,206,207,216,221,224,234,236,240,241,244,248,254,257,305,307,310,],[72,72,72,72,72,72,72,72,72,72,72,72,72,212,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'procedure_call':([0,13,32,33,34,43,46,56,57,68,75,90,94,99,104,111,118,124,133,143,145,146,150,177,190,191,206,207,215,216,217,221,224,234,236,240,241,243,244,248,254,257,261,299,305,307,310,317,322,323,335,336,339,344,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'string_concatenation_operator':([16,73,209,],[89,148,148,]),'mode_name':([107,120,163,176,268,306,324,],[178,178,178,178,178,178,178,]),'integer_expression':([104,310,],[166,330,]),'start_value':([244,],[283,]),'while_control':([34,117,],[119,197,]),'operand4':([13,32,33,46,56,57,75,90,94,104,111,124,133,143,145,146,177,206,207,216,221,224,234,236,240,241,244,248,254,257,305,307,310,],[76,76,76,76,129,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'result_spec':([269,296,],[300,318,]),'element_node':([306,],[326,]),'upper_bound':([224,],[265,]),'id_list':([22,27,42,165,170,201,227,295,],[101,107,120,101,107,120,268,268,]),'do_action':([0,34,43,99,118,150,190,191,215,217,243,261,299,317,322,323,335,336,339,344,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'parameter_spec':([268,],[297,]),'boolean_literal':([13,32,33,46,56,57,75,90,94,104,111,124,133,143,145,146,177,206,207,216,221,224,234,236,240,241,244,248,254,257,305,307,310,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'mode':([107,120,163,176,268,306,324,],[182,200,229,237,298,327,340,]),'value_array_element':([13,32,33,46,56,57,75,90,94,104,111,124,133,143,145,146,177,206,207,216,221,224,234,236,240,241,244,248,254,257,305,307,310,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'composite_mode':([107,120,163,176,268,306,324,],[186,186,186,186,186,186,186,]),'location':([0,13,32,33,34,43,46,56,57,68,75,90,94,99,104,111,118,124,133,143,145,146,150,177,190,191,206,207,215,216,217,221,224,234,236,240,241,243,244,248,254,257,261,299,305,307,310,317,322,323,335,336,339,344,],[16,60,60,60,16,16,60,60,60,144,60,60,60,16,60,60,16,60,60,60,60,60,16,60,16,16,60,60,16,60,16,60,60,60,60,60,60,16,60,60,60,60,16,16,60,60,60,16,16,16,16,16,16,16,]),'operator2':([73,209,],[146,146,]),'formal_parameter':([227,295,],[266,266,]),'elseif_expression':([208,255,],[256,292,]),'parameter_attribute':([298,],[320,]),'boolean_expression':([13,57,111,216,257,],[84,130,189,260,293,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','lyaParser.py',64),
  ('program -> empty','program',1,'p_program','lyaParser.py',65),
  ('statement_list -> statement','statement_list',1,'p_statement_list1','lyaParser.py',72),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list1','lyaParser.py',73),
  ('statement -> declaration_statement','statement',1,'p_statement','lyaParser.py',80),
  ('statement -> newmode_statement','statement',1,'p_statement','lyaParser.py',81),
  ('statement -> synonym_statement','statement',1,'p_statement','lyaParser.py',82),
  ('statement -> action_statement','statement',1,'p_statement','lyaParser.py',83),
  ('statement -> procedure_statement','statement',1,'p_statement','lyaParser.py',84),
  ('declaration_statement -> DCL declaration_list SMC','declaration_statement',3,'p_declaration_statement','lyaParser.py',92),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','lyaParser.py',96),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','lyaParser.py',97),
  ('declaration -> id_list mode initialization','declaration',3,'p_declaration1','lyaParser.py',104),
  ('declaration -> id_list mode','declaration',2,'p_declaration2','lyaParser.py',108),
  ('id_list -> ID','id_list',1,'p_id_list','lyaParser.py',112),
  ('id_list -> id_list COMMA ID','id_list',3,'p_id_list','lyaParser.py',113),
  ('initialization -> EQUALS expression','initialization',2,'p_initialization','lyaParser.py',120),
  ('mode -> mode_name','mode',1,'p_mode','lyaParser.py',128),
  ('mode -> discrete_mode','mode',1,'p_mode','lyaParser.py',129),
  ('mode -> reference_mode','mode',1,'p_mode','lyaParser.py',130),
  ('mode -> composite_mode','mode',1,'p_mode','lyaParser.py',131),
  ('mode_name -> ID','mode_name',1,'p_mode_name','lyaParser.py',135),
  ('discrete_mode -> basic_mode','discrete_mode',1,'p_discrete_mode','lyaParser.py',139),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','lyaParser.py',140),
  ('basic_mode -> INT','basic_mode',1,'p_basic_mode','lyaParser.py',144),
  ('basic_mode -> BOOL','basic_mode',1,'p_basic_mode','lyaParser.py',145),
  ('basic_mode -> CHAR','basic_mode',1,'p_basic_mode','lyaParser.py',146),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaParser.py',150),
  ('discrete_range_mode -> basic_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaParser.py',151),
  ('discrete_mode_name -> ID','discrete_mode_name',1,'p_discrete_mode_name','lyaParser.py',155),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_litereal_range','lyaParser.py',159),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','lyaParser.py',163),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','lyaParser.py',167),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','lyaParser.py',171),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','lyaParser.py',175),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','lyaParser.py',176),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','lyaParser.py',180),
  ('string_length -> INTCONST','string_length',1,'p_string_length','lyaParser.py',184),
  ('array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_node','array_mode',5,'p_array_mode','lyaParser.py',188),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','lyaParser.py',193),
  ('index_mode_list -> index_mode_list COMMA index_mode','index_mode_list',3,'p_index_mode_list','lyaParser.py',194),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','lyaParser.py',201),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','lyaParser.py',202),
  ('element_node -> mode','element_node',1,'p_element_node','lyaParser.py',206),
  ('newmode_statement -> TYPE newmode_list SMC','newmode_statement',3,'p_newmode_statement','lyaParser.py',214),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','lyaParser.py',218),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','lyaParser.py',219),
  ('mode_definition -> id_list EQUALS mode','mode_definition',3,'p_mode_definition','lyaParser.py',226),
  ('synonym_statement -> SYN syn_list SMC','synonym_statement',3,'p_synonym_statement','lyaParser.py',230),
  ('syn_list -> syn_definition','syn_list',1,'p_syn_list','lyaParser.py',238),
  ('syn_list -> syn_list COMMA syn_definition','syn_list',3,'p_syn_list','lyaParser.py',239),
  ('syn_definition -> id_list EQUALS constant_expression','syn_definition',3,'p_syn_definition','lyaParser.py',246),
  ('syn_definition -> id_list mode EQUALS constant_expression','syn_definition',4,'p_syn_definition2','lyaParser.py',250),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','lyaParser.py',254),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','lyaParser.py',262),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','lyaParser.py',263),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','lyaParser.py',264),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','lyaParser.py',265),
  ('literal -> integer_literal','literal',1,'p_literal','lyaParser.py',269),
  ('literal -> boolean_literal','literal',1,'p_literal','lyaParser.py',270),
  ('literal -> char_literal','literal',1,'p_literal','lyaParser.py',271),
  ('literal -> empty_literal','literal',1,'p_literal','lyaParser.py',272),
  ('literal -> string_literal','literal',1,'p_literal','lyaParser.py',273),
  ('integer_literal -> INTCONST','integer_literal',1,'p_integer_literal','lyaParser.py',277),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','lyaParser.py',281),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','lyaParser.py',282),
  ('char_literal -> CHARCONST','char_literal',1,'p_char_literal','lyaParser.py',286),
  ('string_literal -> STRINGCONST','string_literal',1,'p_string_literal','lyaParser.py',290),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','lyaParser.py',294),
  ('value_array_element -> array_primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','lyaParser.py',298),
  ('value_array_slice -> array_primitive_value LBRACKET literal_range RBRACKET','value_array_slice',4,'p_value_array_slice','lyaParser.py',302),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','lyaParser.py',306),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','lyaParser.py',310),
  ('action_statement -> action SMC','action_statement',2,'p_action_statement','lyaParser.py',318),
  ('action_statement -> label COLON action SMC','action_statement',4,'p_action_statement','lyaParser.py',319),
  ('label -> ID','label',1,'p_label','lyaParser.py',326),
  ('action -> assignment_action','action',1,'p_action','lyaParser.py',330),
  ('action -> bracketed_action','action',1,'p_action','lyaParser.py',331),
  ('action -> call_action','action',1,'p_action','lyaParser.py',332),
  ('action -> exit_action','action',1,'p_action','lyaParser.py',333),
  ('action -> return_action','action',1,'p_action','lyaParser.py',334),
  ('action -> result_action','action',1,'p_action','lyaParser.py',335),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','lyaParser.py',343),
  ('assigning_operator -> EQUALS','assigning_operator',1,'p_assigning_operator','lyaParser.py',347),
  ('assigning_operator -> closed_dyadic_operator EQUALS','assigning_operator',2,'p_assigning_operator','lyaParser.py',348),
  ('closed_dyadic_operator -> arithmetic_additive_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','lyaParser.py',355),
  ('closed_dyadic_operator -> arithmetic_multiplicative_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','lyaParser.py',356),
  ('closed_dyadic_operator -> string_concatenation_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','lyaParser.py',357),
  ('expression_list -> expression','expression_list',1,'p_expression_list','lyaParser.py',361),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','lyaParser.py',362),
  ('expression -> operand0','expression',1,'p_expression','lyaParser.py',369),
  ('expression -> conditional_expression','expression',1,'p_expression','lyaParser.py',370),
  ('operand0 -> operand1','operand0',1,'p_operand0','lyaParser.py',374),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','lyaParser.py',375),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','lyaParser.py',382),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','lyaParser.py',383),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','lyaParser.py',387),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','lyaParser.py',391),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','lyaParser.py',392),
  ('relational_operator -> ISEQUAL','relational_operator',1,'p_relational_operator','lyaParser.py',393),
  ('relational_operator -> NOTEQUAL','relational_operator',1,'p_relational_operator','lyaParser.py',394),
  ('relational_operator -> GT','relational_operator',1,'p_relational_operator','lyaParser.py',395),
  ('relational_operator -> GE','relational_operator',1,'p_relational_operator','lyaParser.py',396),
  ('relational_operator -> LT','relational_operator',1,'p_relational_operator','lyaParser.py',397),
  ('relational_operator -> LE','relational_operator',1,'p_relational_operator','lyaParser.py',398),
  ('operand1 -> operand2','operand1',1,'p_operand1','lyaParser.py',402),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1','lyaParser.py',403),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','lyaParser.py',410),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','lyaParser.py',411),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','lyaParser.py',415),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','lyaParser.py',416),
  ('string_concatenation_operator -> STRCONC','string_concatenation_operator',1,'p_string_concatenation_operator','lyaParser.py',420),
  ('operand2 -> operand3','operand2',1,'p_operand2','lyaParser.py',424),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','lyaParser.py',425),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaParser.py',432),
  ('arithmetic_multiplicative_operator -> DIV','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaParser.py',433),
  ('arithmetic_multiplicative_operator -> MOD','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaParser.py',434),
  ('operand3 -> operand4','operand3',1,'p_operand3','lyaParser.py',438),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','lyaParser.py',439),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','lyaParser.py',446),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','lyaParser.py',447),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','lyaParser.py',451),
  ('operand4 -> location','operand4',1,'p_operand4','lyaParser.py',452),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','lyaParser.py',453),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','lyaParser.py',459),
  ('conditional_expression -> IF boolean_expression then_expression elseif_expression_list else_expression FI','conditional_expression',6,'p_conditional_expression2','lyaParser.py',463),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','lyaParser.py',467),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','lyaParser.py',471),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','lyaParser.py',475),
  ('elseif_expression_list -> elseif_expression','elseif_expression_list',1,'p_elseif_expression_list','lyaParser.py',479),
  ('elseif_expression_list -> elseif_expression_list elseif_expression','elseif_expression_list',2,'p_elseif_expression_list','lyaParser.py',480),
  ('elseif_expression -> ELSIF boolean_expression then_expression','elseif_expression',3,'p_elseif_expression','lyaParser.py',487),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','lyaParser.py',495),
  ('location -> location_name','location',1,'p_location','lyaParser.py',499),
  ('location -> string_reference','location',1,'p_location','lyaParser.py',500),
  ('location -> dereferenced_reference','location',1,'p_location','lyaParser.py',501),
  ('location -> array_element','location',1,'p_location','lyaParser.py',502),
  ('location -> array_slice','location',1,'p_location','lyaParser.py',503),
  ('location -> call_action','location',1,'p_location','lyaParser.py',504),
  ('location_name -> ID','location_name',1,'p_location_name','lyaParser.py',508),
  ('string_reference -> location_name LBRACKET integer_expression RBRACKET','string_reference',4,'p_string_reference','lyaParser.py',512),
  ('string_reference -> location_name LBRACKET literal_range RBRACKET','string_reference',4,'p_string_reference2','lyaParser.py',516),
  ('dereferenced_reference -> location ARROW','dereferenced_reference',2,'p_dereferenced_reference','lyaParser.py',520),
  ('array_element -> location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','lyaParser.py',524),
  ('array_slice -> location LBRACKET literal_range RBRACKET','array_slice',4,'p_array_slice','lyaParser.py',528),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','lyaParser.py',536),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','lyaParser.py',537),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','lyaParser.py',545),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action2','lyaParser.py',549),
  ('then_clause -> THEN','then_clause',1,'p_then_clause','lyaParser.py',553),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','lyaParser.py',554),
  ('else_clause -> ELSE','else_clause',1,'p_else_clause','lyaParser.py',561),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','lyaParser.py',562),
  ('else_clause -> elseif_clause','else_clause',1,'p_else_clause2','lyaParser.py',569),
  ('elseif_clause -> ELSIF boolean_expression then_clause','elseif_clause',3,'p_elseif_clause','lyaParser.py',573),
  ('elseif_clause -> ELSIF boolean_expression then_clause else_clause','elseif_clause',4,'p_elseif_clause2','lyaParser.py',577),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','lyaParser.py',582),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','lyaParser.py',583),
  ('do_action -> DO OD','do_action',2,'p_do_action','lyaParser.py',594),
  ('do_action -> DO control_part SMC OD','do_action',4,'p_do_action2','lyaParser.py',598),
  ('do_action -> DO control_part SMC action_statement_list OD','do_action',5,'p_do_action3','lyaParser.py',602),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action4','lyaParser.py',606),
  ('control_part -> for_control','control_part',1,'p_control_part','lyaParser.py',610),
  ('control_part -> while_control','control_part',1,'p_control_part','lyaParser.py',611),
  ('control_part -> for_control while_control','control_part',2,'p_control_part2','lyaParser.py',615),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','lyaParser.py',619),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','lyaParser.py',623),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','lyaParser.py',624),
  ('step_enumeration -> loop_counter EQUALS start_value end_value','step_enumeration',4,'p_step_enumeration','lyaParser.py',628),
  ('step_enumeration -> loop_counter EQUALS start_value step_value end_value','step_enumeration',5,'p_step_enumeration2','lyaParser.py',632),
  ('step_enumeration -> loop_counter EQUALS start_value DOWN end_value','step_enumeration',5,'p_step_enumeration3','lyaParser.py',636),
  ('step_enumeration -> loop_counter EQUALS start_value step_value DOWN end_value','step_enumeration',6,'p_step_enumeration4','lyaParser.py',640),
  ('loop_counter -> ID','loop_counter',1,'p_loop_counter','lyaParser.py',644),
  ('start_value -> discrete_expression','start_value',1,'p_start_value','lyaParser.py',648),
  ('step_value -> BY integer_expression','step_value',2,'p_step_value','lyaParser.py',652),
  ('end_value -> TO discrete_expression','end_value',2,'p_end_value','lyaParser.py',656),
  ('discrete_expression -> expression','discrete_expression',1,'p_discrete_expression','lyaParser.py',660),
  ('range_enumeration -> loop_counter IN discrete_mode','range_enumeration',3,'p_range_enumeration','lyaParser.py',664),
  ('range_enumeration -> loop_counter DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration2','lyaParser.py',668),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','lyaParser.py',672),
  ('procedure_statement -> label COLON procedure_definition SMC','procedure_statement',4,'p_procedure_statement','lyaParser.py',680),
  ('procedure_definition -> PROC LPAREN RPAREN SMC END','procedure_definition',5,'p_procedure_definition1','lyaParser.py',684),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SMC statement_list END','procedure_definition',7,'p_procedure_definition1','lyaParser.py',685),
  ('procedure_definition -> PROC LPAREN RPAREN SMC statement_list END','procedure_definition',6,'p_procedure_definition1','lyaParser.py',686),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SMC END','procedure_definition',6,'p_procedure_definition2','lyaParser.py',695),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SMC END','procedure_definition',7,'p_procedure_definition2','lyaParser.py',696),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SMC statement_list END','procedure_definition',8,'p_procedure_definition2','lyaParser.py',697),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SMC statement_list END','procedure_definition',7,'p_procedure_definition3','lyaParser.py',706),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SMC END','procedure_definition',6,'p_procedure_definition3','lyaParser.py',707),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','lyaParser.py',714),
  ('formal_parameter_list -> formal_parameter COMMA formal_parameter_list','formal_parameter_list',3,'p_formal_parameter_list','lyaParser.py',715),
  ('formal_parameter -> id_list parameter_spec','formal_parameter',2,'p_formal_parameter','lyaParser.py',722),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','lyaParser.py',728),
  ('parameter_spec -> mode parameter_attribute','parameter_spec',2,'p_parameter_spec','lyaParser.py',729),
  ('parameter_attribute -> LOC','parameter_attribute',1,'p_parameter_attribute','lyaParser.py',736),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','lyaParser.py',740),
  ('result_spec -> RETURNS LPAREN mode result_attribute RPAREN','result_spec',5,'p_result_spec','lyaParser.py',741),
  ('result_attribute -> LOC','result_attribute',1,'p_result_attribute','lyaParser.py',748),
  ('call_action -> procedure_call','call_action',1,'p_call_action','lyaParser.py',756),
  ('call_action -> builtin_call','call_action',1,'p_call_action','lyaParser.py',757),
  ('procedure_call -> ID LPAREN RPAREN','procedure_call',3,'p_procedure_call','lyaParser.py',761),
  ('procedure_call -> ID LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','lyaParser.py',762),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','lyaParser.py',769),
  ('parameter_list -> parameter COMMA parameter_list','parameter_list',3,'p_parameter_list','lyaParser.py',770),
  ('parameter -> expression','parameter',1,'p_parameter','lyaParser.py',777),
  ('exit_action -> EXIT label','exit_action',2,'p_exit_action','lyaParser.py',785),
  ('return_action -> RETURN','return_action',1,'p_return_action','lyaParser.py',789),
  ('return_action -> RETURN result','return_action',2,'p_return_action','lyaParser.py',790),
  ('result_action -> RESULT result','result_action',2,'p_result_action','lyaParser.py',797),
  ('result -> expression','result',1,'p_result','lyaParser.py',801),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','lyaParser.py',805),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','lyaParser.py',806),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','lyaParser.py',813),
  ('builtin_name -> PRED','builtin_name',1,'p_builtin_name','lyaParser.py',814),
  ('builtin_name -> SUCC','builtin_name',1,'p_builtin_name','lyaParser.py',815),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','lyaParser.py',816),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','lyaParser.py',817),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','lyaParser.py',818),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','lyaParser.py',819),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','lyaParser.py',820),
  ('integer_expression -> expression','integer_expression',1,'p_integer_expression','lyaParser.py',829),
  ('empty -> <empty>','empty',0,'p_empty','lyaParser.py',836),
]
