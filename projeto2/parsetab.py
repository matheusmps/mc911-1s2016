
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '191BF467328CD76910AD7C640E73CE71'
    
_lr_action_items = {'DOWN':([1,2,7,9,17,35,38,51,52,53,55,56,57,58,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,95,127,133,138,162,192,196,206,212,221,222,223,225,227,228,249,250,261,262,284,285,286,289,312,313,330,331,],[-199,-136,-137,-138,-135,-200,-134,-56,-57,-62,-139,-61,-60,-118,-55,-140,-65,-122,-123,-64,-67,-124,-113,-69,-93,-106,-59,-91,-68,-58,-92,-63,-66,-143,-211,-133,-119,-201,240,-173,-212,-73,-107,-114,-94,-144,-145,-202,-141,-142,-70,-71,308,-174,-177,-125,332,-126,-175,-221,]),'OR':([1,2,7,9,17,35,38,51,52,53,55,56,57,58,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,85,95,127,133,138,162,206,212,221,222,223,225,227,228,249,250,261,262,273,],[-199,-136,-137,-138,-135,-200,-134,-56,-57,-62,-139,-61,-60,-118,-55,-140,-65,-122,-123,-64,-67,-124,-113,-69,-93,-106,-59,144,-68,-58,-63,-66,-143,-211,-133,-119,-201,-212,-73,-107,-114,-94,-144,-145,-202,-141,-142,-70,-71,-140,]),'ISEQUAL':([1,2,7,9,17,35,38,51,52,53,55,56,57,58,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,85,95,127,133,138,162,206,212,221,222,223,225,227,228,249,250,261,262,273,],[-199,-136,-137,-138,-135,-200,-134,-56,-57,-62,-139,-61,-60,-118,-55,-140,-65,-122,-123,-64,-67,-124,-113,-69,-93,-106,-59,145,-68,-58,-63,-66,-143,-211,-133,-119,-201,-212,-73,-107,-114,-94,-144,-145,-202,-141,-142,-70,-71,-140,]),'STRINGCONST':([12,37,39,46,59,60,61,62,64,88,89,90,91,92,93,96,97,99,101,107,121,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,199,205,211,217,224,226,232,234,235,236,242,245,254,255,297,310,311,],[80,80,80,80,-121,-120,80,80,80,-116,-112,-84,80,-110,-115,-117,80,-111,80,80,80,80,80,-109,-108,80,-99,-100,-98,-96,-97,-104,-102,-105,-95,-101,80,-103,-85,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'COMMA':([1,2,7,9,17,35,38,47,48,49,50,51,52,53,55,56,57,58,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,95,102,103,104,115,116,117,125,126,127,133,138,158,160,162,166,169,170,171,172,173,174,175,176,177,178,179,180,206,207,208,209,212,219,221,222,223,225,227,228,229,230,233,246,247,248,249,250,261,262,263,264,265,268,271,272,274,275,278,279,288,289,295,296,299,303,304,313,316,317,318,323,324,],[-199,-136,-137,-138,-135,-200,-134,130,-46,-15,132,-56,-57,-62,-139,-61,-60,-118,-55,-140,-65,-122,-123,-64,-67,-124,-113,-69,-93,-106,-59,-91,-68,-58,-92,-63,-66,-143,164,132,-11,-50,132,200,205,-205,-211,-133,-119,224,-89,-201,-18,-24,-27,-36,-22,-25,-21,-14,-19,-23,-35,-20,-26,-212,-47,-48,-16,-73,224,-107,-114,-94,-144,-145,-202,-12,-34,-13,-52,-54,-51,-141,-142,-70,-71,-90,-31,-33,-17,-42,-40,297,-43,132,305,-53,-125,-37,-29,-28,-192,-193,-126,-41,-44,-39,-195,-194,]),'OD':([28,100,108,112,188,197,238,243,],[114,-74,189,-157,-158,244,-75,287,]),'END':([4,6,15,29,40,44,100,118,129,165,201,238,239,302,319,322,327,335,338,340,347,],[-7,-5,-6,-3,-9,-8,-74,-4,-45,-10,-49,-75,-181,321,334,337,339,342,346,348,350,]),'WHILE':([1,2,7,9,17,28,35,38,51,52,53,55,56,57,58,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,95,109,127,133,138,162,169,170,173,177,180,193,194,195,206,212,221,222,223,225,227,228,249,250,261,262,283,286,289,296,299,307,309,313,328,329,333,341,],[-199,-136,-137,-138,-135,107,-200,-134,-56,-57,-62,-139,-61,-60,-118,-55,-140,-65,-122,-123,-64,-67,-124,-113,-69,-93,-106,-59,-91,-68,-58,-92,-63,-66,-143,107,-211,-133,-119,-201,-24,-27,-25,-23,-26,-166,-168,-167,-212,-73,-107,-114,-94,-144,-145,-202,-141,-142,-70,-71,-178,-177,-125,-29,-28,-179,-169,-126,-171,-176,-170,-172,]),'SUCC':([0,4,6,12,15,28,29,33,37,39,40,44,46,54,59,60,61,62,64,88,89,90,91,92,93,96,97,99,100,101,105,107,108,112,118,121,129,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,165,188,191,197,199,201,205,211,215,217,218,224,226,232,234,235,236,238,239,242,243,245,254,255,259,297,302,310,311,319,322,327,335,338,340,347,],[3,-7,-5,3,-6,3,-3,3,3,3,-9,-8,3,3,-121,-120,3,3,3,-116,-112,-84,3,-110,-115,-117,3,-111,-74,3,3,3,3,-157,-4,3,-45,3,3,3,-109,-108,3,-99,-100,-98,-96,-97,-104,-102,-105,-95,-101,3,-103,-85,-10,-158,3,3,3,-49,3,3,3,3,3,3,3,3,3,3,3,-75,-181,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'SMC':([1,2,7,8,9,11,13,17,20,22,23,25,32,35,37,38,45,47,48,51,52,53,55,56,57,58,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,95,102,104,106,109,113,114,115,117,119,120,122,123,124,127,133,138,157,162,166,169,170,171,172,173,174,175,176,177,178,179,180,184,186,187,189,190,193,194,195,206,207,208,212,216,221,222,223,225,227,228,229,230,233,244,246,247,248,249,250,258,261,262,268,277,283,286,287,288,289,295,296,299,300,306,307,309,313,317,318,321,326,328,329,333,334,337,339,341,342,343,346,348,349,350,],[-199,-136,-137,-147,-138,-77,-78,-135,100,-82,-79,-146,-80,-200,-207,-134,-81,129,-46,-56,-57,-62,-139,-61,-60,-118,-55,-140,-65,-122,-123,-64,-67,-124,-113,-69,-93,-106,-59,-91,-68,-58,-92,-63,-127,-66,-143,165,-11,-164,-163,197,-159,-50,201,-208,-210,-209,-76,-206,-211,-133,-119,-83,-201,-18,-24,-27,-36,-22,-25,-21,-14,-19,-23,-35,-20,-26,238,239,-180,-162,-165,-166,-168,-167,-212,-47,-48,-73,-148,-107,-114,-94,-144,-145,-202,-12,-34,-13,-160,-52,-54,-51,-141,-142,-149,-70,-71,-17,302,-178,-177,-161,-53,-125,-37,-29,-28,319,327,-179,-169,-126,-44,-39,-182,338,-171,-176,-170,-189,-184,-185,-172,-188,-196,-186,-183,-197,-187,]),'DIV':([1,2,7,9,17,18,21,23,35,38,51,52,53,55,56,57,58,65,66,68,69,70,71,72,73,74,75,77,78,80,81,83,85,95,127,133,138,162,185,206,212,221,222,225,227,228,249,250,261,262,273,],[-199,-136,-137,-138,-135,88,-140,-139,-200,-134,-56,-57,-62,-139,-61,-60,-118,-55,-140,-65,-122,-123,-64,-67,-124,-113,-69,88,-59,-68,-58,-63,-66,-143,-211,-133,-119,-201,-140,-212,-73,88,-114,-144,-145,-202,-141,-142,-70,-71,-140,]),'LOWER':([0,4,6,12,15,28,29,33,37,39,40,44,46,54,59,60,61,62,64,88,89,90,91,92,93,96,97,99,100,101,105,107,108,112,118,121,129,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,165,188,191,197,199,201,205,211,215,217,218,224,226,232,234,235,236,238,239,242,243,245,254,255,259,297,302,310,311,319,322,327,335,338,340,347,],[43,-7,-5,43,-6,43,-3,43,43,43,-9,-8,43,43,-121,-120,43,43,43,-116,-112,-84,43,-110,-115,-117,43,-111,-74,43,43,43,43,-157,-4,43,-45,43,43,43,-109,-108,43,-99,-100,-98,-96,-97,-104,-102,-105,-95,-101,43,-103,-85,-10,-158,43,43,43,-49,43,43,43,43,43,43,43,43,43,43,43,-75,-181,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'NUM':([0,4,6,12,15,28,29,33,37,39,40,44,46,54,59,60,61,62,64,88,89,90,91,92,93,96,97,99,100,101,105,107,108,112,118,121,129,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,165,188,191,197,199,201,205,211,215,217,218,224,226,232,234,235,236,238,239,242,243,245,254,255,259,297,302,310,311,319,322,327,335,338,340,347,],[16,-7,-5,16,-6,16,-3,16,16,16,-9,-8,16,16,-121,-120,16,16,16,-116,-112,-84,16,-110,-115,-117,16,-111,-74,16,16,16,16,-157,-4,16,-45,16,16,16,-109,-108,16,-99,-100,-98,-96,-97,-104,-102,-105,-95,-101,16,-103,-85,-10,-158,16,16,16,-49,16,16,16,16,16,16,16,16,16,16,16,-75,-181,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'PROC':([105,],[183,]),'$end':([0,4,6,15,29,31,33,36,40,44,100,118,129,165,201,238,239,],[-222,-7,-5,-6,-3,0,-1,-2,-9,-8,-74,-4,-45,-10,-49,-75,-181,]),'ARROW':([1,2,7,9,12,17,18,21,23,35,37,38,39,46,55,59,60,61,62,64,66,70,88,89,90,91,92,93,95,96,97,99,101,107,121,127,133,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,162,185,199,205,206,211,217,224,225,226,227,228,232,234,235,236,242,245,249,250,254,255,273,297,310,311,],[-199,-136,-137,-138,54,-135,95,-140,-139,-200,54,-134,54,54,-139,-121,-120,54,54,54,-140,95,-116,-112,-84,54,-110,-115,-143,-117,54,-111,54,54,54,-211,95,54,54,-109,-108,54,-99,-100,-98,-96,-97,-104,-102,-105,-95,-101,54,-103,-85,-201,-140,54,54,-212,54,54,54,-144,54,-145,-202,54,54,54,54,54,54,-141,-142,54,54,-140,54,54,54,]),'EQUALS':([1,2,7,9,17,18,21,23,35,38,49,50,86,87,88,89,92,93,94,95,96,98,99,116,127,162,166,169,170,171,172,173,174,175,176,177,178,179,180,185,192,196,198,206,209,225,227,228,230,249,250,295,296,299,317,318,],[-199,-136,-137,-138,-135,90,-140,-139,-200,-134,-15,131,156,-88,-116,-112,-110,-115,-87,-143,-117,-86,-111,199,-211,-201,-18,-24,-27,-36,-22,-25,-21,232,-19,-23,-35,-20,-26,-140,242,-173,245,-212,-16,-144,-145,-202,-34,-141,-142,-37,-29,-28,-44,-39,]),'LBRACKET':([1,2,7,9,17,18,21,23,35,38,51,52,53,55,56,57,65,66,67,68,69,70,71,72,75,78,80,81,83,85,95,127,133,162,168,181,185,206,212,225,227,228,249,250,261,262,273,],[-199,-136,-137,-138,-135,97,-140,-139,-200,121,-56,-57,-62,-139,-61,-60,-55,-140,139,-65,-72,97,-64,-67,-69,-59,-68,-58,-63,-66,-143,-211,97,-201,231,235,-140,-212,-73,-144,-145,-202,-141,-142,-70,-71,-140,]),'NOT':([12,37,39,46,61,62,88,89,90,91,92,93,96,97,99,101,107,121,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,199,205,211,217,224,226,232,234,235,236,242,245,254,255,297,310,311,],[59,59,59,59,59,59,-116,-112,-84,59,-110,-115,-117,59,-111,59,59,59,59,59,-109,-108,59,-99,-100,-98,-96,-97,-104,-102,-105,-95,-101,59,-103,-85,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'MINUS':([1,2,7,9,12,17,18,21,23,35,37,38,39,46,51,52,53,55,56,57,58,61,62,65,66,68,69,70,71,72,73,74,75,76,77,78,80,81,83,85,88,89,90,91,92,93,95,96,97,99,101,107,121,127,133,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,162,185,199,205,206,211,212,217,221,222,223,224,225,226,227,228,232,234,235,236,242,245,249,250,254,255,261,262,273,297,310,311,],[-199,-136,-137,-138,60,-135,99,-140,-139,-200,60,-134,60,60,-56,-57,-62,-139,-61,-60,-118,60,60,-55,-140,-65,-122,-123,-64,-67,-124,-113,-69,99,-106,-59,-68,-58,-63,-66,-116,-112,-84,60,-110,-115,-143,-117,60,-111,60,60,60,-211,-133,-119,60,60,-109,-108,60,-99,-100,-98,-96,-97,-104,-102,-105,-95,-101,60,-103,-85,-201,-140,60,60,-212,60,-73,60,-107,-114,99,60,-144,60,-145,-202,60,60,60,60,60,60,-141,-142,60,60,-70,-71,-140,60,60,60,]),'IN':([1,2,7,9,17,35,38,51,52,53,55,56,57,58,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,85,95,127,133,138,162,192,196,206,212,221,222,223,225,227,228,240,249,250,261,262,273,],[-199,-136,-137,-138,-135,-200,-134,-56,-57,-62,-139,-61,-60,-118,-55,-140,-65,-122,-123,-64,-67,-124,-113,-69,-93,-106,-59,148,-68,-58,-63,-66,-143,-211,-133,-119,-201,241,-173,-212,-73,-107,-114,-94,-144,-145,-202,281,-141,-142,-70,-71,-140,]),'TYPE':([0,4,6,15,29,33,40,44,100,118,129,165,201,238,239,302,319,322,327,335,338,340,347,],[10,-7,-5,-6,-3,10,-9,-8,-74,-4,-45,-10,-49,-75,-181,10,10,10,10,10,10,10,10,]),'CHARCONST':([12,37,39,46,59,60,61,62,64,88,89,90,91,92,93,96,97,99,101,107,121,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,199,205,211,217,224,226,232,234,235,236,242,245,254,255,297,310,311,],[72,72,72,72,-121,-120,72,72,72,-116,-112,-84,72,-110,-115,-117,72,-111,72,72,72,72,72,-109,-108,72,-99,-100,-98,-96,-97,-104,-102,-105,-95,-101,72,-103,-85,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'IF':([0,4,6,12,15,28,29,33,37,39,40,44,46,61,62,90,91,97,100,101,105,107,108,112,118,121,129,137,139,156,165,188,191,197,199,201,205,211,215,217,218,224,226,232,234,235,236,238,239,242,243,245,254,255,259,297,302,310,311,319,322,327,335,338,340,347,],[12,-7,-5,61,-6,12,-3,12,61,61,-9,-8,61,61,61,-84,61,61,-74,61,12,61,12,-157,-4,61,-45,12,61,-85,-10,-158,12,12,61,-49,61,61,12,61,12,61,61,61,61,61,61,-75,-181,61,12,61,61,61,12,61,12,61,61,12,12,12,12,12,12,12,]),'LPAREN':([3,5,12,14,16,19,21,24,34,37,39,42,43,46,59,60,61,62,64,66,88,89,90,91,92,93,96,97,99,101,107,121,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,170,172,173,177,180,182,183,185,199,205,211,217,224,226,232,234,235,236,242,245,254,255,273,282,297,301,310,311,],[-215,46,62,-220,-213,-216,101,-219,-218,62,62,-214,-217,62,-121,-120,62,62,62,101,-116,-112,-84,62,-110,-115,-117,62,-111,62,62,62,62,62,-109,-108,62,-99,-100,-98,-96,-97,-104,-102,-105,-95,-101,62,-103,-85,-27,-30,-25,234,-26,236,237,101,62,62,62,62,62,62,62,62,62,62,62,62,62,62,101,-30,62,320,62,62,]),'ELSIF':([1,2,7,9,17,35,38,51,52,53,55,56,57,58,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,95,100,112,127,133,136,137,138,162,188,206,210,212,218,221,222,223,225,227,228,238,249,250,253,256,257,261,262,289,291,294,313,314,],[-199,-136,-137,-138,-135,-200,-134,-56,-57,-62,-139,-61,-60,-118,-55,-140,-65,-122,-123,-64,-67,-124,-113,-69,-93,-106,-59,-91,-68,-58,-92,-63,-66,-143,-74,-157,-211,-133,217,-150,-119,-201,-158,-212,255,-73,-151,-107,-114,-94,-144,-145,-202,-75,-141,-142,255,-130,-128,-70,-71,-125,-131,217,-126,-132,]),'STRCONC':([1,2,7,9,17,18,21,23,35,38,51,52,53,55,56,57,58,65,66,68,69,70,71,72,73,74,75,76,77,78,80,81,83,85,95,127,133,138,162,185,206,212,221,222,223,225,227,228,249,250,261,262,273,],[-199,-136,-137,-138,-135,89,-140,-139,-200,-134,-56,-57,-62,-139,-61,-60,-118,-55,-140,-65,-122,-123,-64,-67,-124,-113,-69,89,-106,-59,-68,-58,-63,-66,-143,-211,-133,-119,-201,-140,-212,-73,-107,-114,89,-144,-145,-202,-141,-142,-70,-71,-140,]),'LOC':([166,169,170,171,172,173,174,176,177,178,179,180,230,295,296,299,304,317,318,336,],[-18,-24,-27,-36,-22,-25,-21,-19,-23,-35,-20,-26,-34,-37,-29,-28,323,-44,-39,344,]),'COLON':([1,2,7,9,17,21,27,35,38,51,52,53,55,56,57,58,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,95,110,127,133,138,159,160,162,203,206,212,221,222,223,225,227,228,249,250,261,262,269,273,289,313,],[-199,-136,-137,-138,-135,-76,105,-200,-134,-56,-57,-62,-139,-61,-60,-118,-55,-140,-65,-122,-123,-64,-67,-124,-113,-69,-93,-106,-59,-91,-68,-58,-92,-63,-66,-143,191,-211,-133,-119,226,-32,-201,-32,-212,-73,-107,-114,-94,-144,-145,-202,-141,-142,-70,-71,-32,-140,-125,-126,]),'MOD':([1,2,7,9,17,18,21,23,35,38,51,52,53,55,56,57,58,65,66,68,69,70,71,72,73,74,75,77,78,80,81,83,85,95,127,133,138,162,185,206,212,221,222,225,227,228,249,250,261,262,273,],[-199,-136,-137,-138,-135,96,-140,-139,-200,-134,-56,-57,-62,-139,-61,-60,-118,-55,-140,-65,-122,-123,-64,-67,-124,-113,-69,96,-59,-68,-58,-63,-66,-143,-211,-133,-119,-201,-140,-212,-73,96,-114,-144,-145,-202,-141,-142,-70,-71,-140,]),'BOOL':([49,103,116,131,167,209,235,241,278,281,297,298,320,],[-15,180,180,180,180,-16,180,180,180,180,180,180,180,]),'ELSE':([1,2,7,9,17,35,38,51,52,53,55,56,57,58,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,95,100,112,127,133,136,137,138,162,188,206,210,212,218,221,222,223,225,227,228,238,249,250,253,256,257,261,262,289,291,294,313,314,],[-199,-136,-137,-138,-135,-200,-134,-56,-57,-62,-139,-61,-60,-118,-55,-140,-65,-122,-123,-64,-67,-124,-113,-69,-93,-106,-59,-91,-68,-58,-92,-63,-66,-143,-74,-157,-211,-133,215,-150,-119,-201,-158,-212,254,-73,-151,-107,-114,-94,-144,-145,-202,-75,-141,-142,254,-130,-128,-70,-71,-125,-131,215,-126,-132,]),'UPPER':([0,4,6,12,15,28,29,33,37,39,40,44,46,54,59,60,61,62,64,88,89,90,91,92,93,96,97,99,100,101,105,107,108,112,118,121,129,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,165,188,191,197,199,201,205,211,215,217,218,224,226,232,234,235,236,238,239,242,243,245,254,255,259,297,302,310,311,319,322,327,335,338,340,347,],[19,-7,-5,19,-6,19,-3,19,19,19,-9,-8,19,19,-121,-120,19,19,19,-116,-112,-84,19,-110,-115,-117,19,-111,-74,19,19,19,19,-157,-4,19,-45,19,19,19,-109,-108,19,-99,-100,-98,-96,-97,-104,-102,-105,-95,-101,19,-103,-85,-10,-158,19,19,19,-49,19,19,19,19,19,19,19,19,19,19,19,-75,-181,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'NOTEQUAL':([1,2,7,9,17,35,38,51,52,53,55,56,57,58,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,85,95,127,133,138,162,206,212,221,222,223,225,227,228,249,250,261,262,273,],[-199,-136,-137,-138,-135,-200,-134,-56,-57,-62,-139,-61,-60,-118,-55,-140,-65,-122,-123,-64,-67,-124,-113,-69,-93,-106,-59,153,-68,-58,-63,-66,-143,-211,-133,-119,-201,-212,-73,-107,-114,-94,-144,-145,-202,-141,-142,-70,-71,-140,]),'ID':([0,4,6,10,12,15,26,28,29,30,33,37,39,40,41,44,46,49,54,59,60,61,62,64,88,89,90,91,92,93,96,97,99,100,101,103,105,107,108,111,112,116,118,121,129,130,131,132,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,164,165,167,188,191,197,199,200,201,205,209,211,215,217,218,224,226,232,234,235,236,237,238,239,241,242,243,245,254,255,259,278,281,297,298,302,305,310,311,319,320,322,327,335,338,340,347,],[21,-7,-5,49,66,-6,49,21,-3,49,21,66,66,-9,123,-8,66,-15,66,-121,-120,66,66,66,-116,-112,-84,66,-110,-115,-117,66,-111,-74,66,172,185,66,21,196,-157,172,-4,66,-45,49,172,209,21,66,66,-109,-108,66,-99,-100,-98,-96,-97,-104,-102,-105,-95,-101,66,-103,-85,49,-10,172,-158,185,21,66,49,-49,66,-16,66,21,66,21,66,66,66,66,273,66,49,-75,-181,282,66,21,66,66,66,21,172,282,273,172,21,49,66,66,21,172,21,21,21,21,21,21,]),'GE':([1,2,7,9,17,35,38,51,52,53,55,56,57,58,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,85,95,127,133,138,162,206,212,221,222,223,225,227,228,249,250,261,262,273,],[-199,-136,-137,-138,-135,-200,-134,-56,-57,-62,-139,-61,-60,-118,-55,-140,-65,-122,-123,-64,-67,-124,-113,-69,-93,-106,-59,155,-68,-58,-63,-66,-143,-211,-133,-119,-201,-212,-73,-107,-114,-94,-144,-145,-202,-141,-142,-70,-71,-140,]),'RETURNS':([277,306,],[301,301,]),'FALSE':([12,37,39,46,59,60,61,62,64,88,89,90,91,92,93,96,97,99,101,107,121,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,199,205,211,217,224,226,232,234,235,236,242,245,254,255,297,310,311,],[68,68,68,68,-121,-120,68,68,68,-116,-112,-84,68,-110,-115,-117,68,-111,68,68,68,68,68,-109,-108,68,-99,-100,-98,-96,-97,-104,-102,-105,-95,-101,68,-103,-85,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'PRINT':([0,4,6,12,15,28,29,33,37,39,40,44,46,54,59,60,61,62,64,88,89,90,91,92,93,96,97,99,100,101,105,107,108,112,118,121,129,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,165,188,191,197,199,201,205,211,215,217,218,224,226,232,234,235,236,238,239,242,243,245,254,255,259,297,302,310,311,319,322,327,335,338,340,347,],[14,-7,-5,14,-6,14,-3,14,14,14,-9,-8,14,14,-121,-120,14,14,14,-116,-112,-84,14,-110,-115,-117,14,-111,-74,14,14,14,14,-157,-4,14,-45,14,14,14,-109,-108,14,-99,-100,-98,-96,-97,-104,-102,-105,-95,-101,14,-103,-85,-10,-158,14,14,14,-49,14,14,14,14,14,14,14,14,14,14,14,-75,-181,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'PLUS':([1,2,7,9,17,18,21,23,35,38,51,52,53,55,56,57,58,65,66,68,69,70,71,72,73,74,75,76,77,78,80,81,83,85,95,127,133,138,162,185,206,212,221,222,223,225,227,228,249,250,261,262,273,],[-199,-136,-137,-138,-135,92,-140,-139,-200,-134,-56,-57,-62,-139,-61,-60,-118,-55,-140,-65,-122,-123,-64,-67,-124,-113,-69,92,-106,-59,-68,-58,-63,-66,-143,-211,-133,-119,-201,-140,-212,-73,-107,-114,92,-144,-145,-202,-141,-142,-70,-71,-140,]),'TO':([1,2,7,9,17,35,38,51,52,53,55,56,57,58,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,95,127,133,138,162,206,212,221,222,223,225,227,228,249,250,261,262,284,285,286,289,308,312,313,330,331,332,],[-199,-136,-137,-138,-135,-200,-134,-56,-57,-62,-139,-61,-60,-118,-55,-140,-65,-122,-123,-64,-67,-124,-113,-69,-93,-106,-59,-91,-68,-58,-92,-63,-66,-143,-211,-133,-119,-201,-212,-73,-107,-114,-94,-144,-145,-202,-141,-142,-70,-71,310,-174,-177,-125,310,310,-126,-175,-221,310,]),'DCL':([0,4,6,15,29,33,40,44,100,118,129,165,201,238,239,302,319,322,327,335,338,340,347,],[26,-7,-5,-6,-3,26,-9,-8,-74,-4,-45,-10,-49,-75,-181,26,26,26,26,26,26,26,26,]),'EXIT':([0,4,6,15,28,29,33,40,44,100,105,108,112,118,129,137,165,188,191,197,201,215,218,238,239,243,259,302,319,322,327,335,338,340,347,],[41,-7,-5,-6,41,-3,41,-9,-8,-74,41,41,-157,-4,-45,41,-10,-158,41,41,-49,41,41,-75,-181,41,41,41,41,41,41,41,41,41,41,]),'INTCONST':([12,37,39,46,59,60,61,62,64,88,89,90,91,92,93,96,97,99,101,107,121,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,199,205,211,217,224,226,231,232,234,235,236,242,245,254,255,297,310,311,],[71,71,71,71,-121,-120,71,71,71,-116,-112,-84,71,-110,-115,-117,71,-111,71,71,71,71,71,-109,-108,71,-99,-100,-98,-96,-97,-104,-102,-105,-95,-101,71,-103,-85,71,71,71,71,71,71,266,71,71,71,71,71,71,71,71,71,71,71,]),'LE':([1,2,7,9,17,35,38,51,52,53,55,56,57,58,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,85,95,127,133,138,162,206,212,221,222,223,225,227,228,249,250,261,262,273,],[-199,-136,-137,-138,-135,-200,-134,-56,-57,-62,-139,-61,-60,-118,-55,-140,-65,-122,-123,-64,-67,-124,-113,-69,-93,-106,-59,151,-68,-58,-63,-66,-143,-211,-133,-119,-201,-212,-73,-107,-114,-94,-144,-145,-202,-141,-142,-70,-71,-140,]),'DO':([0,4,6,15,28,29,33,40,44,100,105,108,112,118,129,137,165,188,191,197,201,215,218,238,239,243,259,302,319,322,327,335,338,340,347,],[28,-7,-5,-6,28,-3,28,-9,-8,-74,28,28,-157,-4,-45,28,-10,-158,28,28,-49,28,28,-75,-181,28,28,28,28,28,28,28,28,28,28,]),'SYN':([0,4,6,15,29,33,40,44,100,118,129,165,201,238,239,302,319,322,327,335,338,340,347,],[30,-7,-5,-6,-3,30,-9,-8,-74,-4,-45,-10,-49,-75,-181,30,30,30,30,30,30,30,30,]),'CHARS':([49,103,116,131,167,209,278,298,320,],[-15,168,168,168,168,-16,168,168,168,]),'NULL':([12,37,39,46,59,60,61,62,64,88,89,90,91,92,93,96,97,99,101,107,121,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,199,205,211,217,224,226,232,234,235,236,242,245,254,255,297,310,311,],[75,75,75,75,-121,-120,75,75,75,-116,-112,-84,75,-110,-115,-117,75,-111,75,75,75,75,75,-109,-108,75,-99,-100,-98,-96,-97,-104,-102,-105,-95,-101,75,-103,-85,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'FOR':([28,],[111,]),'RPAREN':([1,2,7,9,17,35,38,46,51,52,53,55,56,57,58,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,95,101,125,126,127,128,133,135,138,162,163,166,169,170,171,172,173,174,176,177,178,179,180,206,212,221,222,223,225,227,228,230,237,249,250,251,261,262,264,265,270,276,279,280,289,295,296,299,303,304,313,317,318,323,324,325,336,344,345,],[-199,-136,-137,-138,-135,-200,-134,127,-56,-57,-62,-139,-61,-60,-118,-55,-140,-65,-122,-123,-64,-67,-124,-113,-69,-93,-106,-59,-91,-68,-58,-92,-63,-66,-143,162,-203,-205,-211,206,-133,212,-119,-201,228,-18,-24,-27,-36,-22,-25,-21,-19,-23,-35,-20,-26,-212,-73,-107,-114,-94,-144,-145,-202,-34,277,-141,-142,-204,-70,-71,-31,-33,296,299,-190,306,-125,-37,-29,-28,-192,-193,-126,-44,-39,-195,-194,-191,343,-198,349,]),'LENGTH':([0,4,6,12,15,28,29,33,37,39,40,44,46,54,59,60,61,62,64,88,89,90,91,92,93,96,97,99,100,101,105,107,108,112,118,121,129,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,165,188,191,197,199,201,205,211,215,217,218,224,226,232,234,235,236,238,239,242,243,245,254,255,259,297,302,310,311,319,322,327,335,338,340,347,],[34,-7,-5,34,-6,34,-3,34,34,34,-9,-8,34,34,-121,-120,34,34,34,-116,-112,-84,34,-110,-115,-117,34,-111,-74,34,34,34,34,-157,-4,34,-45,34,34,34,-109,-108,34,-99,-100,-98,-96,-97,-104,-102,-105,-95,-101,34,-103,-85,-10,-158,34,34,34,-49,34,34,34,34,34,34,34,34,34,34,34,-75,-181,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'CHAR':([49,103,116,131,167,209,235,241,278,281,297,298,320,],[-15,170,170,170,170,-16,170,170,170,170,170,170,170,]),'RETURN':([0,4,6,15,28,29,33,40,44,100,105,108,112,118,129,137,165,188,191,197,201,215,218,238,239,243,259,302,319,322,327,335,338,340,347,],[37,-7,-5,-6,37,-3,37,-9,-8,-74,37,37,-157,-4,-45,37,-10,-158,37,37,-49,37,37,-75,-181,37,37,37,37,37,37,37,37,37,37,]),'AND':([1,2,7,9,17,35,38,51,52,53,55,56,57,58,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,85,95,127,133,138,162,206,212,221,222,223,225,227,228,249,250,261,262,273,],[-199,-136,-137,-138,-135,-200,-134,-56,-57,-62,-139,-61,-60,-118,-55,-140,-65,-122,-123,-64,-67,-124,-113,-69,-93,-106,-59,146,-68,-58,-63,-66,-143,-211,-133,-119,-201,-212,-73,-107,-114,-94,-144,-145,-202,-141,-142,-70,-71,-140,]),'INT':([49,103,116,131,167,209,235,241,278,281,297,298,320,],[-15,173,173,173,173,-16,173,173,173,173,173,173,173,]),'RBRACKET':([1,2,7,9,17,35,38,51,52,53,55,56,57,58,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,95,127,133,138,158,160,161,162,169,170,173,177,180,202,203,204,206,212,219,220,221,222,223,225,227,228,249,250,261,262,263,264,265,266,267,271,272,274,275,289,296,299,313,316,],[-199,-136,-137,-138,-135,-200,-134,-56,-57,-62,-139,-61,-60,-118,-55,-140,-65,-122,-123,-64,-67,-124,-113,-69,-93,-106,-59,-91,-68,-58,-92,-63,-66,-143,-211,-133,-119,225,-89,227,-201,-24,-27,-25,-23,-26,249,-221,250,-212,-73,261,262,-107,-114,-94,-144,-145,-202,-141,-142,-70,-71,-90,-31,-33,-38,295,-42,-40,298,-43,-125,-29,-28,-126,-41,]),'RESULT':([0,4,6,15,28,29,33,40,44,100,105,108,112,118,129,137,165,188,191,197,201,215,218,238,239,243,259,302,319,322,327,335,338,340,347,],[39,-7,-5,-6,39,-3,39,-9,-8,-74,39,39,-157,-4,-45,39,-10,-158,39,39,-49,39,39,-75,-181,39,39,39,39,39,39,39,39,39,39,]),'THEN':([1,2,7,9,17,35,38,51,52,53,55,56,57,58,63,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,95,127,133,134,138,162,206,212,221,222,223,225,227,228,249,250,260,261,262,289,293,313,],[-199,-136,-137,-138,-135,-200,-134,-56,-57,-62,-139,-61,-60,-118,137,-55,-140,-65,-122,-123,-64,-67,-124,-113,-69,-93,-106,-59,-91,-68,-58,-92,-63,-127,-66,-143,-211,-133,211,-119,-201,-212,-73,-107,-114,-94,-144,-145,-202,-141,-142,137,-70,-71,-125,211,-126,]),'REF':([49,103,116,131,167,209,278,298,320,],[-15,167,167,167,167,-16,167,167,167,]),'FI':([1,2,7,9,17,35,38,51,52,53,55,56,57,58,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,95,100,112,127,133,136,137,138,162,188,206,212,213,214,215,218,221,222,223,225,227,228,238,249,250,252,259,261,262,289,290,292,294,313,315,],[-199,-136,-137,-138,-135,-200,-134,-56,-57,-62,-139,-61,-60,-118,-55,-140,-65,-122,-123,-64,-67,-124,-113,-69,-93,-106,-59,-91,-68,-58,-92,-63,-66,-143,-74,-157,-211,-133,216,-150,-119,-201,-158,-212,-73,258,-154,-152,-151,-107,-114,-94,-144,-145,-202,-75,-141,-142,289,-153,-70,-71,-125,313,-129,-155,-126,-156,]),'LT':([1,2,7,9,17,35,38,51,52,53,55,56,57,58,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,85,95,127,133,138,162,206,212,221,222,223,225,227,228,249,250,261,262,273,],[-199,-136,-137,-138,-135,-200,-134,-56,-57,-62,-139,-61,-60,-118,-55,-140,-65,-122,-123,-64,-67,-124,-113,-69,-93,-106,-59,149,-68,-58,-63,-66,-143,-211,-133,-119,-201,-212,-73,-107,-114,-94,-144,-145,-202,-141,-142,-70,-71,-140,]),'PRED':([0,4,6,12,15,28,29,33,37,39,40,44,46,54,59,60,61,62,64,88,89,90,91,92,93,96,97,99,100,101,105,107,108,112,118,121,129,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,165,188,191,197,199,201,205,211,215,217,218,224,226,232,234,235,236,238,239,242,243,245,254,255,259,297,302,310,311,319,322,327,335,338,340,347,],[42,-7,-5,42,-6,42,-3,42,42,42,-9,-8,42,42,-121,-120,42,42,42,-116,-112,-84,42,-110,-115,-117,42,-111,-74,42,42,42,42,-157,-4,42,-45,42,42,42,-109,-108,42,-99,-100,-98,-96,-97,-104,-102,-105,-95,-101,42,-103,-85,-10,-158,42,42,42,-49,42,42,42,42,42,42,42,42,42,42,42,-75,-181,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'BY':([1,2,7,9,17,35,38,51,52,53,55,56,57,58,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,95,127,133,138,162,206,212,221,222,223,225,227,228,249,250,261,262,284,285,286,289,313,],[-199,-136,-137,-138,-135,-200,-134,-56,-57,-62,-139,-61,-60,-118,-55,-140,-65,-122,-123,-64,-67,-124,-113,-69,-93,-106,-59,-91,-68,-58,-92,-63,-66,-143,-211,-133,-119,-201,-212,-73,-107,-114,-94,-144,-145,-202,-141,-142,-70,-71,311,-174,-177,-125,-126,]),'TRUE':([12,37,39,46,59,60,61,62,64,88,89,90,91,92,93,96,97,99,101,107,121,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,199,205,211,217,224,226,232,234,235,236,242,245,254,255,297,310,311,],[85,85,85,85,-121,-120,85,85,85,-116,-112,-84,85,-110,-115,-117,85,-111,85,85,85,85,85,-109,-108,85,-99,-100,-98,-96,-97,-104,-102,-105,-95,-101,85,-103,-85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'READ':([0,4,6,12,15,28,29,33,37,39,40,44,46,54,59,60,61,62,64,88,89,90,91,92,93,96,97,99,100,101,105,107,108,112,118,121,129,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,165,188,191,197,199,201,205,211,215,217,218,224,226,232,234,235,236,238,239,242,243,245,254,255,259,297,302,310,311,319,322,327,335,338,340,347,],[24,-7,-5,24,-6,24,-3,24,24,24,-9,-8,24,24,-121,-120,24,24,24,-116,-112,-84,24,-110,-115,-117,24,-111,-74,24,24,24,24,-157,-4,24,-45,24,24,24,-109,-108,24,-99,-100,-98,-96,-97,-104,-102,-105,-95,-101,24,-103,-85,-10,-158,24,24,24,-49,24,24,24,24,24,24,24,24,24,24,24,-75,-181,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'ARRAY':([49,103,116,131,167,209,278,298,320,],[-15,181,181,181,181,-16,181,181,181,]),'GT':([1,2,7,9,17,35,38,51,52,53,55,56,57,58,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,85,95,127,133,138,162,206,212,221,222,223,225,227,228,249,250,261,262,273,],[-199,-136,-137,-138,-135,-200,-134,-56,-57,-62,-139,-61,-60,-118,-55,-140,-65,-122,-123,-64,-67,-124,-113,-69,-93,-106,-59,150,-68,-58,-63,-66,-143,-211,-133,-119,-201,-212,-73,-107,-114,-94,-144,-145,-202,-141,-142,-70,-71,-140,]),'TIMES':([1,2,7,9,17,18,21,23,35,38,51,52,53,55,56,57,58,65,66,68,69,70,71,72,73,74,75,77,78,80,81,83,85,95,127,133,138,162,185,206,212,221,222,225,227,228,249,250,261,262,273,],[-199,-136,-137,-138,-135,93,-140,-139,-200,-134,-56,-57,-62,-139,-61,-60,-118,-55,-140,-65,-122,-123,-64,-67,-124,-113,-69,93,-59,-68,-58,-63,-66,-143,-211,-133,-119,-201,-140,-212,-73,93,-114,-144,-145,-202,-141,-142,-70,-71,-140,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'elseif_clause':([136,294,],[214,214,]),'array_slice':([0,12,28,33,37,39,46,54,61,62,64,91,97,101,105,107,108,121,137,139,140,143,154,191,197,199,205,211,215,217,218,224,226,232,234,235,236,242,243,245,254,255,259,297,302,310,311,319,322,327,335,338,340,347,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'dereferenced_reference':([0,12,28,33,37,39,46,54,61,62,64,91,97,101,105,107,108,121,137,139,140,143,154,191,197,199,205,211,215,217,218,224,226,232,234,235,236,242,243,245,254,255,259,297,302,310,311,319,322,327,335,338,340,347,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'value_array_slice':([12,37,39,46,61,62,64,91,97,101,107,121,139,140,143,154,199,205,211,217,224,226,232,234,235,236,242,245,254,255,297,310,311,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'parameter_attribute':([304,],[324,]),'mode_name':([103,116,131,167,278,298,320,],[166,166,166,166,166,166,166,]),'mode':([103,116,131,167,278,298,320,],[175,198,208,230,304,317,336,]),'expression_list':([97,139,],[158,219,]),'builtin_name':([0,12,28,33,37,39,46,54,61,62,64,91,97,101,105,107,108,121,137,139,140,143,154,191,197,199,205,211,215,217,218,224,226,232,234,235,236,242,243,245,254,255,259,297,302,310,311,319,322,327,335,338,340,347,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'declaration_statement':([0,33,302,319,322,327,335,338,340,347,],[6,6,6,6,6,6,6,6,6,6,]),'step_enumeration':([111,],[195,]),'boolean_expression':([12,61,107,217,255,],[63,134,187,260,293,]),'composite_mode':([103,116,131,167,278,298,320,],[174,174,174,174,174,174,174,]),'string_concatenation_operator':([18,76,223,],[87,141,141,]),'else_clause':([136,294,],[213,315,]),'else_expression':([210,253,],[252,290,]),'integer_expression':([121,311,],[202,330,]),'assignment_action':([0,28,33,105,108,137,191,197,215,218,243,259,302,319,322,327,335,338,340,347,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'bracketed_action':([0,28,33,105,108,137,191,197,215,218,243,259,302,319,322,327,335,338,340,347,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'monadic_operator':([12,37,39,46,61,62,91,97,101,107,121,139,140,143,154,199,205,211,217,224,226,232,234,235,236,242,245,254,255,297,310,311,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'discrete_mode':([103,116,131,167,235,241,278,281,297,298,320,],[176,176,176,176,271,283,176,307,271,176,176,]),'string_mode':([103,116,131,167,278,298,320,],[178,178,178,178,178,178,178,]),'synonym_statement':([0,33,302,319,322,327,335,338,340,347,],[4,4,4,4,4,4,4,4,4,4,]),'arithmetic_multiplicative_operator':([18,77,221,],[94,143,143,]),'action':([0,28,33,105,108,137,191,197,215,218,243,259,302,319,322,327,335,338,340,347,],[20,20,20,184,20,20,184,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'parameter':([46,101,205,],[125,125,125,]),'discrete_expression':([242,310,],[285,329,]),'elseif_expression':([210,253,],[256,291,]),'element_node':([298,],[318,]),'expression':([12,37,39,46,61,62,91,97,101,107,121,139,199,205,211,217,224,226,232,234,235,236,242,245,254,255,297,310,311,],[84,120,120,126,84,135,157,160,126,84,203,160,247,126,257,84,263,265,268,269,269,269,286,247,292,84,269,286,331,]),'closed_dyadic_operator':([18,],[86,]),'end_value':([284,308,312,332,],[309,328,333,341,]),'call_action':([0,12,28,33,37,39,46,54,61,62,64,91,97,101,105,107,108,121,137,139,140,143,154,191,197,199,205,211,215,217,218,224,226,232,234,235,236,242,243,245,254,255,259,297,302,310,311,319,322,327,335,338,340,347,],[23,55,23,23,55,55,55,55,55,55,55,55,55,55,23,55,23,55,23,55,55,55,55,23,23,55,55,55,23,55,23,55,55,55,55,55,55,55,23,55,55,55,23,55,23,55,55,23,23,23,23,23,23,23,]),'range_enumeration':([111,],[194,]),'index_mode_list':([235,],[274,]),'label':([0,28,33,41,108,137,197,215,218,243,259,302,319,322,327,335,338,340,347,],[27,110,27,124,110,110,110,110,110,110,110,27,27,27,27,27,27,27,27,]),'referenced_location':([12,37,39,46,61,62,64,91,97,101,107,121,139,140,143,154,199,205,211,217,224,226,232,234,235,236,242,245,254,255,297,310,311,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'operand3':([12,37,39,46,61,62,91,97,101,107,121,139,140,143,154,199,205,211,217,224,226,232,234,235,236,242,245,254,255,297,310,311,],[74,74,74,74,74,74,74,74,74,74,74,74,74,222,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'exit_action':([0,28,33,105,108,137,191,197,215,218,243,259,302,319,322,327,335,338,340,347,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'index_mode':([235,297,],[272,316,]),'operand1':([12,37,39,46,61,62,91,97,101,107,121,139,154,199,205,211,217,224,226,232,234,235,236,242,245,254,255,297,310,311,],[76,76,76,76,76,76,76,76,76,76,76,76,223,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'constant_expression':([199,245,],[246,288,]),'integer_literal':([12,37,39,46,61,62,64,91,97,101,107,121,139,140,143,154,199,205,211,217,224,226,232,234,235,236,242,245,254,255,297,310,311,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'operator1':([79,],[154,]),'empty':([0,],[36,]),'result':([37,39,],[119,122,]),'result_attribute':([336,],[345,]),'operand0':([12,37,39,46,61,62,91,97,101,107,121,139,199,205,211,217,224,226,232,234,235,236,242,245,254,255,297,310,311,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'procedure_statement':([0,33,302,319,322,327,335,338,340,347,],[40,40,40,40,40,40,40,40,40,40,]),'operator2':([76,223,],[140,140,]),'parenthesized_expression':([12,37,39,46,61,62,64,91,97,101,107,121,139,140,143,154,199,205,211,217,224,226,232,234,235,236,242,245,254,255,297,310,311,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'literal_range':([97,121,139,234,235,236,297,],[161,204,220,270,275,276,275,]),'reference_mode':([103,116,131,167,278,298,320,],[179,179,179,179,179,179,179,]),'string_literal':([12,37,39,46,61,62,64,91,97,101,107,121,139,140,143,154,199,205,211,217,224,226,232,234,235,236,242,245,254,255,297,310,311,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'return_action':([0,28,33,105,108,137,191,197,215,218,243,259,302,319,322,327,335,338,340,347,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'array_primitive_value':([12,37,39,46,61,62,64,91,97,101,107,121,139,140,143,154,199,205,211,217,224,226,232,234,235,236,242,245,254,255,297,310,311,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'control_part':([28,],[113,]),'while_control':([28,109,],[106,190,]),'procedure_call':([0,12,28,33,37,39,46,54,61,62,64,91,97,101,105,107,108,121,137,139,140,143,154,191,197,199,205,211,215,217,218,224,226,232,234,235,236,242,243,245,254,255,259,297,302,310,311,319,322,327,335,338,340,347,],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'value_array_element':([12,37,39,46,61,62,64,91,97,101,107,121,139,140,143,154,199,205,211,217,224,226,232,234,235,236,242,245,254,255,297,310,311,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'empty_literal':([12,37,39,46,61,62,64,91,97,101,107,121,139,140,143,154,199,205,211,217,224,226,232,234,235,236,242,245,254,255,297,310,311,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'syn_list':([30,],[117,]),'array_element':([0,12,28,33,37,39,46,54,61,62,64,91,97,101,105,107,108,121,137,139,140,143,154,191,197,199,205,211,215,217,218,224,226,232,234,235,236,242,243,245,254,255,259,297,302,310,311,319,322,327,335,338,340,347,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'action_statement_list':([28,137,197,215,],[108,218,243,259,]),'result_spec':([277,306,],[300,326,]),'initialization':([175,],[233,]),'for_control':([28,],[109,]),'do_action':([0,28,33,105,108,137,191,197,215,218,243,259,302,319,322,327,335,338,340,347,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'char_literal':([12,37,39,46,61,62,64,91,97,101,107,121,139,140,143,154,199,205,211,217,224,226,232,234,235,236,242,245,254,255,297,310,311,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'statement_list':([0,302,319,327,338,],[33,322,335,340,347,]),'boolean_literal':([12,37,39,46,61,62,64,91,97,101,107,121,139,140,143,154,199,205,211,217,224,226,232,234,235,236,242,245,254,255,297,310,311,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'lower_bound':([97,121,139,234,235,236,297,],[159,159,159,159,159,159,159,]),'operand4':([12,37,39,46,61,62,64,91,97,101,107,121,139,140,143,154,199,205,211,217,224,226,232,234,235,236,242,245,254,255,297,310,311,],[58,58,58,58,58,58,138,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'membership_operator':([79,],[147,]),'then_expression':([134,293,],[210,314,]),'declaration_list':([26,],[102,]),'start_value':([242,],[284,]),'then_clause':([63,260,],[136,294,]),'assigning_operator':([18,],[91,]),'newmode_statement':([0,33,302,319,322,327,335,338,340,347,],[15,15,15,15,15,15,15,15,15,15,]),'basic_mode':([103,116,131,167,235,241,278,281,297,298,320,],[177,177,177,177,177,177,177,177,177,177,177,]),'upper_bound':([226,],[264,]),'literal':([12,37,39,46,61,62,64,91,97,101,107,121,139,140,143,154,199,205,211,217,224,226,232,234,235,236,242,245,254,255,297,310,311,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'formal_parameter':([237,305,],[279,279,]),'discrete_mode_name':([103,116,131,167,235,241,278,281,297,298,320,],[182,182,182,182,182,182,182,182,182,182,182,]),'result_action':([0,28,33,105,108,137,191,197,215,218,243,259,302,319,322,327,335,338,340,347,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'parameter_list':([46,101,205,],[128,163,251,]),'syn_definition':([30,200,],[115,248,]),'primitive_value':([12,37,39,46,61,62,64,91,97,101,107,121,139,140,143,154,199,205,211,217,224,226,232,234,235,236,242,245,254,255,297,310,311,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'parameter_spec':([278,],[303,]),'if_action':([0,28,33,105,108,137,191,197,215,218,243,259,302,319,322,327,335,338,340,347,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'location':([0,12,28,33,37,39,46,54,61,62,64,91,97,101,105,107,108,121,137,139,140,143,154,191,197,199,205,211,215,217,218,224,226,232,234,235,236,242,243,245,254,255,259,297,302,310,311,319,322,327,335,338,340,347,],[18,70,18,18,70,70,70,133,70,70,70,70,70,70,18,70,18,70,18,70,70,70,70,18,18,70,70,70,18,70,18,70,70,70,70,70,70,70,18,70,70,70,18,70,18,70,70,18,18,18,18,18,18,18,]),'id_list':([10,26,30,130,164,200,237,305,],[50,103,116,50,103,116,278,278,]),'string_length':([231,],[267,]),'statement':([0,33,302,319,322,327,335,338,340,347,],[29,118,29,29,118,29,118,29,118,118,]),'array_mode':([103,116,131,167,278,298,320,],[171,171,171,171,171,171,171,]),'iteration':([111,],[193,]),'elseif_expression_list':([210,],[253,]),'mode_definition':([10,130,],[48,207,]),'discrete_range_mode':([103,116,131,167,235,241,278,281,297,298,320,],[169,169,169,169,169,169,169,169,169,169,169,]),'operand2':([12,37,39,46,61,62,91,97,101,107,121,139,140,154,199,205,211,217,224,226,232,234,235,236,242,245,254,255,297,310,311,],[77,77,77,77,77,77,77,77,77,77,77,77,221,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'builtin_call':([0,12,28,33,37,39,46,54,61,62,64,91,97,101,105,107,108,121,137,139,140,143,154,191,197,199,205,211,215,217,218,224,226,232,234,235,236,242,243,245,254,255,259,297,302,310,311,319,322,327,335,338,340,347,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'string_reference':([0,12,28,33,37,39,46,54,61,62,64,91,97,101,105,107,108,121,137,139,140,143,154,191,197,199,205,211,215,217,218,224,226,232,234,235,236,242,243,245,254,255,259,297,302,310,311,319,322,327,335,338,340,347,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'location_name':([0,12,28,33,37,39,46,54,61,62,64,91,97,101,105,107,108,121,137,139,140,143,154,191,197,199,205,211,215,217,218,224,226,232,234,235,236,242,243,245,254,255,259,297,302,310,311,319,322,327,335,338,340,347,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'loop_counter':([111,],[192,]),'relational_operator':([79,],[152,]),'conditional_expression':([12,37,39,46,61,62,91,97,101,107,121,139,199,205,211,217,224,226,232,234,235,236,242,245,254,255,297,310,311,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'program':([0,],[31,]),'procedure_definition':([105,],[186,]),'action_statement':([0,28,33,108,137,197,215,218,243,259,302,319,322,327,335,338,340,347,],[44,112,44,188,112,112,112,188,188,188,44,44,44,44,44,44,44,44,]),'newmode_list':([10,],[47,]),'step_value':([284,],[312,]),'formal_parameter_list':([237,305,],[280,325,]),'arithmetic_additive_operator':([18,76,223,],[98,142,142,]),'declaration':([26,164,],[104,229,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','lyaParser.py',64),
  ('program -> empty','program',1,'p_program','lyaParser.py',65),
  ('statement_list -> statement','statement_list',1,'p_statement_list1','lyaParser.py',72),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list1','lyaParser.py',73),
  ('statement -> declaration_statement','statement',1,'p_statement','lyaParser.py',80),
  ('statement -> newmode_statement','statement',1,'p_statement','lyaParser.py',81),
  ('statement -> synonym_statement','statement',1,'p_statement','lyaParser.py',82),
  ('statement -> action_statement','statement',1,'p_statement','lyaParser.py',83),
  ('statement -> procedure_statement','statement',1,'p_statement','lyaParser.py',84),
  ('declaration_statement -> DCL declaration_list SMC','declaration_statement',3,'p_declaration_statement','lyaParser.py',92),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','lyaParser.py',96),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','lyaParser.py',97),
  ('declaration -> id_list mode initialization','declaration',3,'p_declaration1','lyaParser.py',104),
  ('declaration -> id_list mode','declaration',2,'p_declaration2','lyaParser.py',108),
  ('id_list -> ID','id_list',1,'p_id_list','lyaParser.py',112),
  ('id_list -> id_list COMMA ID','id_list',3,'p_id_list','lyaParser.py',113),
  ('initialization -> EQUALS expression','initialization',2,'p_initialization','lyaParser.py',120),
  ('mode -> mode_name','mode',1,'p_mode','lyaParser.py',128),
  ('mode -> discrete_mode','mode',1,'p_mode','lyaParser.py',129),
  ('mode -> reference_mode','mode',1,'p_mode','lyaParser.py',130),
  ('mode -> composite_mode','mode',1,'p_mode','lyaParser.py',131),
  ('mode_name -> ID','mode_name',1,'p_mode_name','lyaParser.py',135),
  ('discrete_mode -> basic_mode','discrete_mode',1,'p_discrete_mode','lyaParser.py',139),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','lyaParser.py',140),
  ('basic_mode -> INT','basic_mode',1,'p_basic_mode','lyaParser.py',144),
  ('basic_mode -> BOOL','basic_mode',1,'p_basic_mode','lyaParser.py',145),
  ('basic_mode -> CHAR','basic_mode',1,'p_basic_mode','lyaParser.py',146),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaParser.py',150),
  ('discrete_range_mode -> basic_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaParser.py',151),
  ('discrete_mode_name -> ID','discrete_mode_name',1,'p_discrete_mode_name','lyaParser.py',155),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_litereal_range','lyaParser.py',159),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','lyaParser.py',163),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','lyaParser.py',167),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','lyaParser.py',171),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','lyaParser.py',175),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','lyaParser.py',176),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','lyaParser.py',180),
  ('string_length -> INTCONST','string_length',1,'p_string_length','lyaParser.py',184),
  ('array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_node','array_mode',5,'p_array_mode','lyaParser.py',188),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','lyaParser.py',193),
  ('index_mode_list -> index_mode_list COMMA index_mode','index_mode_list',3,'p_index_mode_list','lyaParser.py',194),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','lyaParser.py',201),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','lyaParser.py',202),
  ('element_node -> mode','element_node',1,'p_element_node','lyaParser.py',206),
  ('newmode_statement -> TYPE newmode_list SMC','newmode_statement',3,'p_newmode_statement','lyaParser.py',214),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','lyaParser.py',218),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','lyaParser.py',219),
  ('mode_definition -> id_list EQUALS mode','mode_definition',3,'p_mode_definition','lyaParser.py',226),
  ('synonym_statement -> SYN syn_list SMC','synonym_statement',3,'p_synonym_statement','lyaParser.py',230),
  ('syn_list -> syn_definition','syn_list',1,'p_syn_list','lyaParser.py',238),
  ('syn_list -> syn_list COMMA syn_definition','syn_list',3,'p_syn_list','lyaParser.py',239),
  ('syn_definition -> id_list EQUALS constant_expression','syn_definition',3,'p_syn_definition','lyaParser.py',246),
  ('syn_definition -> id_list mode EQUALS constant_expression','syn_definition',4,'p_syn_definition2','lyaParser.py',250),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','lyaParser.py',254),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','lyaParser.py',262),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','lyaParser.py',263),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','lyaParser.py',264),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','lyaParser.py',265),
  ('literal -> integer_literal','literal',1,'p_literal','lyaParser.py',269),
  ('literal -> boolean_literal','literal',1,'p_literal','lyaParser.py',270),
  ('literal -> char_literal','literal',1,'p_literal','lyaParser.py',271),
  ('literal -> empty_literal','literal',1,'p_literal','lyaParser.py',272),
  ('literal -> string_literal','literal',1,'p_literal','lyaParser.py',273),
  ('integer_literal -> INTCONST','integer_literal',1,'p_integer_literal','lyaParser.py',277),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','lyaParser.py',281),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','lyaParser.py',282),
  ('char_literal -> CHARCONST','char_literal',1,'p_char_literal','lyaParser.py',286),
  ('string_literal -> STRINGCONST','string_literal',1,'p_string_literal','lyaParser.py',290),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','lyaParser.py',294),
  ('value_array_element -> array_primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','lyaParser.py',298),
  ('value_array_slice -> array_primitive_value LBRACKET literal_range RBRACKET','value_array_slice',4,'p_value_array_slice','lyaParser.py',302),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','lyaParser.py',306),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','lyaParser.py',310),
  ('action_statement -> action SMC','action_statement',2,'p_action_statement','lyaParser.py',318),
  ('action_statement -> label COLON action SMC','action_statement',4,'p_action_statement','lyaParser.py',319),
  ('label -> ID','label',1,'p_label','lyaParser.py',326),
  ('action -> assignment_action','action',1,'p_action','lyaParser.py',330),
  ('action -> bracketed_action','action',1,'p_action','lyaParser.py',331),
  ('action -> call_action','action',1,'p_action','lyaParser.py',332),
  ('action -> exit_action','action',1,'p_action','lyaParser.py',333),
  ('action -> return_action','action',1,'p_action','lyaParser.py',334),
  ('action -> result_action','action',1,'p_action','lyaParser.py',335),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','lyaParser.py',343),
  ('assigning_operator -> EQUALS','assigning_operator',1,'p_assigning_operator','lyaParser.py',347),
  ('assigning_operator -> closed_dyadic_operator EQUALS','assigning_operator',2,'p_assigning_operator','lyaParser.py',348),
  ('closed_dyadic_operator -> arithmetic_additive_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','lyaParser.py',355),
  ('closed_dyadic_operator -> arithmetic_multiplicative_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','lyaParser.py',356),
  ('closed_dyadic_operator -> string_concatenation_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','lyaParser.py',357),
  ('expression_list -> expression','expression_list',1,'p_expression_list','lyaParser.py',361),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','lyaParser.py',362),
  ('expression -> operand0','expression',1,'p_expression','lyaParser.py',369),
  ('expression -> conditional_expression','expression',1,'p_expression','lyaParser.py',370),
  ('operand0 -> operand1','operand0',1,'p_operand0','lyaParser.py',374),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','lyaParser.py',375),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','lyaParser.py',382),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','lyaParser.py',383),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','lyaParser.py',387),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','lyaParser.py',391),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','lyaParser.py',392),
  ('relational_operator -> ISEQUAL','relational_operator',1,'p_relational_operator','lyaParser.py',393),
  ('relational_operator -> NOTEQUAL','relational_operator',1,'p_relational_operator','lyaParser.py',394),
  ('relational_operator -> GT','relational_operator',1,'p_relational_operator','lyaParser.py',395),
  ('relational_operator -> GE','relational_operator',1,'p_relational_operator','lyaParser.py',396),
  ('relational_operator -> LT','relational_operator',1,'p_relational_operator','lyaParser.py',397),
  ('relational_operator -> LE','relational_operator',1,'p_relational_operator','lyaParser.py',398),
  ('operand1 -> operand2','operand1',1,'p_operand1','lyaParser.py',402),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1','lyaParser.py',403),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','lyaParser.py',410),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','lyaParser.py',411),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','lyaParser.py',415),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','lyaParser.py',416),
  ('string_concatenation_operator -> STRCONC','string_concatenation_operator',1,'p_string_concatenation_operator','lyaParser.py',420),
  ('operand2 -> operand3','operand2',1,'p_operand2','lyaParser.py',424),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','lyaParser.py',425),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaParser.py',432),
  ('arithmetic_multiplicative_operator -> DIV','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaParser.py',433),
  ('arithmetic_multiplicative_operator -> MOD','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaParser.py',434),
  ('operand3 -> operand4','operand3',1,'p_operand3','lyaParser.py',438),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','lyaParser.py',439),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','lyaParser.py',446),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','lyaParser.py',447),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','lyaParser.py',451),
  ('operand4 -> location','operand4',1,'p_operand4','lyaParser.py',452),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','lyaParser.py',453),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','lyaParser.py',459),
  ('conditional_expression -> IF boolean_expression then_expression elseif_expression_list else_expression FI','conditional_expression',6,'p_conditional_expression2','lyaParser.py',463),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','lyaParser.py',467),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','lyaParser.py',471),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','lyaParser.py',475),
  ('elseif_expression_list -> elseif_expression','elseif_expression_list',1,'p_elseif_expression_list','lyaParser.py',479),
  ('elseif_expression_list -> elseif_expression_list elseif_expression','elseif_expression_list',2,'p_elseif_expression_list','lyaParser.py',480),
  ('elseif_expression -> ELSIF boolean_expression then_expression','elseif_expression',3,'p_elseif_expression','lyaParser.py',487),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','lyaParser.py',495),
  ('location -> location_name','location',1,'p_location','lyaParser.py',499),
  ('location -> string_reference','location',1,'p_location','lyaParser.py',500),
  ('location -> dereferenced_reference','location',1,'p_location','lyaParser.py',501),
  ('location -> array_element','location',1,'p_location','lyaParser.py',502),
  ('location -> array_slice','location',1,'p_location','lyaParser.py',503),
  ('location -> call_action','location',1,'p_location','lyaParser.py',504),
  ('location_name -> ID','location_name',1,'p_location_name','lyaParser.py',508),
  ('string_reference -> location_name LBRACKET integer_expression RBRACKET','string_reference',4,'p_string_reference','lyaParser.py',512),
  ('string_reference -> location_name LBRACKET literal_range RBRACKET','string_reference',4,'p_string_reference2','lyaParser.py',516),
  ('dereferenced_reference -> location ARROW','dereferenced_reference',2,'p_dereferenced_reference','lyaParser.py',520),
  ('array_element -> location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','lyaParser.py',524),
  ('array_slice -> location LBRACKET literal_range RBRACKET','array_slice',4,'p_array_slice','lyaParser.py',528),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','lyaParser.py',536),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','lyaParser.py',537),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','lyaParser.py',545),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action2','lyaParser.py',549),
  ('then_clause -> THEN','then_clause',1,'p_then_clause','lyaParser.py',553),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','lyaParser.py',554),
  ('else_clause -> ELSE','else_clause',1,'p_else_clause','lyaParser.py',561),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','lyaParser.py',562),
  ('else_clause -> elseif_clause','else_clause',1,'p_else_clause2','lyaParser.py',569),
  ('elseif_clause -> ELSIF boolean_expression then_clause','elseif_clause',3,'p_elseif_clause','lyaParser.py',573),
  ('elseif_clause -> ELSIF boolean_expression then_clause else_clause','elseif_clause',4,'p_elseif_clause2','lyaParser.py',577),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','lyaParser.py',582),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','lyaParser.py',583),
  ('do_action -> DO OD','do_action',2,'p_do_action','lyaParser.py',594),
  ('do_action -> DO control_part SMC OD','do_action',4,'p_do_action2','lyaParser.py',598),
  ('do_action -> DO control_part SMC action_statement_list OD','do_action',5,'p_do_action3','lyaParser.py',602),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action4','lyaParser.py',606),
  ('control_part -> for_control','control_part',1,'p_control_part','lyaParser.py',610),
  ('control_part -> while_control','control_part',1,'p_control_part','lyaParser.py',611),
  ('control_part -> for_control while_control','control_part',2,'p_control_part2','lyaParser.py',615),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','lyaParser.py',619),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','lyaParser.py',623),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','lyaParser.py',624),
  ('step_enumeration -> loop_counter EQUALS start_value end_value','step_enumeration',4,'p_step_enumeration','lyaParser.py',628),
  ('step_enumeration -> loop_counter EQUALS start_value step_value end_value','step_enumeration',5,'p_step_enumeration2','lyaParser.py',632),
  ('step_enumeration -> loop_counter EQUALS start_value DOWN end_value','step_enumeration',5,'p_step_enumeration3','lyaParser.py',636),
  ('step_enumeration -> loop_counter EQUALS start_value step_value DOWN end_value','step_enumeration',6,'p_step_enumeration4','lyaParser.py',640),
  ('loop_counter -> ID','loop_counter',1,'p_loop_counter','lyaParser.py',644),
  ('start_value -> discrete_expression','start_value',1,'p_start_value','lyaParser.py',648),
  ('step_value -> BY integer_expression','step_value',2,'p_step_value','lyaParser.py',652),
  ('end_value -> TO discrete_expression','end_value',2,'p_end_value','lyaParser.py',656),
  ('discrete_expression -> expression','discrete_expression',1,'p_discrete_expression','lyaParser.py',660),
  ('range_enumeration -> loop_counter IN discrete_mode','range_enumeration',3,'p_range_enumeration','lyaParser.py',664),
  ('range_enumeration -> loop_counter DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration2','lyaParser.py',668),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','lyaParser.py',672),
  ('procedure_statement -> label COLON procedure_definition SMC','procedure_statement',4,'p_procedure_statement','lyaParser.py',680),
  ('procedure_definition -> PROC LPAREN RPAREN SMC END','procedure_definition',5,'p_procedure_definition1','lyaParser.py',684),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SMC statement_list END','procedure_definition',7,'p_procedure_definition1','lyaParser.py',685),
  ('procedure_definition -> PROC LPAREN RPAREN SMC statement_list END','procedure_definition',6,'p_procedure_definition1','lyaParser.py',686),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SMC END','procedure_definition',6,'p_procedure_definition2','lyaParser.py',695),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SMC END','procedure_definition',7,'p_procedure_definition2','lyaParser.py',696),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SMC statement_list END','procedure_definition',8,'p_procedure_definition2','lyaParser.py',697),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SMC statement_list END','procedure_definition',7,'p_procedure_definition3','lyaParser.py',706),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SMC END','procedure_definition',6,'p_procedure_definition3','lyaParser.py',707),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','lyaParser.py',714),
  ('formal_parameter_list -> formal_parameter COMMA formal_parameter_list','formal_parameter_list',3,'p_formal_parameter_list','lyaParser.py',715),
  ('formal_parameter -> id_list parameter_spec','formal_parameter',2,'p_formal_parameter','lyaParser.py',722),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','lyaParser.py',728),
  ('parameter_spec -> mode parameter_attribute','parameter_spec',2,'p_parameter_spec','lyaParser.py',729),
  ('parameter_attribute -> LOC','parameter_attribute',1,'p_parameter_attribute','lyaParser.py',736),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','lyaParser.py',740),
  ('result_spec -> RETURNS LPAREN mode result_attribute RPAREN','result_spec',5,'p_result_spec','lyaParser.py',741),
  ('result_attribute -> LOC','result_attribute',1,'p_result_attribute','lyaParser.py',748),
  ('call_action -> procedure_call','call_action',1,'p_call_action','lyaParser.py',756),
  ('call_action -> builtin_call','call_action',1,'p_call_action','lyaParser.py',757),
  ('procedure_call -> ID LPAREN RPAREN','procedure_call',3,'p_procedure_call','lyaParser.py',761),
  ('procedure_call -> ID LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','lyaParser.py',762),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','lyaParser.py',769),
  ('parameter_list -> parameter COMMA parameter_list','parameter_list',3,'p_parameter_list','lyaParser.py',770),
  ('parameter -> expression','parameter',1,'p_parameter','lyaParser.py',777),
  ('exit_action -> EXIT label','exit_action',2,'p_exit_action','lyaParser.py',785),
  ('return_action -> RETURN','return_action',1,'p_return_action','lyaParser.py',789),
  ('return_action -> RETURN result','return_action',2,'p_return_action','lyaParser.py',790),
  ('result_action -> RESULT result','result_action',2,'p_result_action','lyaParser.py',797),
  ('result -> expression','result',1,'p_result','lyaParser.py',801),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','lyaParser.py',805),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','lyaParser.py',806),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','lyaParser.py',813),
  ('builtin_name -> PRED','builtin_name',1,'p_builtin_name','lyaParser.py',814),
  ('builtin_name -> SUCC','builtin_name',1,'p_builtin_name','lyaParser.py',815),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','lyaParser.py',816),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','lyaParser.py',817),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','lyaParser.py',818),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','lyaParser.py',819),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','lyaParser.py',820),
  ('integer_expression -> expression','integer_expression',1,'p_integer_expression','lyaParser.py',829),
  ('empty -> <empty>','empty',0,'p_empty','lyaParser.py',836),
]
