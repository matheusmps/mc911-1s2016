
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '0A68ADC29EB5F66C1207F8ABB8C41E25'
    
_lr_action_items = {'EQUALS':([5,7,12,13,18,22,27,41,43,45,47,49,52,53,54,56,57,59,60,61,62,63,64,67,125,142,145,146,147,148,149,150,151,152,153,155,156,158,162,169,172,199,200,206,209,211,213,218,248,249,250,291,292,293,314,315,],[-139,51,-137,-200,-135,-199,-138,-136,-140,-134,-15,131,-86,-117,-115,-110,-143,-111,-112,138,-87,-116,-88,141,-211,-27,-20,-23,-24,220,-21,-26,-35,-19,-36,-22,-25,-18,-140,228,-173,246,-201,-212,-16,-145,-144,-34,-202,-141,-142,-29,-28,-37,-44,-39,]),'CHAR':([47,67,117,131,144,209,217,229,267,276,289,290,321,],[-15,142,142,142,142,-16,142,142,142,142,142,142,142,]),'ELSIF':([12,13,18,22,27,41,45,57,77,80,81,82,84,86,87,89,90,91,92,93,96,97,99,100,101,102,103,104,105,107,108,110,111,113,114,122,125,167,175,189,190,193,200,206,211,213,225,231,232,233,239,242,244,248,249,250,280,281,284,286,287,307,309,311,332,333,],[-137,-200,-135,-199,-138,-136,-134,-143,-157,-122,-69,-106,-56,-123,-91,-66,-61,-62,-60,-139,-118,-140,-67,-55,-63,-68,-64,-65,-57,-113,-92,-58,-93,-59,-124,-74,-211,-158,-119,238,-150,-133,-201,-212,-145,-144,-75,-114,-73,-94,-151,285,-107,-202,-141,-142,-71,-70,285,-130,-128,238,-125,-131,-126,-132,]),'AND':([12,13,18,22,27,41,45,57,80,81,82,84,86,87,89,90,91,92,93,96,97,99,100,101,102,103,104,105,107,110,111,113,114,125,175,193,200,206,211,213,231,232,233,244,248,249,250,258,280,281,],[-137,-200,-135,-199,-138,-136,-134,-143,-122,-69,-106,-56,-123,180,-66,-61,-62,-60,-139,-118,-140,-67,-55,-63,-68,-64,-65,-57,-113,-58,-93,-59,-124,-211,-119,-133,-201,-212,-145,-144,-114,-73,-94,-107,-202,-141,-142,-140,-71,-70,]),'NOTEQUAL':([12,13,18,22,27,41,45,57,80,81,82,84,86,87,89,90,91,92,93,96,97,99,100,101,102,103,104,105,107,110,111,113,114,125,175,193,200,206,211,213,231,232,233,244,248,249,250,258,280,281,],[-137,-200,-135,-199,-138,-136,-134,-143,-122,-69,-106,-56,-123,181,-66,-61,-62,-60,-139,-118,-140,-67,-55,-63,-68,-64,-65,-57,-113,-58,-93,-59,-124,-211,-119,-133,-201,-212,-145,-144,-114,-73,-94,-107,-202,-141,-142,-140,-71,-70,]),'REF':([47,67,117,131,144,209,267,290,321,],[-15,144,144,144,144,-16,144,144,144,]),'TRUE':([20,25,26,46,51,53,54,55,56,58,59,60,63,72,83,85,94,98,112,123,124,138,141,174,177,178,179,180,181,182,183,184,185,186,187,188,191,194,195,196,205,210,212,217,219,220,221,228,238,243,246,282,285,289,302,303,],[89,89,89,89,-84,-117,-115,89,-110,89,-111,-112,-116,89,89,89,-121,89,-120,89,89,-85,89,89,-103,-100,-97,-98,-101,-96,-99,-102,-104,-105,89,-95,89,89,-109,-108,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'ELSE':([12,13,18,22,27,41,45,57,77,80,81,82,84,86,87,89,90,91,92,93,96,97,99,100,101,102,103,104,105,107,108,110,111,113,114,122,125,167,175,189,190,193,200,206,211,213,225,231,232,233,239,242,244,248,249,250,280,281,284,286,287,307,309,311,332,333,],[-137,-200,-135,-199,-138,-136,-134,-143,-157,-122,-69,-106,-56,-123,-91,-66,-61,-62,-60,-139,-118,-140,-67,-55,-63,-68,-64,-65,-57,-113,-92,-58,-93,-59,-124,-74,-211,-158,-119,235,-150,-133,-201,-212,-145,-144,-75,-114,-73,-94,-151,282,-107,-202,-141,-142,-71,-70,282,-130,-128,235,-125,-131,-126,-132,]),'TYPE':([0,1,17,24,28,29,38,39,121,122,129,139,197,224,225,299,316,322,324,334,336,339,343,],[4,-9,-3,-8,4,-7,-5,-6,-4,-74,-45,-49,-10,-181,-75,4,4,4,4,4,4,4,4,]),'GT':([12,13,18,22,27,41,45,57,80,81,82,84,86,87,89,90,91,92,93,96,97,99,100,101,102,103,104,105,107,110,111,113,114,125,175,193,200,206,211,213,231,232,233,244,248,249,250,258,280,281,],[-137,-200,-135,-199,-138,-136,-134,-143,-122,-69,-106,-56,-123,184,-66,-61,-62,-60,-139,-118,-140,-67,-55,-63,-68,-64,-65,-57,-113,-58,-93,-59,-124,-211,-119,-133,-201,-212,-145,-144,-114,-73,-94,-107,-202,-141,-142,-140,-71,-70,]),'LPAREN':([2,6,8,14,20,25,26,32,34,35,37,43,44,46,51,53,54,55,56,58,59,60,63,72,83,85,94,97,98,112,123,124,138,141,142,146,150,154,155,156,159,162,174,177,178,179,180,181,182,183,184,185,186,187,188,191,194,195,196,205,210,212,217,219,220,221,228,238,243,246,258,275,282,285,289,298,302,303,],[46,-219,-220,-216,85,85,85,-218,-213,-217,-215,123,-214,85,-84,-117,-115,85,-110,85,-111,-112,-116,85,85,85,-121,123,85,-120,85,85,-85,85,-27,219,-26,221,-30,-25,223,123,85,-103,-100,-97,-98,-101,-96,-99,-102,-104,-105,85,-95,85,85,-109,-108,85,85,85,85,85,85,85,85,85,85,85,123,-30,85,85,85,321,85,85,]),'READ':([0,1,16,17,20,24,25,26,28,29,38,39,46,51,53,54,55,56,58,59,60,63,68,72,74,77,83,85,94,98,109,112,121,122,123,124,129,138,139,141,163,167,168,174,177,178,179,180,181,182,183,184,185,186,187,188,190,191,194,195,196,197,205,210,212,217,219,220,221,224,225,226,228,235,238,239,243,246,278,282,285,289,299,302,303,316,322,324,334,336,339,343,],[6,-9,6,-3,6,-8,6,6,6,-7,-5,-6,6,-84,-117,-115,6,-110,6,-111,-112,-116,6,6,6,-157,6,6,-121,6,6,-120,-4,-74,6,6,-45,-85,-49,6,6,-158,6,6,-103,-100,-97,-98,-101,-96,-99,-102,-104,-105,6,-95,6,6,6,-109,-108,-10,6,6,6,6,6,6,6,-181,-75,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'STRCONC':([5,7,12,13,18,22,27,41,43,45,57,80,81,82,84,86,89,90,91,92,93,96,97,99,100,101,102,103,104,105,107,110,111,113,114,125,162,175,193,200,206,211,213,231,232,233,244,248,249,250,258,280,281,],[-139,60,-137,-200,-135,-199,-138,-136,-140,-134,-143,-122,-69,-106,-56,-123,-66,-61,-62,-60,-139,-118,-140,-67,-55,-63,-68,-64,-65,-57,-113,-58,60,-59,-124,-211,-140,-119,-133,-201,-212,-145,-144,-114,-73,60,-107,-202,-141,-142,-140,-71,-70,]),'SYN':([0,1,17,24,28,29,38,39,121,122,129,139,197,224,225,299,316,322,324,334,336,339,343,],[9,-9,-3,-8,9,-7,-5,-6,-4,-74,-45,-49,-10,-181,-75,9,9,9,9,9,9,9,9,]),'NULL':([20,25,26,46,51,53,54,55,56,58,59,60,63,72,83,85,94,98,112,123,124,138,141,174,177,178,179,180,181,182,183,184,185,186,187,188,191,194,195,196,205,210,212,217,219,220,221,228,238,243,246,282,285,289,302,303,],[81,81,81,81,-84,-117,-115,81,-110,81,-111,-112,-116,81,81,81,-121,81,-120,81,81,-85,81,81,-103,-100,-97,-98,-101,-96,-99,-102,-104,-105,81,-95,81,81,-109,-108,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'DIV':([5,7,12,13,18,22,27,41,43,45,57,80,81,82,84,86,89,90,91,92,93,96,97,99,100,101,102,103,104,105,107,110,113,114,125,162,175,193,200,206,211,213,231,232,244,248,249,250,258,280,281,],[-139,63,-137,-200,-135,-199,-138,-136,-140,-134,-143,-122,-69,63,-56,-123,-66,-61,-62,-60,-139,-118,-140,-67,-55,-63,-68,-64,-65,-57,-113,-58,-59,-124,-211,-140,-119,-133,-201,-212,-145,-144,-114,-73,63,-202,-141,-142,-140,-71,-70,]),'WHILE':([12,13,16,18,22,27,41,45,57,73,80,81,82,84,86,87,89,90,91,92,93,96,97,99,100,101,102,103,104,105,107,108,110,111,113,114,125,142,146,147,150,156,170,171,173,175,193,200,206,211,213,231,232,233,244,248,249,250,273,274,280,281,291,292,301,306,309,327,328,330,332,341,],[-137,-200,72,-135,-199,-138,-136,-134,-143,72,-122,-69,-106,-56,-123,-91,-66,-61,-62,-60,-139,-118,-140,-67,-55,-63,-68,-64,-65,-57,-113,-92,-58,-93,-59,-124,-211,-27,-23,-24,-26,-25,-168,-166,-167,-119,-133,-201,-212,-145,-144,-114,-73,-94,-107,-202,-141,-142,-177,-178,-71,-70,-29,-28,-169,-179,-125,-176,-170,-171,-126,-172,]),'LT':([12,13,18,22,27,41,45,57,80,81,82,84,86,87,89,90,91,92,93,96,97,99,100,101,102,103,104,105,107,110,111,113,114,125,175,193,200,206,211,213,231,232,233,244,248,249,250,258,280,281,],[-137,-200,-135,-199,-138,-136,-134,-143,-122,-69,-106,-56,-123,185,-66,-61,-62,-60,-139,-118,-140,-67,-55,-63,-68,-64,-65,-57,-113,-58,-93,-59,-124,-211,-119,-133,-201,-212,-145,-144,-114,-73,-94,-107,-202,-141,-142,-140,-71,-70,]),'GE':([12,13,18,22,27,41,45,57,80,81,82,84,86,87,89,90,91,92,93,96,97,99,100,101,102,103,104,105,107,110,111,113,114,125,175,193,200,206,211,213,231,232,233,244,248,249,250,258,280,281,],[-137,-200,-135,-199,-138,-136,-134,-143,-122,-69,-106,-56,-123,177,-66,-61,-62,-60,-139,-118,-140,-67,-55,-63,-68,-64,-65,-57,-113,-58,-93,-59,-124,-211,-119,-133,-201,-212,-145,-144,-114,-73,-94,-107,-202,-141,-142,-140,-71,-70,]),'PLUS':([5,7,12,13,18,22,27,41,43,45,57,80,81,82,84,86,89,90,91,92,93,96,97,99,100,101,102,103,104,105,107,110,111,113,114,125,162,175,193,200,206,211,213,231,232,233,244,248,249,250,258,280,281,],[-139,56,-137,-200,-135,-199,-138,-136,-140,-134,-143,-122,-69,-106,-56,-123,-66,-61,-62,-60,-139,-118,-140,-67,-55,-63,-68,-64,-65,-57,-113,-58,56,-59,-124,-211,-140,-119,-133,-201,-212,-145,-144,-114,-73,56,-107,-202,-141,-142,-140,-71,-70,]),'OD':([16,74,77,122,167,168,225,226,],[79,166,-157,-74,-158,227,-75,270,]),'SUCC':([0,1,16,17,20,24,25,26,28,29,38,39,46,51,53,54,55,56,58,59,60,63,68,72,74,77,83,85,94,98,109,112,121,122,123,124,129,138,139,141,163,167,168,174,177,178,179,180,181,182,183,184,185,186,187,188,190,191,194,195,196,197,205,210,212,217,219,220,221,224,225,226,228,235,238,239,243,246,278,282,285,289,299,302,303,316,322,324,334,336,339,343,],[37,-9,37,-3,37,-8,37,37,37,-7,-5,-6,37,-84,-117,-115,37,-110,37,-111,-112,-116,37,37,37,-157,37,37,-121,37,37,-120,-4,-74,37,37,-45,-85,-49,37,37,-158,37,37,-103,-100,-97,-98,-101,-96,-99,-102,-104,-105,37,-95,37,37,37,-109,-108,-10,37,37,37,37,37,37,37,-181,-75,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'MOD':([5,7,12,13,18,22,27,41,43,45,57,80,81,82,84,86,89,90,91,92,93,96,97,99,100,101,102,103,104,105,107,110,113,114,125,162,175,193,200,206,211,213,231,232,244,248,249,250,258,280,281,],[-139,53,-137,-200,-135,-199,-138,-136,-140,-134,-143,-122,-69,53,-56,-123,-66,-61,-62,-60,-139,-118,-140,-67,-55,-63,-68,-64,-65,-57,-113,-58,-59,-124,-211,-140,-119,-133,-201,-212,-145,-144,-114,-73,53,-202,-141,-142,-140,-71,-70,]),'RPAREN':([12,13,18,22,27,41,45,46,57,80,81,82,84,86,87,89,90,91,92,93,96,97,99,100,101,102,103,104,105,107,108,110,111,113,114,123,125,126,127,128,142,145,146,147,149,150,151,152,153,155,156,158,175,176,193,200,201,206,211,213,218,223,231,232,233,244,248,249,250,251,252,253,261,263,266,268,280,281,291,292,293,295,296,309,314,315,318,319,320,332,337,345,347,],[-137,-200,-135,-199,-138,-136,-134,125,-143,-122,-69,-106,-56,-123,-91,-66,-61,-62,-60,-139,-118,-140,-67,-55,-63,-68,-64,-65,-57,-113,-92,-58,-93,-59,-124,200,-211,-203,206,-205,-27,-20,-23,-24,-21,-26,-35,-19,-36,-22,-25,-18,-119,232,-133,-201,248,-212,-145,-144,-34,269,-114,-73,-94,-107,-202,-141,-142,-204,-31,-33,291,292,294,-190,-71,-70,-29,-28,-37,-192,-193,-125,-44,-39,-194,-195,-191,-126,346,-198,350,]),'ARRAY':([47,67,117,131,144,209,267,290,321,],[-15,143,143,143,143,-16,143,143,143,]),'UPPER':([0,1,16,17,20,24,25,26,28,29,38,39,46,51,53,54,55,56,58,59,60,63,68,72,74,77,83,85,94,98,109,112,121,122,123,124,129,138,139,141,163,167,168,174,177,178,179,180,181,182,183,184,185,186,187,188,190,191,194,195,196,197,205,210,212,217,219,220,221,224,225,226,228,235,238,239,243,246,278,282,285,289,299,302,303,316,322,324,334,336,339,343,],[14,-9,14,-3,14,-8,14,14,14,-7,-5,-6,14,-84,-117,-115,14,-110,14,-111,-112,-116,14,14,14,-157,14,14,-121,14,14,-120,-4,-74,14,14,-45,-85,-49,14,14,-158,14,14,-103,-100,-97,-98,-101,-96,-99,-102,-104,-105,14,-95,14,14,14,-109,-108,-10,14,14,14,14,14,14,14,-181,-75,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'LBRACKET':([5,7,12,13,18,22,27,41,43,45,57,80,81,84,86,89,90,91,92,93,95,97,99,100,101,102,103,104,105,110,113,125,143,157,162,193,200,206,211,213,232,248,249,250,258,280,281,],[-139,58,-137,-200,-135,-199,-138,-136,-140,124,-143,-72,-69,-56,58,-66,-61,-62,-60,-139,191,-140,-67,-55,-63,-68,-64,-65,-57,-58,-59,-211,217,222,-140,58,-201,-212,-145,-144,-73,-202,-141,-142,-140,-71,-70,]),'EXIT':([0,1,16,17,24,28,29,38,39,68,74,77,121,122,129,139,163,167,168,190,197,224,225,226,235,239,278,299,316,322,324,334,336,339,343,],[15,-9,15,-3,-8,15,-7,-5,-6,15,15,-157,-4,-74,-45,-49,15,-158,15,15,-10,-181,-75,15,15,15,15,15,15,15,15,15,15,15,15,]),'DO':([0,1,16,17,24,28,29,38,39,68,74,77,121,122,129,139,163,167,168,190,197,224,225,226,235,239,278,299,316,322,324,334,336,339,343,],[16,-9,16,-3,-8,16,-7,-5,-6,16,16,-157,-4,-74,-45,-49,16,-158,16,16,-10,-181,-75,16,16,16,16,16,16,16,16,16,16,16,16,]),'TIMES':([5,7,12,13,18,22,27,41,43,45,57,80,81,82,84,86,89,90,91,92,93,96,97,99,100,101,102,103,104,105,107,110,113,114,125,162,175,193,200,206,211,213,231,232,244,248,249,250,258,280,281,],[-139,54,-137,-200,-135,-199,-138,-136,-140,-134,-143,-122,-69,54,-56,-123,-66,-61,-62,-60,-139,-118,-140,-67,-55,-63,-68,-64,-65,-57,-113,-58,-59,-124,-211,-140,-119,-133,-201,-212,-145,-144,-114,-73,54,-202,-141,-142,-140,-71,-70,]),'RBRACKET':([12,13,18,22,27,41,45,57,80,81,82,84,86,87,89,90,91,92,93,96,97,99,100,101,102,103,104,105,107,108,110,111,113,114,125,135,136,137,142,146,147,150,156,175,193,200,202,203,204,206,211,213,231,232,233,240,241,244,248,249,250,252,253,254,255,256,257,260,264,265,280,281,291,292,309,313,332,],[-137,-200,-135,-199,-138,-136,-134,-143,-122,-69,-106,-56,-123,-91,-66,-61,-62,-60,-139,-118,-140,-67,-55,-63,-68,-64,-65,-57,-113,-92,-58,-93,-59,-124,-211,211,213,-89,-27,-23,-24,-26,-25,-119,-133,-201,249,250,-221,-212,-145,-144,-114,-73,-94,280,281,-107,-202,-141,-142,-31,-33,-90,-42,-43,-40,290,293,-38,-71,-70,-29,-28,-125,-41,-126,]),'FALSE':([20,25,26,46,51,53,54,55,56,58,59,60,63,72,83,85,94,98,112,123,124,138,141,174,177,178,179,180,181,182,183,184,185,186,187,188,191,194,195,196,205,210,212,217,219,220,221,228,238,243,246,282,285,289,302,303,],[104,104,104,104,-84,-117,-115,104,-110,104,-111,-112,-116,104,104,104,-121,104,-120,104,104,-85,104,104,-103,-100,-97,-98,-101,-96,-99,-102,-104,-105,104,-95,104,104,-109,-108,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,]),'DCL':([0,1,17,24,28,29,38,39,121,122,129,139,197,224,225,299,316,322,324,334,336,339,343,],[21,-9,-3,-8,21,-7,-5,-6,-4,-74,-45,-49,-10,-181,-75,21,21,21,21,21,21,21,21,]),'COLON':([10,12,13,18,22,27,41,43,45,57,71,80,81,82,84,86,87,89,90,91,92,93,96,97,99,100,101,102,103,104,105,107,108,110,111,113,114,125,134,137,175,193,200,204,206,211,213,231,232,233,244,248,249,250,258,259,280,281,309,332,],[68,-137,-200,-135,-199,-138,-136,-76,-134,-143,163,-122,-69,-106,-56,-123,-91,-66,-61,-62,-60,-139,-118,-140,-67,-55,-63,-68,-64,-65,-57,-113,-92,-58,-93,-59,-124,-211,210,-32,-119,-133,-201,-32,-212,-145,-144,-114,-73,-94,-107,-202,-141,-142,-140,-32,-71,-70,-125,-126,]),'MINUS':([5,7,12,13,18,20,22,25,26,27,41,43,45,46,51,53,54,55,56,57,58,59,60,63,72,80,81,82,84,85,86,89,90,91,92,93,96,97,98,99,100,101,102,103,104,105,107,110,111,113,114,123,124,125,138,141,162,174,175,177,178,179,180,181,182,183,184,185,186,187,188,191,193,194,195,196,200,205,206,210,211,212,213,217,219,220,221,228,231,232,233,238,243,244,246,248,249,250,258,280,281,282,285,289,302,303,],[-139,59,-137,-200,-135,112,-199,112,112,-138,-136,-140,-134,112,-84,-117,-115,112,-110,-143,112,-111,-112,-116,112,-122,-69,-106,-56,112,-123,-66,-61,-62,-60,-139,-118,-140,112,-67,-55,-63,-68,-64,-65,-57,-113,-58,59,-59,-124,112,112,-211,-85,112,-140,112,-119,-103,-100,-97,-98,-101,-96,-99,-102,-104,-105,112,-95,112,-133,112,-109,-108,-201,112,-212,112,-145,112,-144,112,112,112,112,112,-114,-73,59,112,112,-107,112,-202,-141,-142,-140,-71,-70,112,112,112,112,112,]),'IF':([0,1,16,17,20,24,25,26,28,29,38,39,46,51,55,58,68,72,74,77,85,98,121,122,123,124,129,138,139,141,163,167,168,190,191,197,205,210,212,217,219,220,221,224,225,226,228,235,238,239,243,246,278,282,285,289,299,302,303,316,322,324,334,336,339,343,],[20,-9,20,-3,98,-8,98,98,20,-7,-5,-6,98,-84,98,98,20,98,20,-157,98,98,-4,-74,98,98,-45,-85,-49,98,20,-158,20,20,98,-10,98,98,98,98,98,98,98,-181,-75,20,98,20,98,20,98,98,20,98,98,98,20,98,98,20,20,20,20,20,20,20,]),'CHARCONST':([20,25,26,46,51,53,54,55,56,58,59,60,63,72,83,85,94,98,112,123,124,138,141,174,177,178,179,180,181,182,183,184,185,186,187,188,191,194,195,196,205,210,212,217,219,220,221,228,238,243,246,282,285,289,302,303,],[99,99,99,99,-84,-117,-115,99,-110,99,-111,-112,-116,99,99,99,-121,99,-120,99,99,-85,99,99,-103,-100,-97,-98,-101,-96,-99,-102,-104,-105,99,-95,99,99,-109,-108,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'LOC':([142,145,146,147,149,150,151,152,153,155,156,158,218,291,292,293,296,314,315,337,],[-27,-20,-23,-24,-21,-26,-35,-19,-36,-22,-25,-18,-34,-29,-28,-37,319,-44,-39,345,]),'RETURN':([0,1,16,17,24,28,29,38,39,68,74,77,121,122,129,139,163,167,168,190,197,224,225,226,235,239,278,299,316,322,324,334,336,339,343,],[25,-9,25,-3,-8,25,-7,-5,-6,25,25,-157,-4,-74,-45,-49,25,-158,25,25,-10,-181,-75,25,25,25,25,25,25,25,25,25,25,25,25,]),'COMMA':([12,13,18,22,27,41,45,47,48,49,50,57,65,66,67,80,81,82,84,86,87,89,90,91,92,93,96,97,99,100,101,102,103,104,105,107,108,110,111,113,114,115,116,117,125,126,128,136,137,142,145,146,147,149,150,151,152,153,155,156,158,175,193,199,200,206,207,208,209,211,213,214,215,216,218,231,232,233,241,244,245,247,248,249,250,252,253,254,255,256,257,260,262,267,268,280,281,288,291,292,293,295,296,309,313,314,315,318,319,332,],[-137,-200,-135,-199,-138,-136,-134,-15,130,132,-46,-143,140,-50,132,-122,-69,-106,-56,-123,-91,-66,-61,-62,-60,-139,-118,-140,-67,-55,-63,-68,-64,-65,-57,-113,-92,-58,-93,-59,-124,-11,198,132,-211,205,-205,212,-89,-27,-20,-23,-24,-21,-26,-35,-19,-36,-22,-25,-18,-119,-133,-14,-201,-212,-47,-48,-16,-145,-144,-51,-52,-54,-34,-114,-73,-94,212,-107,-12,-13,-202,-141,-142,-31,-33,-90,-42,-43,-40,289,-53,132,297,-71,-70,-17,-29,-28,-37,-192,-193,-125,-41,-44,-39,-194,-195,-126,]),'RESULT':([0,1,16,17,24,28,29,38,39,68,74,77,121,122,129,139,163,167,168,190,197,224,225,226,235,239,278,299,316,322,324,334,336,339,343,],[26,-9,26,-3,-8,26,-7,-5,-6,26,26,-157,-4,-74,-45,-49,26,-158,26,26,-10,-181,-75,26,26,26,26,26,26,26,26,26,26,26,26,]),'LE':([12,13,18,22,27,41,45,57,80,81,82,84,86,87,89,90,91,92,93,96,97,99,100,101,102,103,104,105,107,110,111,113,114,125,175,193,200,206,211,213,231,232,233,244,248,249,250,258,280,281,],[-137,-200,-135,-199,-138,-136,-134,-143,-122,-69,-106,-56,-123,186,-66,-61,-62,-60,-139,-118,-140,-67,-55,-63,-68,-64,-65,-57,-113,-58,-93,-59,-124,-211,-119,-133,-201,-212,-145,-144,-114,-73,-94,-107,-202,-141,-142,-140,-71,-70,]),'NOT':([20,25,26,46,51,53,54,55,56,58,59,60,63,72,85,98,123,124,138,141,174,177,178,179,180,181,182,183,184,185,186,187,188,191,194,195,196,205,210,212,217,219,220,221,228,238,243,246,282,285,289,302,303,],[94,94,94,94,-84,-117,-115,94,-110,94,-111,-112,-116,94,94,94,94,94,-85,94,94,-103,-100,-97,-98,-101,-96,-99,-102,-104,-105,94,-95,94,94,-109,-108,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'END':([1,17,24,29,38,39,121,122,129,139,197,224,225,299,316,322,324,334,336,339,343,],[-9,-3,-8,-7,-5,-6,-4,-74,-45,-49,-10,-181,-75,323,335,338,340,342,344,348,349,]),'CHARS':([47,67,117,131,144,209,267,290,321,],[-15,157,157,157,157,-16,157,157,157,]),'FOR':([16,],[78,]),'LENGTH':([0,1,16,17,20,24,25,26,28,29,38,39,46,51,53,54,55,56,58,59,60,63,68,72,74,77,83,85,94,98,109,112,121,122,123,124,129,138,139,141,163,167,168,174,177,178,179,180,181,182,183,184,185,186,187,188,190,191,194,195,196,197,205,210,212,217,219,220,221,224,225,226,228,235,238,239,243,246,278,282,285,289,299,302,303,316,322,324,334,336,339,343,],[32,-9,32,-3,32,-8,32,32,32,-7,-5,-6,32,-84,-117,-115,32,-110,32,-111,-112,-116,32,32,32,-157,32,32,-121,32,32,-120,-4,-74,32,32,-45,-85,-49,32,32,-158,32,32,-103,-100,-97,-98,-101,-96,-99,-102,-104,-105,32,-95,32,32,32,-109,-108,-10,32,32,32,32,32,32,32,-181,-75,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'BY':([12,13,18,22,27,41,45,57,80,81,82,84,86,87,89,90,91,92,93,96,97,99,100,101,102,103,104,105,107,108,110,111,113,114,125,175,193,200,206,211,213,231,232,233,244,248,249,250,271,272,273,280,281,309,332,],[-137,-200,-135,-199,-138,-136,-134,-143,-122,-69,-106,-56,-123,-91,-66,-61,-62,-60,-139,-118,-140,-67,-55,-63,-68,-64,-65,-57,-113,-92,-58,-93,-59,-124,-211,-119,-133,-201,-212,-145,-144,-114,-73,-94,-107,-202,-141,-142,-174,302,-177,-71,-70,-125,-126,]),'$end':([0,1,3,17,24,28,29,31,38,39,121,122,129,139,197,224,225,],[-222,-9,-2,-3,-8,-1,-7,0,-5,-6,-4,-74,-45,-49,-10,-181,-75,]),'STRINGCONST':([20,25,26,46,51,53,54,55,56,58,59,60,63,72,83,85,94,98,112,123,124,138,141,174,177,178,179,180,181,182,183,184,185,186,187,188,191,194,195,196,205,210,212,217,219,220,221,228,238,243,246,282,285,289,302,303,],[102,102,102,102,-84,-117,-115,102,-110,102,-111,-112,-116,102,102,102,-121,102,-120,102,102,-85,102,102,-103,-100,-97,-98,-101,-96,-99,-102,-104,-105,102,-95,102,102,-109,-108,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'INTCONST':([20,25,26,46,51,53,54,55,56,58,59,60,63,72,83,85,94,98,112,123,124,138,141,174,177,178,179,180,181,182,183,184,185,186,187,188,191,194,195,196,205,210,212,217,219,220,221,222,228,238,243,246,282,285,289,302,303,],[103,103,103,103,-84,-117,-115,103,-110,103,-111,-112,-116,103,103,103,-121,103,-120,103,103,-85,103,103,-103,-100,-97,-98,-101,-96,-99,-102,-104,-105,103,-95,103,103,-109,-108,103,103,103,103,103,103,103,265,103,103,103,103,103,103,103,103,103,]),'THEN':([12,13,18,22,27,41,45,57,80,81,82,84,86,87,88,89,90,91,92,93,96,97,99,100,101,102,103,104,105,106,107,108,110,111,113,114,125,175,192,193,200,206,211,213,231,232,233,244,248,249,250,279,280,281,309,312,332,],[-137,-200,-135,-199,-138,-136,-134,-143,-122,-69,-106,-56,-123,-91,190,-66,-61,-62,-60,-139,-118,-140,-67,-55,-63,-68,-64,-65,-57,-127,-113,-92,-58,-93,-59,-124,-211,-119,243,-133,-201,-212,-145,-144,-114,-73,-94,-107,-202,-141,-142,190,-71,-70,-125,243,-126,]),'NUM':([0,1,16,17,20,24,25,26,28,29,38,39,46,51,53,54,55,56,58,59,60,63,68,72,74,77,83,85,94,98,109,112,121,122,123,124,129,138,139,141,163,167,168,174,177,178,179,180,181,182,183,184,185,186,187,188,190,191,194,195,196,197,205,210,212,217,219,220,221,224,225,226,228,235,238,239,243,246,278,282,285,289,299,302,303,316,322,324,334,336,339,343,],[34,-9,34,-3,34,-8,34,34,34,-7,-5,-6,34,-84,-117,-115,34,-110,34,-111,-112,-116,34,34,34,-157,34,34,-121,34,34,-120,-4,-74,34,34,-45,-85,-49,34,34,-158,34,34,-103,-100,-97,-98,-101,-96,-99,-102,-104,-105,34,-95,34,34,34,-109,-108,-10,34,34,34,34,34,34,34,-181,-75,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'LOWER':([0,1,16,17,20,24,25,26,28,29,38,39,46,51,53,54,55,56,58,59,60,63,68,72,74,77,83,85,94,98,109,112,121,122,123,124,129,138,139,141,163,167,168,174,177,178,179,180,181,182,183,184,185,186,187,188,190,191,194,195,196,197,205,210,212,217,219,220,221,224,225,226,228,235,238,239,243,246,278,282,285,289,299,302,303,316,322,324,334,336,339,343,],[35,-9,35,-3,35,-8,35,35,35,-7,-5,-6,35,-84,-117,-115,35,-110,35,-111,-112,-116,35,35,35,-157,35,35,-121,35,35,-120,-4,-74,35,35,-45,-85,-49,35,35,-158,35,35,-103,-100,-97,-98,-101,-96,-99,-102,-104,-105,35,-95,35,35,35,-109,-108,-10,35,35,35,35,35,35,35,-181,-75,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'BOOL':([47,67,117,131,144,209,217,229,267,276,289,290,321,],[-15,150,150,150,150,-16,150,150,150,150,150,150,150,]),'ISEQUAL':([12,13,18,22,27,41,45,57,80,81,82,84,86,87,89,90,91,92,93,96,97,99,100,101,102,103,104,105,107,110,111,113,114,125,175,193,200,206,211,213,231,232,233,244,248,249,250,258,280,281,],[-137,-200,-135,-199,-138,-136,-134,-143,-122,-69,-106,-56,-123,178,-66,-61,-62,-60,-139,-118,-140,-67,-55,-63,-68,-64,-65,-57,-113,-58,-93,-59,-124,-211,-119,-133,-201,-212,-145,-144,-114,-73,-94,-107,-202,-141,-142,-140,-71,-70,]),'IN':([12,13,18,22,27,41,45,57,80,81,82,84,86,87,89,90,91,92,93,96,97,99,100,101,102,103,104,105,107,110,111,113,114,125,169,172,175,193,200,206,211,213,230,231,232,233,244,248,249,250,258,280,281,],[-137,-200,-135,-199,-138,-136,-134,-143,-122,-69,-106,-56,-123,179,-66,-61,-62,-60,-139,-118,-140,-67,-55,-63,-68,-64,-65,-57,-113,-58,-93,-59,-124,-211,229,-173,-119,-133,-201,-212,-145,-144,276,-114,-73,-94,-107,-202,-141,-142,-140,-71,-70,]),'TO':([12,13,18,22,27,41,45,57,80,81,82,84,86,87,89,90,91,92,93,96,97,99,100,101,102,103,104,105,107,108,110,111,113,114,125,175,193,200,206,211,213,231,232,233,244,248,249,250,271,272,273,280,281,304,305,309,325,326,329,332,],[-137,-200,-135,-199,-138,-136,-134,-143,-122,-69,-106,-56,-123,-91,-66,-61,-62,-60,-139,-118,-140,-67,-55,-63,-68,-64,-65,-57,-113,-92,-58,-93,-59,-124,-211,-119,-133,-201,-212,-145,-144,-114,-73,-94,-107,-202,-141,-142,-174,303,-177,-71,-70,303,303,-125,-175,-221,303,-126,]),'SMC':([5,11,12,13,18,19,22,23,25,27,30,33,36,40,41,42,45,48,50,57,65,66,69,70,73,75,76,79,80,81,82,84,86,87,89,90,91,92,93,96,97,99,100,101,102,103,104,105,106,107,108,110,111,113,114,115,116,118,119,120,125,133,142,145,146,147,149,150,151,152,153,155,156,158,160,161,164,165,166,170,171,173,175,193,199,200,206,207,208,211,213,214,215,216,218,227,231,232,233,237,244,245,247,248,249,250,262,269,270,273,274,277,280,281,288,291,292,293,294,300,301,306,309,314,315,317,323,327,328,330,332,335,338,340,341,342,344,346,348,349,350,],[-79,-77,-137,-200,-135,-147,-199,-81,-207,-138,-80,122,-146,-78,-136,-82,-134,129,-46,-143,139,-50,-206,-76,-163,168,-164,-159,-122,-69,-106,-56,-123,-91,-66,-61,-62,-60,-139,-118,-140,-67,-55,-63,-68,-64,-65,-57,-127,-113,-92,-58,-93,-59,-124,-11,197,-208,-210,-209,-211,-83,-27,-20,-23,-24,-21,-26,-35,-19,-36,-22,-25,-18,224,225,-180,-165,-162,-168,-166,-167,-119,-133,-14,-201,-212,-47,-48,-145,-144,-51,-52,-54,-34,-160,-114,-73,-94,-148,-107,-12,-13,-202,-141,-142,-53,299,-161,-177,-178,-149,-71,-70,-17,-29,-28,-37,316,324,-169,-179,-125,-44,-39,336,-182,-176,-170,-171,-126,-185,-184,-189,-172,-183,-186,-196,-188,-187,-197,]),'PRED':([0,1,16,17,20,24,25,26,28,29,38,39,46,51,53,54,55,56,58,59,60,63,68,72,74,77,83,85,94,98,109,112,121,122,123,124,129,138,139,141,163,167,168,174,177,178,179,180,181,182,183,184,185,186,187,188,190,191,194,195,196,197,205,210,212,217,219,220,221,224,225,226,228,235,238,239,243,246,278,282,285,289,299,302,303,316,322,324,334,336,339,343,],[44,-9,44,-3,44,-8,44,44,44,-7,-5,-6,44,-84,-117,-115,44,-110,44,-111,-112,-116,44,44,44,-157,44,44,-121,44,44,-120,-4,-74,44,44,-45,-85,-49,44,44,-158,44,44,-103,-100,-97,-98,-101,-96,-99,-102,-104,-105,44,-95,44,44,44,-109,-108,-10,44,44,44,44,44,44,44,-181,-75,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'FI':([12,13,18,22,27,41,45,57,77,80,81,82,84,86,87,89,90,91,92,93,96,97,99,100,101,102,103,104,105,107,108,110,111,113,114,122,125,167,175,189,190,193,200,206,211,213,225,231,232,233,234,235,236,239,244,248,249,250,278,280,281,283,307,308,309,310,331,332,],[-137,-200,-135,-199,-138,-136,-134,-143,-157,-122,-69,-106,-56,-123,-91,-66,-61,-62,-60,-139,-118,-140,-67,-55,-63,-68,-64,-65,-57,-113,-92,-58,-93,-59,-124,-74,-211,-158,-119,237,-150,-133,-201,-212,-145,-144,-75,-114,-73,-94,277,-152,-154,-151,-107,-202,-141,-142,-153,-71,-70,309,-155,-129,-125,332,-156,-126,]),'ARROW':([5,7,12,13,18,20,22,25,26,27,41,43,45,46,51,53,54,55,56,57,58,59,60,63,72,83,85,86,93,94,97,98,112,123,124,125,138,141,162,174,177,178,179,180,181,182,183,184,185,186,187,188,191,193,194,195,196,200,205,206,210,211,212,213,217,219,220,221,228,238,243,246,248,249,250,258,282,285,289,302,303,],[-139,57,-137,-200,-135,109,-199,109,109,-138,-136,-140,-134,109,-84,-117,-115,109,-110,-143,109,-111,-112,-116,109,109,109,57,-139,-121,-140,109,-120,109,109,-211,-85,109,-140,109,-103,-100,-97,-98,-101,-96,-99,-102,-104,-105,109,-95,109,57,109,-109,-108,-201,109,-212,109,-145,109,-144,109,109,109,109,109,109,109,109,-202,-141,-142,-140,109,109,109,109,109,]),'INT':([47,67,117,131,144,209,217,229,267,276,289,290,321,],[-15,156,156,156,156,-16,156,156,156,156,156,156,156,]),'ID':([0,1,4,9,15,16,17,20,21,24,25,26,28,29,38,39,46,47,51,53,54,55,56,58,59,60,63,67,68,72,74,77,78,83,85,94,98,109,112,117,121,122,123,124,129,130,131,132,138,139,140,141,144,163,167,168,174,177,178,179,180,181,182,183,184,185,186,187,188,190,191,194,195,196,197,198,205,209,210,212,217,219,220,221,223,224,225,226,228,229,235,238,239,243,246,267,276,278,282,285,289,290,297,299,302,303,316,321,322,324,334,336,339,343,],[43,-9,47,47,70,43,-3,97,47,-8,97,97,43,-7,-5,-6,97,-15,-84,-117,-115,97,-110,97,-111,-112,-116,155,162,97,43,-157,172,97,97,-121,97,97,-120,155,-4,-74,97,97,-45,47,155,209,-85,-49,47,97,155,162,-158,43,97,-103,-100,-97,-98,-101,-96,-99,-102,-104,-105,97,-95,43,97,97,-109,-108,-10,47,97,-16,97,97,258,97,97,97,47,-181,-75,43,97,275,43,97,43,97,97,155,275,43,97,97,258,155,47,43,97,97,43,155,43,43,43,43,43,43,]),'OR':([12,13,18,22,27,41,45,57,80,81,82,84,86,87,89,90,91,92,93,96,97,99,100,101,102,103,104,105,107,110,111,113,114,125,175,193,200,206,211,213,231,232,233,244,248,249,250,258,280,281,],[-137,-200,-135,-199,-138,-136,-134,-143,-122,-69,-106,-56,-123,183,-66,-61,-62,-60,-139,-118,-140,-67,-55,-63,-68,-64,-65,-57,-113,-58,-93,-59,-124,-211,-119,-133,-201,-212,-145,-144,-114,-73,-94,-107,-202,-141,-142,-140,-71,-70,]),'RETURNS':([269,294,],[298,298,]),'PRINT':([0,1,16,17,20,24,25,26,28,29,38,39,46,51,53,54,55,56,58,59,60,63,68,72,74,77,83,85,94,98,109,112,121,122,123,124,129,138,139,141,163,167,168,174,177,178,179,180,181,182,183,184,185,186,187,188,190,191,194,195,196,197,205,210,212,217,219,220,221,224,225,226,228,235,238,239,243,246,278,282,285,289,299,302,303,316,322,324,334,336,339,343,],[8,-9,8,-3,8,-8,8,8,8,-7,-5,-6,8,-84,-117,-115,8,-110,8,-111,-112,-116,8,8,8,-157,8,8,-121,8,8,-120,-4,-74,8,8,-45,-85,-49,8,8,-158,8,8,-103,-100,-97,-98,-101,-96,-99,-102,-104,-105,8,-95,8,8,8,-109,-108,-10,8,8,8,8,8,8,8,-181,-75,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'PROC':([68,],[159,]),'DOWN':([12,13,18,22,27,41,45,57,80,81,82,84,86,87,89,90,91,92,93,96,97,99,100,101,102,103,104,105,107,108,110,111,113,114,125,169,172,175,193,200,206,211,213,231,232,233,244,248,249,250,271,272,273,280,281,304,309,325,326,332,],[-137,-200,-135,-199,-138,-136,-134,-143,-122,-69,-106,-56,-123,-91,-66,-61,-62,-60,-139,-118,-140,-67,-55,-63,-68,-64,-65,-57,-113,-92,-58,-93,-59,-124,-211,230,-173,-119,-133,-201,-212,-145,-144,-114,-73,-94,-107,-202,-141,-142,-174,305,-177,-71,-70,329,-125,-175,-221,-126,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'result':([25,26,],[118,120,]),'array_slice':([0,16,20,25,26,28,46,55,58,68,72,74,83,85,98,109,123,124,141,163,168,174,187,190,191,194,205,210,212,217,219,220,221,226,228,235,238,239,243,246,278,282,285,289,299,302,303,316,322,324,334,336,339,343,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'then_clause':([88,279,],[189,307,]),'operand2':([20,25,26,46,55,58,72,85,98,123,124,141,187,191,194,205,210,212,217,219,220,221,228,238,243,246,282,285,289,302,303,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,244,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'membership_operator':([87,],[182,]),'parameter_spec':([267,],[295,]),'empty':([0,],[3,]),'value_array_element':([20,25,26,46,55,58,72,83,85,98,123,124,141,174,187,191,194,205,210,212,217,219,220,221,228,238,243,246,282,285,289,302,303,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'range_enumeration':([78,],[170,]),'string_length':([222,],[264,]),'operand0':([20,25,26,46,55,58,72,85,98,123,124,141,191,205,210,212,217,219,220,221,228,238,243,246,282,285,289,302,303,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'elseif_clause':([189,307,],[236,236,]),'else_expression':([242,284,],[283,310,]),'end_value':([272,304,305,329,],[301,328,330,341,]),'composite_mode':([67,117,131,144,267,290,321,],[149,149,149,149,149,149,149,]),'boolean_expression':([20,72,98,238,285,],[88,164,192,279,312,]),'result_attribute':([337,],[347,]),'integer_expression':([124,302,],[202,325,]),'action_statement_list':([16,168,190,235,],[74,226,239,278,]),'loop_counter':([78,],[169,]),'discrete_mode':([67,117,131,144,217,229,267,276,289,290,321,],[152,152,152,152,255,274,152,306,255,152,152,]),'initialization':([199,],[247,]),'id_list':([4,9,21,130,140,198,223,297,],[49,67,117,49,67,117,267,267,]),'assignment_action':([0,16,28,68,74,163,168,190,226,235,239,278,299,316,322,324,334,336,339,343,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'statement':([0,28,299,316,322,324,334,336,339,343,],[17,121,17,17,121,17,121,17,121,121,]),'char_literal':([20,25,26,46,55,58,72,83,85,98,123,124,141,174,187,191,194,205,210,212,217,219,220,221,228,238,243,246,282,285,289,302,303,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'string_reference':([0,16,20,25,26,28,46,55,58,68,72,74,83,85,98,109,123,124,141,163,168,174,187,190,191,194,205,210,212,217,219,220,221,226,228,235,238,239,243,246,278,282,285,289,299,302,303,316,322,324,334,336,339,343,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'empty_literal':([20,25,26,46,55,58,72,83,85,98,123,124,141,174,187,191,194,205,210,212,217,219,220,221,228,238,243,246,282,285,289,302,303,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'parameter_attribute':([296,],[318,]),'boolean_literal':([20,25,26,46,55,58,72,83,85,98,123,124,141,174,187,191,194,205,210,212,217,219,220,221,228,238,243,246,282,285,289,302,303,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'call_action':([0,16,20,25,26,28,46,55,58,68,72,74,83,85,98,109,123,124,141,163,168,174,187,190,191,194,205,210,212,217,219,220,221,226,228,235,238,239,243,246,278,282,285,289,299,302,303,316,322,324,334,336,339,343,],[5,5,93,93,93,5,93,93,93,5,93,5,93,93,93,93,93,93,93,5,5,93,93,5,93,93,93,93,93,93,93,93,93,5,93,5,93,5,93,93,5,93,93,93,5,93,93,5,5,5,5,5,5,5,]),'operand4':([20,25,26,46,55,58,72,83,85,98,123,124,141,174,187,191,194,205,210,212,217,219,220,221,228,238,243,246,282,285,289,302,303,],[96,96,96,96,96,96,96,175,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'elseif_expression':([242,284,],[286,311,]),'while_control':([16,73,],[76,165,]),'declaration':([21,198,],[115,245,]),'reference_mode':([67,117,131,144,267,290,321,],[145,145,145,145,145,145,145,]),'value_array_slice':([20,25,26,46,55,58,72,83,85,98,123,124,141,174,187,191,194,205,210,212,217,219,220,221,228,238,243,246,282,285,289,302,303,],[105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'result_spec':([269,294,],[300,317,]),'operator2':([111,233,],[194,194,]),'do_action':([0,16,28,68,74,163,168,190,226,235,239,278,299,316,322,324,334,336,339,343,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'procedure_definition':([68,],[160,]),'basic_mode':([67,117,131,144,217,229,267,276,289,290,321,],[146,146,146,146,146,146,146,146,146,146,146,]),'action':([0,16,28,68,74,163,168,190,226,235,239,278,299,316,322,324,334,336,339,343,],[33,33,33,161,33,161,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'closed_dyadic_operator':([7,],[61,]),'constant_expression':([141,220,],[215,262,]),'parameter_list':([46,123,205,],[127,201,251,]),'upper_bound':([210,],[252,]),'step_value':([272,],[304,]),'expression':([20,25,26,46,55,58,72,85,98,123,124,141,191,205,210,212,217,219,220,221,228,238,243,246,282,285,289,302,303,],[106,119,119,128,133,137,106,176,106,128,204,216,137,128,253,254,259,259,216,259,273,106,287,288,308,106,259,326,273,]),'operand3':([20,25,26,46,55,58,72,85,98,123,124,141,174,187,191,194,205,210,212,217,219,220,221,228,238,243,246,282,285,289,302,303,],[107,107,107,107,107,107,107,107,107,107,107,107,231,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,]),'bracketed_action':([0,16,28,68,74,163,168,190,226,235,239,278,299,316,322,324,334,336,339,343,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'newmode_statement':([0,28,299,316,322,324,334,336,339,343,],[39,39,39,39,39,39,39,39,39,39,]),'else_clause':([189,307,],[234,331,]),'procedure_call':([0,16,20,25,26,28,46,55,58,68,72,74,83,85,98,109,123,124,141,163,168,174,187,190,191,194,205,210,212,217,219,220,221,226,228,235,238,239,243,246,278,282,285,289,299,302,303,316,322,324,334,336,339,343,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'operator1':([87,],[187,]),'newmode_list':([4,],[48,]),'procedure_statement':([0,28,299,316,322,324,334,336,339,343,],[1,1,1,1,1,1,1,1,1,1,]),'arithmetic_additive_operator':([7,111,233,],[52,196,196,]),'primitive_value':([20,25,26,46,55,58,72,83,85,98,123,124,141,174,187,191,194,205,210,212,217,219,220,221,228,238,243,246,282,285,289,302,303,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'builtin_name':([0,16,20,25,26,28,46,55,58,68,72,74,83,85,98,109,123,124,141,163,168,174,187,190,191,194,205,210,212,217,219,220,221,226,228,235,238,239,243,246,278,282,285,289,299,302,303,316,322,324,334,336,339,343,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'formal_parameter_list':([223,297,],[266,320,]),'monadic_operator':([20,25,26,46,55,58,72,85,98,123,124,141,174,187,191,194,205,210,212,217,219,220,221,228,238,243,246,282,285,289,302,303,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'declaration_list':([21,],[116,]),'lower_bound':([58,124,191,217,219,221,289,],[134,134,134,134,134,134,134,]),'relational_operator':([87,],[188,]),'integer_literal':([20,25,26,46,55,58,72,83,85,98,123,124,141,174,187,191,194,205,210,212,217,219,220,221,228,238,243,246,282,285,289,302,303,],[113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,]),'location':([0,16,20,25,26,28,46,55,58,68,72,74,83,85,98,109,123,124,141,163,168,174,187,190,191,194,205,210,212,217,219,220,221,226,228,235,238,239,243,246,278,282,285,289,299,302,303,316,322,324,334,336,339,343,],[7,7,86,86,86,7,86,86,86,7,86,7,86,86,86,193,86,86,86,7,7,86,86,7,86,86,86,86,86,86,86,86,86,7,86,7,86,7,86,86,7,86,86,86,7,86,86,7,7,7,7,7,7,7,]),'label':([0,15,16,28,74,168,190,226,235,239,278,299,316,322,324,334,336,339,343,],[10,69,71,10,71,71,71,71,71,71,71,10,10,10,10,10,10,10,10,]),'mode':([67,117,131,144,267,290,321,],[148,199,208,218,296,314,337,]),'index_mode':([217,289,],[257,313,]),'discrete_range_mode':([67,117,131,144,217,229,267,276,289,290,321,],[147,147,147,147,147,147,147,147,147,147,147,]),'for_control':([16,],[73,]),'array_element':([0,16,20,25,26,28,46,55,58,68,72,74,83,85,98,109,123,124,141,163,168,174,187,190,191,194,205,210,212,217,219,220,221,226,228,235,238,239,243,246,278,282,285,289,299,302,303,316,322,324,334,336,339,343,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'builtin_call':([0,16,20,25,26,28,46,55,58,68,72,74,83,85,98,109,123,124,141,163,168,174,187,190,191,194,205,210,212,217,219,220,221,226,228,235,238,239,243,246,278,282,285,289,299,302,303,316,322,324,334,336,339,343,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'dereferenced_reference':([0,16,20,25,26,28,46,55,58,68,72,74,83,85,98,109,123,124,141,163,168,174,187,190,191,194,205,210,212,217,219,220,221,226,228,235,238,239,243,246,278,282,285,289,299,302,303,316,322,324,334,336,339,343,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'string_mode':([67,117,131,144,267,290,321,],[151,151,151,151,151,151,151,]),'literal_range':([58,124,191,217,219,221,289,],[135,203,240,256,261,263,256,]),'action_statement':([0,16,28,74,168,190,226,235,239,278,299,316,322,324,334,336,339,343,],[24,77,24,167,77,77,167,77,167,167,24,24,24,24,24,24,24,24,]),'array_mode':([67,117,131,144,267,290,321,],[153,153,153,153,153,153,153,]),'discrete_expression':([228,303,],[271,327,]),'control_part':([16,],[75,]),'element_node':([290,],[315,]),'arithmetic_multiplicative_operator':([7,82,244,],[62,174,174,]),'mode_definition':([4,130,],[50,207,]),'array_primitive_value':([20,25,26,46,55,58,72,83,85,98,123,124,141,174,187,191,194,205,210,212,217,219,220,221,228,238,243,246,282,285,289,302,303,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'mode_name':([67,117,131,144,267,290,321,],[158,158,158,158,158,158,158,]),'step_enumeration':([78,],[173,]),'return_action':([0,16,28,68,74,163,168,190,226,235,239,278,299,316,322,324,334,336,339,343,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'string_concatenation_operator':([7,111,233,],[64,195,195,]),'parameter':([46,123,205,],[126,126,126,]),'literal':([20,25,26,46,55,58,72,83,85,98,123,124,141,174,187,191,194,205,210,212,217,219,220,221,228,238,243,246,282,285,289,302,303,],[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'statement_list':([0,299,316,324,336,],[28,322,334,339,343,]),'expression_list':([58,191,],[136,241,]),'synonym_statement':([0,28,299,316,322,324,334,336,339,343,],[29,29,29,29,29,29,29,29,29,29,]),'exit_action':([0,16,28,68,74,163,168,190,226,235,239,278,299,316,322,324,334,336,339,343,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'program':([0,],[31,]),'string_literal':([20,25,26,46,55,58,72,83,85,98,123,124,141,174,187,191,194,205,210,212,217,219,220,221,228,238,243,246,282,285,289,302,303,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'syn_definition':([9,140,],[66,214,]),'start_value':([228,],[272,]),'then_expression':([192,312,],[242,333,]),'syn_list':([9,],[65,]),'if_action':([0,16,28,68,74,163,168,190,226,235,239,278,299,316,322,324,334,336,339,343,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'conditional_expression':([20,25,26,46,55,58,72,85,98,123,124,141,191,205,210,212,217,219,220,221,228,238,243,246,282,285,289,302,303,],[108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,]),'declaration_statement':([0,28,299,316,322,324,334,336,339,343,],[38,38,38,38,38,38,38,38,38,38,]),'elseif_expression_list':([242,],[284,]),'assigning_operator':([7,],[55,]),'referenced_location':([20,25,26,46,55,58,72,83,85,98,123,124,141,174,187,191,194,205,210,212,217,219,220,221,228,238,243,246,282,285,289,302,303,],[114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,]),'iteration':([78,],[171,]),'operand1':([20,25,26,46,55,58,72,85,98,123,124,141,187,191,205,210,212,217,219,220,221,228,238,243,246,282,285,289,302,303,],[111,111,111,111,111,111,111,111,111,111,111,111,233,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,]),'discrete_mode_name':([67,117,131,144,217,229,267,276,289,290,321,],[154,154,154,154,154,154,154,154,154,154,154,]),'index_mode_list':([217,],[260,]),'formal_parameter':([223,297,],[268,268,]),'result_action':([0,16,28,68,74,163,168,190,226,235,239,278,299,316,322,324,334,336,339,343,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'location_name':([0,16,20,25,26,28,46,55,58,68,72,74,83,85,98,109,123,124,141,163,168,174,187,190,191,194,205,210,212,217,219,220,221,226,228,235,238,239,243,246,278,282,285,289,299,302,303,316,322,324,334,336,339,343,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'parenthesized_expression':([20,25,26,46,55,58,72,83,85,98,123,124,141,174,187,191,194,205,210,212,217,219,220,221,228,238,243,246,282,285,289,302,303,],[110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','lyaParser.py',64),
  ('program -> empty','program',1,'p_program','lyaParser.py',65),
  ('statement_list -> statement','statement_list',1,'p_statement_list1','lyaParser.py',72),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list1','lyaParser.py',73),
  ('statement -> declaration_statement','statement',1,'p_statement','lyaParser.py',80),
  ('statement -> newmode_statement','statement',1,'p_statement','lyaParser.py',81),
  ('statement -> synonym_statement','statement',1,'p_statement','lyaParser.py',82),
  ('statement -> action_statement','statement',1,'p_statement','lyaParser.py',83),
  ('statement -> procedure_statement','statement',1,'p_statement','lyaParser.py',84),
  ('declaration_statement -> DCL declaration_list SMC','declaration_statement',3,'p_declaration_statement','lyaParser.py',92),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','lyaParser.py',96),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','lyaParser.py',97),
  ('declaration -> id_list mode initialization','declaration',3,'p_declaration1','lyaParser.py',104),
  ('declaration -> id_list mode','declaration',2,'p_declaration2','lyaParser.py',108),
  ('id_list -> ID','id_list',1,'p_id_list','lyaParser.py',112),
  ('id_list -> id_list COMMA ID','id_list',3,'p_id_list','lyaParser.py',113),
  ('initialization -> EQUALS expression','initialization',2,'p_initialization','lyaParser.py',120),
  ('mode -> mode_name','mode',1,'p_mode','lyaParser.py',128),
  ('mode -> discrete_mode','mode',1,'p_mode','lyaParser.py',129),
  ('mode -> reference_mode','mode',1,'p_mode','lyaParser.py',130),
  ('mode -> composite_mode','mode',1,'p_mode','lyaParser.py',131),
  ('mode_name -> ID','mode_name',1,'p_mode_name','lyaParser.py',135),
  ('discrete_mode -> basic_mode','discrete_mode',1,'p_discrete_mode','lyaParser.py',139),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','lyaParser.py',140),
  ('basic_mode -> INT','basic_mode',1,'p_basic_mode','lyaParser.py',144),
  ('basic_mode -> BOOL','basic_mode',1,'p_basic_mode','lyaParser.py',145),
  ('basic_mode -> CHAR','basic_mode',1,'p_basic_mode','lyaParser.py',146),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaParser.py',150),
  ('discrete_range_mode -> basic_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaParser.py',151),
  ('discrete_mode_name -> ID','discrete_mode_name',1,'p_discrete_mode_name','lyaParser.py',155),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_litereal_range','lyaParser.py',159),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','lyaParser.py',163),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','lyaParser.py',167),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','lyaParser.py',171),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','lyaParser.py',175),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','lyaParser.py',176),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','lyaParser.py',180),
  ('string_length -> INTCONST','string_length',1,'p_string_length','lyaParser.py',184),
  ('array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_node','array_mode',5,'p_array_mode','lyaParser.py',188),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','lyaParser.py',193),
  ('index_mode_list -> index_mode_list COMMA index_mode','index_mode_list',3,'p_index_mode_list','lyaParser.py',194),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','lyaParser.py',201),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','lyaParser.py',202),
  ('element_node -> mode','element_node',1,'p_element_node','lyaParser.py',206),
  ('newmode_statement -> TYPE newmode_list SMC','newmode_statement',3,'p_newmode_statement','lyaParser.py',214),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','lyaParser.py',218),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','lyaParser.py',219),
  ('mode_definition -> id_list EQUALS mode','mode_definition',3,'p_mode_definition','lyaParser.py',226),
  ('synonym_statement -> SYN syn_list SMC','synonym_statement',3,'p_synonym_statement','lyaParser.py',230),
  ('syn_list -> syn_definition','syn_list',1,'p_syn_list','lyaParser.py',238),
  ('syn_list -> syn_list COMMA syn_definition','syn_list',3,'p_syn_list','lyaParser.py',239),
  ('syn_definition -> id_list EQUALS constant_expression','syn_definition',3,'p_syn_definition','lyaParser.py',246),
  ('syn_definition -> id_list mode EQUALS constant_expression','syn_definition',4,'p_syn_definition2','lyaParser.py',250),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','lyaParser.py',254),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','lyaParser.py',262),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','lyaParser.py',263),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','lyaParser.py',264),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','lyaParser.py',265),
  ('literal -> integer_literal','literal',1,'p_literal','lyaParser.py',269),
  ('literal -> boolean_literal','literal',1,'p_literal','lyaParser.py',270),
  ('literal -> char_literal','literal',1,'p_literal','lyaParser.py',271),
  ('literal -> empty_literal','literal',1,'p_literal','lyaParser.py',272),
  ('literal -> string_literal','literal',1,'p_literal','lyaParser.py',273),
  ('integer_literal -> INTCONST','integer_literal',1,'p_integer_literal','lyaParser.py',277),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','lyaParser.py',281),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','lyaParser.py',282),
  ('char_literal -> CHARCONST','char_literal',1,'p_char_literal','lyaParser.py',286),
  ('string_literal -> STRINGCONST','string_literal',1,'p_string_literal','lyaParser.py',290),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','lyaParser.py',294),
  ('value_array_element -> array_primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','lyaParser.py',298),
  ('value_array_slice -> array_primitive_value LBRACKET literal_range RBRACKET','value_array_slice',4,'p_value_array_slice','lyaParser.py',302),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','lyaParser.py',306),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','lyaParser.py',310),
  ('action_statement -> action SMC','action_statement',2,'p_action_statement','lyaParser.py',318),
  ('action_statement -> label COLON action SMC','action_statement',4,'p_action_statement','lyaParser.py',319),
  ('label -> ID','label',1,'p_label','lyaParser.py',326),
  ('action -> assignment_action','action',1,'p_action','lyaParser.py',330),
  ('action -> bracketed_action','action',1,'p_action','lyaParser.py',331),
  ('action -> call_action','action',1,'p_action','lyaParser.py',332),
  ('action -> exit_action','action',1,'p_action','lyaParser.py',333),
  ('action -> return_action','action',1,'p_action','lyaParser.py',334),
  ('action -> result_action','action',1,'p_action','lyaParser.py',335),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','lyaParser.py',343),
  ('assigning_operator -> EQUALS','assigning_operator',1,'p_assigning_operator','lyaParser.py',347),
  ('assigning_operator -> closed_dyadic_operator EQUALS','assigning_operator',2,'p_assigning_operator','lyaParser.py',348),
  ('closed_dyadic_operator -> arithmetic_additive_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','lyaParser.py',355),
  ('closed_dyadic_operator -> arithmetic_multiplicative_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','lyaParser.py',356),
  ('closed_dyadic_operator -> string_concatenation_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','lyaParser.py',357),
  ('expression_list -> expression','expression_list',1,'p_expression_list','lyaParser.py',361),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','lyaParser.py',362),
  ('expression -> operand0','expression',1,'p_expression','lyaParser.py',369),
  ('expression -> conditional_expression','expression',1,'p_expression','lyaParser.py',370),
  ('operand0 -> operand1','operand0',1,'p_operand0','lyaParser.py',374),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','lyaParser.py',375),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','lyaParser.py',382),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','lyaParser.py',383),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','lyaParser.py',387),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','lyaParser.py',391),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','lyaParser.py',392),
  ('relational_operator -> ISEQUAL','relational_operator',1,'p_relational_operator','lyaParser.py',393),
  ('relational_operator -> NOTEQUAL','relational_operator',1,'p_relational_operator','lyaParser.py',394),
  ('relational_operator -> GT','relational_operator',1,'p_relational_operator','lyaParser.py',395),
  ('relational_operator -> GE','relational_operator',1,'p_relational_operator','lyaParser.py',396),
  ('relational_operator -> LT','relational_operator',1,'p_relational_operator','lyaParser.py',397),
  ('relational_operator -> LE','relational_operator',1,'p_relational_operator','lyaParser.py',398),
  ('operand1 -> operand2','operand1',1,'p_operand1','lyaParser.py',402),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1','lyaParser.py',403),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','lyaParser.py',410),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','lyaParser.py',411),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','lyaParser.py',415),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','lyaParser.py',416),
  ('string_concatenation_operator -> STRCONC','string_concatenation_operator',1,'p_string_concatenation_operator','lyaParser.py',420),
  ('operand2 -> operand3','operand2',1,'p_operand2','lyaParser.py',424),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','lyaParser.py',425),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaParser.py',432),
  ('arithmetic_multiplicative_operator -> DIV','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaParser.py',433),
  ('arithmetic_multiplicative_operator -> MOD','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','lyaParser.py',434),
  ('operand3 -> operand4','operand3',1,'p_operand3','lyaParser.py',438),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','lyaParser.py',439),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','lyaParser.py',446),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','lyaParser.py',447),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','lyaParser.py',451),
  ('operand4 -> location','operand4',1,'p_operand4','lyaParser.py',452),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','lyaParser.py',453),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','lyaParser.py',459),
  ('conditional_expression -> IF boolean_expression then_expression elseif_expression_list else_expression FI','conditional_expression',6,'p_conditional_expression2','lyaParser.py',463),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','lyaParser.py',467),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','lyaParser.py',471),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','lyaParser.py',475),
  ('elseif_expression_list -> elseif_expression','elseif_expression_list',1,'p_elseif_expression_list','lyaParser.py',479),
  ('elseif_expression_list -> elseif_expression_list elseif_expression','elseif_expression_list',2,'p_elseif_expression_list','lyaParser.py',480),
  ('elseif_expression -> ELSIF boolean_expression then_expression','elseif_expression',3,'p_elseif_expression','lyaParser.py',487),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','lyaParser.py',495),
  ('location -> location_name','location',1,'p_location','lyaParser.py',499),
  ('location -> string_reference','location',1,'p_location','lyaParser.py',500),
  ('location -> dereferenced_reference','location',1,'p_location','lyaParser.py',501),
  ('location -> array_element','location',1,'p_location','lyaParser.py',502),
  ('location -> array_slice','location',1,'p_location','lyaParser.py',503),
  ('location -> call_action','location',1,'p_location','lyaParser.py',504),
  ('location_name -> ID','location_name',1,'p_location_name','lyaParser.py',508),
  ('string_reference -> location_name LBRACKET integer_expression RBRACKET','string_reference',4,'p_string_reference','lyaParser.py',512),
  ('string_reference -> location_name LBRACKET literal_range RBRACKET','string_reference',4,'p_string_reference2','lyaParser.py',516),
  ('dereferenced_reference -> location ARROW','dereferenced_reference',2,'p_dereferenced_reference','lyaParser.py',520),
  ('array_element -> location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','lyaParser.py',524),
  ('array_slice -> location LBRACKET literal_range RBRACKET','array_slice',4,'p_array_slice','lyaParser.py',528),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','lyaParser.py',536),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','lyaParser.py',537),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','lyaParser.py',545),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action2','lyaParser.py',549),
  ('then_clause -> THEN','then_clause',1,'p_then_clause','lyaParser.py',553),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','lyaParser.py',554),
  ('else_clause -> ELSE','else_clause',1,'p_else_clause','lyaParser.py',561),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','lyaParser.py',562),
  ('else_clause -> elseif_clause','else_clause',1,'p_else_clause2','lyaParser.py',569),
  ('elseif_clause -> ELSIF boolean_expression then_clause','elseif_clause',3,'p_elseif_clause','lyaParser.py',573),
  ('elseif_clause -> ELSIF boolean_expression then_clause else_clause','elseif_clause',4,'p_elseif_clause2','lyaParser.py',577),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','lyaParser.py',582),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','lyaParser.py',583),
  ('do_action -> DO OD','do_action',2,'p_do_action','lyaParser.py',594),
  ('do_action -> DO control_part SMC OD','do_action',4,'p_do_action2','lyaParser.py',598),
  ('do_action -> DO control_part SMC action_statement_list OD','do_action',5,'p_do_action3','lyaParser.py',602),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action4','lyaParser.py',606),
  ('control_part -> for_control','control_part',1,'p_control_part','lyaParser.py',610),
  ('control_part -> while_control','control_part',1,'p_control_part','lyaParser.py',611),
  ('control_part -> for_control while_control','control_part',2,'p_control_part2','lyaParser.py',615),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','lyaParser.py',619),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','lyaParser.py',623),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','lyaParser.py',624),
  ('step_enumeration -> loop_counter EQUALS start_value end_value','step_enumeration',4,'p_step_enumeration','lyaParser.py',628),
  ('step_enumeration -> loop_counter EQUALS start_value step_value end_value','step_enumeration',5,'p_step_enumeration2','lyaParser.py',632),
  ('step_enumeration -> loop_counter EQUALS start_value DOWN end_value','step_enumeration',5,'p_step_enumeration3','lyaParser.py',636),
  ('step_enumeration -> loop_counter EQUALS start_value step_value DOWN end_value','step_enumeration',6,'p_step_enumeration4','lyaParser.py',640),
  ('loop_counter -> ID','loop_counter',1,'p_loop_counter','lyaParser.py',644),
  ('start_value -> discrete_expression','start_value',1,'p_start_value','lyaParser.py',648),
  ('step_value -> BY integer_expression','step_value',2,'p_step_value','lyaParser.py',652),
  ('end_value -> TO discrete_expression','end_value',2,'p_end_value','lyaParser.py',656),
  ('discrete_expression -> expression','discrete_expression',1,'p_discrete_expression','lyaParser.py',660),
  ('range_enumeration -> loop_counter IN discrete_mode','range_enumeration',3,'p_range_enumeration','lyaParser.py',664),
  ('range_enumeration -> loop_counter DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration2','lyaParser.py',668),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','lyaParser.py',672),
  ('procedure_statement -> label COLON procedure_definition SMC','procedure_statement',4,'p_procedure_statement','lyaParser.py',680),
  ('procedure_definition -> PROC LPAREN RPAREN SMC END','procedure_definition',5,'p_procedure_definition1','lyaParser.py',684),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SMC statement_list END','procedure_definition',7,'p_procedure_definition1','lyaParser.py',685),
  ('procedure_definition -> PROC LPAREN RPAREN SMC statement_list END','procedure_definition',6,'p_procedure_definition1','lyaParser.py',686),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SMC END','procedure_definition',6,'p_procedure_definition2','lyaParser.py',695),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SMC END','procedure_definition',7,'p_procedure_definition2','lyaParser.py',696),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SMC statement_list END','procedure_definition',8,'p_procedure_definition2','lyaParser.py',697),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SMC statement_list END','procedure_definition',7,'p_procedure_definition3','lyaParser.py',706),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SMC END','procedure_definition',6,'p_procedure_definition3','lyaParser.py',707),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','lyaParser.py',714),
  ('formal_parameter_list -> formal_parameter COMMA formal_parameter_list','formal_parameter_list',3,'p_formal_parameter_list','lyaParser.py',715),
  ('formal_parameter -> id_list parameter_spec','formal_parameter',2,'p_formal_parameter','lyaParser.py',722),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','lyaParser.py',726),
  ('parameter_spec -> mode parameter_attribute','parameter_spec',2,'p_parameter_spec','lyaParser.py',727),
  ('parameter_attribute -> LOC','parameter_attribute',1,'p_parameter_attribute','lyaParser.py',734),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','lyaParser.py',738),
  ('result_spec -> RETURNS LPAREN mode result_attribute RPAREN','result_spec',5,'p_result_spec','lyaParser.py',739),
  ('result_attribute -> LOC','result_attribute',1,'p_result_attribute','lyaParser.py',746),
  ('call_action -> procedure_call','call_action',1,'p_call_action','lyaParser.py',754),
  ('call_action -> builtin_call','call_action',1,'p_call_action','lyaParser.py',755),
  ('procedure_call -> ID LPAREN RPAREN','procedure_call',3,'p_procedure_call','lyaParser.py',759),
  ('procedure_call -> ID LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','lyaParser.py',760),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','lyaParser.py',767),
  ('parameter_list -> parameter COMMA parameter_list','parameter_list',3,'p_parameter_list','lyaParser.py',768),
  ('parameter -> expression','parameter',1,'p_parameter','lyaParser.py',775),
  ('exit_action -> EXIT label','exit_action',2,'p_exit_action','lyaParser.py',783),
  ('return_action -> RETURN','return_action',1,'p_return_action','lyaParser.py',787),
  ('return_action -> RETURN result','return_action',2,'p_return_action','lyaParser.py',788),
  ('result_action -> RESULT result','result_action',2,'p_result_action','lyaParser.py',795),
  ('result -> expression','result',1,'p_result','lyaParser.py',799),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','lyaParser.py',803),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','lyaParser.py',804),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','lyaParser.py',811),
  ('builtin_name -> PRED','builtin_name',1,'p_builtin_name','lyaParser.py',812),
  ('builtin_name -> SUCC','builtin_name',1,'p_builtin_name','lyaParser.py',813),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','lyaParser.py',814),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','lyaParser.py',815),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','lyaParser.py',816),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','lyaParser.py',817),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','lyaParser.py',818),
  ('integer_expression -> expression','integer_expression',1,'p_integer_expression','lyaParser.py',827),
  ('empty -> <empty>','empty',0,'p_empty','lyaParser.py',834),
]
